{
	"sheets": [
		{
			"name": "icon",
			"columns": [
				{
					"typeStr": "14",
					"name": "icon",
					"opt": true
				},
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "1",
					"name": "text",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "desc",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "2",
					"name": "iconeDone",
					"editor": {
						"categories": [
							"todoInfo"
						]
					}
				}
			],
			"lines": [
				{
					"id": "None",
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Outdated",
					"group": 0,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "Close",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 14,
						"y": 1
					},
					"text": "Fermer",
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "CloseWindow",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 14,
						"y": 1
					},
					"text": "",
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Ok",
					"text": "Confirmer",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Cancel",
					"text": "Annuler",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 1
					},
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Edit",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 18,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "ConfirmOk",
					"text": "OK",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "ConfirmNo",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 1
					},
					"text": "Non",
					"iconeDone": true
				},
				{
					"id": "ConfirmMessage",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Continuer",
					"iconeDone": true
				},
				{
					"id": "Start",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Commencer",
					"iconeDone": true
				},
				{
					"id": "Apply",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Appliquer",
					"iconeDone": true
				},
				{
					"id": "Next",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 18,
						"y": 1
					},
					"text": "Suivant",
					"iconeDone": true
				},
				{
					"id": "Previous",
					"group": 0,
					"text": "Précédent",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 18,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "AdminOnly",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 4
					},
					"text": "[ADMIN]",
					"iconeDone": true
				},
				{
					"id": "HelpTip",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "TutoActivity",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 5
					},
					"text": "Afficher l'aide",
					"iconeDone": true
				},
				{
					"id": "ListIcon",
					"group": 0,
					"icon": {
						"file": "ui/elements/bigDot.png",
						"size": 1,
						"x": 0,
						"y": 0,
						"width": 15,
						"height": 20
					},
					"iconeDone": true
				},
				{
					"id": "Spacing",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 16,
						"x": 40,
						"y": 44
					},
					"iconeDone": true
				},
				{
					"id": "StartGame",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 14,
						"y": 2
					},
					"text": "Commencer",
					"iconeDone": true
				},
				{
					"id": "LeftArrow",
					"group": 0,
					"icon": {
						"file": "ui/Icons/customize_arrows.png",
						"size": 24,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "RightArrow",
					"group": 0,
					"icon": {
						"file": "ui/Icons/customize_arrows.png",
						"size": 24,
						"x": 1,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "TransferUnit",
					"group": 0,
					"text": "Transférer ce compagnon",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 8
					},
					"iconeDone": true
				},
				{
					"id": "Locked",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "Repatriate",
					"group": 0,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 1
					},
					"text": "Rapatrier",
					"iconeDone": true
				},
				{
					"id": "PlaceEnter",
					"text": "Entrer",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 0
					},
					"group": 1,
					"iconeDone": true
				},
				{
					"id": "PlaceLeave",
					"text": "S'éloigner",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 0
					},
					"group": 1,
					"iconeDone": true
				},
				{
					"id": "PlaceExit",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 0
					},
					"text": "Sortir",
					"group": 1,
					"iconeDone": true
				},
				{
					"id": "RuinGoBack",
					"group": 1,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 0
					},
					"text": "Rebrousser chemin",
					"desc": "Revenir à la salle précédente.",
					"iconeDone": true
				},
				{
					"id": "CityTavern",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CityMarket",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CityForge",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CityWorship",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CityApothecary",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 0,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "CityChiefHall",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "CityArena",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "CityRookBoat",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "CityBrothel",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 1,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "CityAbode",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 8
					},
					"iconeDone": true
				},
				{
					"id": "CityTradePalace",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 1,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "CityTheater",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "CityAmbassy",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "CityUniversity",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 6
					},
					"group": 2,
					"iconeDone": true
				},
				{
					"id": "CityLaboratory",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 7,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "CityStable",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 6
					},
					"group": 2,
					"iconeDone": true
				},
				{
					"id": "CityBarrack",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 6
					},
					"group": 2,
					"iconeDone": true
				},
				{
					"id": "CityComptoir",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "CityComptoirSite",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "CityDefault",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 7,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CityUnknown",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "PlaceBackground",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "PlaceCursor",
					"group": 2,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 1,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "ForsakenTavern",
					"group": 3,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "ForsakenForge",
					"group": 3,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "ForsakenApothecary",
					"group": 3,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 0,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "ForsakenChiefHall",
					"group": 3,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Setting",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "NextDialog",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 6
					},
					"text": "Continuer",
					"iconeDone": true
				},
				{
					"id": "SpeakerIcon",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 17,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "DlgLeave",
					"text": "Partir",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 0
					},
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "DlgRefuse",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 1
					},
					"text": "Refuser",
					"iconeDone": true
				},
				{
					"id": "DlgAsk",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 5
					},
					"text": "Questionner",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "DlgWarn",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 9,
						"y": 5
					},
					"text": "Prévenir",
					"iconeDone": true
				},
				{
					"id": "DlgDistract",
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 14,
						"y": 1
					},
					"text": "Distraire",
					"iconeDone": true
				},
				{
					"id": "DlgHelp",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 6
					},
					"text": "Aider",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "DlgGive",
					"group": 4,
					"text": "Donner",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "DlgHeal",
					"group": 4,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 6
					},
					"text": "Soigner",
					"iconeDone": true
				},
				{
					"id": "DlgAccept",
					"group": 4,
					"text": "Accepter",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "DlgAttack",
					"group": 4,
					"text": "Attaquer",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "DlgRead",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 6
					},
					"text": "Lire",
					"iconeDone": true
				},
				{
					"id": "DlgOpen",
					"group": 4,
					"text": "Ouvrir",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 6,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "DlgExecute",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 3
					},
					"text": "Exécuter",
					"iconeDone": true
				},
				{
					"id": "DlgFinish",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 3
					},
					"text": "Achever",
					"iconeDone": true
				},
				{
					"id": "DlgRecruit",
					"text": "Recruter",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 2
					},
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "DlgAdopt",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 2
					},
					"text": "Adopter",
					"iconeDone": true
				},
				{
					"id": "DlgLearnClass",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 2
					},
					"text": "Apprendre",
					"iconeDone": true
				},
				{
					"id": "DlgAccompagny",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 2
					},
					"text": "Escorter",
					"desc": "Ce personnage rejoindra temporairement votre troupe.",
					"iconeDone": true
				},
				{
					"id": "DlgInspect",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 6,
						"y": 5
					},
					"text": "Inspecter",
					"iconeDone": true
				},
				{
					"id": "UnitInspect",
					"text": "Inspecter",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 6,
						"y": 5
					},
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "DlgRepair",
					"text": "Réparer",
					"group": 4,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"iconeDone": true
				},
				{
					"id": "DlgUpgrade",
					"group": 4,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 0
					},
					"text": "Améliorer",
					"iconeDone": true
				},
				{
					"id": "DlgRelease",
					"group": 4,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 5
					},
					"text": "Libérer",
					"iconeDone": true
				},
				{
					"id": "DlgPay",
					"group": 4,
					"text": "Payer",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "DlgGiveBack",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 5
					},
					"text": "Rendre",
					"iconeDone": true
				},
				{
					"id": "DlgAccuse",
					"group": 4,
					"text": "Accuser",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "DlgDeliverPrisoner",
					"group": 4,
					"text": "Livrer un prisonnier",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "DialogMerchantTrade",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "DlgNegociate",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 6
					},
					"text": "Négocier",
					"iconeDone": true
				},
				{
					"id": "DlgThreaten",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 6
					},
					"text": "Menacer",
					"iconeDone": true
				},
				{
					"id": "DlgBribe",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 4
					},
					"text": "Soudoyer",
					"iconeDone": true
				},
				{
					"id": "DlgConvince",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 6
					},
					"text": "Convaincre",
					"iconeDone": true
				},
				{
					"id": "DlgSpare",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 6
					},
					"text": "Épargner",
					"iconeDone": true
				},
				{
					"id": "MissionReward",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 1
					},
					"text": "Collecter les primes",
					"iconeDone": true
				},
				{
					"id": "OpenMissionBoard",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 6,
						"y": 5
					},
					"text": "Consulter",
					"iconeDone": true
				},
				{
					"id": "MissionCompass",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 18,
						"y": 3
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "AcceptMission",
					"group": 4,
					"text": "Accepter",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "CancelMission",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 1
					},
					"text": "Annuler",
					"desc": "Annuler le contrat",
					"iconeDone": true
				},
				{
					"id": "MissionAccepted",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Accepter",
					"iconeDone": true
				},
				{
					"id": "DlgThrow",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 6
					},
					"text": "Jeter",
					"iconeDone": true
				},
				{
					"id": "DlgRepeat",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 1
					},
					"text": "Répéter",
					"iconeDone": true
				},
				{
					"id": "DlgIgnore",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 1
					},
					"text": "Ignorer",
					"iconeDone": true
				},
				{
					"id": "DlgRetort",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 0
					},
					"text": "Agresser",
					"iconeDone": true
				},
				{
					"id": "DlgExplain",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Expliquer",
					"iconeDone": true
				},
				{
					"id": "DlgEmpathize",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 6
					},
					"text": "Compatir",
					"iconeDone": true
				},
				{
					"id": "DlgSupport",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 6
					},
					"text": "Encourager",
					"iconeDone": true
				},
				{
					"id": "DlgRest",
					"group": 4,
					"text": "Se reposer",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 9,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "DlgRespe",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 6
					},
					"text": "Respécialisation",
					"iconeDone": true
				},
				{
					"id": "DlgInform",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 6
					},
					"text": "Informer",
					"desc": "Informer",
					"iconeDone": true
				},
				{
					"id": "DlgSing",
					"group": 4,
					"text": "Chanter",
					"icon": {
						"file": "ui/Icons/notes.png",
						"size": 24,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "DlgSettingG2",
					"group": 4,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 24,
						"x": 28,
						"y": 16,
						"width": 2,
						"height": 2
					},
					"text": "Parler",
					"iconeDone": true
				},
				{
					"id": "DlgInquisition",
					"group": 4,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 4
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "DlgConfession",
					"group": 4,
					"text": "Réagir",
					"iconeDone": true
				},
				{
					"id": "Climb",
					"group": 5,
					"text": "Monter",
					"iconeDone": true
				},
				{
					"id": "Attack",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 2
					},
					"text": "Combattre",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AttackSelect",
					"group": 6,
					"text": "Affronter",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "AttackStartFight",
					"group": 6,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 2
					},
					"text": "Démarrer le combat",
					"iconeDone": true
				},
				{
					"id": "RepairArmor",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"group": 6,
					"text": "Réparer",
					"iconeDone": true
				},
				{
					"id": "RepairInventory",
					"group": 6,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"text": "Réparer l'inventaire",
					"iconeDone": true
				},
				{
					"id": "RepairAll",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"text": "Tout réparer",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "RepairOnlyMyself",
					"group": 6,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"text": "Réparer mes armures",
					"iconeDone": true
				},
				{
					"id": "CureAll",
					"group": 6,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 5
					},
					"text": "Tout soigner",
					"iconeDone": true
				},
				{
					"id": "CureOnlyMyself",
					"group": 6,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 5
					},
					"text": "Soigner mes compagnons",
					"iconeDone": true
				},
				{
					"id": "LootAll",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 2
					},
					"text": "Tout prendre",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "StealMode",
					"text": "Voler",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 2
					},
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "CloseDebrief",
					"text": "Continuer",
					"group": 6,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "TentRest",
					"text": "Se Reposer",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 1
					},
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "ChestPay",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 2
					},
					"text": "Verser",
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "CampFireEatArrow",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 18,
						"y": 2
					},
					"text": "Repas",
					"desc": "Nourrissez votre troupe en assignant la quantité de nourriture nécessaire.",
					"iconeDone": true
				},
				{
					"id": "CampFireTired",
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 1
					},
					"desc": "Vos compagnons ont besoin de repos.",
					"text": "Feu de camp",
					"iconeDone": true
				},
				{
					"id": "CampDialog",
					"group": 7,
					"text": "Parler",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "ASSIGN",
					"group": 7,
					"text": "Compagnon assigné :",
					"iconeDone": true
				},
				{
					"id": "ConverterToolActionArrow",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 17,
						"y": 3
					},
					"text": "Production",
					"desc": "Placez un ingrédient pour lancer la production.",
					"iconeDone": true
				},
				{
					"id": "ConverterToolProductionArrow",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "StakeToolArrow",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 17,
						"y": 3
					},
					"text": "Empalement",
					"desc": "Placez un corps sur le pieu",
					"iconeDone": true
				},
				{
					"id": "ChooseRank",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 4
					},
					"text": "Nommer ::rank::",
					"desc": "[LMB] Nommer ::rank::",
					"iconeDone": true
				},
				{
					"id": "GiveRank",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 4
					},
					"text": "Désigner nouveau ::rank::",
					"iconeDone": true
				},
				{
					"id": "MissingResource",
					"group": 7,
					"text": "",
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 0,
						"y": 0
					},
					"desc": "<bad>Inactif : Ressources manquantes.</bad>",
					"iconeDone": true
				},
				{
					"id": "MissingAssign",
					"group": 7,
					"text": "",
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 0,
						"y": 0
					},
					"desc": "<bad>Inactif : Assignation requise.</bad>",
					"iconeDone": true
				},
				{
					"id": "StakeWarning",
					"group": 7,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 0,
						"y": 0
					},
					"desc": "<bad>Décomposition avancée.</bad>",
					"iconeDone": true
				},
				{
					"id": "ToolActive",
					"group": 7,
					"text": "",
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 7,
						"y": 0
					},
					"desc": "<good>Activité en cours.</good>",
					"iconeDone": true
				},
				{
					"id": "PonyCount",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 9
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "Expulse",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Expulser",
					"iconeDone": true
				},
				{
					"id": "UnitStatusUnhappy",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 4
					},
					"text": "Mécontent",
					"iconeDone": true
				},
				{
					"id": "UnitStatusLevelUp",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 3
					},
					"text": "Niveau supérieur !",
					"iconeDone": true
				},
				{
					"id": "UnitStatusPrisoner",
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 1
					},
					"text": "Prisonnier",
					"iconeDone": true
				},
				{
					"id": "UnitStatusCaptured",
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 14,
						"y": 1
					},
					"text": "Capturé",
					"iconeDone": true
				},
				{
					"id": "UnitMenu",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 3
					},
					"text": "Gérer le Compagnon",
					"iconeDone": true
				},
				{
					"id": "Relationship",
					"group": 7,
					"text": "Relations",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 7
					},
					"desc": "Vos compagnons peuvent entretenir des relations les uns avec les autres.\n\nLes interactions entre deux compagnons vont influencer leur relation pouvant aller de la haine à l'amour.",
					"iconeDone": true
				},
				{
					"id": "RelationshipBestFriend",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 17,
						"y": 7
					},
					"desc": "Les meilleurs amis obtiennent des bonus lorsqu'ils interagissent ensemble dans le camp ou dans les combats.",
					"iconeDone": true
				},
				{
					"id": "RelationshipHate",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 18,
						"y": 7
					},
					"text": "",
					"desc": "Les compagnons qui se détestent doivent éviter d'interagir ensemble afin de ne pas nuire à la troupe.",
					"iconeDone": true
				},
				{
					"id": "PrisonerTrust",
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 1
					},
					"text": "Confiance",
					"desc": "Ce prisonnier peut se méfier ou avoir confiance en la troupe.",
					"iconeDone": true
				},
				{
					"id": "Travel",
					"group": 7,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 0
					},
					"text": "Voyager",
					"iconeDone": true
				},
				{
					"id": "LieutenantRank",
					"group": 7,
					"text": "Lieutenant",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 9,
						"y": 10
					},
					"iconeDone": true
				},
				{
					"id": "CaptainRank",
					"group": 7,
					"text": "Capitaine",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 10
					},
					"iconeDone": true
				},
				{
					"id": "Gold",
					"text": "Krowns",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 1
					},
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "Influence",
					"text": "Influence",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 3
					},
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "Happiness",
					"group": 8,
					"text": "Bonheur",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 2,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "Unhappiness",
					"group": 8,
					"text": "Malheur",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "Food",
					"text": "Nourriture",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 1
					},
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "FoodBonusActive",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 2,
						"y": 5
					},
					"text": "Nourriture",
					"iconeDone": true
				},
				{
					"id": "RawMaterials",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 48,
						"x": 6,
						"y": 18,
						"width": 2,
						"height": 2
					},
					"text": "Matériaux de réparation",
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "RuinsLight",
					"group": 8,
					"text": "Lumière",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 5
					},
					"desc": "Dans un Tombeau, vous aurez besoin de Lumière conférée par des torches pour explorer.\n\nSi votre Lumière s'éteint totalement, votre troupe paniquera et ressortira du Tombeau.",
					"iconeDone": true
				},
				{
					"id": "NoiseForsakenVillage",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 7
					},
					"text": "Bruit",
					"desc": "Certaines actions de votre troupe d'expédition génèrent du bruit qui risque d'attirer des pestiférés.",
					"iconeDone": true
				},
				{
					"id": "Companions",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"group": 8,
					"text": "Compagnons",
					"iconeDone": true
				},
				{
					"id": "Companion",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"text": "Compagnon",
					"group": 8,
					"desc": "<b>Compagnon</b>",
					"iconeDone": true
				},
				{
					"id": "TroopCount",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"text": "Nombre d'unités alliés",
					"iconeDone": true
				},
				{
					"id": "EnemiesCount",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 2
					},
					"text": "Nombre d'unités ennemies",
					"iconeDone": true
				},
				{
					"id": "DropItem",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 5
					},
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "SortButton",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 7
					},
					"text": "Trier l'inventaire",
					"iconeDone": true
				},
				{
					"id": "CampChestButton",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 3
					},
					"text": "Ouvrir le coffre de camp",
					"iconeDone": true
				},
				{
					"id": "Weight",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 14,
						"y": 3
					},
					"text": "Poids",
					"iconeDone": true
				},
				{
					"id": "FightXP",
					"group": 8,
					"text": "Points d'expérience",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "ActionPoint",
					"group": 8,
					"text": "Points de Bravoure",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "ActionPointSkillIcon",
					"group": 8,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 10,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "ActionPointBonus",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 7
					},
					"text": "Points de Bravoure temporaire",
					"iconeDone": true
				},
				{
					"id": "ActionPointDisabled",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 14,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "Suspicion",
					"group": 8,
					"text": "Soupçon",
					"desc": "Une forte Suspicion vous rendra recherchés par la Garde et il faudra alors payer pour vos crimes.",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "SuspicionDisabled",
					"group": 8,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 8
					},
					"iconeDone": true
				},
				{
					"id": "PathMenu",
					"group": 9,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 5
					},
					"text": "Voies [KEY_Path]",
					"desc": "Les <b>Voies</b> rassemblent les différents exploits que vous avez accomplis et vous indiquent votre progression dans les différents chemins possibles.",
					"iconeDone": true
				},
				{
					"id": "NotifyPathTitle",
					"group": 9,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "NotifyPathLevel",
					"group": 9,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "ShowPathTitles",
					"group": 9,
					"text": "Titres",
					"desc": "Afficher la liste des titres disponibles pour cette voie",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "PathMight",
					"group": 9,
					"icon": {
						"file": "ui/Icons/PathIcons.png",
						"size": 72,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"text": "Puissance et Gloire",
					"desc": "La voie de la Puissance et de la Gloire est semée de dangers et d’ennemis redoutables, mais grandes sont les récompenses de ceux qui en triomphent.\n\nForgez les meilleures armures, recrutez les plus valeureux des compagnons et ensemble, faites résonner vos noms dans toutes les contrées des Cinq Royaumes.",
					"iconeDone": true
				},
				{
					"id": "PathTrade",
					"group": 9,
					"icon": {
						"file": "ui/Icons/PathIcons.png",
						"size": 72,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"text": "Commerce et Artisanat",
					"desc": "La voie du Commerce et de l'Artisanat transforme les plus humbles en individus opulents à condition qu’ils soient aussi ambitieux qu’astucieux. \n\nRemplissez les contrats les plus lucratifs, commercez de villes en villes, recherchez les marchandises les plus rares et les plus luxueuses et faites de votre compagnie la première fortune des Cinq Royaumes.",
					"iconeDone": true
				},
				{
					"id": "PathCrime",
					"group": 9,
					"icon": {
						"file": "ui/Icons/PathIcons.png",
						"size": 72,
						"x": 2,
						"y": 0,
						"height": 2
					},
					"text": "Crime et Chaos",
					"desc": "Haïe par la noblesse, maudite par la Garde, la voie du Crime et du Chaos est un chemin où il vaut mieux ne compter que sur soi-même.\n\nMais à force de vols, de recels, d’attaques de caravanes et d’assassinats, vous pourriez bien devenir les défenseurs du petit peuple des Cinq Royaumes... ou bien ses bourreaux.",
					"iconeDone": true
				},
				{
					"id": "PathMystery",
					"group": 9,
					"text": "Mystères et Connaissance",
					"icon": {
						"file": "ui/Icons/PathIcons.png",
						"size": 72,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"desc": "La voie des Mystères et de la Connaissance est empruntée par les plus curieux des aventuriers.\n\nSuivez cette route sinueuse et parcourez des terres inexplorées, fouillez les mystérieux Tombeaux des Anciens, décelez les secrets les mieux cachés et devenez les érudits les plus cultivés des Cinq Royaumes.",
					"iconeDone": true
				},
				{
					"id": "LearnPathMight",
					"group": 9,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 8
					},
					"text": "Apprendre",
					"iconeDone": true
				},
				{
					"id": "LearnPathTrade",
					"group": 9,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 8
					},
					"text": "Apprendre",
					"iconeDone": true
				},
				{
					"id": "LearnPathCrime",
					"group": 9,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 9,
						"y": 8
					},
					"text": "Apprendre",
					"iconeDone": true
				},
				{
					"id": "LearnPathMystery",
					"group": 9,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 8
					},
					"text": "Apprendre",
					"iconeDone": true
				},
				{
					"id": "UnitPath",
					"group": 9,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "TimeDay",
					"group": 10,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 2,
						"y": 4
					},
					"text": "Jour",
					"iconeDone": true
				},
				{
					"id": "TimeDawn",
					"group": 10,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 3,
						"y": 4
					},
					"text": "Aube",
					"iconeDone": true
				},
				{
					"id": "TimeDusk",
					"group": 10,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 2,
						"y": 5
					},
					"text": "Crépuscule",
					"iconeDone": true
				},
				{
					"id": "TimeNight",
					"group": 10,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 4,
						"y": 4
					},
					"text": "Nuit",
					"iconeDone": true
				},
				{
					"id": "WeatherRain",
					"group": 10,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 5,
						"y": 4
					},
					"text": "Pluie",
					"iconeDone": true
				},
				{
					"id": "WeatherRainStorm",
					"group": 10,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 6,
						"y": 4
					},
					"text": "Temps orageux",
					"iconeDone": true
				},
				{
					"id": "WeatherSnow",
					"group": 10,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 7,
						"y": 4
					},
					"text": "Neige",
					"iconeDone": true
				},
				{
					"id": "WeatherSnowStorm",
					"group": 10,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 8,
						"y": 4
					},
					"text": "Tempête de neige",
					"iconeDone": true
				},
				{
					"id": "Guard",
					"icon": {
						"file": "ui/elements/guard.png",
						"size": 39,
						"x": 0,
						"y": 0
					},
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "Morale",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 14,
						"y": 5
					},
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "MoraleGalvanized",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 1
					},
					"desc": "Vos unités deviennent galvanisées, ce qui augmente considérablement les dégâts qu'elles infligent.",
					"text": "",
					"iconeDone": true
				},
				{
					"id": "MoraleWin",
					"group": 11,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 3,
						"y": 0
					},
					"desc": "Vous remportez le combat : vos adversaires perdent pied et tentent de s'enfuir.",
					"text": "",
					"iconeDone": true
				},
				{
					"id": "MoraleMotivation",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 8
					},
					"desc": "Vos unités deviennent motivées, ce qui augmente les dégâts qu'elles infligent.",
					"text": "",
					"iconeDone": true
				},
				{
					"id": "HitPrecision",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "DamageAmount",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "DamageKill",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "DamageBlocked",
					"group": 11,
					"icon": {
						"file": "ui/elements/guard.png",
						"size": 39,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "TimelinePlayer",
					"icon": {
						"file": "ui/elements/battle/player_timeline.png",
						"size": 70,
						"x": 0,
						"y": 0
					},
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "TimelineAI",
					"group": 11,
					"icon": {
						"file": "ui/elements/battle/player_timeline.png",
						"size": 70,
						"x": 2,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "TimelineEndRound",
					"icon": {
						"file": "ui/elements/battle/player_timeline.png",
						"size": 70,
						"x": 1,
						"y": 0
					},
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "HealthPointsGained",
					"group": 11,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 17,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "WillPlaySoon",
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 0,
						"y": 0
					},
					"group": 11,
					"text": "",
					"desc": "Prochaine unité à jouer",
					"iconeDone": true
				},
				{
					"id": "WillBeEngaged",
					"group": 11,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 4,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CanPlayThisTurn",
					"icon": {
						"file": "ui/Icons/minibar.png",
						"size": 16,
						"x": 0,
						"y": 0,
						"width": 2
					},
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "PlayedThisTurn",
					"icon": {
						"file": "ui/Icons/minibar.png",
						"size": 16,
						"x": 4,
						"y": 0,
						"width": 2
					},
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "EnemyPointer",
					"icon": {
						"file": "ui/Icons/minibar.png",
						"size": 16,
						"x": 2,
						"y": 0,
						"width": 2
					},
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "CurrentUnitPointer",
					"group": 11,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 8,
						"y": 0
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "UnitHiddenFromCurrentUnit",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 3
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "Retreat",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 3,
						"y": 0
					},
					"group": 11,
					"text": "Retraite",
					"desc": "Fuyez le combat !\n\nLes armures de vos compagnons subiront des dommages et eux-mêmes risquent d’être blessés.\n\nVous perdrez également <happy>[VALUE]</happy>",
					"iconeDone": true
				},
				{
					"id": "EndTurn",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 0
					},
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BackToMainUnit",
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 7,
						"y": 0
					},
					"group": 11,
					"text": "Retour",
					"desc": "Un autre compagnon a démarré son tour. Cliquer pour retourner au compagnon actif.",
					"iconeDone": true
				},
				{
					"id": "CancelPendingSkill",
					"group": 11,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "PendingSkillAlert",
					"group": 11,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "Objectives",
					"group": 11,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 5
					},
					"text": "Objectif",
					"iconeDone": true
				},
				{
					"id": "ExitArrow",
					"group": 11,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "BallCarrier",
					"group": 11,
					"icon": {
						"file": "ui/Icons/balls.png",
						"size": 32,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "BallCarrierHeavy",
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/balls.png",
						"size": 32,
						"x": 1,
						"y": 0
					}
				},
				{
					"id": "BallCarrierFlame",
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/balls.png",
						"size": 32,
						"x": 2,
						"y": 0
					}
				},
				{
					"id": "BallCarrierScorer",
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/balls.png",
						"size": 32,
						"x": 3,
						"y": 0
					}
				},
				{
					"id": "SportTackle",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 6
					},
					"desc": "Indique que l'unité tentera de faire tomber l'adversaire.",
					"iconeDone": true
				},
				{
					"id": "SportDodge",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 7
					},
					"desc": "Indique que l'unité tentera d'esquiver le tacle de l'adversaire.",
					"iconeDone": true
				},
				{
					"id": "SportPass",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "SportKnockDown",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "SportCaptain",
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 9
					},
					"text": "Désigner Capitaine d'équipe"
				},
				{
					"id": "SportOffensiveUnit",
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 9
					},
					"text": "Assigner le rôle d'Attaquant"
				},
				{
					"id": "SportDefensiveUnit",
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 9
					},
					"text": "Assigner le rôle de Défenseur"
				},
				{
					"id": "SportBattleStart",
					"iconeDone": true,
					"group": 11,
					"text": "Jouer",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 8,
						"y": 5
					}
				},
				{
					"id": "UnitFleeBattle",
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 7
					},
					"text": "Fuite !",
					"iconeDone": true
				},
				{
					"id": "UnitReinforcements",
					"iconeDone": true,
					"group": 11,
					"text": "Renforts en approche !",
					"desc": "Des renforts rejoindront l'équipe adverse au round suivant.\n\nRounds de renforts restants : [VALUE]",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 9
					}
				},
				{
					"id": "GiveUp",
					"group": 12,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 3,
						"y": 0
					},
					"text": "Abandonner",
					"iconeDone": true
				},
				{
					"id": "Arena_Rules",
					"group": 12,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 14,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "Arena_GroupToDefeat",
					"group": 12,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 10,
						"y": 0
					},
					"text": "Round [VALUE]",
					"desc": "Vaincre cette équipe pour accéder au combat suivant.",
					"iconeDone": true
				},
				{
					"id": "Arena_ChampionToDefeat",
					"group": 12,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 12,
						"y": 0
					},
					"text": "Champion",
					"desc": "Vaincre le Champion pour remporter l'arène.",
					"iconeDone": true
				},
				{
					"id": "Arena_RegenHealth",
					"group": 12,
					"text": "Soigner cette unité.",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "Arena_RegenArmor",
					"group": 12,
					"text": "Réparer l'armure de cette unité.",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Arena_GetGrit",
					"group": 12,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 4
					},
					"text": "Obtenir [VALUE] Points de Bravoure.",
					"iconeDone": true
				},
				{
					"id": "Camp",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 3
					},
					"text": "Campement [KEY_Camp]",
					"group": 13,
					"desc": "Le <b>Camp</b> permet à vos compagnons de se reposer, de prendre un repas ou d'effectuer diverses activités.",
					"iconeDone": true
				},
				{
					"id": "Search",
					"text": "Chercher",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 2,
						"y": 3
					},
					"group": 13,
					"desc": "",
					"iconeDone": true
				},
				{
					"id": "Inventory",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 3
					},
					"text": "Inventaire [KEY_Inventory]",
					"group": 13,
					"desc": "Tous vos objets sont stockés dans votre <b>Inventaire</b>. Veillez à toujours avoir une capacité de Transport suffisante.",
					"iconeDone": true
				},
				{
					"id": "MiniMap",
					"text": "Carte du Monde [KEY_Minimap]",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 2,
						"y": 3
					},
					"group": 13,
					"desc": "La <b>Carte du monde</b> vous permet de garder un oeil sur les lieux que vous avez explorés et ceux encore inconnus.",
					"iconeDone": true
				},
				{
					"id": "Grimoire",
					"group": 13,
					"text": "Compendium [KEY_Grimoire]",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 3
					},
					"desc": "Le <b>Compendium</b> référence tous les plans, patrons et recettes que votre troupe peut apprendre.",
					"iconeDone": true
				},
				{
					"id": "Chat",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 7
					},
					"text": "Chat [KEY_Chat]",
					"desc": "Discutez avec vos compagnons.",
					"iconeDone": true
				},
				{
					"id": "BattleCancel",
					"text": "Annuler",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 0
					},
					"group": 13,
					"iconeDone": true
				},
				{
					"id": "OutlawsCancel",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 0
					},
					"text": "Parlementer",
					"desc": "Usez de vos krowns et de votre influence pour convaincre ce groupe de vous laisser partir.",
					"iconeDone": true
				},
				{
					"id": "WolfCancel",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 0
					},
					"text": "Distraire",
					"desc": "Jetez de la viande au sol et profitez de la diversion pour vous enfuir.",
					"iconeDone": true
				},
				{
					"id": "BoarCancel",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 0
					},
					"text": "Distraire",
					"desc": "Ces sangliers goulus sont prêts à manger n'importe quoi.",
					"iconeDone": true
				},
				{
					"id": "PlayerNeedCamp",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "PlayerInventoryFull",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "MerchantLog",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 2
					},
					"text": "Journal des Marchandises",
					"desc": "Aucune marchandise commercée",
					"iconeDone": true
				},
				{
					"id": "Play",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 4
					},
					"text": "Reprendre [KEY_Pause]",
					"iconeDone": true
				},
				{
					"id": "Pause",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 4
					},
					"text": "Pause [KEY_Pause]",
					"iconeDone": true
				},
				{
					"id": "GameSettings",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 17,
						"y": 4
					},
					"text": "Ouvrir le menu [KEY_Settings]",
					"iconeDone": true
				},
				{
					"id": "Ping",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 8
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "ChatOn",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 17,
						"y": 8
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "ChatOff",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 8
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "DeleteSave",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "DropDownArrow",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 1,
						"x": 294,
						"y": 199,
						"width": 35,
						"height": 35
					},
					"iconeDone": true
				},
				{
					"id": "DropDownArrowOpen",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 1,
						"x": 342,
						"y": 199,
						"width": 35,
						"height": 35
					},
					"iconeDone": true
				},
				{
					"id": "CheckboxOff",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 1,
						"x": 14,
						"y": 446,
						"width": 21,
						"height": 21
					},
					"iconeDone": true
				},
				{
					"id": "CheckboxOn",
					"group": 13,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 1,
						"x": 62,
						"y": 446,
						"width": 21,
						"height": 21
					},
					"iconeDone": true
				},
				{
					"id": "RoamingBountyCollected",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"group": 14,
					"iconeDone": true
				},
				{
					"id": "QualityStar",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 3
					},
					"group": 14,
					"text": "",
					"iconeDone": true
				},
				{
					"id": "WeightOverLimit",
					"group": 14,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 0,
						"y": 0
					},
					"text": "Vous transportez trop de poids dans votre inventaire !",
					"iconeDone": true
				},
				{
					"id": "NeedRestWarning",
					"group": 14,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 0,
						"y": 0
					},
					"text": "Vos compagnons doivent se reposer !",
					"iconeDone": true
				},
				{
					"id": "ChatNotification",
					"group": 14,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 0,
						"y": 1
					},
					"text": "Vous avez un message non lu !",
					"iconeDone": true
				},
				{
					"id": "MapTreasure",
					"group": 14,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "MapTreasureOpened",
					"group": 14,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "MapTreasureUnknown",
					"group": 14,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "ArmorColor",
					"group": 14,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 5,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "RandomButton",
					"group": 14,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 9,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "HairdressButton",
					"group": 14,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 7
					},
					"text": "Modifier l'apparence",
					"desc": "",
					"iconeDone": true
				},
				{
					"id": "SongPlay",
					"group": 14,
					"icon": {
						"file": "ui/Icons/notes.png",
						"size": 24,
						"x": 0,
						"y": 0
					},
					"text": "Jouer",
					"iconeDone": true
				},
				{
					"id": "StartOptions",
					"group": 14,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 17,
						"y": 4
					},
					"text": "Options",
					"iconeDone": true
				},
				{
					"id": "PlayerWaiting",
					"group": 14,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 8
					},
					"iconeDone": true
				},
				{
					"id": "PlayerWaitingSmall",
					"group": 14,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 16,
						"x": 37,
						"y": 25
					},
					"iconeDone": true
				},
				{
					"id": "ConnectMsg",
					"group": 15,
					"text": "::user:: s'est connecté.",
					"iconeDone": true
				},
				{
					"id": "DisconnectMsg",
					"group": 15,
					"text": "::user:: s'est déconnecté.",
					"iconeDone": true
				},
				{
					"id": "TierLevelCraft",
					"group": 16,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "CategoryAllCraft",
					"group": 16,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "ActivityNeutralDot",
					"group": 16,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 2,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "ActivitySuccessDot",
					"group": 16,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 1,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "ActivityFailDot",
					"group": 16,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 3,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CraftAnvil",
					"group": 16,
					"text": "Forger",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CraftCookingPot",
					"group": 16,
					"text": "Cuisiner",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CraftApothecaryTable",
					"group": 16,
					"text": "Concocter",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 0,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "CraftDefault",
					"group": 16,
					"text": "Fabriquer",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 48,
						"x": 6,
						"y": 18,
						"width": 2,
						"height": 2
					},
					"iconeDone": true
				},
				{
					"id": "CraftUpgrade",
					"group": 16,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 48,
						"x": 6,
						"y": 18,
						"width": 2,
						"height": 2
					},
					"text": "Améliorer",
					"iconeDone": true
				},
				{
					"id": "CraftUnique",
					"group": 16,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Vous ne pouvez posséder cet objet qu'une seule fois.",
					"iconeDone": true
				},
				{
					"id": "CraftMaximumTool",
					"group": 16,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Cet objet ne peut plus être amélioré.",
					"iconeDone": true
				},
				{
					"id": "CraftNotEnoughMaterials",
					"group": 16,
					"text": "Ressources insuffisantes pour créer cette quantité",
					"iconeDone": true
				},
				{
					"id": "SmallArrowGreen",
					"group": 16,
					"icon": {
						"file": "ui/Icons/Icons_Custom.png",
						"size": 32,
						"x": 12,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "SmallArrowRed",
					"group": 16,
					"icon": {
						"file": "ui/Icons/Icons_Custom.png",
						"size": 32,
						"x": 13,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "Dismantle",
					"group": 16,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 48,
						"x": 6,
						"y": 18,
						"width": 2,
						"height": 2
					},
					"text": "Démanteler",
					"iconeDone": true
				},
				{
					"id": "Dismantling",
					"group": 16,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 48,
						"x": 8,
						"y": 24,
						"width": 2,
						"height": 2
					},
					"text": "Démantèlement",
					"desc": "",
					"iconeDone": true
				},
				{
					"id": "Codex",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 48,
						"x": 12,
						"y": 32,
						"width": 2,
						"height": 2
					},
					"text": "Gestion des Codex",
					"desc": "",
					"group": 16
				},
				{
					"id": "UnitChain",
					"text": "Faire prisonnier",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "UnitCaptureAnimal",
					"group": 17,
					"text": "Ajouter au Camp",
					"iconeDone": true
				},
				{
					"id": "UnitUnchain",
					"text": "Libérer",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "UnitDismiss",
					"text": "Renvoyer",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "UnitTransfer",
					"group": 17,
					"text": "Transférer",
					"iconeDone": true
				},
				{
					"id": "UnitKill",
					"text": "Exécuter",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "UnitFree",
					"text": "Laisser aller",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "UnitMove",
					"text": "Déplacer",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "UnitCraft",
					"text": "Construire",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "CampRotate",
					"group": 17,
					"text": "Tourner",
					"iconeDone": true
				},
				{
					"id": "AttributeUpgrade",
					"group": 17,
					"text": "Plan de carrière",
					"desc": "Vous pouvez dépenser de l'Influence pour ajouter 1<img src=\"icon/UnitInfoLevelUp\" /> à un Attribut lors du passage au niveau supérieur.",
					"iconeDone": true
				},
				{
					"id": "UnitStatusLightDamage",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 0
					},
					"group": 17,
					"text": "Armure endommagée",
					"iconeDone": true
				},
				{
					"id": "UnitStatusSomeDamage",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 0
					},
					"group": 17,
					"text": "Armure endommagée",
					"iconeDone": true
				},
				{
					"id": "UnitStatusHeavyDamage",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 0
					},
					"group": 17,
					"text": "Armure endommagée",
					"iconeDone": true
				},
				{
					"id": "UnitStatusDead",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 3
					},
					"group": 17,
					"text": "C'était son dernier combat...",
					"iconeDone": true
				},
				{
					"id": "UnitStatusAfraid",
					"group": 17,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 0
					},
					"text": "Cette unité a fui la troupe durant le combat.",
					"iconeDone": true
				},
				{
					"id": "UnitStatusHostage",
					"group": 17,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "UnitInfoLevelUp",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 3
					},
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "SkillUpValue",
					"icon": {
						"file": "ui/Icons/Icons_Custom.png",
						"size": 32,
						"x": 12,
						"y": 2
					},
					"group": 17,
					"text": "",
					"iconeDone": true
				},
				{
					"id": "SkillUpSeparator",
					"icon": {
						"file": "ui/Icons/Icons_Custom.png",
						"size": 32,
						"x": 12,
						"y": 2
					},
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "AptitudePoint",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 3
					},
					"text": "Points d'Aptitude",
					"group": 17,
					"desc": "Les <b>Points d'Aptitude</b> vous permettent d'améliorer les attributs de votre compagnon.",
					"iconeDone": true
				},
				{
					"id": "NoJob",
					"group": 17,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 18
					},
					"iconeDone": true
				},
				{
					"id": "UnknownJob",
					"group": 17,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 17
					},
					"iconeDone": true
				},
				{
					"id": "KnowledgeTabulation",
					"group": 17,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 15
					},
					"iconeDone": true
				},
				{
					"id": "RunesTabulation",
					"group": 17,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 16
					},
					"iconeDone": true
				},
				{
					"id": "RecommendedJob",
					"group": 17,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "ArmorSlotEmpty",
					"group": 17,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "ArmorSlotFull",
					"group": 17,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "CampAssignedCounter",
					"group": 17,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "ActivityInjuredUnit",
					"group": 17,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 13,
						"y": 1
					},
					"text": "Blessé",
					"iconeDone": true
				},
				{
					"id": "SwapWeapon",
					"group": 17,
					"icon": {
						"file": "ui/Icons/swapWeapon.png",
						"size": 22,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CursorDefault",
					"icon": {
						"file": "ui/Icons/cursors.png",
						"size": 32,
						"x": 0,
						"y": 0
					},
					"group": 18,
					"text": "",
					"iconeDone": true
				},
				{
					"id": "CursorHand",
					"icon": {
						"file": "ui/Icons/cursors.png",
						"size": 32,
						"x": 1,
						"y": 0
					},
					"group": 18,
					"iconeDone": true
				},
				{
					"id": "CursorAttack",
					"icon": {
						"file": "ui/Icons/cursors.png",
						"size": 32,
						"x": 4,
						"y": 0
					},
					"group": 18,
					"iconeDone": true
				},
				{
					"id": "CursorAmbush",
					"group": 18,
					"icon": {
						"file": "ui/Icons/cursors.png",
						"size": 32,
						"x": 4,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CursorHelp",
					"group": 18,
					"icon": {
						"file": "ui/Icons/cursors.png",
						"size": 32,
						"x": 1,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "CursorInfo",
					"group": 18,
					"icon": {
						"file": "ui/Icons/cursors.png",
						"size": 32,
						"x": 2,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "CursorNo",
					"icon": {
						"file": "ui/Icons/cursors.png",
						"size": 32,
						"x": 1,
						"y": 1
					},
					"group": 18,
					"iconeDone": true
				},
				{
					"id": "CursorHeal",
					"group": 18,
					"icon": {
						"file": "ui/Icons/cursors.png",
						"size": 32,
						"x": 0,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "Backstab",
					"text": "Embuscade",
					"group": 19,
					"desc": "Se déclenche quand cette unité attaque par derrière un ennemi engagé.",
					"iconeDone": true
				},
				{
					"id": "DeadlyBlow",
					"text": "Coup mortel",
					"group": 19,
					"desc": "Se déclenche si cette compétence tue sa cible.",
					"iconeDone": true
				},
				{
					"id": "CapaCritical",
					"group": 19,
					"desc": "Se déclenche si cette compétence inflige un coup critique.",
					"text": "Critique",
					"iconeDone": true
				},
				{
					"id": "Duel",
					"text": "Duel",
					"group": 19,
					"desc": "Peut être utilisé seulement si cette unité est engagée.",
					"iconeDone": true
				},
				{
					"id": "Vigilance",
					"group": 19,
					"desc": "Ne peut pas être utilisé si cette unité est engagée.",
					"text": "Vigilance",
					"iconeDone": true
				},
				{
					"id": "Extra",
					"group": 19,
					"text": "Extra",
					"desc": "Utilisable une seule fois par combat.",
					"iconeDone": true
				},
				{
					"id": "NotifySalary",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 4
					},
					"text": "Au prochain repos, vous devrez verser <gold>::due::</gold> à vos compagnons.",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifyUnitExhausted",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 3
					},
					"text": "::name:: est mort d'épuisement, vous devez établir un camp et vous reposer !",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifyLearnTrait",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 18
					},
					"text": "::name:: est devenu ::job::.",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifyLearnTraitReason",
					"group": 20,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 18
					},
					"text": "::name:: est devenu ::job::.\n<disable>::reason::</disable>",
					"iconeDone": true
				},
				{
					"id": "NotifyLearnStrategy",
					"group": 20,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 0
					},
					"text": "Vous avez appris une nouvelle stratégie <b>::strategy::</b>.\n\n::descStrategy::",
					"iconeDone": true
				},
				{
					"id": "NotifyGroupReward",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 1
					},
					"text": "Vous avez obtenu ::bounty:: en l'emportant contre ::name::.",
					"iconeDone": true
				},
				{
					"id": "NotifyMissionCompleted",
					"group": 20,
					"text": "Vous venez de terminer la mission <b>::name::</b>.\nRetournez voir un émissaire pour récupérer votre récompense.",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "NotifyMissionFailed",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 2,
						"y": 8
					},
					"text": "Vous avez échoué la mission ::name::.\nVous ne pourrez pas collecter votre récompense.",
					"iconeDone": true
				},
				{
					"id": "NotifyMissionExpired",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 2,
						"y": 8
					},
					"text": "La mission ::name:: vient d'expirer.",
					"iconeDone": true
				},
				{
					"id": "NotifyMissionRewards",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 1
					},
					"text": "Vos missions vous ont rapporté <gold>::gold::</gold>",
					"iconeDone": true
				},
				{
					"id": "NotifyMerchantInfluence",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 1
					},
					"text": "Vos marchandages récents vous ont fait connaître ! Vous avez gagné <influence>::count::</influence>",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifyWantedStart",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 6,
						"y": 2
					},
					"text": "Vos actions récentes ont attiré l'attention de la Garde. Vous êtes désormais <b>recherchés</b> !",
					"iconeDone": true
				},
				{
					"id": "NotifyWantedStop",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 6,
						"y": 2
					},
					"text": "La Garde a d'autres criminels à rechercher en ce moment, vous n'êtes plus <b>recherchés</b>.",
					"iconeDone": true
				},
				{
					"id": "NotifyWantedAccumulated",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 6,
						"y": 2
					},
					"text": "Vos nombreuses exactions ont fini par vous faire repérer !",
					"iconeDone": true
				},
				{
					"id": "NotifyArmorRepaired",
					"group": 20,
					"text": "Les armures de vos compagnons ont été réparées.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"iconeDone": true
				},
				{
					"id": "NotifyInventoryRepaired",
					"group": 20,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"text": "Les objets de votre inventaire ont été réparés.",
					"iconeDone": true
				},
				{
					"id": "NotifyRest",
					"group": 20,
					"text": "Vos compagnons se sentent reposés.",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 9,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "NotifyInjuriesHealed",
					"group": 20,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 6
					},
					"text": "Les blessures de vos compagnons ont été soignées.",
					"iconeDone": true
				},
				{
					"id": "NotifyPrisonersInjuriesHealed",
					"group": 20,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 6
					},
					"text": "Les blessures de vos prisonniers ont été soignées.",
					"iconeDone": true
				},
				{
					"id": "NotifyHealInjuryFailed",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 7
					},
					"text": "Le remède ::item:: n'a eu aucun effet sur ::name::",
					"iconeDone": true
				},
				{
					"id": "NotifyConvert",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 0
					},
					"text": "Vous avez obtenu ::item::",
					"iconeDone": true
				},
				{
					"id": "NotifyNewRecipes",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 3
					},
					"text": "Vous avez obtenu de nouvelles recettes !",
					"iconeDone": true
				},
				{
					"id": "NotifyKnowledge",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 3
					},
					"text": "La progression de vos découvertes vous a fait gagner un point de <b>Connaissance</b>.",
					"iconeDone": true
				},
				{
					"id": "NotifyScriptDefault",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "NotifyRenamed",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"text": "::prev:: a adopté <b>::name::</b> comme surnom et ses compagnons aiment bien.",
					"iconeDone": true
				},
				{
					"id": "NotifyRenamedBad",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"text": "::prev:: a adopté <b>::name::</b> comme surnom et ses compagnons <bad>n'aiment pas du tout</bad>.",
					"iconeDone": true
				},
				{
					"id": "NotifyNewExigence",
					"group": 20,
					"text": "Nouvelle exigence !\n::desc::",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "NotifyExigenceSucceeded",
					"group": 20,
					"text": "Vous avez satisfait le public !\nVous obtenez <ap>::amount::</ap>.",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "NotifyUnitTitle",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"text": "Les exploits de ::name:: font qu'il sera désormais appellé <b>::newName::</b>. Il obtient un Point d'Attribut.",
					"iconeDone": true
				},
				{
					"id": "NotifyUnitTitleWoman",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"text": "Les exploits de ::name:: font qu'elle sera désormais appellée <b>::newName::</b>. Elle obtient un Point d'Attribut.",
					"iconeDone": true
				},
				{
					"id": "NotifyUnitTitleNeutral",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 2
					},
					"text": "Les exploits de ::name:: font qu'il sera désormais appellé <b>::newName::</b>. Il obtient un Point d'Attribut.",
					"iconeDone": true
				},
				{
					"id": "NotifyFirstCaptain",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 10
					},
					"text": "Vos compagnons sont devenus plus aguerris, vous pouvez désormais nommer un <b>Capitaine</b> parmi eux.",
					"iconeDone": true
				},
				{
					"id": "NotifyNewCaptain",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 10
					},
					"text": "Il est temps de nommer un remplaçant à votre <b>Capitaine</b> précédent.",
					"iconeDone": true
				},
				{
					"id": "NotifyFirstLieutenant",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 9,
						"y": 10
					},
					"text": "Votre troupe est plus structurée, vous pouvez désormais nommer un <b>Lieutenant</b> parmi vos compagnons.",
					"iconeDone": true
				},
				{
					"id": "NotifySecondLieutenant",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 10
					},
					"text": "Votre troupe s'agrandit ! Vous pouvez désormais nommer un second <b>Lieutenant</b> parmi vos compagnons.",
					"iconeDone": true
				},
				{
					"id": "NotifyRuneDiscovered",
					"group": 20,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 14
					},
					"text": "Vous avez découvert la Rune ::item::",
					"iconeDone": true
				},
				{
					"id": "NotifyNewAntiquity",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 14
					},
					"text": "Vous avez obtenu ::item::",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifyNegociationSuccess",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 5
					},
					"text": "Négociation réussie !\nL'émissaire a accepté votre offre pour la mission <b>::name::</b>.",
					"iconeDone": true
				},
				{
					"id": "NotifyNegociationFailFirst",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 8
					},
					"text": "L'émissaire refuse votre offre pour la mission <b>::name::</b>.",
					"iconeDone": true
				},
				{
					"id": "NotifyNegociationFail",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 8
					},
					"text": "L'émissaire refuse votre offre pour la mission <b>::name::</b> et vous fait une contre-offre à <gold>::value::</gold>.",
					"iconeDone": true
				},
				{
					"id": "NotifyTrackDone",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 5
					},
					"text": "La traque est terminée !",
					"iconeDone": true
				},
				{
					"id": "NotifyStartTrack",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 18,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "NotifyTreasureFound",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 18,
						"y": 6
					},
					"text": "Vous avez trouvé un trésor !",
					"iconeDone": true
				},
				{
					"id": "NotifyRuinExplored",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 6
					},
					"text": "Les ruines ont été explorées !",
					"iconeDone": true
				},
				{
					"id": "NotifySecretFound",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 7
					},
					"text": "Vous avez découvert un secret !",
					"iconeDone": true
				},
				{
					"id": "NotifyRegionCompleted",
					"group": 20,
					"text": "Vous avez terminé la région <inf>::name::</inf> !",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "NotifyMosquitoSting",
					"group": 20,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "NotifyReachFlee",
					"group": 20,
					"text": "<b>::name::</b> a fui le combat avec succès !",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "NotifyForsakenAfterCombat",
					"group": 20,
					"text": "Votre troupe a trouvé une issue et le calme revient peu à peu dans le village.\nVous pouvez reprendre votre exploration en toute discrétion.",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 64,
						"x": 0,
						"y": 2
					},
					"desc": "",
					"iconeDone": true
				},
				{
					"id": "NotifyLuteWin",
					"group": 20,
					"text": "Le public semble conquis !",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "NotifyLutePerfectWin",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Le public s'est levé pour vous acclamer !",
					"iconeDone": true
				},
				{
					"id": "NotifyLuteFail",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Le public n'était pas prêt pour ce massacre...",
					"iconeDone": true
				},
				{
					"id": "NotifySongUnlock",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 1
					},
					"text": "Vos fait d'armes vous ont inspiré une nouvelle chanson : <b>::name::</b>",
					"iconeDone": true
				},
				{
					"id": "NotifyMasterAngler",
					"group": 20,
					"text": "<b>::name::</b> vient de pêcher <img src=\"item/::item::\"/>::itemName:: x::count:: !",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "NotifySnooper",
					"group": 20,
					"text": "<b>::name::</b> a trouvé du <img src=\"item/::item::\"/>::itemName:: x::count:: !",
					"iconeDone": true
				},
				{
					"id": "NotifyFatPork",
					"group": 20,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 6
					},
					"text": "<b>::name::</b> est devenu suffisamment gras et est prêt à être abattu !",
					"iconeDone": true
				},
				{
					"id": "NotifyFleeRuins",
					"group": 20,
					"text": "Votre dernière torche s'est éteinte... Pris de panique, vos compagnons se sont blessés en voulant sortir du Tombeau !",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 13,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "NotifyWhiplashDeath",
					"group": 20,
					"text": "<b>::name::</b> n'a pas survécu à ce coup de fouet.",
					"iconeDone": true
				},
				{
					"id": "NotifyWhiplashDeathMultiple",
					"group": 20,
					"text": "Certains de vos compagnons n'ont pas survécu aux coups de fouet : ::names::.",
					"iconeDone": true
				},
				{
					"id": "NotifyWhiplashCompanion",
					"group": 20,
					"text": "<b>::name::</b> a fouetté vos compagnons.",
					"iconeDone": true
				},
				{
					"id": "NotifyWhiplashMissTarget",
					"group": 20,
					"text": "Une bourrasque a dévié la trajectoire du coup de fouet destiné à <b>::name::</b> qui est venu lacérer accidentellement le dos de <b>::newTarget::</b> !",
					"iconeDone": true
				},
				{
					"id": "NotifyPrisonerTrustRecruit",
					"group": 20,
					"text": "Le prisonnier <b>::name::</b> vous fait confiance et rejoint votre troupe !",
					"iconeDone": true
				},
				{
					"id": "NotifyRelationShipImprove",
					"group": 20,
					"text": "La relation entre <b>::name1::</b> et <b>::name2::</b> s'est améliorée !",
					"iconeDone": true
				},
				{
					"id": "NotifyRelationShipBestFriend",
					"group": 20,
					"text": "<b>::name1::</b> et <b>::name2::</b> sont maintenant meilleurs amis !",
					"iconeDone": true
				},
				{
					"id": "NotifyRelationShipDeteriorate",
					"group": 20,
					"text": "La relation entre <b>::name1::</b> et <b>::name2::</b> s'est déteriorée.",
					"iconeDone": true
				},
				{
					"id": "NotifyRelationShipSnoring",
					"group": 20,
					"text": "Les ronflements de <b>::name1::</b> ont dérangé <b>::name2::</b>.",
					"iconeDone": true
				},
				{
					"id": "NotifyRelationShipHate",
					"group": 20,
					"text": "<b>::name1::</b> et <b>::name2::</b> se haïssent.",
					"iconeDone": true
				},
				{
					"id": "NotifyRelationShipBestFriendLeaveTroop",
					"group": 20,
					"text": "<b>::name::</b> plonge dans une dépression suite au départ de <b>::leaver::</b>.",
					"iconeDone": true
				},
				{
					"id": "NotifyLooseDepressedTrait",
					"group": 20,
					"text": "<b>::name::</b> n'est plus déprimé.",
					"iconeDone": true
				},
				{
					"id": "NotifyTraitUnlock",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 7
					},
					"text": "<b>::name::</b> a débloqué le trait ::trait::.",
					"iconeDone": true
				},
				{
					"id": "NotifyWealthFirstAnnounce",
					"group": 20,
					"text": "La richesse de votre troupe commence à faire du bruit dans la région.",
					"iconeDone": true
				},
				{
					"id": "NotifyWealthSecondAnnounce",
					"group": 20,
					"text": "Votre richesse fait de plus en plus de bruit dans la région et commence à attirer les convoitises.",
					"iconeDone": true
				},
				{
					"id": "NotifyWealthTriggered",
					"group": 20,
					"text": "Des Maraudeurs ont été aperçus en train de piller les troupes égarées !",
					"iconeDone": true
				},
				{
					"id": "NotifyBrigandsStealItems",
					"group": 20,
					"text": "Ces Maraudeurs viennent de vous voler.\n::items::.\n\nPour récupérer vos biens, retrouvez le groupe de Maraudeurs.",
					"iconeDone": true
				},
				{
					"id": "NotifyBrigandsFleeBattle",
					"group": 20,
					"text": "Un Maraudeur s'est enfui avec une partie de vos objets !\nVous pourrez le rattraper après le combat pour récupérer vos biens.",
					"iconeDone": true
				},
				{
					"id": "NotifyUnitBurnt",
					"text": "Vous n'êtes pas arrivé à temps, l'Inquisition a purifié ce monde de l'existence de ::name::.",
					"group": 20,
					"desc": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 10
					}
				},
				{
					"id": "NotifyStruckByLighting",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 2,
						"y": 9
					},
					"text": "La troupe a été touchée par l'Œil d'Alazar. Bonheur perdu: <happy>::valeur::</happy>.",
					"iconeDone": true
				},
				{
					"id": "NotifyGuard",
					"group": 20,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "NotifyDiscoverJob",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifyGainDialog",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifyAccompany",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifyRecruit",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifyChooseRank",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "NotifySettingProgress",
					"group": 20,
					"iconeDone": true
				},
				{
					"id": "RoamingBounty",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					},
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "HideoutProgress",
					"group": 21,
					"text": "",
					"icon": {
						"file": "ui/Icons/BanditHideoutCount.png",
						"size": 18,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "HideoutProgressUI",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 4
					},
					"text": "",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "TrackedInfo",
					"group": 21,
					"icon": {
						"file": "ui/Icons/BanditHideoutCount.png",
						"size": 18,
						"x": 1,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "RoamingFighting",
					"group": 21,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 4,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "RoamingTalking",
					"group": 21,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "HostageInfo",
					"group": 21,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "ItemBuy",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 1
					},
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "ItemSteal",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 2
					},
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "ItemLocked",
					"icon": {
						"file": "ui/Icons/Icons_Custom.png",
						"size": 32,
						"x": 13,
						"y": 0
					},
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "PlayerMapPosition",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 0,
						"y": 1
					},
					"text": "Position actuelle",
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceDefault",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 9,
						"y": 0
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceVillage",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 64,
						"x": 0,
						"y": 1
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceSawmill",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 5,
						"y": 0
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceMill",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 3,
						"y": 0
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceMine",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 2,
						"y": 1
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceHideout",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 4,
						"y": 3
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceInquisitionCamp",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 4,
						"y": 3
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceCamp",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 7,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "PlaceTower",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 8,
						"y": 0
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceFarm",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 4,
						"y": 0
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceFishery",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 5,
						"y": 3
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlacePrison",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 2,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "PlaceRuins_Entrance",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 5,
						"y": 2
					},
					"text": "Tombeau des Anciens",
					"iconeDone": true
				},
				{
					"id": "PlaceRuins",
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceCrypt",
					"iconeDone": true,
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 6,
						"y": 5
					}
				},
				{
					"id": "PlaceMonastery",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 2,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "PlaceFrontier",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 4,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "PlaceCastle",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 3,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "PlaceArena",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 6,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "PlaceRatsHole",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 8,
						"y": 1
					},
					"text": "Invasion de rats",
					"iconeDone": true
				},
				{
					"id": "PlaceForsakenVillage",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 64,
						"x": 0,
						"y": 2
					},
					"text": "Village abandonné",
					"desc": "Formez une troupe de reconnaissance suffisamment volontaire et silencieuse pour explorer ce village abandonné en toute discrétion.",
					"iconeDone": true
				},
				{
					"id": "PlaceHangTree",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 6,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "PlaceBigTree",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 7,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "PlaceStone",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 6,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "PlaceForge",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 2,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "PlaceStable",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 8,
						"y": 3
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceLaboratory",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 9,
						"y": 3
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceBarrack",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 8,
						"y": 6
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceUniversity",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 9,
						"y": 5
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceTheater",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 9,
						"y": 4
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceTradePalace",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 0,
						"y": 6,
						"width": 2,
						"height": 2
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceAmbassy",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 9,
						"y": 6
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceTrainingCamp",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 6,
						"y": 6
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceRookBoat",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 7,
						"y": 6
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceDialogOut",
					"group": 22,
					"text": "",
					"iconeDone": true
				},
				{
					"id": "PlaceSport",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 8,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "PlaceBridge",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 7,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "PlaceTradingPost",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 5,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "PlaceUnknown",
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 0,
						"y": 0
					},
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "PlaceHasDefenderIco",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 7,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "RoamingHostageMarker",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 4
					},
					"text": "$NAME a été capturé...",
					"iconeDone": true
				},
				{
					"id": "PitonMarker",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 8,
						"y": 2
					},
					"text": "Piton",
					"iconeDone": true
				},
				{
					"id": "PitonDot",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 9,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "FlagMarker",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 3,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "BrigandsMarker",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "ToggleGoals",
					"group": 22,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 7
					},
					"text": "Objectifs",
					"iconeDone": true
				},
				{
					"id": "NotificationLegion",
					"group": 22,
					"desc": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 9
					}
				},
				{
					"id": "MapGoalIcon",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 5,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "MapGoalIconDone",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 7,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "MapGoalList",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 1,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "MapGoalListReady",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 3,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "MapGoalListDone",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 4,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "MapPlacesDiscovered",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 4,
						"y": 0
					},
					"text": "Lieux découverts",
					"iconeDone": true
				},
				{
					"id": "MapPlacesFinished",
					"group": 22,
					"icon": {
						"file": "ui/Icons/WorldmapIcons32px.png",
						"size": 32,
						"x": 7,
						"y": 1
					},
					"text": "Lieux complétés",
					"iconeDone": true
				},
				{
					"id": "MapCheckBoxSelected",
					"group": 22,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 1,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "MapCheckBoxEmpty",
					"group": 22,
					"icon": {
						"file": "ui/Icons/BattleIconsSmall.png",
						"size": 16,
						"x": 2,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "GrimoireLearn",
					"group": 23,
					"text": "Apprendre",
					"iconeDone": true
				},
				{
					"id": "UnknownCategory",
					"group": 23,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 6
					},
					"text": "À découvrir",
					"iconeDone": true
				},
				{
					"id": "Knowledge",
					"group": 23,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 3
					},
					"text": "Connaissance",
					"iconeDone": true
				},
				{
					"id": "GrimoireRecipeUnlock",
					"group": 23,
					"text": "Recette",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "PreviousPage",
					"group": 23,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 16,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "NextPage",
					"group": 23,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 17,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "GrimoireNotification",
					"group": 23,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 4
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "LearnKnowledge",
					"group": 23,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 3
					},
					"text": "Apprendre",
					"iconeDone": true
				},
				{
					"id": "LearnRecipe",
					"group": 23,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"text": "Apprendre",
					"iconeDone": true
				},
				{
					"id": "LearnSetting",
					"iconeDone": true,
					"group": 23,
					"text": "Apprendre",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 0
					}
				},
				{
					"id": "North",
					"group": 24,
					"icon": {
						"file": "ui/elements/CardianalPoints.png",
						"size": 20,
						"x": 0,
						"y": 0
					},
					"text": "",
					"iconeDone": true
				},
				{
					"id": "South",
					"group": 24,
					"icon": {
						"file": "ui/elements/CardianalPoints.png",
						"size": 20,
						"x": 1,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "East",
					"group": 24,
					"icon": {
						"file": "ui/elements/CardianalPoints.png",
						"size": 20,
						"x": 2,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "West",
					"group": 24,
					"icon": {
						"file": "ui/elements/CardianalPoints.png",
						"size": 20,
						"x": 3,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "FlagCompass",
					"group": 24,
					"icon": {
						"file": "ui/Icons/Flag/FlagCompass.png",
						"size": 20,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "WinHGroupFight",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 0,
						"width": 7
					},
					"text": "Combat",
					"iconeDone": true
				},
				{
					"id": "WinHHideout",
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 0,
						"width": 7
					},
					"text": "Repaire des brigands",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "WinHVictory",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 1,
						"width": 7
					},
					"text": "Victoire",
					"iconeDone": true
				},
				{
					"id": "WinHDefeat",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 2,
						"width": 7
					},
					"text": "Défaite",
					"iconeDone": true
				},
				{
					"id": "WinHMissionBoard",
					"group": 25,
					"text": "Tableau des primes",
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 4,
						"width": 7
					},
					"iconeDone": true
				},
				{
					"id": "WinHCampfire",
					"group": 25,
					"text": "Se reposer",
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 3,
						"width": 7
					},
					"iconeDone": true
				},
				{
					"id": "WinHDestiny",
					"group": 25,
					"text": "Choix de destin",
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 4,
						"width": 7
					},
					"iconeDone": true
				},
				{
					"id": "WinHArena",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 0,
						"width": 7
					},
					"desc": "Règlement\n\n1. Une équipe est composée de quatre combattants. Une fois inscrite, il est impossible de la modifier pour le reste de la compétition.\n\n2. Enchaînez trois combats d'affilée pour affronter le Champion de l'arène et obtenir sa Médaille.\n\n3. Un combattant n'ayant plus de Santé ne meurt pas mais est mis immédiatement hors-combat.",
					"iconeDone": true
				},
				{
					"id": "WinHArenaHard",
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 0,
						"width": 7
					},
					"desc": "Règlement\n\n1. Une équipe est composée de quatre combattants. Une fois inscrite, il est impossible de la modifier pour le reste de la compétition.\n\n2. Enchaînez trois combats d'affilée pour affronter le Champion de l'arène et obtenir sa Médaille.\n\n3. Un combattant n'ayant plus de Santé ne meurt pas mais est mis immédiatement hors-combat.\n\n4. Un combattant sera mis hors-combat à chaque fois qu'une exigence ne sera pas remplie.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "WinHArenaVoxPopuli",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 0,
						"width": 7
					},
					"text": "Don du public",
					"iconeDone": true
				},
				{
					"id": "WinHSport",
					"iconeDone": true,
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 1,
						"width": 7
					},
					"text": "Match de Rouste",
					"desc": "Règles du jeu\n\n1. Une équipe est constituée de 6 joueurs. Chaque joueur est spécialisé selon sa Force ou sa Dextérité.\n\n2. Les équipes s'affrontent pour le contrôle de 2 ballons. Porter un ballon dans l'embut adverse rapporte 2 points à son équipe. Posséder également le 2eme ballon lors de la marque offre 1 point additionnel.\n\n3. Une partie se déroule en 8 Rounds. L'équipe qui possède le plus de points à l'issue du dernier Round est déclarée vainqueur !"
				},
				{
					"id": "WinHItemMap",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 3,
						"width": 7
					},
					"desc": "",
					"iconeDone": true
				},
				{
					"id": "WinHPaths",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 4,
						"width": 7
					},
					"text": "Voies",
					"iconeDone": true
				},
				{
					"id": "WinHGrimoire",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 4,
						"width": 7
					},
					"text": "Compendium",
					"iconeDone": true
				},
				{
					"id": "Gosenberg2RegionQuestAccuse",
					"group": 25,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 6
					},
					"text": "Accuser",
					"desc": "Trouvez la personne coupable dans toute la région.\nVoulez-vous accuser cette personne ?",
					"iconeDone": true
				},
				{
					"id": "Gosenberg2RegionQuestAccuseTuto",
					"group": 25,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 6
					},
					"text": "Accuser",
					"desc": "Trouvez la personne coupable dans toute la région.\nVoulez-vous accuser cette personne ?",
					"iconeDone": true
				},
				{
					"id": "Gosenberg2RegionQuestAsk",
					"group": 25,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 5
					},
					"text": "Questionner",
					"iconeDone": true
				},
				{
					"id": "Gosenberg2RegionQuestAskTuto",
					"group": 25,
					"text": "Questionner",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "WinHOptions",
					"group": 25,
					"text": "Options",
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 5,
						"width": 7
					},
					"iconeDone": true
				},
				{
					"id": "WinStartGame",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 1,
						"width": 7
					},
					"text": "Au commencement...",
					"iconeDone": true
				},
				{
					"id": "WinHTuto",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 3,
						"width": 7
					},
					"iconeDone": true
				},
				{
					"id": "WinHComptoir",
					"group": 25,
					"icon": {
						"file": "ui/elements/headersBattle.png",
						"size": 31,
						"x": 0,
						"y": 3,
						"width": 7
					},
					"text": "Comptoir",
					"iconeDone": true
				},
				{
					"id": "TutoForge",
					"group": 26,
					"text": "Apprenez à Forger !",
					"desc": "<img src=\"ui/tuto/forge1.jpg\"/> Les plaques de métal chauffent : appuyez sur [LMB] quand une plaque devient rouge pour forger votre objet.\n\n<img src=\"ui/tuto/forge2.jpg\"/> En appuyant sur [LMB] quand la plaque de métal émet des étincelles, vous créerez un objet de qualité supérieure !\n\n<img src=\"ui/tuto/forge3.jpg\"/> Si toutes les plaques ont été frappées au bon moment, vous aurez une chance de créer un objet de qualité exceptionnelle !",
					"iconeDone": true
				},
				{
					"id": "TutoLockpick",
					"group": 26,
					"text": "Apprenez à Crocheter !",
					"desc": "<img src=\"ui/tuto/lockpick1.jpg\"/> Tournez le crochet puis appuyez sur [LMB] pour l'enfoncer dans la serrure.\n\n<img src=\"ui/tuto/lockpick2.jpg\"/> Plus le crochet est proche de l'ouverture, plus il se relève. À l'inverse, s'il tressaute, il risque de se briser rapidement.",
					"iconeDone": true
				},
				{
					"id": "TutoFishing",
					"group": 26,
					"text": "Apprenez à Pêcher !",
					"desc": "<img src=\"ui/tuto/fishing1.jpg\"/> Utilisez un de vos hameçons pour lancer votre ligne dans l'eau avec [LMB].\n\n<img src=\"ui/tuto/fishing2.jpg\"/> Une fois la prise ferrée, laissez appuyé [LMB] de façon à maintenir la tension du fil dans la zone centrale. Empêchez le poisson de s'échapper !",
					"iconeDone": true
				},
				{
					"id": "TutoMining",
					"group": 26,
					"text": "Apprenez à Miner !",
					"desc": "<img src=\"ui/tuto/mining1.jpg\"/> Placez votre curseur au niveau du cercle de minage.\n\n<img src=\"ui/tuto/mining2.jpg\"/> Appuyez sur [LMB] quand le cercle vert se superpose au cercle gris pour récupérer plus de minerais !",
					"iconeDone": true
				},
				{
					"id": "TutoRetreat",
					"group": 26,
					"text": "Combat et retraite",
					"desc": "<img src=\"ui/tuto/retreat.jpg\"/> Si un combat vous paraît trop difficile, vous pouvez battre en retraite grâce au bouton Retraite. Vos compagnons subiront des dégâts mais survivront !",
					"iconeDone": true
				},
				{
					"id": "TutoTerror",
					"group": 26,
					"text": "Terreur !",
					"desc": "<img src=\"ui/tuto/terror.jpg\"/> Quand une unité s’enfuit à cause de la Terreur, elle disparaît du combat mais ne quitte pas votre troupe pour autant. Vous la retrouverez après le combat.",
					"iconeDone": true
				},
				{
					"id": "TutoRats",
					"group": 26,
					"text": "Invasion de rats !",
					"desc": "<img src=\"ui/tuto/rats1.jpg\"/> Tuez la Matriarche pour mettre fin au combat.\n\n<img src=\"ui/tuto/rats2.jpg\"/> À chaque fin de Round, la Matriarche va appeler de nombreux rats en renforts. \n\n<img src=\"ui/tuto/rats3.jpg\"/> Tentez de détruire le plus d’Excroissances pestiférées possible avant de tuer la Matriarche pour obtenir plus de récompenses !",
					"iconeDone": true
				},
				{
					"id": "TutoElite",
					"group": 26,
					"text": "Élite !",
					"desc": "<img src=\"ui/tuto/elite.jpg\"/> Les Élites sont des ennemis uniques qui jouent plusieurs fois dans le Round. Observez l’ordre du tour avec attention pour établir votre stratégie.",
					"iconeDone": true
				},
				{
					"id": "TutoImportantUnit",
					"group": 26,
					"text": "Personnage important !",
					"desc": "<img src=\"ui/tuto/accompany.jpg\"/> Certains personnages qui vous accompagnent sont importants. S'ils meurent, vous devrez relancer le combat. Protégez-les !",
					"iconeDone": true
				},
				{
					"id": "TutoHideout",
					"group": 26,
					"text": "Repaire !",
					"desc": "<img src=\"ui/tuto/hideout1.jpg\"/> Un Repaire est un lieu infesté d’ennemis. Plus il a de crânes actifs, plus il est dangereux.\n\n<img src=\"ui/tuto/hideout2.jpg\"/> Pour réduire le nombre d’ennemis du Repaire, cherchez des groupes avec un crâne dans la région. Les éliminer facilitera votre attaque finale.",
					"iconeDone": true
				},
				{
					"id": "TutoTired",
					"group": 26,
					"text": "Fatigue !",
					"desc": "<img src=\"ui/tuto/tired.jpg\"/> Votre groupe fatigue. Si vous continuez à marcher, vos compagnons risquent de mourir d’épuisement ! Vous devriez vous reposer.",
					"iconeDone": true
				},
				{
					"id": "TutoRest",
					"group": 26,
					"text": "Se reposer !",
					"desc": "<img src=\"ui/tuto/rest1.jpg\"/> Dans votre camp, vous pourrez lancer un Repos à l’aide du Feu de camp. Nourrissez et payez votre troupe pour éviter tout mécontentement !\n\n<img src=\"ui/tuto/rest2.jpg\"/> Se reposer permet de régénérer entièrement votre jauge de Fatigue, restaure des Points de Bravoure et fait avancer le temps.",
					"iconeDone": true
				},
				{
					"id": "TutoCombatFirst",
					"group": 26,
					"text": "Combat !",
					"desc": "<img src=\"ui/tuto/combatfirst1.jpg\"/> À votre tour, vous pouvez jouer n’importe quelle unité que vous n’avez pas encore jouée pendant le round.\n\n<img src=\"ui/tuto/combatfirst2.jpg\"/> Vous pouvez savoir quel ennemi va jouer ensuite. Établissez une stratégie !",
					"iconeDone": true
				},
				{
					"id": "TutoEngagement",
					"group": 26,
					"text": "Engagement !",
					"desc": "<img src=\"ui/tuto/engagement1.jpg\"/> Quand vous attaquez un ennemi libre au corps-à-corps, vous l’engagez.\n\n<img src=\"ui/tuto/engagement2.jpg\"/> Une unité engagée peut attaquer seulement son adversaire engagé et a plus de chances de subir des coups critiques. Profitez de cet avantage avec vos autres unités !\n\n<img src=\"ui/tuto/engagement3.jpg\"/> Une unité engagée expose son dos. Vous pouvez l’attaquer dans son dos pour obtenir un bonus pendant votre attaque.",
					"iconeDone": true
				},
				{
					"id": "TutoEncircling",
					"group": 26,
					"text": "Encerclement !",
					"desc": "<img src=\"ui/tuto/encircling.jpg\"/> Quand vous encerclez avec deux alliés une unité ennemie déjà engagée, vous obtenez un bonus !",
					"iconeDone": true
				},
				{
					"id": "TutoSupport",
					"group": 26,
					"text": "Support !",
					"desc": "<img src=\"ui/tuto/support.jpg\"/> Quand vous encerclez avec deux alliés une unité alliée déjà engagée, vous obtenez un bonus !",
					"iconeDone": true
				},
				{
					"id": "TutoDying",
					"group": 26,
					"desc": "<img src=\"ui/tuto/dying.jpg\"/> Une unité mourante est seulement capable de se déplacer. Si vous la soignez avant qu’elle ne subisse des dégâts, elle pourra combattre de nouveau. Dans le cas contraire, elle trépassera définitivement.",
					"text": "Unité mourante !",
					"iconeDone": true
				},
				{
					"id": "TutoRuin",
					"group": 26,
					"text": "Lumière !",
					"desc": "<img src=\"ui/tuto/ruin1.jpg\"/> Dans un Tombeau, vous aurez besoin de Lumière conférée par des torches pour explorer.\n\n<img src=\"ui/tuto/ruin2.jpg\"/> Si votre Lumière s'éteint totalement, votre troupe paniquera et ressortira du Tombeau.",
					"iconeDone": true
				},
				{
					"id": "TutoCapture",
					"group": 26,
					"text": "Capture !",
					"desc": "<img src=\"ui/tuto/capture1.jpg\"/> Quand il reste moins de la moitié de sa Santé à un ennemi, vous pouvez utiliser des Chaînes ou de la Corde pour le capturer !\n\n<img src=\"ui/tuto/capture2.jpg\"/> Placez une de vos unités à côté d'un ennemi engagé pour tenter de le capturer.",
					"iconeDone": true
				},
				{
					"id": "TutoPassiveFaction",
					"group": 26,
					"text": "Passifs de faction",
					"desc": "<img src=\"ui/tuto/factionpassive.jpg\"/> À ce niveau, les ennemis développent des stratégies de combat plus poussées et spécialisées !",
					"iconeDone": true
				},
				{
					"id": "TutoFlee",
					"group": 26,
					"text": "Mode Fuite !",
					"desc": "<img src=\"ui/tuto/modereach1.jpg\"/> En mode Fuite, vous devez atteindre la zone de fuite puis fuir avec chacun de vos personnages mais la Retraite est impossible !\n\n<img src=\"ui/tuto/modereach2.jpg\"/> Une fois dans la zone, utilisez la compétence Fuir.",
					"iconeDone": true
				},
				{
					"id": "TutoForsakenWorld",
					"group": 26,
					"text": "Village abandonné (exploration)",
					"desc": "<img src=\"ui/tuto/forsakenworld.jpg\"/> Constituez une troupe de reconnaissance pour explorer un village en faisant le moins de bruit possible pour ne pas attirer les pestiférés.",
					"iconeDone": true
				},
				{
					"id": "TutoForsakenFight",
					"group": 26,
					"text": "Village abandonné (combat)",
					"desc": "<img src=\"ui/tuto/forsakenfight1.jpg\"/> Bloquez les entrées pour éviter que les pestiférés n'entrent dans le bâtiment et ne vous submergent !\n\n<img src=\"ui/tuto/forsakenfight2.jpg\"/> Utilisez la compétence Trouver une issue pour charger la jauge et fuir le bâtiment !",
					"iconeDone": true
				},
				{
					"id": "TutoLute",
					"group": 26,
					"text": "Apprenez à jouer du luth !",
					"desc": "<img src=\"ui/tuto/lute1.jpg\"/> Appuyez sur [LMB] au bon moment sur les notes de chaque corde pour jouer correctement la partition.\n\n<img src=\"ui/tuto/lute2.jpg\"/> Votre récompense dépendra de la qualité de votre représentation !",
					"iconeDone": true
				},
				{
					"id": "TutoWoodCut",
					"group": 26,
					"desc": "<img src=\"ui/tuto/woodcut1.jpg\"/> Placez votre curseur au niveau du cercle de bûcheronnage.\n\n<img src=\"ui/tuto/woodcut2.jpg\"/> Appuyez sur [LMB] quand le cercle vert se superpose au cercle gris pour récupérer plus de bois !",
					"text": "Apprenez à couper du bois !",
					"iconeDone": true
				},
				{
					"id": "TutoSteal",
					"group": 26,
					"text": "Vol !",
					"desc": "Vous pouvez voler des objets avec [RMB].\nChaque vol augmente le soupçon de la Garde à votre encontre.",
					"iconeDone": true
				},
				{
					"id": "TutoStormkapp",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "TutoSport",
					"group": 26,
					"text": "Jouer à la Rouste",
					"desc": "<img src=\"ui/tuto/sport1.jpg\"/> Emparez-vous du ballon et portez-le jusqu'à la zone d'embut adverse pour marquer un point. \nLa partie compte 8 Rounds. Toutes les unités au sol se relèvent au début de chaque nouveau round.\nToute unité déjà jouée qui reçoit le ballon peut rejouer.",
					"iconeDone": true
				},
				{
					"id": "TutoUltimate",
					"group": 26,
					"text": "Coup d'éclat !",
					"desc": "Lorsqu'un compagnon atteint le niveau 12, il peut choisir une compétence \"Coup d'éclat\". Ces compétences vous permettront d'établir de nouvelles stratégies dans vos combats.\n\nAttention à bien les utiliser car leur utilisation est limitée. Votre troupe peut réaliser un seul Coup d'éclat par round. Chaque compagnon a la possibilité d'utiliser son Coup d'éclat qu'une seule fois par combat.",
					"iconeDone": true
				},
				{
					"id": "TutoDifficulty",
					"iconeDone": true,
					"group": 26,
					"text": "Changement de la difficulté !",
					"desc": "Nous avons réévalué la difficulté de Wartales lors de la dernière mise à jour !\n\nEn suivant vos retours, la difficulté a été augmentée de façon à ce que le jeu ne soit pas trop facile passé le niveau 5. Entre nouveaux ennemis et nouvelles compétences, les groupes adverses vous donneront du fil à retordre. Il est possible que vous deviez redoubler de prudence en combat et peut-être repenser votre composition d'équipe. Désormais, votre sens de la tactique et de la stratégie aura un impact encore plus décisif.\n\nVous pouvez dès à présent changer la difficulté du jeu en cours de jeu, dans les options. Si le combat vous apparaît trop difficile, n'hésitez pas à battre en Retraite et à réduire la difficulté le temps de trouver vos marques.\n\nPour plus de précisions, vous pouvez consulter le patchnote de la mise à jour qui recense tous les changements liés à la difficulté."
				},
				{
					"id": "symbol00",
					"iconeDone": true,
					"group": 27,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 17,
						"y": 2
					}
				},
				{
					"id": "symbol01",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 16,
						"y": 2
					},
					"group": 27
				},
				{
					"id": "symbol02",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 15,
						"y": 2
					},
					"group": 27
				},
				{
					"id": "symbol03",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 19,
						"y": 2
					},
					"group": 27
				},
				{
					"id": "symbol04",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 18,
						"y": 2
					},
					"group": 27
				},
				{
					"id": "symbol10",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 17,
						"y": 0
					},
					"group": 27
				},
				{
					"id": "symbol11",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 16,
						"y": 0
					},
					"group": 27
				},
				{
					"id": "symbol12",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 15,
						"y": 0
					},
					"group": 27
				},
				{
					"id": "symbol13",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 19,
						"y": 0
					},
					"group": 27
				},
				{
					"id": "symbol14",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 18,
						"y": 0
					},
					"group": 27
				},
				{
					"id": "symbol20",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 17,
						"y": 1
					},
					"group": 27,
					"text": ""
				},
				{
					"id": "symbol21",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 16,
						"y": 1
					},
					"group": 27
				},
				{
					"id": "symbol22",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 15,
						"y": 1
					},
					"group": 27
				},
				{
					"id": "symbol23",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 19,
						"y": 1
					},
					"group": 27
				},
				{
					"id": "symbol24",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_100PX.png",
						"size": 100,
						"x": 18,
						"y": 1
					},
					"group": 27
				}
			],
			"props": {
				"displayIcon": "icon",
				"hasGroup": true
			},
			"separators": [
				{
					"title": "Generic",
					"id": "None"
				},
				{
					"title": "Places",
					"id": "PlaceEnter"
				},
				{
					"title": "City",
					"id": "CityTavern"
				},
				{
					"title": "ForsakenVillage",
					"id": "ForsakenTavern"
				},
				{
					"title": "Dialogs",
					"id": "Setting"
				},
				{
					"level": 1,
					"id": "DlgConfession"
				},
				{
					"title": "RuinsAction",
					"id": "Climb"
				},
				{
					"title": "Gestion",
					"id": "Attack"
				},
				{
					"title": "Camp",
					"id": "TentRest"
				},
				{
					"id": "UnitStatusUnhappy"
				},
				{
					"title": "Resources",
					"id": "Gold"
				},
				{
					"title": "Paths",
					"id": "PathMenu"
				},
				{
					"title": "WorldInfo",
					"id": "TimeDay"
				},
				{
					"title": "Battle",
					"id": "Guard"
				},
				{
					"title": "Arena",
					"id": "GiveUp"
				},
				{
					"title": "GlobalUIButtons",
					"id": "Camp"
				},
				{
					"title": "VariousUIContent",
					"id": "RoamingBountyCollected"
				},
				{
					"title": "SysMessage",
					"id": "ConnectMsg"
				},
				{
					"title": "Craft",
					"id": "TierLevelCraft"
				},
				{
					"title": "Units",
					"id": "UnitChain"
				},
				{
					"id": "UnitStatusLightDamage"
				},
				{
					"title": "Cursors",
					"id": "CursorDefault"
				},
				{
					"title": "Capacities",
					"id": "Backstab"
				},
				{
					"title": "Notify",
					"id": "NotifySalary"
				},
				{
					"level": 1,
					"id": "NotifyDiscoverJob"
				},
				{
					"title": "Overlay",
					"id": "RoamingBounty"
				},
				{
					"title": "World Map 2D",
					"id": "PlayerMapPosition"
				},
				{
					"id": "PlaceHasDefenderIco"
				},
				{
					"id": "MapGoalIcon"
				},
				{
					"title": "Grimoire",
					"id": "GrimoireLearn"
				},
				{
					"title": "Compass",
					"id": "North"
				},
				{
					"title": "Window",
					"id": "WinHGroupFight"
				},
				{
					"title": "Tutorials",
					"id": "TutoForge"
				},
				{
					"title": "Symbols",
					"id": "symbol00"
				}
			]
		},
		{
			"name": "place",
			"columns": [
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "17",
					"name": "world"
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "1",
					"name": "notes",
					"opt": true
				}
			],
			"props": {
				"dataFiles": "content/*.prefab;content/*.l3d"
			},
			"separators": []
		},
		{
			"name": "place@world",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "10:IsCity,Hidden,IconNameHidden,PrecizeZ,IsRegion,NoRewardDiscover,DontCountCompletion,MainCity,NoInteractive,MinimapImportant",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "13",
					"name": "prefab",
					"opt": true
				},
				{
					"typeStr": "6:sound",
					"name": "soundWorld",
					"opt": true,
					"documentation": "Sound Object in worldmap"
				},
				{
					"typeStr": "6:icon",
					"name": "kind",
					"opt": true,
					"documentation": "used for icons + gameplay trigger"
				},
				{
					"typeStr": "6:sound",
					"name": "mood",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:icon",
					"name": "cityKind",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "place@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "8",
					"name": "entryCost",
					"opt": true
				},
				{
					"typeStr": "6:itemType",
					"name": "expensiveItems",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "arena",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:City,DeliverMission,NoMission,UnderGround",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "produces",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "respawnDays",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "population",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:place",
					"name": "enterInPlace",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "sport",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "worldmapZoom",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "hudOffset",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "place@props@entryCost",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "3",
					"name": "qty",
					"opt": true
				}
			]
		},
		{
			"name": "place@props@arena",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "minLevel",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "rules",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "place@props@produces",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "place@props@population",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "min"
				},
				{
					"typeStr": "3",
					"name": "max"
				}
			]
		},
		{
			"name": "place@props@sport",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "8",
					"name": "rules",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "place@props@sport@rules",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "desc",
					"kind": null
				}
			]
		},
		{
			"name": "place@props@arena@rules",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:skill",
					"name": "kind",
					"kind": null
				}
			]
		},
		{
			"name": "groupType",
			"columns": [
				{
					"typeStr": "14",
					"name": "icon"
				},
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "17",
					"name": "descs"
				}
			],
			"lines": [
				{
					"id": "None",
					"name": "Aucun",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"props": {},
					"descs": {}
				},
				{
					"id": "TestGroup",
					"name": "Test",
					"props": {
						"pattern": "TestFight"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "SportTeamGosenberg",
					"name": "Gosenberg Team",
					"props": {
						"pattern": "SportTeam"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "SportTeamLudern",
					"name": "Équipe de Ludern",
					"props": {
						"pattern": "SportTeamLudern"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "Human",
					"name": "",
					"props": {},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 9
					}
				},
				{
					"id": "Beast",
					"name": "Bête sauvage",
					"props": {},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 9
					}
				},
				{
					"id": "Outlaws",
					"name": "Hors-la-loi",
					"props": {
						"flags": 1
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 5
					}
				},
				{
					"id": "Civilians",
					"name": "",
					"props": {},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 2
					}
				},
				{
					"id": "Nobles",
					"name": "Noble",
					"props": {
						"flags": 1
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 9
					}
				},
				{
					"id": "Clerics",
					"name": "Clerc",
					"props": {
						"flags": 1
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 9
					}
				},
				{
					"id": "Merchants",
					"name": "Marchands",
					"props": {
						"pattern": "Merchants",
						"parentCategory": "Companions",
						"flags": 1
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 7,
						"y": 1
					}
				},
				{
					"id": "WeaponsMerchants",
					"name": "Marchands d'armes",
					"props": {
						"parentCategory": "Merchants",
						"pattern": "Merchants"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 5
					}
				},
				{
					"id": "Bandits",
					"name": "Bandits",
					"props": {
						"pattern": "Outlaws",
						"parentCategory": "Outlaws",
						"aggroTargets": [
							{
								"type": "Civilians"
							}
						],
						"loot": [
							{
								"t": "Outlaws"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 5
					},
					"descs": {
						"defender": "Une bande de voleurs sans foi ni loi se terre à cet endroit."
					}
				},
				{
					"id": "EscapedPrisoners",
					"name": "Prisonniers évadés",
					"props": {
						"pattern": "Outlaws",
						"parentCategory": "Bandits"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 5
					}
				},
				{
					"id": "Deserters",
					"name": "Déserteurs",
					"props": {
						"pattern": "Deserters",
						"parentCategory": "Outlaws",
						"aggroTargets": [
							{
								"type": "Civilians"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 4
					},
					"descs": {
						"defender": "D'anciens membres de l'armée régulière ont élu domicile en ces lieux."
					}
				},
				{
					"id": "Companions",
					"name": "Fraternité",
					"props": {
						"pattern": "Companions",
						"aggroTargets": [
							{
								"type": "Outlaws"
							}
						],
						"flags": 3
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 3
					}
				},
				{
					"id": "EdoranRefugees",
					"name": "Réfugiés d'Edoran",
					"props": {
						"parentCategory": "Civilians",
						"pattern": "Civilians",
						"loot": [
							{
								"t": "HumanBaseEdoran"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 7,
						"y": 4
					}
				},
				{
					"id": "EdoranRefugeesFighters",
					"name": "Réfugiés d'Edoran",
					"props": {
						"pattern": "Outlaws",
						"parentCategory": "Outlaws",
						"aggroTargets": [
							{
								"type": "Guard"
							},
							{
								"type": "TiltrenVillagers"
							}
						],
						"loot": [
							{
								"t": "Outlaws"
							}
						],
						"armorColor": 4142895
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 7,
						"y": 4
					}
				},
				{
					"id": "TiltrenVillagers",
					"name": "Villageois de Tiltrën",
					"props": {
						"parentCategory": "Civilians",
						"pattern": "Guard",
						"loot": [
							{
								"t": "HumanBaseEdoran"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 2
					}
				},
				{
					"id": "EdoranVillagers",
					"name": "Villageois d'Edoran",
					"props": {
						"pattern": "Civilians",
						"aggroTargets": [
							{
								"type": "EdoranRefugeesFighters"
							}
						],
						"parentCategory": "Civilians",
						"loot": [
							{
								"t": "HumanBaseEdoran"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 2
					}
				},
				{
					"id": "GosenbergVillagers",
					"name": "Villageois de Gosenberg",
					"props": {
						"pattern": "Civilians",
						"parentCategory": "Civilians",
						"loot": [
							{
								"t": "HumanBaseGosenberg"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 2
					}
				},
				{
					"id": "GosenbergCitizens",
					"name": "Citoyens de Gosenberg",
					"props": {
						"pattern": "Civilians",
						"parentCategory": "Civilians",
						"loot": [
							{
								"t": "HumanBaseGosenberg"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 2
					}
				},
				{
					"id": "AlazarVillagers",
					"name": "Villageois d'Alazar",
					"props": {
						"pattern": "Civilians",
						"parentCategory": "Civilians",
						"loot": [
							{
								"t": "HumanBaseAlazar"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 2
					}
				},
				{
					"id": "RuinsCreatures",
					"name": "Créatures des tombeaux",
					"props": {
						"pattern": "Ruins",
						"loot": [
							{
								"t": "RuinsBase"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 4
					}
				},
				{
					"id": "SnowCrawlers",
					"name": "Rampant des neiges",
					"props": {
						"pattern": "SnowCrawlers",
						"loot": [
							{
								"t": "RuinsBase"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 8
					}
				},
				{
					"id": "Bears",
					"name": "Ours",
					"props": {
						"pattern": "Bears",
						"parentCategory": "Beast",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"loot": [
							{
								"t": "Bears"
							},
							{
								"t": "AnimalFangs"
							},
							{
								"t": "AnimalBase"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 5
					}
				},
				{
					"id": "WhiteBears",
					"name": "Ours blancs",
					"props": {
						"pattern": "WhiteBears",
						"parentCategory": "Beast",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"loot": [
							{
								"t": "Bears"
							},
							{
								"t": "AnimalFangs"
							},
							{
								"t": "AnimalBase"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 7,
						"y": 7
					}
				},
				{
					"id": "Mosquitos",
					"name": "Moustiques",
					"props": {
						"pattern": "Mosquitos",
						"parentCategory": "Beast",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"loot": [
							{
								"t": "Mosquitoes"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 5
					}
				},
				{
					"id": "Crocoporks",
					"name": "Crocoporks",
					"props": {
						"pattern": "Crocoporks",
						"parentCategory": "Beast",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"loot": [
							{
								"t": "Crocoporks"
							},
							{
								"t": "AnimalFangs"
							},
							{
								"t": "AnimalBase"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 5
					}
				},
				{
					"id": "Wolves",
					"name": "Loups",
					"props": {
						"pattern": "Wolves",
						"parentCategory": "Beast",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"loot": [
							{
								"t": "Wolves"
							},
							{
								"t": "AnimalFangs"
							},
							{
								"t": "AnimalBase"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 0,
						"y": 3
					},
					"descs": {}
				},
				{
					"id": "WhiteWolves",
					"name": "Loups polaires",
					"props": {
						"pattern": "SnowWolves",
						"loot": [
							{
								"t": "Wolves"
							},
							{
								"t": "AnimalFangs"
							},
							{
								"t": "AnimalBase"
							}
						],
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"parentCategory": "Beast"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 0,
						"y": 3
					}
				},
				{
					"id": "Boars",
					"name": "Sangliers",
					"props": {
						"pattern": "Boars",
						"parentCategory": "Beast",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"loot": [
							{
								"t": "Boars"
							},
							{
								"t": "AnimalFangs"
							},
							{
								"t": "AnimalBase"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 1,
						"y": 3
					}
				},
				{
					"id": "Tracked",
					"name": "Traqués",
					"props": {},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 1
					}
				},
				{
					"id": "Wanted",
					"name": "Recherchés",
					"props": {
						"parentCategory": "Outlaws",
						"loot": [
							{
								"t": "Outlaws"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					}
				},
				{
					"id": "Legion",
					"name": "La Légion",
					"props": {
						"pattern": "Legion",
						"aggroTargets": [
							{
								"type": "Outlaws"
							}
						],
						"flags": 1,
						"loot": [
							{
								"t": "HumanBaseEdoran"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 3
					}
				},
				{
					"id": "LordArmyLaheart",
					"name": "Armée du Seigneur Laheart",
					"props": {
						"pattern": "Legion",
						"aggroTargets": [
							{
								"type": "LordArmyVernalis"
							}
						],
						"armorColor": 2512784,
						"loot": [
							{
								"t": "HumanBaseEdoran"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 2
					}
				},
				{
					"id": "LordArmyVernalis",
					"name": "Armée du Seigneur Vernalis",
					"props": {
						"pattern": "Legion",
						"aggroTargets": [
							{
								"type": "LordArmyLaheart"
							}
						],
						"armorColor": 3561015,
						"loot": [
							{
								"t": "HumanBaseEdoran"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 3
					}
				},
				{
					"id": "Guard",
					"name": "La Garde",
					"props": {
						"pattern": "Guard",
						"aggroTargets": [
							{
								"type": "Outlaws"
							}
						],
						"flags": 3,
						"loot": [
							{
								"t": "HumanBase"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 1
					}
				},
				{
					"id": "GuardHaragBis",
					"name": "La Garde",
					"props": {
						"pattern": "Trackers",
						"parentCategory": "Guard",
						"loot": [
							{
								"t": "HumanBaseHarag"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 1
					}
				},
				{
					"id": "GuardHarag",
					"name": "La Garde",
					"props": {
						"pattern": "Trackers",
						"aggroTargets": [
							{
								"type": "Outlaws"
							}
						],
						"flags": 3,
						"parentCategory": "Guard",
						"loot": [
							{
								"t": "HumanBaseHarag"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 1
					}
				},
				{
					"id": "GuardGosenberg",
					"name": "La Garde",
					"props": {
						"pattern": "Guard",
						"aggroTargets": [
							{
								"type": "Outlaws"
							}
						],
						"parentCategory": "Guard",
						"loot": [
							{
								"t": "HumanBaseGosenberg"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 1
					}
				},
				{
					"id": "BourgomasterArmy",
					"name": "Armée de la Bourgmestre",
					"props": {
						"pattern": "Guard",
						"aggroTargets": [
							{
								"type": "Outlaws"
							}
						],
						"armorColor": 0,
						"loot": [
							{
								"t": "HumanBaseEdoran"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 1,
						"y": 5
					}
				},
				{
					"id": "PurifiersGuild",
					"name": "Guilde des Purificateurs",
					"props": {
						"pattern": "Purifiers",
						"parentCategory": "AlazarSoldiers",
						"loot": [
							{
								"t": "HumanBaseAlazar"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 0,
						"y": 5
					}
				},
				{
					"id": "InquisitionArmy",
					"name": "L'Inquisition",
					"props": {
						"pattern": "Inquisition",
						"aggroTargets": [
							{
								"type": "Outlaws"
							}
						],
						"loot": [
							{
								"t": "HumanBaseEdoran"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 4
					}
				},
				{
					"id": "TrackersGuild",
					"name": "Guilde des Traqueurs",
					"props": {
						"pattern": "Trackers",
						"loot": [
							{
								"t": "HumanBaseHarag"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 1
					}
				},
				{
					"id": "Champions",
					"name": "Élite",
					"props": {
						"pattern": "Champion"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 3
					}
				},
				{
					"id": "RatInvasion",
					"name": "Invasion de rats",
					"props": {
						"pattern": "RatInvasion",
						"parentCategory": "Beast",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"loot": [
							{
								"t": "AnimalFangs"
							}
						]
					},
					"descs": {
						"defender": "Vos pieds s'enfoncent dans une sorte de boue répugnante. Le sol tremble..."
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 3
					}
				},
				{
					"id": "PlagueriddenArmy",
					"name": "Pestiférés",
					"props": {
						"pattern": "Horde",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"parentCategory": "Bandits",
						"loot": [
							{
								"t": "Plagueridden"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 4
					}
				},
				{
					"id": "Plagueriddens",
					"name": "Pestiférés",
					"props": {
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"parentCategory": "Bandits",
						"loot": [
							{
								"t": "Plagueridden"
							}
						],
						"pattern": "Plagueriddens"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 4
					}
				},
				{
					"id": "GhostPack",
					"name": "Meute Fantôme",
					"props": {
						"pattern": "GhostPack",
						"parentCategory": "Beast",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"loot": [
							{
								"t": "GhostPackBase"
							},
							{
								"t": "AnimalFangs"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 3
					}
				},
				{
					"id": "GhostPackNoFog",
					"name": "Meute Fantôme",
					"props": {
						"pattern": "GhostPack",
						"parentCategory": "Beast",
						"aggroTargets": [
							{
								"type": "Human"
							}
						],
						"loot": [
							{
								"t": "GhostPackBase"
							},
							{
								"t": "AnimalFangs"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 3
					}
				},
				{
					"id": "UnknownSoldiers",
					"name": "Soldats inconnus",
					"props": {
						"pattern": "Alazar",
						"loot": [
							{
								"t": "HumanBaseAlazar"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 1,
						"y": 5
					}
				},
				{
					"id": "AlazarSoldiers",
					"name": "Soldats d'Alazar",
					"props": {
						"pattern": "Alazar",
						"loot": [
							{
								"t": "HumanBaseAlazar"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 7,
						"y": 5
					}
				},
				{
					"id": "MoleRats",
					"name": "Rats-Taupe",
					"props": {
						"pattern": "MoleRats",
						"parentCategory": "Beast",
						"loot": [
							{
								"t": "Molerats"
							},
							{
								"t": "AnimalFangs"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 3
					}
				},
				{
					"id": "BeastChildren",
					"name": "Les Enfants de la Bête",
					"props": {
						"pattern": "Outlaws",
						"parentCategory": "Outlaws",
						"loot": [
							{
								"t": "Outlaws"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 1
					}
				},
				{
					"id": "BlackCaravan",
					"name": "Caravane Noire",
					"props": {
						"pattern": "Outlaws",
						"parentCategory": "Outlaws",
						"loot": [
							{
								"t": "HumanBaseEdoran"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 8,
						"y": 5
					}
				},
				{
					"id": "HaragHunter",
					"name": "Chasseurs d'Harag",
					"props": {
						"pattern": "Trackers",
						"loot": [
							{
								"t": "HumanBaseHarag"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 1,
						"y": 5
					}
				},
				{
					"id": "BelerionSmugglers",
					"name": "Contrebandiers de Bélérion",
					"props": {
						"pattern": "Outlaws",
						"parentCategory": "Outlaws",
						"loot": [
							{
								"t": "Outlaws"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 1,
						"y": 1
					}
				},
				{
					"id": "FugitiveSlaves",
					"name": "Esclaves en fuite",
					"props": {
						"pattern": "Outlaws",
						"loot": [
							{
								"t": "HumanBaseHarag"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 1
					}
				},
				{
					"id": "Rook",
					"name": "Freux",
					"props": {
						"pattern": "Outlaws",
						"loot": [
							{
								"t": "HumanBaseGosenberg"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 4
					}
				},
				{
					"id": "Tumblers",
					"name": "Jongleurs",
					"props": {
						"pattern": "Tumblers",
						"loot": [
							{
								"t": "HumanBaseGosenberg"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 2,
						"y": 0
					}
				},
				{
					"id": "Brigands",
					"name": "Maraudeurs",
					"props": {
						"pattern": "Brigands",
						"parentCategory": "Outlaws"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 5
					}
				},
				{
					"id": "FarmAnimal",
					"name": "Animaux domestiques",
					"props": {
						"pattern": "Boars"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 0,
						"y": 6
					}
				},
				{
					"id": "Mercenary",
					"name": "Mercenaires",
					"props": {
						"pattern": "Outlaws",
						"parentCategory": "Outlaws",
						"loot": [
							{
								"t": "Outlaws"
							}
						]
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 6
					}
				},
				{
					"id": "Ponies",
					"name": "Poneys",
					"props": {
						"pattern": "Ponies"
					},
					"descs": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 7
					}
				}
			],
			"props": {
				"displayIcon": "icon"
			},
			"separators": [
				{
					"title": "Categories",
					"id": "Human"
				},
				{
					"title": "Types",
					"id": "Merchants"
				}
			]
		},
		{
			"name": "groupType@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:unitPattern",
					"name": "pattern",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "loot",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "aggroTargets",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:groupType",
					"name": "parentCategory",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "11",
					"name": "armorColor",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:IsCategory,EasilyTakeHostage",
					"name": "flags",
					"opt": true
				}
			]
		},
		{
			"name": "groupType@descs",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "defender",
					"kind": "localizable",
					"opt": true
				}
			]
		},
		{
			"name": "groupType@props@aggroTargets",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:groupType",
					"name": "type",
					"kind": null
				}
			]
		},
		{
			"name": "groupType@props@loot",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:loot",
					"name": "t",
					"kind": null
				}
			]
		},
		{
			"name": "group",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"scope": null
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "17",
					"name": "units"
				},
				{
					"typeStr": "17",
					"name": "movement",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "notes",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "battleRules",
					"opt": true
				}
			],
			"props": {
				"dataFiles": "content/*.prefab;content/*.l3d"
			},
			"separators": []
		},
		{
			"name": "element",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"scope": null
				},
				{
					"typeStr": "17",
					"name": "npc",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "items",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "dialog",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "script",
					"opt": true,
					"kind": "script"
				},
				{
					"typeStr": "17",
					"name": "props",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "notes",
					"opt": true
				}
			],
			"props": {
				"dataFiles": "content/*.prefab;content/*.l3d;prefabs/specials/*.prefab;prefabs/specials/*.l3d"
			},
			"separators": []
		},
		{
			"name": "element@npc",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:unitClass",
					"name": "unit",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "minLevel",
					"opt": true
				},
				{
					"typeStr": "5:Normal,Hard,Easy,VeryHard,VeryEasy",
					"name": "difficulty",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "name",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "6:groupType",
					"name": "type",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "leader",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "recruitCost",
					"opt": true
				},
				{
					"typeStr": "10:WithEquipment,NoEquipment,Pestiferous,BadTraits,LockName,DontProtectSteal,AccompanyCanDie,NoAnimalGen,HideWeapons,IsCapturable,NoInspect,NotSentient,NotAlly,NoName,SystemicUseSkinData",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "5:RecruitSlot,EmptySlot,MultiRecruit,Dialog,Cat",
					"name": "special",
					"opt": true
				},
				{
					"typeStr": "6:unitPattern",
					"name": "pattern",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:item",
					"name": "leftHand",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:element",
					"name": "reference",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:trait",
					"name": "trait",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:Novice,Apprentice,Compagnon,Master",
					"name": "traitLevel",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "equipment",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "skills",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:region",
					"name": "region",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "element@npc@recruitCost",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "3",
					"name": "qty",
					"opt": true
				}
			]
		},
		{
			"name": "element@npc@equipment",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item",
					"kind": null
				}
			]
		},
		{
			"name": "element@npc@skills",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:skill",
					"name": "skill",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "minLevel",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "element@items",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "5:Search,Trade,Steal,Gather,ActivityGather,Trigger,Analyze,Piton,Sign,CounterChest,Chest",
					"name": "type"
				},
				{
					"typeStr": "1",
					"name": "desc",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "8",
					"name": "content"
				},
				{
					"typeStr": "6:item",
					"name": "unlockWith",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "unlockDifficulty",
					"opt": true
				},
				{
					"typeStr": "5:Default,Chest,Barrel,Pot,Crate,Haystack,Bag,Woodpile,Body",
					"name": "container",
					"opt": true
				},
				{
					"typeStr": "10:Stolen,AcceptStolen,IsWorldMapPickup,ForcedSteal",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "6:item",
					"name": "currency",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "currencyFactor",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:itemType",
					"name": "currencyType",
					"opt": true
				},
				{
					"typeStr": "5:Slow,Normal,Fast",
					"name": "refill",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "wantedFactor",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"scope": 1,
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "text",
					"kind": "localizable"
				},
				{
					"typeStr": "8",
					"name": "choices"
				},
				{
					"typeStr": "1",
					"name": "notes",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "props"
				}
			]
		},
		{
			"name": "element@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "2",
					"name": "hidden",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "16",
					"name": "vars",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "disabled",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "important",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "goals",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:element",
					"name": "second",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:activity",
					"name": "activity",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "preciseZ",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "noInteractive",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "value",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:element",
					"name": "copyScriptFrom",
					"opt": true
				},
				{
					"typeStr": "6:element",
					"name": "copyDialogFrom",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:TopCamera,NotRemoved,IsSetting",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "13",
					"name": "fx",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "linkedPlace",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "traitRequire",
					"opt": true
				},
				{
					"typeStr": "5:Blacksmith,Common,Noble,Peasant,Priest,Prostitute,Scholar,TavernKeeper,Townsman,Trader",
					"name": "portraitAnimation",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:GarnisonManager,EyeSecret",
					"name": "elementType",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "directionHidden",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "miniGamePrefab",
					"opt": true
				}
			]
		},
		{
			"name": "element@props@goals",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "title",
					"kind": "localizable"
				},
				{
					"typeStr": "17",
					"name": "props",
					"kind": null
				}
			]
		},
		{
			"name": "element@props@traitRequire",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:trait",
					"name": "trait",
					"kind": null
				},
				{
					"typeStr": "5:Novice,Apprentice,Compagnon,Master",
					"name": "level",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "element@props@goals@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "2",
					"name": "hidden",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "unknown",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "setting",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "helpTip",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "8",
					"name": "helpTips",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "helpTipMission",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:icon",
					"name": "path",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "alwaysVisible",
					"opt": true
				}
			]
		},
		{
			"name": "element@props@goals@props@helpTips",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "text",
					"kind": "localizable"
				}
			]
		},
		{
			"name": "element@dialog@choices",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:icon",
					"name": "verb"
				},
				{
					"typeStr": "6:element@dialog",
					"name": "target",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "17",
					"name": "gains",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "2",
					"name": "once",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "gains",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "gainsHide",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "gainsRepeat",
					"opt": true
				},
				{
					"typeStr": "6:element",
					"name": "who",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "noLeave",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "narrator",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:sound",
					"name": "playSound",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:loot",
					"name": "gainsLoot",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "gainsMission",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "localizeNotes",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "8",
					"name": "gainsBattle",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:trait",
					"name": "personality",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:BadRelationWithTarget,HasPony,IgnoreVoicing,MultipleVoices",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "6:trait",
					"name": "noHasTrait",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:Start,Middle,End",
					"name": "soundTiming",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "voiceWho",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "voiceId",
					"opt": true,
					"kind": null,
					"documentation": "Used in code to linked a Voice ID to a dialog"
				},
				{
					"typeStr": "2",
					"name": "randChoices",
					"opt": true
				}
			]
		},
		{
			"name": "element@dialog@props@gains",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "3",
					"name": "count",
					"opt": true
				}
			]
		},
		{
			"name": "element@dialog@props@gainsBattle",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "count",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@props@voiceWho",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:element",
					"name": "element",
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@choices@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "17",
					"name": "itemCost",
					"opt": true
				},
				{
					"typeStr": "5:Fight,RepairArmors,PayStolenItems,PayWantedFine,GiveBackStolenItems,AccuseCompagnon,Recruit,OpenMissionBoard,Inspect,Accompany,Follow,HealInjuries,UnlockClass,Rest,DeliverMission,UnitLeaves,TattooUnit,Sing,Capture,Script,Sport,SacrificeCompagnon,Parley,BuildComptoir,Travel",
					"name": "specialAction",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "itemCostList",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "tipText",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "2",
					"name": "needConfirm",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "hideIfDisabled",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "wantedPreview",
					"opt": true
				},
				{
					"typeStr": "6:unitClass",
					"name": "unit",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "customTxt",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "2",
					"name": "hideWantedPreview",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "disableReason",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "6:trait",
					"name": "personality",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:sound",
					"name": "sfx",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "noPersonalities",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:trait",
					"name": "noHasTrait",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:HasPony,Everyone",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "disable",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "0",
					"name": "id",
					"opt": true,
					"scope": 3
				}
			]
		},
		{
			"name": "element@dialog@choices@gains",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "8",
					"name": "item",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "status",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "trait",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "bonus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "attributePoint",
					"opt": true,
					"documentation": "- insert a row for each point to attribute\n- keep bonus empty for random bonus, else choose attribute bonus"
				},
				{
					"typeStr": "8",
					"name": "relation",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "XP",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "tiredness",
					"opt": true,
					"display": 1
				},
				{
					"typeStr": "3",
					"name": "wanted",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "injury",
					"opt": true,
					"documentation": "keep 'inf' empty for random (classic) injury"
				},
				{
					"typeStr": "8",
					"name": "jobXP",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:LeaveGroup,ExcludeTarget,KillTarget,EatPony,BecomePestiferous,Surrender",
					"name": "specialAction",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "skipConfession",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@choices@gains@item",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "inf",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "qty",
					"opt": true
				}
			]
		},
		{
			"name": "element@dialog@choices@gains@status",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:status",
					"name": "inf",
					"kind": null
				},
				{
					"typeStr": "5:Self,Target",
					"name": "target",
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@choices@gains@trait",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:trait",
					"name": "inf",
					"kind": null
				},
				{
					"typeStr": "5:Self,Target",
					"name": "target",
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@choices@gains@bonus",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:bonus",
					"name": "inf",
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@choices@gains@attributePoint",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:attribute",
					"name": "bonus",
					"opt": true
				},
				{
					"typeStr": "5:Self,Target",
					"name": "target",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "strengthOrDexterity",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@choices@gains@relation",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "qty",
					"documentation": "if 0 -> random +1/-1 value will be set"
				},
				{
					"typeStr": "5:Target,RandomCompanion,Others,OthersPercent,BestFriends",
					"name": "target"
				}
			]
		},
		{
			"name": "element@dialog@choices@gains@XP",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "qty"
				},
				{
					"typeStr": "5:Self,Target,OthersPercent",
					"name": "target"
				},
				{
					"typeStr": "2",
					"name": "isPercentValue",
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@choices@gains@injury",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:status",
					"name": "inf",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:Self,Target,RandomCompanion",
					"name": "target"
				}
			]
		},
		{
			"name": "element@dialog@choices@gains@jobXP",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "qty"
				},
				{
					"typeStr": "2",
					"name": "isPercentValue",
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@choices@props@itemCost",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "3",
					"name": "qty"
				},
				{
					"typeStr": "2",
					"name": "orSameType",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isRequirement",
					"opt": true
				}
			]
		},
		{
			"name": "element@dialog@choices@props@noPersonalities",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:trait",
					"name": "id",
					"kind": null
				}
			]
		},
		{
			"name": "element@dialog@choices@props@itemCostList",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "3",
					"name": "qty",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:OrSameType",
					"name": "flags",
					"opt": true
				}
			]
		},
		{
			"name": "element@items@content",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item",
					"opt": true
				},
				{
					"typeStr": "6:loot",
					"name": "loot",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "count",
					"opt": true
				},
				{
					"typeStr": "5:Bad,Normal,Good,Excellent",
					"name": "rarity",
					"opt": true
				}
			]
		},
		{
			"name": "group@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "bounty",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "extraLoot",
					"opt": true
				},
				{
					"typeStr": "6:groupType",
					"name": "type"
				},
				{
					"typeStr": "1",
					"name": "desc",
					"kind": "localizable",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "loot",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "name",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "6:place",
					"name": "hideout",
					"opt": true
				},
				{
					"typeStr": "5:Roaming,Bounty,Defender,Fighting",
					"name": "mode",
					"opt": true
				},
				{
					"typeStr": "13",
					"name": "dialogScene",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:FightingGroups,IdleEngaged,Default",
					"name": "dialogStaging",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "bountyDesc",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "10:Friendly,DisableAttack,DebugGen,DesignedMission,Tracked,JustTalking,NoMission,NoFreeing,WeeklyBounty,NotFriendly",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "6:group",
					"name": "dialogGroup",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "hasExtraVision",
					"opt": true,
					"documentation": "can see stealth player"
				},
				{
					"typeStr": "2",
					"name": "noOutline",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "preventMission",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "cancelCost",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "event",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "weeklyBounties",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:sound",
					"name": "soundWorld",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "timeBehaviour",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:place",
					"name": "linkedPlace",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "group@props@extraLoot",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "3",
					"name": "count",
					"opt": true
				}
			]
		},
		{
			"name": "group@props@loot",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:loot",
					"name": "t"
				}
			]
		},
		{
			"name": "group@props@cancelCost",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:loot",
					"name": "items"
				}
			]
		},
		{
			"name": "group@props@weeklyBounties",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:region",
					"name": "region"
				}
			]
		},
		{
			"name": "group@props@timeBehaviour",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "begin"
				},
				{
					"typeStr": "3",
					"name": "end"
				},
				{
					"typeStr": "5:Roaming,Bounty,Defender,Fighting",
					"name": "mode",
					"opt": true
				},
				{
					"typeStr": "6:place",
					"name": "goToPlace",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "visible",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "remove",
					"opt": true
				}
			]
		},
		{
			"name": "group@movement",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "4",
					"name": "range"
				},
				{
					"typeStr": "4",
					"name": "aggroRange",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "huntsPlayer",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "armyFormation",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "aggroSpeed",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "stayInForest",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "aggroOthers",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "fixedAggroRange",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "group@battleRules",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "5:Deathmatch,Reach,RatInvasion,Arena,Ruins,GhostPack,War,ForsakenVillage,Sport,Escape",
					"name": "mode",
					"opt": true
				},
				{
					"typeStr": "10:NoDomination,Renfort,NoMorale,NoTrap,NoLetal,Capture,ObjectiveToWin,NoRetreat,NoInjury,NoDeath,HideMorale",
					"name": "modifiers",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "renforts",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "battleMap",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "group@battleRules@renforts",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:unitPattern",
					"name": "unitPattern",
					"kind": null
				},
				{
					"typeStr": "5:Foe,Ally,Player,Neutral",
					"name": "side"
				},
				{
					"typeStr": "4",
					"name": "count"
				},
				{
					"typeStr": "2",
					"name": "multiplyPerFoeUnits"
				},
				{
					"typeStr": "5:All,Even,Odd",
					"name": "rounds",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "roundMin",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "roundMax",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "group@units",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "8",
					"name": "classes",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "difficulty",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "minCount",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "maxCount",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:unitPattern",
					"name": "pattern",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "follower",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "fixedDifficulty",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "fixedAbsoluteDifficulty",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "fixedPower",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "scaleDifficulty",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "maxLevel",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "group@units@classes",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:unitClass",
					"name": "c"
				}
			]
		},
		{
			"name": "group@units@follower",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "13",
					"name": "model"
				},
				{
					"typeStr": "4",
					"name": "offset",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "followTerrain",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "attachedModel",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "attachedOffset",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "region",
			"columns": [
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "kingdom",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "17",
					"name": "setting",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "next",
					"kind": null
				}
			],
			"lines": [
				{
					"id": "Worldwide",
					"name": "Monde",
					"props": {
						"noCompletion": true,
						"cantStartFromThere": true
					},
					"kingdom": "Monde",
					"next": []
				},
				{
					"id": "Alazar_Aneding",
					"name": "Comté de Tiltrën",
					"props": {
						"meteo": {
							"storm": 0.5,
							"maxRainDaysInARow": 1.5,
							"minRainDaysInARow": 0.5,
							"rainDaysPerMonth": 6,
							"morningFog": 0.5,
							"marshland": false
						},
						"loading": "ui/loadingScreen/keyart.jpg",
						"kingdom": 0,
						"counters": {
							"localTeamDefeated": "SportTeamDefeated_S1"
						}
					},
					"setting": {
						"title": "Le Destin de Tiltrën",
						"icon": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 0,
							"y": 4
						},
						"desc": "Des réfugiés ont fui la région voisine du royaume d'Edoran suite à des troubles. Dans le comté de Titlrën, leur arrivée provoque des tensions."
					},
					"kingdom": "Territoire indépendant",
					"next": [
						{
							"region": "Edoran_1",
							"travelTime": 26
						},
						{
							"region": "Gosenberg_1",
							"travelTime": 20
						}
					]
				},
				{
					"id": "Edoran_1",
					"name": "Comté d'Arthes",
					"props": {
						"meteo": {
							"morningFog": 0.5,
							"storm": 0.5,
							"rainDaysPerMonth": 6,
							"maxRainDaysInARow": 1.5,
							"minRainDaysInARow": 0.5,
							"marshland": false
						},
						"minimap": {
							"titleOffsetY": -100
						},
						"kingdom": 2,
						"counters": {
							"localTeamDefeated": "SportTeamDefeated_E1"
						}
					},
					"setting": {
						"title": "Le Destin d'Arthes",
						"icon": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 13,
							"y": 6
						},
						"desc": "La guerre qui oppose le Comte Laheart à son ancien vassal Vernalis est en train de ravager la région."
					},
					"kingdom": "Royaume d'Edoran",
					"next": []
				},
				{
					"id": "Gosenberg_1",
					"name": "Province de Vertruse",
					"props": {
						"biome": "gosenberg",
						"meteo": {
							"morningFog": 0.5,
							"rainDaysPerMonth": 6,
							"storm": 0.5,
							"maxRainDaysInARow": 1.5,
							"minRainDaysInARow": 0.5,
							"marshland": false
						},
						"minimap": {
							"titleOffsetY": -80
						},
						"kingdom": 1,
						"counters": {
							"localTeamDefeated": "SportTeamDefeated_G1"
						}
					},
					"kingdom": "Royaume de Gosenberg",
					"setting": {
						"title": "Le Destin de Vertruse",
						"icon": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 14,
							"y": 6
						},
						"desc": "Une maladie détruit les vignes de Vertruse."
					},
					"next": [
						{
							"region": "Harag_1",
							"travelTime": 30
						},
						{
							"region": "Gosenberg_2",
							"travelTime": 30
						},
						{
							"region": "Alazar_1",
							"travelTime": 36
						}
					]
				},
				{
					"id": "Harag_1",
					"name": "Région de Ludern",
					"props": {
						"minDistance": 2,
						"meteo": {
							"morningFog": 0.5,
							"marshland": true,
							"rainDaysPerMonth": 6,
							"storm": 0.7,
							"maxRainDaysInARow": 1.5,
							"minRainDaysInARow": 0.5
						},
						"cantStartFromThere": true,
						"biome": "harag",
						"loading": "ui/loadingScreen/keyart_Harag.jpg",
						"kingdom": 3,
						"counters": {
							"localTeamDefeated": "SportTeamDefeated_H1"
						}
					},
					"kingdom": "Royaume d'Harag",
					"setting": {
						"title": "Le Destin de Ludern",
						"icon": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 14,
							"y": 7
						},
						"desc": "Malgré les interdits qui les frappent, les érudits d’Alazar auraient trouvé le moyen de s’introduire à Ludern. Qui sait ce qu’ils préparent ?"
					},
					"next": [
						{
							"region": "InterRegion_1",
							"travelTime": 8
						}
					]
				},
				{
					"id": "InterRegion_1",
					"name": "Mont Altis",
					"props": {
						"noCompletion": true,
						"meteo": {
							"rainDaysPerMonth": 6,
							"storm": 0.5,
							"maxRainDaysInARow": 1.5,
							"minRainDaysInARow": 0.5,
							"morningFog": 0.5,
							"marshland": false
						},
						"sameDifficultyAs": "Alazar_Aneding",
						"cantStartFromThere": true,
						"kingdom": 0
					},
					"next": [],
					"kingdom": "Territoire indépendant",
					"setting": {
						"title": "None",
						"icon": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 0,
							"y": 4
						},
						"desc": "Rien ne se passe ici."
					}
				},
				{
					"id": "Gosenberg_2",
					"name": "Province de Grinmeer",
					"props": {
						"meteo": {
							"rainDaysPerMonth": 6,
							"storm": 0.5,
							"maxRainDaysInARow": 1.5,
							"minRainDaysInARow": 0.5,
							"morningFog": 0.5,
							"marshland": false
						},
						"cantStartFromThere": true,
						"biome": "gosenberg",
						"loading": "ui/loadingScreen/keyart_Gosenberg.jpg",
						"kingdom": 1,
						"counters": {
							"localTeamDefeated": "SportTeamDefeated_G2"
						}
					},
					"next": [],
					"kingdom": "Royaume de Gosenberg",
					"setting": {
						"title": "Le Destin de Grinmeer",
						"icon": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 16,
							"x": 42,
							"y": 24,
							"width": 3,
							"height": 3
						},
						"desc": "La mort de la <narrator>Négociante Hoevendorp</narrator> fait souffler un vent de panique sur la cité commerçante tandis que son assassin court toujours."
					}
				},
				{
					"id": "Alazar_1",
					"name": "Comté de Drombach",
					"props": {
						"feature": "Alazar1_Update",
						"meteo": {
							"rainDaysPerMonth": 4,
							"storm": 0.5,
							"maxRainDaysInARow": 1.5,
							"minRainDaysInARow": 0.5,
							"morningFog": 0.5,
							"marshland": false
						},
						"biome": "alazar",
						"loading": "ui/loadingScreen/Keyart_Alazar.jpg",
						"cantStartFromThere": true,
						"kingdom": 4,
						"counters": {
							"localTeamDefeated": "SportTeamDefeated_A1"
						}
					},
					"next": [],
					"kingdom": "Royaume d'Alazar",
					"setting": {
						"title": "Le Destin de Drombach",
						"icon": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 16,
							"x": 27,
							"y": 27,
							"width": 3,
							"height": 3
						},
						"desc": "Tandis que le Châtiment de l'Œil ravage les terres de Drombach, l'Inquisition enquête pour découvrir l'hérésie à l'origine de la colère divine."
					}
				}
			],
			"separators": [],
			"props": {}
		},
		{
			"name": "region@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "17",
					"name": "meteo",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "storm",
					"opt": true,
					"display": 1
				},
				{
					"typeStr": "4",
					"name": "rainDaysPerMonth",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "maxRainDaysInARow",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "minRainDaysInARow",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "biome",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "locked",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "minDistance",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "cantStartFromThere",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "recruitHasTattoo",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "noCompletion",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:region",
					"name": "sameDifficultyAs",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:constant",
					"name": "feature",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "minimap",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "loading",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:Independent,Gosenberg,Edoran,Harag,Alazar",
					"name": "kingdom",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "counters",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "region@props@meteo",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "4",
					"name": "rainDaysPerMonth"
				},
				{
					"typeStr": "4",
					"name": "storm",
					"display": 1
				},
				{
					"typeStr": "4",
					"name": "maxRainDaysInARow"
				},
				{
					"typeStr": "4",
					"name": "minRainDaysInARow"
				},
				{
					"typeStr": "4",
					"name": "morningFog",
					"display": 1
				},
				{
					"typeStr": "2",
					"name": "marshland",
					"kind": null
				}
			]
		},
		{
			"name": "region@props@minimap",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "titleOffsetX",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "titleOffsetY",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "region@props@counters",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:counter",
					"name": "localTeamDefeated",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "region@setting",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "title",
					"kind": "localizable"
				},
				{
					"typeStr": "14",
					"name": "icon",
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "desc",
					"kind": "localizable"
				},
				{
					"typeStr": "6:icon",
					"name": "globalQuest",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "region@next",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:region",
					"name": "region",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "travelTime",
					"opt": true,
					"documentation": "time in hours"
				}
			]
		},
		{
			"name": "trait",
			"columns": [
				{
					"typeStr": "14",
					"name": "requiredLevelIcon",
					"opt": true
				},
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "actionName",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "desc",
					"kind": "localizable"
				},
				{
					"typeStr": "10:Animal,NotAnimal,TwoHand,OneHand,Shield,Bow",
					"name": "gen",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "2",
					"name": "done",
					"opt": true,
					"kind": null,
					"editor": {
						"categories": [
							"todoInfo"
						]
					}
				}
			],
			"lines": [
				{
					"id": "Glouton",
					"name": "Glouton",
					"props": {
						"personality": 1,
						"value": 1
					},
					"desc": "Un glouton mangera <food>+[VALUE]</food> chaque jour. Quel goinfre !",
					"done": true,
					"group": 0
				},
				{
					"id": "Pickpocket",
					"name": "Chapardeur",
					"desc": "Coûte <gold>+[VALUE]</gold> de salaire.",
					"props": {
						"personality": 1,
						"value": 3,
						"cantBeWith": [
							{
								"kind": "Volunteer"
							}
						]
					},
					"done": true,
					"group": 0,
					"gen": 2
				},
				{
					"id": "Pretending",
					"name": "Feignant",
					"desc": "Gagne [VALUE]% expérience de métier de moins.",
					"props": {
						"personality": 1,
						"value": 20,
						"cantBeWith": [
							{
								"kind": "Worker"
							}
						]
					},
					"done": true,
					"group": 0,
					"gen": 2
				},
				{
					"id": "Stupid",
					"name": "Stupide",
					"desc": "Gagne [VALUE]% expérience de moins.",
					"props": {
						"personality": 1,
						"value": 5,
						"cantBeWith": [
							{
								"kind": "Smart"
							}
						]
					},
					"done": true,
					"group": 0,
					"gen": 2
				},
				{
					"id": "Bootleg",
					"name": "Pied-bot",
					"desc": "[Movement] réduit de [ATTR].",
					"props": {
						"attributes": [
							{
								"kind": "Movement",
								"value": -1
							}
						],
						"personality": 1,
						"cantBeWith": [
							{
								"kind": "Fast"
							},
							{
								"kind": "Nimble"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Sickly",
					"name": "Chétif",
					"desc": "[Constitution] réduite de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "Constitution",
								"value": -5,
								"isPercentage": true
							}
						],
						"personality": 1,
						"cantBeWith": [
							{
								"kind": "Robust"
							},
							{
								"kind": "Strong"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Unlucky",
					"name": "Malchanceux",
					"desc": "[CritHitPercent] réduit de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "CritHitPercent",
								"value": -3
							}
						],
						"personality": 1,
						"cantBeWith": [
							{
								"kind": "Bloodthirsty"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Slacker",
					"name": "Tire-au-flanc",
					"desc": "[Transport] réduit de [ATTR].",
					"props": {
						"attributes": [
							{
								"kind": "Transport",
								"value": -3
							}
						],
						"personality": 1,
						"cantBeWith": [
							{
								"kind": "Laborious"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Depressive",
					"name": "Dépressif",
					"desc": "[Willpower] réduite de [ATTR].",
					"props": {
						"attributes": [
							{
								"kind": "Willpower",
								"value": -2
							}
						],
						"personality": 1
					},
					"done": true,
					"group": 0
				},
				{
					"id": "Alcoholic",
					"name": "Alcoolique",
					"desc": "Doit consommer de l'alcool à chaque repas pour être satisfait.",
					"props": {
						"requireFood": "Alcohol",
						"personality": 1
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Bloodthirsty",
					"name": "Sanguinaire",
					"desc": "[CritHitPercent] augmenté de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "CritHitPercent",
								"value": 3
							}
						],
						"personality": 0,
						"cantBeWith": [
							{
								"kind": "Unlucky"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Robust",
					"name": "Costaud",
					"desc": "[Constitution] augmentée de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "Constitution",
								"value": 5,
								"isPercentage": true
							}
						],
						"personality": 0,
						"cantBeWith": [
							{
								"kind": "Sickly"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Strong",
					"name": "Fort",
					"desc": "[Strength] augmentée de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "Strength",
								"value": 5,
								"isPercentage": true
							}
						],
						"personality": 0,
						"cantBeWith": [
							{
								"kind": "Sickly"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Nimble",
					"name": "Agile",
					"desc": "[Dexterity] augmentée de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "Dexterity",
								"value": 5,
								"isPercentage": true
							}
						],
						"personality": 0,
						"cantBeWith": [
							{
								"kind": "Bootleg"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Worker",
					"name": "Travailleur",
					"desc": "Gagne [VALUE]% expérience de métier de plus.",
					"props": {
						"personality": 0,
						"value": 20,
						"cantBeWith": [
							{
								"kind": "Pretending"
							}
						]
					},
					"group": 0,
					"done": true,
					"gen": 2
				},
				{
					"id": "Smart",
					"name": "Malin",
					"desc": "Gagne [VALUE]% expérience de plus.",
					"props": {
						"personality": 0,
						"value": 5,
						"cantBeWith": [
							{
								"kind": "Stupid"
							}
						]
					},
					"group": 0,
					"done": true,
					"gen": 2
				},
				{
					"id": "Fast",
					"name": "Rapide",
					"desc": "[Movement] augmenté de [ATTR].",
					"props": {
						"attributes": [
							{
								"kind": "Movement",
								"value": 1
							}
						],
						"personality": 0,
						"cantBeWith": [
							{
								"kind": "Bootleg"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Volunteer",
					"name": "Bénévole",
					"desc": "Solde réduit de [VALUE]%",
					"props": {
						"personality": 0,
						"value": 10,
						"cantBeWith": [
							{
								"kind": "Pickpocket"
							}
						]
					},
					"group": 0,
					"done": true,
					"gen": 2
				},
				{
					"id": "HardSkin",
					"name": "Peau dure",
					"desc": "[ATTR]% de [Guard] de base.",
					"props": {
						"attributes": [
							{
								"kind": "Guard",
								"value": 3
							}
						],
						"personality": 0
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Laborious",
					"name": "Laborieux",
					"desc": "[Transport] augmenté de [ATTR].",
					"props": {
						"attributes": [
							{
								"kind": "Transport",
								"value": 3
							}
						],
						"personality": 0,
						"cantBeWith": [
							{
								"kind": "Slacker"
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Glorious",
					"name": "Glorieux",
					"desc": "Chance de générer 1 Point de Bravoure à la fin de son tour.",
					"props": {
						"value": 5,
						"personality": 0,
						"unlockChances": 100,
						"unlockThreshold": 1
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Colossus",
					"name": "Colosse",
					"desc": "[Strength] et [Dexterity] augmentées de [ATTR]% si est équipé d'une arme à deux mains.",
					"props": {
						"attributes": [
							{
								"kind": "Strength",
								"value": 5,
								"isPercentage": true
							},
							{
								"kind": "Dexterity",
								"value": 5,
								"isPercentage": true
							}
						],
						"personality": 0,
						"condition": 3,
						"unlockChances": 1,
						"unlockThreshold": 20
					},
					"group": 1,
					"done": true,
					"gen": 4
				},
				{
					"id": "Vivid",
					"name": "Vif",
					"desc": "[Strength] et [Dexterity] augmentées de [ATTR]% si est équipé d'une arme à une main.",
					"props": {
						"attributes": [
							{
								"kind": "Strength",
								"value": 5,
								"isPercentage": true
							},
							{
								"kind": "Dexterity",
								"value": 5,
								"isPercentage": true
							}
						],
						"personality": 0,
						"condition": 2,
						"unlockChances": 1,
						"unlockThreshold": 20
					},
					"group": 1,
					"done": true,
					"gen": 8
				},
				{
					"id": "ShieldLover",
					"name": "Amateur de boucliers",
					"desc": "[ATTR]% de [Guard] supplémentaire si tient un bouclier.",
					"props": {
						"attributes": [
							{
								"kind": "Guard",
								"value": 5
							}
						],
						"personality": 0,
						"condition": 4,
						"unlockChances": 5,
						"unlockThreshold": 5
					},
					"group": 1,
					"done": true,
					"gen": 16
				},
				{
					"id": "Silent",
					"name": "Silencieux",
					"desc": "Bruit réduit de [VALUE] dans les villages abandonnés.",
					"props": {
						"value": 3,
						"personality": 0,
						"cantBeWith": [
							{
								"kind": "Noisy"
							}
						],
						"unlockChances": 20,
						"unlockThreshold": 0
					},
					"group": 1,
					"done": true
				},
				{
					"id": "EyesBack",
					"name": "Yeux dans le dos",
					"desc": "Ne peut pas être touché par des flèches alliées.",
					"props": {
						"personality": 0,
						"unlockChances": 20,
						"unlockThreshold": 0
					},
					"group": 1,
					"done": true
				},
				{
					"id": "LeaderSoul",
					"name": "Âme de meneur",
					"desc": "Maximum de Points de Bravoure de la troupe augmenté de <ap>[VALUE]</ap>.",
					"props": {
						"personality": 0,
						"value": 1,
						"unlockChances": 1,
						"unlockThreshold": 5
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Ascetic",
					"name": "Ascète",
					"desc": "Consomme <food>[VALUE]</food> de moins.",
					"props": {
						"personality": 0,
						"value": 1,
						"unlockChances": 10,
						"unlockThreshold": 2
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Resilient",
					"name": "Résilient",
					"desc": "[VALUE]% de chances de résister aux applications de poison, de saignement et de brûlure.",
					"props": {
						"value": 5,
						"personality": 0,
						"unlockChances": 5,
						"unlockThreshold": 0
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Enduring",
					"name": "Endurant",
					"desc": "A une chance de ne pas subir de Blessure au combat.",
					"props": {
						"personality": 0,
						"value": 25,
						"unlockChances": 10,
						"unlockThreshold": 0
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Instinctive",
					"name": "Instinctif",
					"desc": "Chances de subir un coup critique réduites de [VALUE]%.",
					"props": {
						"personality": 0,
						"value": 25,
						"unlockChances": 10,
						"unlockThreshold": 2
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Sociable",
					"name": "Sociable",
					"desc": "Se lie d'amitié plus vite.",
					"props": {
						"personality": 0,
						"unlockChances": 20,
						"unlockThreshold": 0,
						"cantBeWith": [
							{
								"kind": "Grumpy"
							}
						],
						"value": 20
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Opportunist",
					"name": "Opportuniste",
					"desc": "[DamageBonusOppAttack] augmentés de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "DamageBonusOppAttack",
								"value": 5
							}
						],
						"personality": 0,
						"unlockChances": 10,
						"unlockThreshold": 0
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Brave",
					"name": "Courageux",
					"desc": "[Strength] et [Dexterity] augmentées de [ATTR]% si commence un combat en infériorité numérique.",
					"props": {
						"attributes": [
							{
								"kind": "Strength",
								"value": 5,
								"isPercentage": true
							},
							{
								"kind": "Dexterity",
								"value": 5,
								"isPercentage": true
							}
						],
						"personality": 0,
						"condition": 5,
						"unlockChances": 5,
						"unlockThreshold": 3
					},
					"group": 1,
					"done": true
				},
				{
					"id": "EagleEyed",
					"name": "Œil de lynx",
					"desc": "[Precision] augmentée de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "PrecisionBonus",
								"value": 10
							}
						],
						"personality": 0,
						"cantBeWith": [
							{
								"kind": "Squinting"
							}
						],
						"unlockChances": 5,
						"unlockThreshold": 2
					},
					"group": 1,
					"done": true,
					"gen": 32
				},
				{
					"id": "Humanist",
					"name": "Humaniste",
					"desc": "Augmente les chances de recruter un prisonnier adjacent.",
					"props": {
						"personality": 0,
						"cantBeWith": [
							{
								"kind": "Tyrannical"
							}
						],
						"unlockChances": 5,
						"unlockThreshold": 1,
						"value": 20
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Nyctalope",
					"name": "Nyctalope",
					"desc": "Voit mieux dans l'obscurité.",
					"props": {
						"personality": 0,
						"attributes": [
							{
								"kind": "VisionRange",
								"value": 2
							}
						]
					},
					"actionName": "",
					"group": 1,
					"done": true
				},
				{
					"id": "Tyrannical",
					"name": "Tyrannique",
					"desc": "[Willpower] augmentée de [ATTR] tant que des prisonniers sont dans la troupe.",
					"props": {
						"attributes": [
							{
								"kind": "Willpower",
								"value": 2
							}
						],
						"personality": 0,
						"condition": 7,
						"unlockChances": 10,
						"unlockThreshold": 1,
						"cantBeWith": [
							{
								"kind": "Humanist"
							}
						]
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Masochist",
					"name": "Masochiste",
					"desc": "Augmente de <happy>[VALUE]</happy> le Bonheur de la Troupe à chaque Repos si a une Blessure Fouetté.",
					"props": {
						"personality": 0,
						"unlockChances": 10,
						"unlockThreshold": 0,
						"condition": 9,
						"happiness": 1
					},
					"group": 1,
					"done": true,
					"gen": 2
				},
				{
					"id": "Squinting",
					"name": "Strabisme",
					"desc": "[Precision] réduite de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "PrecisionBonus",
								"value": -10
							}
						],
						"personality": 1,
						"cantBeWith": [
							{
								"kind": "EagleEyed"
							}
						],
						"unlockChances": 10,
						"unlockThreshold": 1
					},
					"group": 1,
					"gen": 32,
					"done": true
				},
				{
					"id": "Haemophiliac",
					"name": "Hémophile",
					"desc": "Les saignements subis infligent [VALUE]% dégâts de plus.",
					"props": {
						"personality": 1,
						"value": 5,
						"unlockChances": 10,
						"unlockThreshold": 1
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Noisy",
					"name": "Bruyant",
					"desc": "Bruit augmenté de [VALUE] dans les villages abandonnés.",
					"props": {
						"personality": 1,
						"value": 3,
						"cantBeWith": [
							{
								"kind": "Silent"
							}
						],
						"unlockChances": 10,
						"unlockThreshold": 0
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Superstitious",
					"name": "Superstitieux",
					"desc": "[Willpower] réduite de [ATTR] dans les Tombeaux des Anciens.",
					"props": {
						"attributes": [
							{
								"kind": "Willpower",
								"value": -5
							}
						],
						"personality": 1,
						"condition": 6,
						"unlockChances": 0,
						"unlockThreshold": 3
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Delicate",
					"name": "Délicat",
					"desc": "Faible chance de mal digérer un repas et tomber malade.",
					"props": {
						"personality": 1,
						"value": 5,
						"unlockChances": 5,
						"unlockThreshold": 5
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Maniac",
					"name": "Maniaque",
					"desc": "[Willpower] réduite de [ATTR] tant que son équipement n'est pas réparé.",
					"props": {
						"attributes": [
							{
								"kind": "Willpower",
								"value": -5
							}
						],
						"personality": 1,
						"unlockChances": 1,
						"unlockThreshold": 1,
						"condition": 8
					},
					"group": 1,
					"done": true,
					"gen": 2
				},
				{
					"id": "Megalomaniac",
					"name": "Mégalomane",
					"desc": "[Willpower] réduite de [ATTR] si n'a pas de grade et qu'un compagnon en a un.",
					"props": {
						"attributes": [
							{
								"kind": "Willpower",
								"value": -5
							}
						],
						"personality": 1,
						"unlockChances": 0,
						"unlockThreshold": 1,
						"condition": 10
					},
					"group": 1,
					"done": true,
					"gen": 2
				},
				{
					"id": "Allergic",
					"name": "Allergique",
					"desc": "Double les effets de la blessure Piqûre.",
					"props": {
						"personality": 1,
						"unlockChances": 5,
						"unlockThreshold": 2,
						"fromStatus": "Sting",
						"condition": 11
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Grumpy",
					"name": "Grognon",
					"desc": "Risque accru de ne pas s'entendre avec ses camarades.",
					"props": {
						"personality": 1,
						"cantBeWith": [
							{
								"kind": "Sociable"
							}
						],
						"unlockChances": 5,
						"unlockThreshold": 5,
						"value": 20
					},
					"group": 1,
					"done": true
				},
				{
					"id": "BadLoser",
					"name": "Mauvais perdant",
					"desc": "Baisse la Relation quand joue aux dés.",
					"props": {
						"personality": 1,
						"unlockChances": 5,
						"unlockThreshold": 5
					},
					"group": 1,
					"done": true,
					"gen": 2
				},
				{
					"id": "Camaraderie",
					"name": "Camarade",
					"desc": "A une chance d'obtenir [AnimalMarkedBonus] si un allié avec qui il entretient une relation positive est mourant à proximité.",
					"props": {
						"personality": 0,
						"unlockChances": 10,
						"value": 25,
						"condition": 13
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Savior",
					"name": "Sauveur",
					"desc": "Augmente de [VALUE]% la [Dexterity] et la [Strength] par allié proche avec moins de [Health].",
					"props": {
						"value": 2,
						"personality": 0,
						"unlockChances": 5,
						"attributes": [
							{
								"kind": "Dexterity",
								"value": 2,
								"isPercentage": true
							},
							{
								"kind": "Strength",
								"value": 2,
								"isPercentage": true
							}
						],
						"condition": 0,
						"scaleWith": 0
					},
					"group": 1,
					"done": true
				},
				{
					"id": "ImaginativeTinker",
					"name": "Bricoleur imaginatif",
					"desc": "Une fois par jour, lorsque le compagnon crée un objet dans l'Atelier, il a [VALUE]% de chance de récupérer un composant aléatoire.",
					"props": {
						"value": 25
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Addict",
					"name": "Accro",
					"desc": "Dépendante aux drogues médicinales, cette unité doit dormir sur la civière ou elle perdra <happy>[VALUE]</happy> au repos.",
					"props": {
						"unlockChances": 50,
						"unlockThreshold": 3,
						"condition": 14,
						"happiness": -1
					},
					"group": 1
				},
				{
					"id": "HeavySleep",
					"name": "Sommeil lourd",
					"desc": "Ne réduit pas la capacité d'évasion des prisonniers adjacents.",
					"props": {
						"personality": 1
					},
					"group": 2,
					"done": true
				},
				{
					"id": "Snorer",
					"name": "Ronfleur",
					"desc": "Risque accru de ne pas s'entendre avec ses camarades adjacents au Repos.",
					"props": {
						"personality": 1,
						"value": 5
					},
					"group": 2,
					"done": true
				},
				{
					"id": "BoarRaised",
					"name": "Élevé par des sangliers",
					"desc": "[Willpower] augmenté de [ATTR] tant qu'est adjacent à un sanglier dans le camp.",
					"props": {
						"personality": 0,
						"attributes": [
							{
								"kind": "Willpower",
								"value": 3
							}
						],
						"condition": 12
					},
					"group": 2,
					"done": true
				},
				{
					"id": "Carnivorous",
					"name": "Carnivore",
					"desc": "Doit consommer de la viande ou du poisson à chaque repas pour être satisfait.",
					"props": {
						"requireFood": "Meat",
						"personality": 1,
						"cantBeWith": [
							{
								"kind": "Vegetarian"
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "Vegetarian",
					"name": "Végétarien",
					"desc": "Doit consommer des fruits ou légumes à chaque repas pour être satisfait.",
					"props": {
						"requireFood": "Vegetables",
						"personality": 1,
						"cantBeWith": [
							{
								"kind": "Carnivorous"
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "Confident",
					"name": "Confiant",
					"desc": "[Willpower] augmentée de [ATTR].",
					"props": {
						"attributes": [
							{
								"kind": "Willpower",
								"value": 2
							}
						],
						"personality": 0
					},
					"group": 2,
					"done": true
				},
				{
					"id": "Lone",
					"name": "Solitaire",
					"desc": "[DamageBonusPercent] augmentés de [ATTR]% si n'est pas adjacent à un allié pendant un combat.",
					"props": {
						"attributes": [
							{
								"kind": "DamageBonusPercent",
								"value": 10
							}
						],
						"personality": 0,
						"condition": 1,
						"cantBeWith": [
							{
								"kind": "Cooperative"
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "Cooperative",
					"name": "Coopératif",
					"desc": "[DamageBonusPercent] augmentés de [ATTR]% si adjacent à un allié au combat.",
					"props": {
						"attributes": [
							{
								"kind": "DamageBonusPercent",
								"value": 10
							}
						],
						"personality": 0,
						"condition": 0,
						"cantBeWith": [
							{
								"kind": "Lone"
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "Coward",
					"name": "Lâche",
					"desc": "En combat, s'enfuira si le moral descend trop bas.",
					"props": {
						"personality": 1,
						"value": 100,
						"vars": {
							"low": 36
						}
					},
					"group": 2,
					"done": true
				},
				{
					"id": "Stoic",
					"name": "Stoïque",
					"desc": "Ne compte pas dans les besoins en Bonheur de la troupe.",
					"props": {
						"personality": 0,
						"feature": "Alazar1_Update"
					},
					"group": 2,
					"done": false
				},
				{
					"id": "RawFood",
					"name": "Crudivore",
					"desc": "Peut manger de la viande non préparée sans conséquences négatives.",
					"props": {},
					"group": 2,
					"done": true
				},
				{
					"id": "GosenbergLover",
					"name": "Amoureux de Gosenberg",
					"desc": "Lorsque cette unité est sur le territoire de Gosenberg, augmente sa [Strength], [Dexterity] et [Constitution] de [ATTR]%.",
					"props": {
						"feature": "Alazar1_Update",
						"attributes": [
							{
								"kind": "Strength",
								"value": 10,
								"isPercentage": true
							},
							{
								"kind": "Dexterity",
								"value": 10,
								"isPercentage": true
							},
							{
								"kind": "Constitution",
								"value": 10,
								"isPercentage": true
							}
						],
						"regionCondition": "Gosenberg_1",
						"cantBeWith": [
							{
								"kind": "HaragLover"
							},
							{
								"kind": "AlazarLover"
							},
							{
								"kind": "EdoranLover"
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "AlazarLover",
					"name": "Amoureux d'Alazar",
					"desc": "Lorsque cette unité sur le territoire d'Alazar, augmente sa [Strength], [Dexterity] et [Constitution] de [ATTR]%.",
					"props": {
						"feature": "Alazar1_Update",
						"attributes": [
							{
								"kind": "Strength",
								"value": 10,
								"isPercentage": true
							},
							{
								"kind": "Dexterity",
								"value": 10,
								"isPercentage": true
							},
							{
								"kind": "Constitution",
								"value": 10,
								"isPercentage": true
							}
						],
						"regionCondition": "Alazar_1",
						"cantBeWith": [
							{
								"kind": "HaragLover"
							},
							{
								"kind": "EdoranLover"
							},
							{
								"kind": "GosenbergLover"
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "EdoranLover",
					"name": "Amoureux d'Edoran",
					"desc": "Lorsque cette unité sur le territoire d'Edoran, augmente sa [Strength], [Dexterity] et [Constitution] de [ATTR]%.",
					"props": {
						"feature": "Alazar1_Update",
						"attributes": [
							{
								"kind": "Strength",
								"value": 10,
								"isPercentage": true
							},
							{
								"kind": "Dexterity",
								"value": 10,
								"isPercentage": true
							},
							{
								"kind": "Constitution",
								"value": 10,
								"isPercentage": true
							}
						],
						"regionCondition": "Edoran_1",
						"cantBeWith": [
							{
								"kind": "HaragLover"
							},
							{
								"kind": "AlazarLover"
							},
							{
								"kind": "GosenbergLover"
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "HaragLover",
					"name": "Amoureux d'Harag",
					"desc": "Lorsque cette unité sur le territoire d'Harag, augmente sa [Strength], [Dexterity] et [Constitution] de [ATTR]%.",
					"props": {
						"feature": "Alazar1_Update",
						"attributes": [
							{
								"kind": "Strength",
								"value": 10,
								"isPercentage": true
							},
							{
								"kind": "Dexterity",
								"value": 10,
								"isPercentage": true
							},
							{
								"kind": "Constitution",
								"value": 10,
								"isPercentage": true
							}
						],
						"regionCondition": "Harag_1",
						"cantBeWith": [
							{
								"kind": "AlazarLover"
							},
							{
								"kind": "EdoranLover"
							},
							{
								"kind": "GosenbergLover"
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "Secretive",
					"name": "Insoupçonnable",
					"desc": "Réduit les amendes de [VALUE]%.",
					"props": {
						"value": 10,
						"feature": "Alazar1_Update"
					},
					"group": 2,
					"done": false
				},
				{
					"id": "Fat",
					"name": "Gras",
					"desc": "Ce compagnon a atteint le poids idéal !",
					"props": {
						"vars": {
							"nbRests": 7
						}
					},
					"group": 3,
					"gen": 1
				},
				{
					"id": "Betrayed",
					"name": "Trahi",
					"desc": "Ce compagnon a le sentiment d'avoir été trahi.",
					"props": {
						"happiness": -1
					},
					"group": 3,
					"done": true
				},
				{
					"id": "Infected",
					"name": "Infecté",
					"desc": "Cette unité est infectée par la Peste. Elle pourra la transmettre en combat via une Blessure.",
					"props": {},
					"group": 3,
					"done": true
				},
				{
					"id": "Tamer",
					"name": "Dresseur",
					"desc": "Permet de contrôler les animaux au combat.",
					"props": {},
					"group": 3,
					"done": true,
					"gen": 2
				},
				{
					"id": "TwoHandedSpecialist",
					"name": "Bourreau",
					"desc": "[CritHitPercent] et [CritHitDamageBonusPercent] augmentés de [ATTR]% si est équipé d'une arme à deux mains.",
					"props": {
						"attributes": [
							{
								"kind": "CritHitPercent",
								"value": 5
							},
							{
								"kind": "CritHitDamageBonusPercent",
								"value": 5
							}
						],
						"personality": 0,
						"condition": 3,
						"value": 100
					},
					"group": 3,
					"done": true
				},
				{
					"id": "OneHandedSpecialist",
					"name": "Fine lame",
					"desc": "[CritHitPercent] et [CritHitDamageBonusPercent] augmentés de [ATTR]% si est équipé d'une arme à une main.",
					"props": {
						"attributes": [
							{
								"kind": "CritHitPercent",
								"value": 5
							},
							{
								"kind": "CritHitDamageBonusPercent",
								"value": 5
							}
						],
						"personality": 0,
						"condition": 2,
						"value": 100
					},
					"group": 3,
					"done": true
				},
				{
					"id": "Bellicose",
					"name": "Belliqueux",
					"desc": "Gagne [VALUE] points d'expérience quand tue un ennemi.",
					"props": {
						"value": 5
					},
					"group": 3,
					"done": true
				},
				{
					"id": "Trader",
					"name": "Négociant",
					"desc": "Génère [VALUE] Krowns de plus en fin de combat.",
					"props": {
						"value": 1
					},
					"group": 3,
					"done": true
				},
				{
					"id": "Incongruous",
					"name": "Incongru",
					"desc": "Augmente les chances de récupérer des objets sur les ennemis tués.",
					"props": {},
					"group": 3,
					"done": true
				},
				{
					"id": "Educated",
					"name": "Éduqué",
					"desc": "Augmente tout gain d'expérience de Connaissance de [VALUE].",
					"props": {
						"value": 1
					},
					"group": 3,
					"done": true
				},
				{
					"id": "Depressed",
					"name": "Déprimé",
					"desc": "Génère <happy>[VALUE]</happy> chaque nuit.\nEspérons que le temps répare les cicatrices...",
					"props": {
						"personality": 1,
						"happiness": -1,
						"vars": {
							"probabilityPerDay": 0.05,
							"alcooholProbability": 0.3,
							"minDaysDepressed": 4,
							"probabilityNextToFriend": 0.3
						}
					},
					"group": 3,
					"done": true
				},
				{
					"id": "Watching",
					"name": "De garde",
					"desc": "Un prisonnier adjacent a [VALUE]% de chances de moins de s'enfuir.",
					"props": {
						"value": 1
					},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "Disrespectful",
					"name": "Irrespectueux",
					"desc": "Se lie d'amitié moins vite.",
					"props": {
						"value": -20
					},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "Protected",
					"name": "En seconde ligne",
					"desc": "Chance de générer 1 Point de Bravoure à la fin de son tour si non-engagé.",
					"props": {
						"value": 10
					},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "RiskPremium",
					"name": "Prime de risque",
					"desc": "Salaire augmenté de [VALUE]%.",
					"props": {
						"value": 30
					},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "Relationship",
					"name": "En couple",
					"desc": "En couple avec ::target::.",
					"props": {},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "Valiant",
					"name": "Vaillant",
					"desc": "Si le groupe commence un combat avec moins de [VALUE] Points de Bravoure, en confère jusqu'à [VALUE].",
					"props": {
						"value": 2
					},
					"group": 3,
					"done": true
				},
				{
					"id": "Unwavering",
					"name": "Inébranlable",
					"desc": "Immunisé à la Terreur.",
					"props": {},
					"group": 3,
					"done": true
				},
				{
					"id": "Strategist",
					"name": "Stratège",
					"desc": "Les retraites de la troupe sont [VALUE]% moins punitives.",
					"props": {
						"value": 50
					},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "Desperate",
					"name": "Désespéré",
					"desc": "[Willpower] diminué de [ATTR].",
					"props": {
						"attributes": [
							{
								"kind": "Willpower",
								"value": -2
							}
						]
					},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "Cold",
					"name": "Faché",
					"desc": "Les relations avec $NAME ne peuvent plus évoluer.",
					"props": {},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "Horsy",
					"name": "Comme un cheval",
					"desc": "[Transport] augmenté de [ATTR]%.",
					"props": {
						"attributes": [
							{
								"kind": "Transport",
								"value": 100,
								"isPercentage": true
							}
						]
					},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "Spendthrift",
					"name": "Dépensier",
					"desc": "Tous les achats sont [VALUE]% plus chers.",
					"props": {
						"value": 20
					},
					"group": 3,
					"actionName": "",
					"done": true
				},
				{
					"id": "GreatVitality",
					"name": "Grande Vitalité",
					"desc": "Chaque point de [Constitution] donne +4 [MaxHealth] au lieu +2.",
					"props": {
						"attributes": [
							{
								"kind": "MaxHealth",
								"value": 100,
								"isPercentage": true
							}
						]
					},
					"group": 3,
					"actionName": "",
					"gen": 1,
					"done": true
				},
				{
					"id": "Freed",
					"name": "Affranchi",
					"desc": "Salaire diminué de [VALUE]%.",
					"props": {
						"value": 50
					},
					"group": 3,
					"gen": 2,
					"done": true
				},
				{
					"id": "Cautious",
					"name": "Imprudent",
					"desc": "Augmente le [Movement] de +1 lorsque l'équipement est abîmé.",
					"props": {
						"feature": "Alazar1_Update",
						"condition": 15,
						"attributes": [
							{
								"kind": "Movement",
								"value": 1
							}
						]
					},
					"group": 3,
					"done": true
				},
				{
					"id": "Follower",
					"name": "Suiveur",
					"desc": "A [VALUE]% de chance de quitter la troupe lorsqu'un compagnon part.",
					"props": {
						"value": 10,
						"feature": "Alazar1_Update"
					},
					"group": 3,
					"done": true
				},
				{
					"id": "Collector",
					"name": "Précautionneux",
					"desc": "Donne <happy>[VALUE]</happy> au repos lorsque le compagnon porte 2 équipements liés à l'alchimie.",
					"props": {
						"feature": "Alazar1_Update",
						"condition": 16,
						"happiness": 1
					},
					"group": 3,
					"gen": 2,
					"done": true
				},
				{
					"id": "HerbalEnthusiast",
					"name": "Adepte des tisanes",
					"desc": "Donne <happy>[VALUE]</happy> lorsque le compagnon consomme une tisane.",
					"props": {
						"feature": "Alazar1_Update",
						"happiness": 1,
						"requireFood": "Tisane"
					},
					"group": 3,
					"done": true
				},
				{
					"id": "EnemyBurned",
					"name": "Ennemi mortel",
					"desc": "A regardé son ennemi brûler sur le bûcher de l'Inquisition.",
					"props": {
						"feature": "Alazar1_Update"
					},
					"group": 3,
					"done": true
				},
				{
					"id": "PersCompassionate",
					"name": "",
					"desc": "",
					"props": {},
					"group": 4
				},
				{
					"id": "PersAggressive",
					"name": "",
					"desc": "",
					"props": {},
					"group": 4
				},
				{
					"id": "PersPragmatic",
					"name": "",
					"desc": "",
					"props": {},
					"group": 4
				},
				{
					"id": "PersOptimist",
					"name": "",
					"desc": "",
					"props": {},
					"group": 4
				},
				{
					"id": "PersAnimal",
					"name": "",
					"desc": "",
					"props": {},
					"group": 4
				},
				{
					"id": "HelethEnemy",
					"name": "Ennemi de Heleth",
					"desc": "Ce personnage hait Heleth et rien ne pourrait améliorer leur relation.",
					"props": {},
					"group": 5
				},
				{
					"id": "GunbaldEnemy",
					"name": "Ennemie de Gunbald",
					"desc": "Ce personnage hait Gunbald et rien ne pourrait améliorer leur relation.",
					"props": {},
					"group": 5
				},
				{
					"id": "Miner",
					"name": "Mineur",
					"desc": "Peut interagir avec les gisements des mines pour en extraire leurs minerais.",
					"props": {
						"hasLevel": true,
						"attributes": [
							{
								"kind": "Constitution",
								"value": 1,
								"level": 1
							},
							{
								"kind": "Constitution",
								"value": 1,
								"level": 2
							},
							{
								"kind": "Strength",
								"value": 1,
								"level": 2
							},
							{
								"kind": "Constitution",
								"value": 4,
								"level": 3
							},
							{
								"kind": "Strength",
								"value": 2,
								"level": 3
							},
							{
								"kind": "Constitution",
								"value": 5,
								"level": 4
							},
							{
								"kind": "Strength",
								"value": 3,
								"level": 4
							},
							{
								"kind": "Constitution",
								"value": 7,
								"level": 5
							},
							{
								"kind": "Strength",
								"value": 5,
								"level": 5
							}
						],
						"flags": 1,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "MinerApprentice"
							},
							{
								"bonus": "MinerCompanion"
							},
							{
								"bonus": "MinerMaster"
							},
							{
								"bonus": "MinerConfirme"
							}
						]
					},
					"requiredLevelIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 11
					},
					"group": 6
				},
				{
					"id": "Blacksmith",
					"name": "Forgeron",
					"desc": "Peut apprendre des plans et forger des objets dans la Forge des villages.",
					"props": {
						"hasLevel": true,
						"attributes": [
							{
								"kind": "Strength",
								"value": 1,
								"level": 1
							},
							{
								"kind": "Strength",
								"value": 2,
								"level": 2
							},
							{
								"kind": "Strength",
								"value": 4,
								"level": 3
							},
							{
								"kind": "Strength",
								"value": 7,
								"level": 4
							},
							{
								"kind": "Strength",
								"value": 10,
								"level": 5
							}
						],
						"flags": 1,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "BlacksmithApprentice"
							},
							{
								"bonus": "BlacksmithConfirme"
							},
							{
								"bonus": "BlacksmithCompanion"
							},
							{
								"bonus": "BlacksmithMaster"
							}
						]
					},
					"requiredLevelIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 12
					},
					"group": 6
				},
				{
					"id": "Alchemist",
					"name": "Alchimiste",
					"desc": "Peut apprendre des recettes et concevoir des décoctions à la Table d'apothicaire des villages.",
					"props": {
						"hasLevel": true,
						"attributes": [
							{
								"kind": "Dexterity",
								"value": 1,
								"level": 1
							},
							{
								"kind": "Dexterity",
								"value": 2,
								"level": 2
							},
							{
								"kind": "Dexterity",
								"value": 4,
								"level": 3
							},
							{
								"kind": "Dexterity",
								"value": 7,
								"level": 4
							},
							{
								"kind": "Dexterity",
								"value": 10,
								"level": 5
							}
						],
						"skipActivity": true,
						"flags": 1,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "AlchimistApprentice"
							},
							{
								"bonus": "AlchimistConfirme"
							},
							{
								"bonus": "AlchimistCompanion"
							},
							{
								"bonus": "AlchimistMaster"
							}
						]
					},
					"requiredLevelIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 14
					},
					"group": 6
				},
				{
					"id": "Thief",
					"name": "Voleur",
					"desc": "Peut voler des objets et crocheter des serrures.",
					"props": {
						"hasLevel": true,
						"attributes": [
							{
								"kind": "Dexterity",
								"value": 1,
								"level": 1
							},
							{
								"kind": "Dexterity",
								"value": 1,
								"level": 2
							},
							{
								"kind": "CritHitPercent",
								"value": 2,
								"level": 2
							},
							{
								"kind": "Dexterity",
								"value": 2,
								"level": 3
							},
							{
								"kind": "CritHitPercent",
								"value": 3,
								"level": 3
							},
							{
								"kind": "Dexterity",
								"value": 3,
								"level": 4
							},
							{
								"kind": "CritHitPercent",
								"value": 4,
								"level": 4
							},
							{
								"kind": "Dexterity",
								"value": 4,
								"level": 5
							},
							{
								"kind": "CritHitPercent",
								"value": 6,
								"level": 5
							}
						],
						"flags": 1,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "ThiefApprentice"
							},
							{
								"bonus": "ThiefConfirme"
							},
							{
								"bonus": "ThiefCompanion"
							},
							{
								"bonus": "ThiefMaster"
							}
						]
					},
					"actionName": "Voler",
					"requiredLevelIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 15
					},
					"group": 6
				},
				{
					"id": "Cook",
					"name": "Marmiton",
					"props": {
						"hasLevel": true,
						"attributes": [
							{
								"kind": "Constitution",
								"value": 2,
								"level": 1
							},
							{
								"kind": "Constitution",
								"value": 4,
								"level": 2
							},
							{
								"kind": "Constitution",
								"value": 8,
								"level": 3
							},
							{
								"kind": "Constitution",
								"value": 10,
								"level": 4
							},
							{
								"kind": "Constitution",
								"value": 14,
								"level": 5
							}
						],
						"skipActivity": true,
						"flags": 1,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "CookApprentice"
							},
							{
								"bonus": "CookConfirme"
							},
							{
								"bonus": "CookCompanion"
							},
							{
								"bonus": "CookMaster"
							}
						]
					},
					"desc": "Peut apprendre des recettes et cuisiner des plats à la Marmite du camp.",
					"requiredLevelIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 13
					},
					"group": 6
				},
				{
					"id": "Tinkerer",
					"name": "Bricoleur",
					"desc": "Peut apprendre des recettes, concevoir et améliorer du Matériel de camp à l'Atelier du camp.",
					"props": {
						"hasLevel": true,
						"attributes": [
							{
								"kind": "CritHitPercent",
								"value": 2,
								"level": 1
							},
							{
								"kind": "CritHitPercent",
								"value": 4,
								"level": 2
							},
							{
								"kind": "CritHitPercent",
								"value": 6,
								"level": 3
							},
							{
								"kind": "CritHitPercent",
								"value": 9,
								"level": 4
							},
							{
								"kind": "CritHitPercent",
								"value": 12,
								"level": 5
							}
						],
						"skipActivity": true,
						"flags": 1,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "TinkererApprentice"
							},
							{
								"bonus": "TinkererConfirme"
							},
							{
								"bonus": "TinkererCompanion"
							},
							{
								"bonus": "TinkererMaster"
							}
						]
					},
					"requiredLevelIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 16
					},
					"group": 6
				},
				{
					"id": "Fisherman",
					"name": "Pêcheur",
					"desc": "Peut pêcher dans les cabanes de pêche.",
					"props": {
						"hasLevel": true,
						"attributes": [
							{
								"kind": "Willpower",
								"value": 1,
								"level": 1
							},
							{
								"kind": "Willpower",
								"value": 1,
								"level": 2
							},
							{
								"kind": "CritHitPercent",
								"value": 2,
								"level": 2
							},
							{
								"kind": "Willpower",
								"value": 2,
								"level": 3
							},
							{
								"kind": "CritHitPercent",
								"value": 3,
								"level": 3
							},
							{
								"kind": "Willpower",
								"value": 3,
								"level": 4
							},
							{
								"kind": "CritHitPercent",
								"value": 4,
								"level": 4
							},
							{
								"kind": "Willpower",
								"value": 4,
								"level": 5
							},
							{
								"kind": "CritHitPercent",
								"value": 6,
								"level": 5
							}
						],
						"flags": 1,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "FishermanApprentice"
							},
							{
								"bonus": "FishermanConfirme"
							},
							{
								"bonus": "FishermanCompanion"
							},
							{
								"bonus": "FishermanMaster"
							}
						]
					},
					"requiredLevelIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 14
					},
					"group": 6
				},
				{
					"id": "Scholar",
					"name": "Érudit",
					"desc": "Peut déchiffrer des codex et reconstituer des antiquités au Lutrin du camp.",
					"props": {
						"hasLevel": true,
						"attributes": [
							{
								"kind": "Willpower",
								"value": 2,
								"level": 1
							},
							{
								"kind": "Willpower",
								"value": 3,
								"level": 2
							},
							{
								"kind": "Willpower",
								"value": 4,
								"level": 3
							},
							{
								"kind": "Willpower",
								"value": 6,
								"level": 4
							},
							{
								"kind": "Willpower",
								"value": 8,
								"level": 5
							}
						],
						"flags": 1,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "ScholarApprentice"
							},
							{
								"bonus": "ScholarConfirme"
							},
							{
								"bonus": "ScholarCompanion"
							},
							{
								"bonus": "ScholarMaster"
							}
						]
					},
					"requiredLevelIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 13
					},
					"group": 6
				},
				{
					"id": "Bard",
					"name": "Barde",
					"desc": "Peut apprendre des chansons et les interpréter dans les tavernes.",
					"props": {
						"hasLevel": true,
						"attributes": [
							{
								"kind": "Constitution",
								"value": 1,
								"level": 1
							},
							{
								"kind": "Constitution",
								"value": 2,
								"level": 2
							},
							{
								"kind": "Willpower",
								"value": 1,
								"level": 2
							},
							{
								"kind": "Constitution",
								"value": 4,
								"level": 3
							},
							{
								"kind": "Willpower",
								"value": 2,
								"level": 3
							},
							{
								"kind": "Constitution",
								"value": 5,
								"level": 4
							},
							{
								"kind": "Willpower",
								"value": 3,
								"level": 4
							},
							{
								"kind": "Constitution",
								"value": 7,
								"level": 5
							},
							{
								"kind": "Willpower",
								"value": 4,
								"level": 5
							}
						],
						"flags": 1,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "BardApprentice"
							},
							{
								"bonus": "BardConfirme"
							},
							{
								"bonus": "BardCompanion"
							},
							{
								"bonus": "BardMaster"
							}
						],
						"skipActivity": true
					},
					"group": 6,
					"requiredLevelIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 17
					}
				},
				{
					"id": "Woodcutter",
					"name": "Bûcheron",
					"desc": "Peut couper du bois.",
					"props": {
						"hasLevel": true,
						"xpScale": 1,
						"levels": [
							{
								"bonus": "WoodcutterApprentice"
							},
							{
								"bonus": "WoodcutterConfirme"
							},
							{
								"bonus": "WoodcutterCompanion"
							},
							{
								"bonus": "WoodcutterMaster"
							}
						],
						"attributes": [
							{
								"kind": "Strength",
								"value": 1,
								"level": 1
							},
							{
								"kind": "Strength",
								"value": 1,
								"level": 2
							},
							{
								"kind": "CritHitPercent",
								"value": 2,
								"level": 2
							},
							{
								"kind": "Strength",
								"value": 2,
								"level": 3
							},
							{
								"kind": "CritHitPercent",
								"value": 3,
								"level": 3
							},
							{
								"kind": "Strength",
								"value": 3,
								"level": 4
							},
							{
								"kind": "CritHitPercent",
								"value": 4,
								"level": 4
							},
							{
								"kind": "Strength",
								"value": 4,
								"level": 5
							},
							{
								"kind": "CritHitPercent",
								"value": 6,
								"level": 5
							}
						]
					},
					"group": 6,
					"requiredLevelIcon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 12
					}
				}
			],
			"props": {
				"hasGroup": true
			},
			"separators": [
				{
					"title": "Starting",
					"id": "Glouton"
				},
				{
					"title": "Hidden",
					"id": "Glorious"
				},
				{
					"title": "Recruitment",
					"id": "HeavySleep"
				},
				{
					"title": "Acquired",
					"id": "Fat"
				},
				{
					"title": "Personality",
					"id": "PersCompassionate"
				},
				{
					"title": "Lore",
					"id": "HelethEnemy"
				},
				{
					"title": "Job",
					"id": "Miner"
				}
			]
		},
		{
			"name": "activity",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"kind": null,
					"scope": null
				},
				{
					"typeStr": "6:trait",
					"name": "trait",
					"opt": true
				},
				{
					"typeStr": "13",
					"name": "prefab",
					"opt": true
				},
				{
					"typeStr": "13",
					"name": "miniGamePrefab",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "props",
					"kind": null
				}
			],
			"lines": [
				{
					"id": "Mine",
					"props": {
						"tutorial": "TutoMining",
						"coop": true
					},
					"trait": "Miner",
					"prefab": "prefabs/activity/MiningActivity.prefab"
				},
				{
					"id": "MineOutside",
					"trait": "Miner",
					"props": {
						"tutorial": "TutoMining",
						"coop": true
					},
					"prefab": "prefabs/activity/MiningOutsideActivity.prefab"
				},
				{
					"id": "Forge",
					"props": {
						"tutorial": "TutoForge"
					},
					"trait": "Blacksmith",
					"prefab": "prefabs/activity/ForgeActivity.prefab"
				},
				{
					"id": "Alchemy",
					"props": {
						"skipActivity": true
					},
					"trait": "Alchemist",
					"prefab": "prefabs/activity/AlchemyActivity.prefab"
				},
				{
					"id": "LockPick",
					"props": {
						"tutorial": "TutoLockpick",
						"coop": true
					},
					"miniGamePrefab": "prefabs/activity/Lockpick.prefab",
					"trait": "Thief",
					"prefab": "prefabs/activity/LockpickActivity.prefab"
				},
				{
					"id": "Cook",
					"props": {
						"skipActivity": true
					},
					"trait": "Cook"
				},
				{
					"id": "Tinker",
					"props": {
						"skipActivity": true
					},
					"trait": "Tinkerer"
				},
				{
					"id": "Fish",
					"props": {
						"tutorial": "TutoFishing",
						"coop": true
					},
					"trait": "Fisherman",
					"prefab": "prefabs/activity/FishingActivity.prefab"
				},
				{
					"id": "FishOutside",
					"trait": "Fisherman",
					"props": {
						"tutorial": "TutoFishing",
						"coop": true
					},
					"prefab": "prefabs/activity/FishingActivity.prefab",
					"miniGamePrefab": "prefabs/activity/FishingOutsideActivity.prefab"
				},
				{
					"id": "NinePuzzle",
					"props": {
						"coop": true
					},
					"miniGamePrefab": "prefabs/activity/NinePuzzle.prefab",
					"trait": "Scholar",
					"prefab": "prefabs/activity/NinePuzzleActivity.prefab"
				},
				{
					"id": "CylinderPuzzle",
					"props": {
						"onFailStatus": "Sprain",
						"coop": true
					},
					"miniGamePrefab": "prefabs/activity/CylinderPuzzle.prefab",
					"trait": "Scholar",
					"prefab": "prefabs/activity/CylinderPuzzleActivity.prefab"
				},
				{
					"id": "BoardPuzzle",
					"props": {
						"coop": true
					},
					"trait": "Scholar"
				},
				{
					"id": "Study",
					"trait": "Scholar",
					"props": {}
				},
				{
					"id": "Sing",
					"props": {
						"tutorial": "TutoLute",
						"coop": true
					},
					"trait": "Bard",
					"prefab": "prefabs/activity/SingActivity.prefab"
				},
				{
					"id": "Archery",
					"props": {},
					"prefab": "prefabs/activity/ArcheryActivity.prefab"
				},
				{
					"id": "WoodCutting",
					"props": {
						"tutorial": "TutoWoodCut",
						"coop": true
					},
					"prefab": "prefabs/activity/WoodCuttingActivity.prefab",
					"trait": "Woodcutter"
				},
				{
					"id": "MoneyLaundering",
					"props": {},
					"trait": "Thief"
				}
			],
			"separators": [],
			"props": {}
		},
		{
			"name": "activity@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "2",
					"name": "skipActivity",
					"opt": true
				},
				{
					"typeStr": "6:status",
					"name": "onFailStatus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:icon",
					"name": "tutorial",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "coop",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:constant",
					"name": "feature",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "trait@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "2",
					"name": "hasLevel",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "happiness",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "attributes",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "value",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:itemType",
					"name": "requireFood",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:Positive,Negative",
					"name": "personality",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:skill",
					"name": "skill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "activityCost",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "skipActivity",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "xpScale",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:AdjacentAlly,NoAdjacentAlly,OneHandWeaponEquipped,TwoHandWeaponEquipped,ShieldEquipped,NumericInferiority,IntoRuins,HasPrisoners,EquipmentBroken,Whipped,OtherRanked,Stung,CampAdjacentBoar,AdjacentAllyDying,NotOnStretcher,DamagedEquipment,TwoAlchemistEquipments",
					"name": "condition",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "levels",
					"opt": true
				},
				{
					"typeStr": "16",
					"name": "vars",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "cantBeWith",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "unlockChances",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "unlockThreshold",
					"opt": true
				},
				{
					"typeStr": "6:status",
					"name": "fromStatus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:AdjacentAllyLessHealth",
					"name": "scaleWith",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:constant",
					"name": "feature",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:region",
					"name": "regionCondition",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "trait@props@attributes",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:attribute",
					"name": "kind",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "value",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isPercentage",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "level",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "trait@props@levels",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:bonus",
					"name": "bonus",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "value",
					"opt": true
				}
			]
		},
		{
			"name": "trait@props@cantBeWith",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:trait",
					"name": "kind",
					"kind": null
				}
			]
		},
		{
			"name": "itemType",
			"columns": [
				{
					"typeStr": "14",
					"name": "icon",
					"display": null
				},
				{
					"typeStr": "0",
					"name": "id",
					"display": null
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "6:itemType",
					"name": "parentType",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "14",
					"name": "equipDefault",
					"opt": true,
					"kind": null
				}
			],
			"lines": [
				{
					"id": "Any",
					"name": "Tout",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 0
					},
					"props": {}
				},
				{
					"id": "Other",
					"name": "Autre",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 0
					},
					"props": {}
				},
				{
					"id": "Sword",
					"name": "Épée à 1 main",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 0
					},
					"parentType": "Weapon",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleSword",
						"baseBonusDefault": "SwordBase",
						"nameCraftCategory": "Épées"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Sword2H",
					"name": "Épée à 2 mains",
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"parentType": "Sword",
					"props": {
						"isCraftSeparator": true,
						"flags": 2,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleSword2H",
						"baseBonusDefault": "Sword2HBase"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Axe",
					"name": "Hache à 1 main",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 9,
						"y": 0
					},
					"parentType": "Weapon",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleAxe",
						"baseBonusDefault": "AxeBase",
						"nameCraftCategory": "Haches"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Axe2H",
					"name": "Hache à 2 mains",
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"parentType": "Axe",
					"props": {
						"isCraftSeparator": true,
						"flags": 2,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleAxe2H",
						"baseBonusDefault": "Axe2HBase"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Mace",
					"name": "Masse à 1 main",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 1
					},
					"parentType": "Weapon",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleMace",
						"baseBonusDefault": "MaceBase",
						"nameCraftCategory": "Masses"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Mace2H",
					"name": "Masse à 2 mains",
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"parentType": "Mace",
					"props": {
						"isCraftSeparator": true,
						"flags": 2,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleMace2H",
						"baseBonusDefault": "Mace2HBase"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Dagger",
					"name": "Dague",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 0
					},
					"parentType": "Weapon",
					"props": {
						"isCraftSeparator": true,
						"dismantleLoot": "DismantleDagger",
						"baseBonusDefault": "DaggerBase",
						"nameCraftCategory": "Dagues"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Polearm",
					"name": "Arme d'hast",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 0
					},
					"parentType": "Weapon",
					"props": {
						"isCraftSeparator": true,
						"flags": 2,
						"wealthFactor": 1,
						"dismantleLoot": "DismantlePolearm",
						"baseBonusDefault": "PolearmsBase",
						"nameCraftCategory": "Armes d'hast"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Bow",
					"name": "Arc",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 13,
						"y": 0
					},
					"parentType": "Weapon",
					"props": {
						"isCraftSeparator": true,
						"flags": 2,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleBow",
						"baseBonusDefault": "BowBase",
						"nameCraftCategory": "Arcs"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Wand",
					"name": "Canne",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 0
					},
					"parentType": "Weapon",
					"props": {
						"isCraftSeparator": true,
						"dismantleLoot": "DismantleWand",
						"baseBonusDefault": "WandBase",
						"nameCraftCategory": "Cannes"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "AnimalAccessory",
					"name": "Accessoire d'animal",
					"props": {
						"isCraftSeparator": true,
						"dismantleLoot": "DismantleAccessoryAnimal",
						"nameCraftCategory": "Accessoires d'animal"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 9
					},
					"parentType": "Accessory",
					"equipDefault": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 9
					}
				},
				{
					"id": "BackPackAccessory",
					"name": "Accessoire de sac à dos",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleAccessoryBackpack",
						"nameCraftCategory": "Accessoires de sac à dos"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 17
					},
					"parentType": "Accessory",
					"equipDefault": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 12
					}
				},
				{
					"id": "BeltAccessory",
					"name": "Accessoire de ceinture",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleAccessoryBelt",
						"nameCraftCategory": "Accessoires de ceinture"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 10
					},
					"parentType": "Accessory",
					"equipDefault": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 10
					}
				},
				{
					"id": "BundleForge",
					"name": "Plans de forge",
					"props": {
						"flags": 4
					},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 0
					},
					"parentType": "Gear"
				},
				{
					"id": "Gear",
					"name": "Équipement",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 0
					},
					"props": {
						"sellPriceFactor": 0.4,
						"dismantleLoot": "Default"
					}
				},
				{
					"id": "ArmorLayer",
					"name": "Renfort d'armure",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleLayer",
						"nameCraftCategory": "Renforts d'armure"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 2,
						"y": 0
					},
					"parentType": "Gear",
					"equipDefault": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 2,
						"y": 0
					}
				},
				{
					"id": "Weapon",
					"name": "Arme",
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"parentType": "Gear",
					"props": {
						"dismantleLoot": "DismantleDagger"
					},
					"equipDefault": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 6
					}
				},
				{
					"id": "LeftHand",
					"name": "Main gauche",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleLeftHand",
						"nameCraftCategory": "Mains gauche"
					},
					"parentType": "Gear",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 6
					},
					"equipDefault": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 6
					}
				},
				{
					"id": "Shield",
					"name": "Bouclier",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 14,
						"y": 0
					},
					"parentType": "LeftHand",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleShield",
						"baseBonusDefault": "ShieldBase",
						"nameCraftCategory": "Boucliers"
					},
					"equipDefault": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "Armor",
					"name": "Armure de base",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 0
					},
					"parentType": "Gear",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleLightArmor",
						"baseBonusDefault": "PeopleArmorBase",
						"nameCraftCategory": "Armures",
						"backpackName": "Backpack1"
					},
					"equipDefault": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 15,
						"y": 0
					}
				},
				{
					"id": "Accessory",
					"name": "Accessoire",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 6
					},
					"parentType": "Gear",
					"props": {
						"isCraftSeparator": true,
						"nameCraftCategory": "Accessoires"
					}
				},
				{
					"id": "ArmorLight",
					"name": "Armure légère",
					"parentType": "Armor",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 7
					},
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleLightArmor",
						"baseBonusDefault": "LightArmorBase",
						"backpackName": "BackpackLight"
					},
					"equipDefault": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 7
					}
				},
				{
					"id": "ArmorMedium",
					"name": "Armure intermédiaire",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 7
					},
					"parentType": "ArmorLight",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleMediumArmor",
						"baseBonusDefault": "MediumArmorBase",
						"backpackName": "BackpackMedium"
					},
					"equipDefault": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 7
					}
				},
				{
					"id": "ArmorHeavy",
					"name": "Armure lourde",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 0
					},
					"parentType": "ArmorMedium",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"dismantleLoot": "DismantleHeavyArmor",
						"baseBonusDefault": "HeavyArmorBase",
						"backpackName": "BackpackHeavy"
					},
					"equipDefault": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 0
					}
				},
				{
					"id": "AnimalArmor",
					"name": "Armure d'animaux",
					"props": {
						"isCraftSeparator": true,
						"dismantleLoot": "DismantleHeavyArmor",
						"nameCraftCategory": "Armures d'animaux"
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 17,
						"y": 0
					},
					"parentType": "Armor",
					"equipDefault": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 17,
						"y": 0
					}
				},
				{
					"id": "HorseArmor",
					"name": "Armure de poney",
					"props": {
						"isCraftSeparator": true
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 17,
						"y": 0
					},
					"equipDefault": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 17,
						"y": 0
					},
					"parentType": "AnimalArmor"
				},
				{
					"id": "TradeGoods",
					"name": "Marchandises",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"props": {
						"wealthFactor": 3,
						"sellPriceFactor": 0.7
					}
				},
				{
					"id": "Luxuries",
					"name": "Objet de Luxe",
					"props": {
						"wealthFactor": 3
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "Miscellaneous",
					"name": "Divers",
					"props": {
						"isCraftSeparator": true,
						"nameCraftCategory": "Divers"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 3
					}
				},
				{
					"id": "Consumable",
					"name": "",
					"props": {
						"wealthFactor": 1
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "Oil",
					"name": "Huile",
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"nameCraftCategory": "Huiles"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 13
					},
					"parentType": "Consumable"
				},
				{
					"id": "Component",
					"name": "Composant",
					"props": {
						"isCraftSeparator": true,
						"sellPriceFactor": 0.3,
						"wealthFactor": 1,
						"nameCraftCategory": "Composants"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 5
					}
				},
				{
					"id": "Food",
					"name": "Nourriture",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 7
					},
					"props": {
						"isCraftSeparator": true,
						"nameCraftCategory": "Nourritures"
					}
				},
				{
					"id": "Meat",
					"name": "Viande",
					"props": {},
					"parentType": "Food",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 6
					}
				},
				{
					"id": "CookedMeat",
					"name": "Viande",
					"props": {},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 1,
						"y": 6
					},
					"parentType": "Meat"
				},
				{
					"id": "Corpse",
					"name": "Restes",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Meat"
				},
				{
					"id": "Fish",
					"name": "Poisson",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Meat"
				},
				{
					"id": "FreshwaterFish",
					"name": "Poisson d'eau douce",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Fish"
				},
				{
					"id": "PreparedFish",
					"name": "Poisson préparé",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Fish"
				},
				{
					"id": "CookedFish",
					"name": "Poisson",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Fish"
				},
				{
					"id": "Vegetables",
					"name": "Légumes",
					"props": {},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 6
					},
					"parentType": "Food"
				},
				{
					"id": "Fruits",
					"name": "Fruits",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Vegetables"
				},
				{
					"id": "Alcohol",
					"name": "Alcool",
					"props": {
						"nameCraftCategory": "Alcools",
						"isCraftSeparator": true
					},
					"parentType": "Food",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 2,
						"y": 6
					}
				},
				{
					"id": "CookedMeal",
					"name": "Plat préparé",
					"props": {
						"isCraftSeparator": true,
						"nameCraftCategory": "Plats préparé"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 6
					},
					"parentType": "Food"
				},
				{
					"id": "Tisane",
					"name": "Infusion",
					"props": {
						"isCraftSeparator": true
					},
					"parentType": "CookedMeal",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "Tool",
					"name": "Matériel de camp",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 11
					},
					"props": {
						"sellPriceFactor": 0.3,
						"flags": 1,
						"nameCraftCategory": "Matériels de camp",
						"isCraftSeparator": true
					}
				},
				{
					"id": "ToolProd",
					"name": "Matériel de camp de production",
					"props": {
						"sellPriceFactor": 0.3,
						"flags": 1,
						"nameCraftCategory": "Matériels de camp de production",
						"isCraftSeparator": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 11
					},
					"parentType": "Tool"
				},
				{
					"id": "Command",
					"name": "Commandement",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 6
					},
					"props": {
						"flags": 1
					}
				},
				{
					"id": "Resolution",
					"name": "Résolution",
					"props": {
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "Recipe",
					"name": "Recette",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"props": {
						"flags": 1
					}
				},
				{
					"id": "SkillManual",
					"name": "Manual",
					"props": {
						"wealthFactor": 1
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Consumable"
				},
				{
					"id": "Remedy",
					"name": "Remède",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 6
					},
					"props": {
						"isCraftSeparator": true,
						"wealthFactor": 1,
						"nameCraftCategory": "Remèdes"
					}
				},
				{
					"id": "Map",
					"name": "Carte",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "Antiquity",
					"name": "Antiquité",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "SmallAntiquity",
					"name": "Antiquité",
					"props": {
						"wealthFactor": 1
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Antiquity"
				},
				{
					"id": "BigAntiquity",
					"name": "Antiquité",
					"props": {
						"wealthFactor": 1
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Antiquity"
				},
				{
					"id": "Codex",
					"name": "Codex",
					"props": {
						"flags": 1,
						"wealthFactor": 2
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "Rune",
					"name": "Rune",
					"props": {
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "Trinket",
					"name": "Babiole",
					"props": {
						"wealthFactor": 2
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "Plants",
					"name": "Plantes",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Component"
				},
				{
					"id": "Flowers",
					"name": "Fleurs",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Plants"
				},
				{
					"id": "TrackMap",
					"name": "Carte de Traque",
					"props": {
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				},
				{
					"id": "StrategicPlan",
					"name": "Plan stratégique",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"parentType": "Consumable"
				},
				{
					"id": "Event",
					"name": "",
					"props": {},
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					}
				}
			],
			"props": {},
			"separators": [
				{
					"title": "Equipment",
					"id": "Sword"
				},
				{
					"title": "EquipmentType",
					"id": "Gear"
				},
				{
					"title": "Items",
					"id": "TradeGoods"
				}
			]
		},
		{
			"name": "itemType@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "4",
					"name": "sellPriceFactor",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "isCraftSeparator",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:Unique,TwoHands,Bundle",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "wealthFactor",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:loot",
					"name": "dismantleLoot",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:item",
					"name": "baseBonusDefault",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "backpackName",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "nameCraftCategory",
					"opt": true,
					"kind": "localizable"
				}
			]
		},
		{
			"name": "item",
			"columns": [
				{
					"typeStr": "14",
					"name": "icon"
				},
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "6:itemType",
					"name": "type",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "3",
					"name": "price",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "weight"
				},
				{
					"typeStr": "5:C,U,R,Legendary",
					"name": "rarity",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "desc",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "8",
					"name": "baseBonus"
				},
				{
					"typeStr": "17",
					"name": "props",
					"editor": {
						"categories": null
					}
				},
				{
					"typeStr": "17",
					"name": "tool",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "iconeDone",
					"editor": {
						"categories": [
							"todoInfo"
						]
					}
				}
			],
			"lines": [
				{
					"id": "Unknown",
					"name": "",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 2
					},
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Gold",
					"name": "Krowns",
					"weight": 0,
					"props": {
						"hidden": true,
						"startQuantity": 100,
						"wealth": 2,
						"startQuantityDifficultyBonus": [
							{
								"qty": 200,
								"difficulty": 0
							},
							{
								"qty": 100,
								"difficulty": 1
							},
							{
								"qty": 0,
								"difficulty": 2
							}
						]
					},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 0,
						"y": 1
					},
					"baseBonus": [],
					"desc": "Une monnaie courante utilisée partout dans le monde.",
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Influence",
					"name": "Influence",
					"weight": 0,
					"props": {
						"hidden": true,
						"startQuantity": 10
					},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 12,
						"y": 3
					},
					"baseBonus": [],
					"desc": "Votre <b>Influence</b> peut être utilisée pour recruter de nouveaux Compagnons ou effectuer certaines actions.",
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "ActionPoint",
					"name": "Point de Bravoure",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true
					},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 4
					},
					"desc": "Utilisez vos points de <b>Bravoure</b> en combat pour utiliser certaines compétences. Vous en récupérez une partie après chaque repos.",
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Setting",
					"name": "? ? ? ? ?",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true
					},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 4,
						"y": 1
					},
					"desc": "Chaque région possède son propre scénario dont vous pouvez suivre l'évolution ici.\n\n<bad>Vous n'avez pas encore commencé le scénario de cette région.</bad>",
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Dummy",
					"name": "Restes d'objet",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 2
					},
					"desc": "Un vieil objet qui n'existe plus.",
					"price": 1,
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "PathBonus",
					"name": "Bonus de voie",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 19
					},
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "SkillBonus",
					"name": "Bonus de capacité",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 19
					},
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "StartWanted",
					"name": "Soupçon",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 2
					},
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "StartXP",
					"name": "Expérience des compagnons",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 2
					},
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Light",
					"name": "Lumière",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 3,
						"y": 5
					},
					"desc": "",
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "Happiness",
					"name": "Bonheur",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"startQuantity": 10
					},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 2,
						"y": 4
					},
					"group": 0,
					"iconeDone": true
				},
				{
					"id": "DaggerBase",
					"name": "Dague de base",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Dexterity",
							"upValue": 57
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Dagger",
					"__ignoreLoc__": true
				},
				{
					"id": "MaceBase",
					"name": "Masse de base",
					"weight": 1.5,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength",
							"upValue": 35
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Mace",
					"__ignoreLoc__": true
				},
				{
					"id": "Mace2HBase",
					"name": "Masse à deux mains de base",
					"weight": 3,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Strength",
							"upValue": 50
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Mace2H",
					"__ignoreLoc__": true
				},
				{
					"id": "AxeBase",
					"name": "Hache de base",
					"weight": 1.5,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength",
							"upValue": 35
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Axe",
					"__ignoreLoc__": true
				},
				{
					"id": "Axe2HBase",
					"name": "Hache à 2 mains de base",
					"weight": 3,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Strength",
							"upValue": 50
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Axe2H",
					"__ignoreLoc__": true
				},
				{
					"id": "SwordBase",
					"name": "Épée  de base",
					"weight": 1.5,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength",
							"upValue": 35
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Sword",
					"__ignoreLoc__": true
				},
				{
					"id": "Sword2HBase",
					"name": "Épée à 2 mains de base",
					"weight": 3,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Strength",
							"upValue": 50
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Sword2H",
					"__ignoreLoc__": true
				},
				{
					"id": "PolearmsBase",
					"name": "Lance de base",
					"weight": 2,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Strength",
							"upValue": 50
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu",
						"model": "chars/Weapons/Polearm_02.fbx"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Polearm",
					"__ignoreLoc__": true,
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "BowBase",
					"name": "Arc de base",
					"weight": 1.5,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Dexterity",
							"upValue": 57
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Bow",
					"__ignoreLoc__": true
				},
				{
					"id": "WandBase",
					"name": "Wand de base",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Willpower",
							"upValue": 35
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Wand",
					"__ignoreLoc__": true
				},
				{
					"id": "ShieldBase",
					"name": "Bouclier de base",
					"weight": 4,
					"baseBonus": [
						{
							"value": 4,
							"attribute": "Armor",
							"upValue": 84
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Shield",
					"__ignoreLoc__": true
				},
				{
					"id": "HeavyArmorBase",
					"name": "Armure lourde de base",
					"weight": 5,
					"baseBonus": [
						{
							"value": 14,
							"attribute": "Armor",
							"upValue": 280
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": -2,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "ArmorHeavy",
					"__ignoreLoc__": true
				},
				{
					"id": "MediumArmorBase",
					"name": "Armure intermédiaire de base",
					"weight": 3,
					"baseBonus": [
						{
							"value": 12,
							"attribute": "Armor",
							"upValue": 193
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "ArmorMedium",
					"__ignoreLoc__": true
				},
				{
					"id": "LightArmorBase",
					"name": "Armure légère de base",
					"weight": 2,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "Armor",
							"upValue": 132
						},
						{
							"value": 2,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "ArmorLight",
					"__ignoreLoc__": true
				},
				{
					"id": "PeopleArmorBase",
					"name": "Vêtement de base",
					"weight": 1,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "Armor",
							"upValue": 92
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 2,
					"type": "Armor",
					"__ignoreLoc__": true
				},
				{
					"id": "DaggerStart",
					"name": "Surin rouillé",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Dexterity"
						}
					],
					"props": {
						"model": "chars/Weapons/Dagger_01.fbx",
						"skill": "Stab",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Dagger",
					"price": 50,
					"desc": "Un vieux surin rouillé.",
					"rarity": 0,
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerCommonCivilian",
					"name": "Surin",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Dexterity",
							"upValue": 57
						}
					],
					"props": {
						"model": "chars/Weapons/Dagger_CommonCivilian.fbx",
						"skill": "KnifeStrike"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"type": "Dagger",
					"price": 50,
					"rarity": 0,
					"desc": "Un simple couteau sans grande valeur.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerCommonOutlaws",
					"name": "Dague abimée",
					"weight": 0.5,
					"props": {
						"model": "chars/Weapons/Dagger_Rare_Outlaws.fbx",
						"skill": "Poisoning"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Dagger",
					"rarity": 0,
					"baseBonus": [],
					"price": 72,
					"desc": "La lame émoussée de cette dague est encore capable d'infliger de gros dégâts.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerArena",
					"name": "Dague d'arène",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Dagger_Arena.fbx",
						"skill": "BetweenTheEyes",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Dagger",
					"price": 103,
					"rarity": 2,
					"desc": "La garde a beau être un peu usée, la lame est à peine ébréchée. ",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerUncoCraftT1",
					"name": "Dague en fer",
					"weight": 0.5,
					"props": {
						"model": "chars/Weapons/Dagger_02.fbx",
						"skill": "Stab",
						"disableLoot": true,
						"requireLevel": 2,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"rarity": 1,
					"type": "Dagger",
					"baseBonus": [],
					"price": 91,
					"desc": "Le tranchant de cette dague est redoutable.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerUncoCraftT2",
					"name": "Serpe fantôme",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Dagger_CraftT2.fbx",
						"skill": "Stab",
						"disableLoot": true,
						"requireLevel": 5,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 4,
						"y": 2,
						"height": 2
					},
					"type": "Dagger",
					"rarity": 1,
					"desc": "Il se dégage de cette arme une énergie étrange et effrayante.",
					"price": 128,
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerUncoCraftT3",
					"name": "Couillette en givracier",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Dagger_CraftT3.fbx",
						"skill": "Stab",
						"disableLoot": true,
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"group": 3,
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Dagger",
					"price": 163,
					"rarity": 1,
					"desc": "Une dague dont le pommeau a une forme assez évocatrice.",
					"iconeDone": true
				},
				{
					"id": "DaggerUncoCraftT4",
					"name": "Stiletto en acier akhedien",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Dagger_06.fbx",
						"skill": "Stab",
						"disableLoot": true,
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 3,
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Dagger",
					"rarity": 2,
					"desc": "Une arme qui sait se faufiler dans les défauts des armures.",
					"price": 232
				},
				{
					"id": "DaggerUncoGuard",
					"name": "Dague de tacticien",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Dagger_Arena.fbx",
						"skill": "AttackOrder"
					},
					"type": "Dagger",
					"price": 103,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"desc": "Si une arme pouvait porter chance, ce serait celle-ci.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerUncoInquisition",
					"name": "Cinquedea de l'Inquisition",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Dagger_05.fbx",
						"skill": "Hysteria"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "Dagger",
					"price": 103,
					"rarity": 1,
					"desc": "Une arme affutée, aussi redoutable que les inquisiteurs qui l'affectionnent.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerUncoTrackers",
					"name": "Serpe d'Harag",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"skill": "Slaughter",
						"model": "chars/Weapons/Dagger_Harag.fbx"
					},
					"type": "Dagger",
					"price": 103,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"desc": "Plus on regarde cette serpe, plus sa ressemblance avec une griffe est frappante.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerRareOutlaws",
					"name": "Dague du meneur",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"skill": "SneakyWhirlwind",
						"model": "chars/Weapons/Dagger_Rare_Outlaws.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Dagger",
					"price": 134,
					"rarity": 2,
					"desc": "Une lame courte, pratique et acérée. Très prisée des brigands.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerRareFugitive09",
					"name": "L'Ogresse",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveDaggerBandits",
						"model": "chars/Weapons/Dagger_Fugitif.fbx",
						"disableLoot": true,
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Dagger",
					"price": 134,
					"rarity": 2,
					"desc": "L’Ogre n’a pas tant utilisé cette dague pour tuer que pour menacer les parents rétifs à lui vendre leurs enfants.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerRareFugitive16",
					"name": "Gardancienne",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveDaggerBandits",
						"model": "chars/Weapons/Dagger_Fugitif.fbx",
						"disableLoot": true,
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Dagger",
					"price": 134,
					"rarity": 2,
					"desc": "La garde de cette dague se révèle très utile pour fracasser les tempes des ennemis.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerRareDeserters",
					"name": "Dague du pilleur",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"skill": "SurpriseAttack",
						"feature": "Difficulty_Update",
						"model": "chars/Weapons/Dagger_Rare.fbx"
					},
					"iconeDone": true,
					"group": 3,
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 1,
						"y": 6,
						"height": 2
					},
					"type": "Dagger",
					"price": 134,
					"rarity": 2,
					"desc": "Cette dague a égorgé plus d'un paysan innocent."
				},
				{
					"id": "Viper",
					"name": "Vipère",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Dagger_Viper.fbx",
						"skill": "ToxicBlade",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "Dagger",
					"price": 174,
					"rarity": 3,
					"desc": "Une arme conçue pour ne laisser aucune chance à son adversaire.",
					"group": 3,
					"iconeDone": true
				},
				{
					"id": "DaggerLegendaryRuinG2",
					"name": "Kriss de Behedite",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Dagger_04.fbx",
						"skill": "BeheditePenalty",
						"flags": 128
					},
					"group": 3,
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Dagger",
					"rarity": 3,
					"price": 174,
					"desc": "Les Anciens ont créé cette arme comme un hommage. Il n'y a aucune chance que cette arme ait réellement appartenu à Behedite.",
					"iconeDone": true
				},
				{
					"id": "DaggerCrook",
					"name": "Saex du tueur",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Dagger_BossLegendary.fbx",
						"skill": "GluckStiffingAttack",
						"flags": 128,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 3,
					"type": "Dagger",
					"price": 174,
					"rarity": 3,
					"icon": {
						"file": "ui/Icons/GearIcons/DaggersIcons.png",
						"size": 96,
						"x": 2,
						"y": 6,
						"height": 2
					},
					"desc": "Légère et effilée, l'arme de Kristoff Kruppe n'a pas sa pareille pour trancher des gorges."
				},
				{
					"id": "MaceStart",
					"name": "Vieux gourdin",
					"weight": 1.5,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Strength"
						}
					],
					"props": {
						"model": "chars/Weapons/Mace_01.fbx",
						"skill": "Crushing",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"price": 49,
					"desc": "Un vieux gourdin dont le manche est presque fendu.",
					"rarity": 0,
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceCommonCivilian",
					"name": "Gourdin ",
					"weight": 1.5,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength",
							"upValue": 35
						}
					],
					"props": {
						"model": "chars/Weapons/Mace_01.fbx",
						"skill": "MaceStrike"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"price": 50,
					"rarity": 0,
					"desc": "Tout peut servir à la confection d'un gourdin : du pied de table au morceau de branche, les gens du peuple sont plein de ressources.",
					"type": "Mace"
				},
				{
					"id": "MaceCommonGuard",
					"name": "Bec de corbin de la Garde",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace_02.fbx",
						"skill": "HeavyStrike"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"rarity": 0,
					"price": 70,
					"desc": "Si cette arme est aussi courante dans les rangs de la Garde, c'est grâce à sa grande maniabilité.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceCommonInquisition",
					"name": "Bec de corbin de l'Inquisition",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "ForcefulInterrogation",
						"model": "chars/Weapons/Mace_05.fbx"
					},
					"type": "Mace",
					"price": 70,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"desc": "L'ombre de ce bec de corbin hante les cauchemars de Bélérion à Alazar.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceArena",
					"name": "Masse cloutée d'arène",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace_02.fbx",
						"skill": "ThunderousBlow",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"price": 100,
					"rarity": 2,
					"desc": "Cette arme manque peut-être d'élégance mais on ne peut pas lui résister.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceUncoAlazar",
					"name": "Masse à ailettes d'Alazar",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"model": "chars/Weapons/Mace_Alazar.fbx",
						"skill": "PreservingStrike"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"desc": "Les ailettes de cette masse rappellent les montagnes déchirées d'Alazar.",
					"price": 100,
					"rarity": 1
				},
				{
					"id": "MaceUncoCraftT1",
					"name": "Masse cloutée en fer",
					"weight": 1.5,
					"props": {
						"model": "chars/Weapons/Mace_02.fbx",
						"skill": "Crushing",
						"requireLevel": 2,
						"disableLoot": true,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"rarity": 1,
					"baseBonus": [],
					"price": 89,
					"desc": "Bien qu'elle manque un peu de raffinement, cette masse cloutée est tout à fait adéquate pour tuer son prochain.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceUncoCraftT2",
					"name": "Masse fantôme",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace_UncoCraftT2.fbx",
						"skill": "Crushing",
						"requireLevel": 5,
						"disableLoot": true,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"rarity": 1,
					"desc": "La force de cette petite masse sans prétention réside dans son équilibre impeccable.",
					"price": 129,
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceUncoCraftT3",
					"name": "Masse à ailettes en givracier",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace_UncoCraftT3.fbx",
						"skill": "Crushing",
						"requireLevel": 8,
						"disableLoot": true,
						"fixedLevel": 9
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"price": 169,
					"rarity": 1,
					"desc": "D'une redoutable efficacité, son maniement peut être assez salissant.",
					"iconeDone": true
				},
				{
					"id": "MaceUncoCraftT4",
					"name": "Morgenstern en acier akhedien",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace_06.fbx",
						"skill": "Crushing",
						"requireLevel": 11,
						"disableLoot": true,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"type": "Mace",
					"price": 234,
					"rarity": 2,
					"desc": "Rien ne résiste à cette morgenstern : armures, boucliers, crânes, tous sont écrasés avec la même efficacité.",
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "MaceUncoBandits",
					"name": "Masse cloutée du malfrat",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace_02.fbx",
						"skill": "PerniciousEngagement"
					},
					"type": "Mace",
					"price": 110,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"desc": "L'aspect rouillé de ses pointes rend l'arme encore plus effrayante.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceRareDeserters",
					"name": "Marteau du fuyard",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "Annihilation",
						"model": "chars/Weapons/Mace_03.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 2,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"price": 130,
					"rarity": 2,
					"desc": "Un solide marteau dont le manche est décoré de runes.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceRareFugitive03",
					"name": "Misère",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveMaceDeserters",
						"disableLoot": true,
						"model": "chars/Weapons/Mace_Fugitif.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Mace",
					"price": 130,
					"rarity": 2,
					"desc": "Meliance le Traître a scrupuleusement poli le métal pour en faire disparaître le blason du Comte Laheart.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceRareFugitive10",
					"name": "Purgatrice",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveMaceInquisition",
						"disableLoot": true,
						"model": "chars/Weapons/Mace_Fugitif.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Mace",
					"price": 130,
					"rarity": 2,
					"desc": "Bon nombre de crânes ont été purgés de leurs idées hérétiques grâce à cette masse.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceRareFugitive17",
					"name": "Assommeuse",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveMaceDeserters",
						"disableLoot": true,
						"model": "chars/Weapons/Mace_Fugitif.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Mace",
					"price": 130,
					"rarity": 2,
					"desc": "Malgré son nom rustique, cette masse est d'une grande qualité et a été forgée avec soin.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceRareLegion",
					"name": "Masse de la tête brûlée",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "FractiousSequence",
						"model": "chars/Weapons/Mace_Legion.fbx",
						"feature": "Difficulty_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 9,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"price": 130,
					"rarity": 2,
					"desc": "Les masses sont apparues dans la Légion au moment de l'invasion d'Alazar."
				},
				{
					"id": "MaceLegendaryRuin",
					"name": "Masse d'Erkeshet",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "ErkeshetWrath",
						"model": "chars/Weapons/Mace_04.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"rarity": 3,
					"price": 169,
					"desc": "Aucun forgeron actuel ne pourrait reproduire cette arme : la technique utilisée pour l’équilibrer est connue des seuls Anciens.",
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "MaceLegendaryArena1A1",
					"name": "Froidure",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace_Arena.fbx",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"price": 169,
					"rarity": 3,
					"desc": "Fait pour écraser et arracher les plaques d'armures, ce bec de corbin est une arme redoutable."
				},
				{
					"id": "MaceLegendaryArena1E1",
					"name": "Courtaud",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "TacticalSlam",
						"model": "chars/Weapons/Mace_Arena.fbx",
						"feature": "Alazar1_Update",
						"flags": 128
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Mace",
					"price": 169,
					"rarity": 3,
					"desc": "Ce bec de corbin a été forgé pour faciliter le maniement d'un bouclier."
				},
				{
					"id": "Mace2HStart",
					"name": "Marteau à deux mains rouillé",
					"weight": 3,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength"
						}
					],
					"props": {
						"model": "chars/Weapons/Mace2H_01.fbx",
						"skill": "Grinding",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"price": 75,
					"desc": "Un marteau imposant tacheté de rouille.",
					"rarity": 0,
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Mace2HCommonDeserters",
					"name": "Marteau à deux mains des Déserteurs",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace2H_02.fbx",
						"skill": "CoupDeGrace"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"price": 107,
					"rarity": 0,
					"desc": "Si la subtilité lui fait défaut, ce marteau à deux mains ne manque pas d'efficacité.",
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Mace2HUncoGuard",
					"name": "Marteau à deux mains de la Garde",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace2H_UncoGuard.fbx",
						"skill": "ArmorCrushing"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"price": 153,
					"rarity": 1,
					"desc": "D'abord considéré avec mépris pas les dirigeants de la Garde, sa puissance a peu à peu conquis les cœurs.",
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Mace2HUncoCraftT1",
					"name": "Marteau à deux mains en fer",
					"weight": 3,
					"props": {
						"model": "chars/Weapons/Mace2H_02.fbx",
						"skill": "Grinding",
						"requireLevel": 2,
						"disableLoot": true,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"rarity": 1,
					"baseBonus": [],
					"price": 127,
					"desc": "Transporter ce marteau n'est pas une mince affaire, mais il en vaut la peine une fois au combat.",
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Mace2HUncoCraftT2",
					"name": "Masse à deux mains fantôme",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace2H_CraftT2.fbx",
						"skill": "Grinding",
						"requireLevel": 5,
						"disableLoot": true,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"rarity": 1,
					"price": 175,
					"group": 5,
					"desc": "Le cuir fantôme assure une prise en main parfaite... peut-être un peu trop.",
					"iconeDone": true
				},
				{
					"id": "Mace2HUncoCraftT3",
					"name": "Grande masse à ailettes en givracier",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace2H_CraftT3.fbx",
						"skill": "Grinding",
						"requireLevel": 8,
						"disableLoot": true,
						"fixedLevel": 9
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 9,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"price": 220,
					"rarity": 1,
					"desc": "Une masse qui s'enfonce dans les casques comme dans du beurre.",
					"iconeDone": true
				},
				{
					"id": "Mace2HUncoCraftT4",
					"name": "Morgenstern à deux mains en acier akhedien",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace2H_06.fbx",
						"skill": "Grinding",
						"requireLevel": 11,
						"disableLoot": true,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 5,
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"price": 272,
					"rarity": 2,
					"desc": "Lourde mais extrêmement résistante, cette morgenstern est connue pour faire des ravages sur un champ de bataille."
				},
				{
					"id": "Mace2HRareCompanions",
					"name": "Masse à deux mains du stipendié",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace2H_05.fbx",
						"skill": "Massacre"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"rarity": 2,
					"price": 199,
					"desc": "La simple vue de cette masse suffit à donner des sueurs froides aux contrebandiers. En tout cas, c'est ce que prétendent les mercenaires de la Fraternité.",
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Mace2HRareAlazar",
					"name": "Masse à ailettes colossale",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"model": "chars/Weapons/Mace2H_Alazar.fbx",
						"skill": "UnsettlingStrike"
					},
					"iconeDone": true,
					"group": 5,
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 9,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"desc": "Le nom des Colosses de l'armée d'Alazar vient du fait qu'ils manient cette impressionnante grande masse à ailettes.",
					"rarity": 2,
					"price": 199
				},
				{
					"id": "Mace2HRareFugitive01",
					"name": "Sournoise",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveMace2HCompanions",
						"disableLoot": true,
						"model": "chars/Weapons/Mace2H_Fugitif.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"height": 2
					},
					"type": "Mace2H",
					"desc": "Lorsque les marchands qu'il prétendait protéger s'endormaient, Rojen usait de cette masse pour leur fendre le crâne.",
					"price": 199,
					"rarity": 2,
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Mace2HRareFugitive15",
					"name": "Sans-espoir",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Mace2H_Fugitif.fbx",
						"skill": "FugitiveMace2HGuard",
						"disableLoot": true,
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"height": 2
					},
					"type": "Mace2H",
					"price": 199,
					"rarity": 2,
					"desc": "L'ombre de cette masse hante encore l'esprit des habitants d'Harag.",
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Lucilla",
					"name": "Lucilla",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "LucillaVengeance",
						"model": "chars/Weapons/Mace2H_Lucilla.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"price": 259,
					"rarity": 3,
					"desc": "Une morgenstern à deux mains dont le manche est recouvert de peau humaine. À qui a-t-elle pu appartenir ?",
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Mace2HInsect",
					"name": "Le Tonnerre des Tourbières",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "InsectSmash",
						"model": "chars/Weapons/Mace2H_Moskito.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"price": 259,
					"rarity": 3,
					"desc": "Le voyageur avisé saura passer outre l'aspect ridicule du Tonnerre des Tourbières pour ne retenir que sa redoutable efficacité contre les moustiques cardinaux.",
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Mace2HLegendaryRuinS1",
					"name": "Marteau de Dagan",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "DaganPunishment",
						"model": "chars/Weapons/Mace2H_04.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HHammersIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Mace2H",
					"price": 259,
					"rarity": 3,
					"desc": "Les ornements de ce marteau s'impriment en négatif dans la chair des ennemis. Une étonnante façon de décorer un champ de bataille.",
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "AxeStart",
					"name": "Hache à bois rouillée",
					"weight": 1.5,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Strength"
						}
					],
					"props": {
						"model": "chars/Weapons/Axe_01.fbx",
						"skill": "Gash",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"desc": "Cette hache est mangée par la rouille.",
					"price": 49,
					"rarity": 0,
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeCommonDeserters",
					"name": "Hache ébréchée",
					"weight": 1.5,
					"props": {
						"model": "chars/Weapons/Axe_02.fbx",
						"skill": "Bravado"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"rarity": 0,
					"baseBonus": [],
					"price": 70,
					"desc": "Une hache conçue pour couper du bois mais dont l'usage a quelque peu dévié.",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeCommonTrackers",
					"name": "Hache des Traqueurs",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe_Harag.fbx",
						"skill": "WildMarking"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"price": 70,
					"rarity": 0,
					"desc": "Les motifs complexes qui décorent le plat de la lame sont sensés repousser la Meute Fantôme.",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeUncoTrackers",
					"name": "Hache du Veneur",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe_Harag.fbx",
						"skill": "NaturalStrike"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 4,
						"y": 2,
						"height": 2
					},
					"type": "Axe",
					"price": 100,
					"rarity": 1,
					"desc": "Il a fallu plumer une mésange des marais entière pour orner cette hache.",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeArena",
					"name": "Hache de l'arène",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe_02.fbx",
						"skill": "PridefulStrike",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"price": 100,
					"rarity": 2,
					"desc": "De petites rayures indiquent que cette hache a été aiguisée plus que de raison.",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeUncoCraftT1",
					"name": "Hache en fer",
					"weight": 1.5,
					"props": {
						"model": "chars/Weapons/Axe_02.fbx",
						"skill": "Gash",
						"requireLevel": 2,
						"disableLoot": true,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"rarity": 1,
					"baseBonus": [],
					"price": 88,
					"desc": "La garde de cette hache est recouverte d’un cuir épais, permettant une meilleure prise en main de l’arme.",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeUncoCraftT2",
					"name": "Hache fantôme",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe_UncoCraftT2.fbx",
						"skill": "Gash",
						"requireLevel": 5,
						"disableLoot": true,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 4,
						"y": 6,
						"height": 2
					},
					"type": "Axe",
					"rarity": 1,
					"desc": "Les Traqueurs racontent que ces haches reconnaissent leurs forgerons comme leur unique maitre.",
					"price": 129,
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeUncoCraftT3",
					"name": "Hache en givracier",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe_UncoCraftT3.fbx",
						"skill": "Gash",
						"requireLevel": 8,
						"disableLoot": true,
						"fixedLevel": 9
					},
					"group": 6,
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 9,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"price": 169,
					"rarity": 1,
					"desc": "Le givracier contenu dans la lame de cette hache déploie toutes ses couleurs au clair de lune.",
					"iconeDone": true
				},
				{
					"id": "AxeUncoCraftT4",
					"name": "Hache en acier akhedien",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe_06.fbx",
						"skill": "Gash",
						"requireLevel": 11,
						"disableLoot": true,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 6,
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"price": 233,
					"rarity": 2,
					"desc": "Tellement difficile à forger qu'un seul modèle peut faire la fortune de son artisan."
				},
				{
					"id": "AxeRareFugitive07",
					"name": "Joras",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"skill": "FugitiveAxeCompanions",
						"model": "chars/Weapons/Axe_Fugitif.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Axe",
					"price": 110,
					"rarity": 2,
					"desc": "Il est écrit <i>Joras</i> sur le manche de cette hache, sans doute le propriétaire de cette dernière avant que Bartes ne la lui vole.",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeRareFugitive18",
					"name": "Hache du Traitre",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe_Fugitif.fbx",
						"skill": "NaturalStrike",
						"disableLoot": true,
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"price": 110,
					"rarity": 2,
					"desc": "Grâce aux krowns dérobés à la Garde de Ludern, Maudeg a amélioré cette hache tout au long de sa fuite.",
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeRareCompanion",
					"name": "Hache du porte-paix",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "Overconfidence",
						"feature": "Difficulty_Update",
						"model": "chars/Weapons/Axe_05.fbx"
					},
					"iconeDone": true,
					"group": 6,
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"price": 110,
					"rarity": 2,
					"desc": "On raconte que si les portes-paix ont été nommés ainsi, c'est grâce à leur hache caractéristique dont la simple vue suffit à apaiser les tensions."
				},
				{
					"id": "AxeLegendaryHarag",
					"name": "Dévouement",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "BionnAttack",
						"disableLoot": true,
						"model": "chars/Weapons/Axe_Harag_Champion.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 4,
						"y": 4,
						"height": 2
					},
					"type": "Axe",
					"rarity": 3,
					"desc": "Pendant près de vingt ans, les doigts de Bionn n’ont jamais desserré le manche de cette hache.",
					"price": 169,
					"group": 6,
					"iconeDone": true
				},
				{
					"id": "AxeLegendaryArena2G2",
					"name": "Victorieuse",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe_Arena.fbx",
						"skill": "SoakedAxe",
						"flags": 128
					},
					"group": 6,
					"type": "Axe",
					"price": 169,
					"rarity": 3,
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"desc": "Trivette Ragnol a scrupuleusement noté tous les Chocs des Arènes remportés grâce à Victorieuse sur son manche.",
					"iconeDone": true
				},
				{
					"id": "AxeLegendaryRuins",
					"name": "Hache de Nepti",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe_04.fbx",
						"skill": "Nepti",
						"flags": 128,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 6,
					"icon": {
						"file": "ui/Icons/GearIcons/1HAxesIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "Axe",
					"price": 169,
					"rarity": 3,
					"desc": "Cette hache ressemble davantage à une arme d'apparat qu'à un instrument de mort tant la finesse de ses gravures est délicate."
				},
				{
					"id": "Axe2HStart",
					"name": "Vieille hache à deux mains",
					"weight": 3,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength"
						}
					],
					"props": {
						"model": "chars/Weapons/Axe2H_01.fbx",
						"skill": "Mutilation",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Axe2H",
					"price": 75,
					"desc": "Une vieille hache dont le manche à moitié moisi semble tomber en morceaux.",
					"rarity": 0,
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "Axe2HCommonCompanions",
					"name": "Hache à deux mains de la Fraternité",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "Beheading",
						"model": "chars/Weapons/Axe2H_05.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "Axe2H",
					"rarity": 0,
					"price": 107,
					"desc": "Cette hache a récemment été adoptée par la Fraternité sous l'influence de Bélérion.",
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "Axe2HCommonTrackers",
					"name": "Grande hache des Traqueurs",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "Logging",
						"model": "chars/Weapons/Axe2H_Harag.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Axe2H",
					"price": 107,
					"rarity": 0,
					"desc": "Trois animaux composent l’âme de cette hache : des plumes d'une mésange des marais, un croc de crocopork et des poils d'un monstre de la Meute Fantôme.",
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "Axe2HUncoCraftT1",
					"name": "Hache à deux mains en fer",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "Mutilation",
						"model": "chars/Weapons/Axe2H_02.fbx",
						"requireLevel": 2,
						"disableLoot": true,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Axe2H",
					"rarity": 1,
					"price": 137,
					"desc": "On devine la griffe de son forgeron sur le manche.",
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "Axe2HUncoCraftT2",
					"name": "Grande hache fantôme",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "Mutilation",
						"model": "chars/Weapons/Axe2H_UncoCraftT2.fbx",
						"requireLevel": 5,
						"disableLoot": true,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 4,
						"y": 2,
						"height": 2
					},
					"type": "Axe2H",
					"rarity": 1,
					"desc": "Avec son amplitude confortable, cette grande hache permet de combattre plusieurs adversaires de front.",
					"price": 181,
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "Axe2HUncoCraftT3",
					"name": "Grande hache en grivacier",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "Mutilation",
						"model": "chars/Weapons/Axe2H_UncoCraftT3.fbx",
						"requireLevel": 8,
						"disableLoot": true,
						"fixedLevel": 9
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Axe2H",
					"rarity": 1,
					"price": 217,
					"desc": "Il faut veiller, lorsqu'on forge cette hache, à strictement respecter la proportion du fer et du grivacier.",
					"iconeDone": true
				},
				{
					"id": "Axe2HUncoCraftT4",
					"name": "Hache d'arme en acier akhedien",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "Mutilation",
						"model": "chars/Weapons/Axe2H_06.fbx",
						"requireLevel": 11,
						"disableLoot": true,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 7,
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Axe2H",
					"price": 276,
					"rarity": 2,
					"desc": "La tradition venue d'Akhed insiste sur le respect des gravures qui ornent la lame de cette hache."
				},
				{
					"id": "Axe2HUncoOutlaws",
					"name": "Grande Gueuse",
					"weight": 3,
					"props": {
						"skill": "Obliteration",
						"model": "chars/Weapons/Axe2H_02.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Axe2H",
					"rarity": 1,
					"baseBonus": [],
					"price": 153,
					"desc": "Alliée des brigands et autres marauds, la Grande Gueuse est synonyme de prestige chez les hors-la-loi.",
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "Axe2HUncoInquisition",
					"name": "Hache à deux mains de l’Œil",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe2H_05.fbx",
						"skill": "JusticeHand"
					},
					"type": "Axe2H",
					"price": 153,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"desc": "Aussi redoutable dans la décapitation de mécréants qu'à la confection d’un bûcher, cette hache versatile est très appréciée de l'Inquisition.",
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "Axe2HRareFugitive08",
					"name": "Révoltée",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe2H_Fugitif.fbx",
						"disableLoot": true,
						"skill": "FugitiveAxe2hGuard",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Axe2H",
					"price": 259,
					"rarity": 2,
					"desc": "Révoltée est une hache bien plus équilibrée que sa précédente propriétaire.",
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "Axe2HRareFugitive11",
					"name": "Juste châtiment",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe2H_Fugitif.fbx",
						"disableLoot": true,
						"skill": "FugitiveAxe2HDeserters",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Axe2H",
					"price": 259,
					"rarity": 2,
					"desc": "Sans aucun doute l'outil idéal pour une justice rapide et efficace.",
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "Splitter",
					"name": "Fendeuse",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Axe2H_Splitter.fbx",
						"skill": "SliceAndDice",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HAxesIcons.png",
						"size": 96,
						"x": 3,
						"y": 2,
						"height": 2
					},
					"type": "Axe2H",
					"price": 259,
					"rarity": 3,
					"desc": "La guerre affecta Alexa. Aussi, quand elle forgea Fendeuse, elle jura de s'en servir seulement pour couper du bois. Quelques jours plus tard, elle décapita un seigneur d'Alazar.",
					"group": 7,
					"iconeDone": true
				},
				{
					"id": "SwordStart",
					"name": "Glaive rouillé",
					"weight": 1.5,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Strength"
						}
					],
					"props": {
						"model": "chars/Weapons/Sword_01.fbx",
						"skill": "Slice",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"desc": "Un vieux glaive ayant jadis appartenu à un soldat.",
					"price": 52,
					"rarity": 0,
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "SwordCommonAlazar",
					"name": "Épée droite d'Alazar",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"model": "chars/Weapons/Sword_Alazar.fbx",
						"skill": "CautiousStrike"
					},
					"iconeDone": true,
					"group": 8,
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"desc": "Toute la sobriété d'Alazar résumée en une arme. ",
					"rarity": 0,
					"price": 74
				},
				{
					"id": "SwordCommonLegion",
					"name": "Glaive du légionnaire",
					"weight": 1.5,
					"props": {
						"model": "chars/Weapons/Sword_Legion.fbx",
						"skill": "MaintainingTheLine"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 9,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"rarity": 0,
					"baseBonus": [],
					"price": 74,
					"desc": "Ce glaive manque un peu de personnalité, mais il a été gracieusement fourni à son propriétaire par le royaume d'Edoran.",
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "SwordUncoCompanion",
					"name": "Épée de chevalier de la Fraternité",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword_05.fbx",
						"skill": "TeamStrike"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"rarity": 1,
					"desc": "Il suffit de regarder le nombre d'ornements sur la garde et la lame de cette épée pour savoir qu'elle appartient à la Fraternité.",
					"price": 105,
					"group": 8,
					"iconeDone": true,
					"tool": {}
				},
				{
					"id": "SwordUncoCraftT1",
					"name": "Falchion en fer",
					"weight": 1.5,
					"props": {
						"model": "chars/Weapons/Sword_02.fbx",
						"skill": "Slice",
						"disableLoot": true,
						"requireLevel": 2,
						"fixedLevel": 3
					},
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "Sword",
					"baseBonus": [],
					"price": 93,
					"desc": "Ce falchion est léger, très tranchant mais un peu trop souple.",
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "SwordUncoCraftT2",
					"name": "Glaive fantôme",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword_UncoCraftT2.fbx",
						"skill": "Slice",
						"disableLoot": true,
						"requireLevel": 5,
						"fixedLevel": 6
					},
					"type": "Sword",
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"desc": "Le cuir fantôme semble en quelque sorte avoir contaminé la lame de sa blancheur.",
					"price": 124,
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "SwordUncoCraftT3",
					"name": "Épée droite en givracier",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword_UncoCraftT3.fbx",
						"skill": "Slice",
						"disableLoot": true,
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"group": 8,
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"rarity": 1,
					"desc": "De telles épées peuvent se transmettre de génération en génération, tant le givracier est résistant.",
					"price": 168,
					"iconeDone": true
				},
				{
					"id": "SwordUncoCraftT4",
					"name": "Espadon en acier akhedien",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword_06.fbx",
						"skill": "Slice",
						"disableLoot": true,
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 8,
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"price": 236,
					"rarity": 2,
					"desc": "Une arme imposante et si belle qu'elle pourrait appartenir au Général lui-même."
				},
				{
					"id": "SwordRareInquisition",
					"name": "Épée de chevalier de l'Œil",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword_05.fbx",
						"skill": "ConsecratedStrike"
					},
					"type": "Sword",
					"rarity": 2,
					"desc": "L’Œil qui termine le pommeau de cette épée donne irrésistiblement envie de brûler des hérétiques.",
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"price": 137,
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "SwordRareFugitive02",
					"name": "Ferveur",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveSwordInquisition",
						"disableLoot": true,
						"model": "chars/Weapons/Sword_06.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"price": 137,
					"rarity": 2,
					"desc": "Au nom de la foi, Sylla a fait passer moults hérétiques et innocents par le fil de cet ulfberth.",
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "SwordRareFugitive19",
					"name": "Fortelame",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveSwordLegion",
						"disableLoot": true,
						"model": "chars/Weapons/Sword_06.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"price": 137,
					"rarity": 2,
					"desc": "Un mystère entoure ce glaive qui serait passé de propriétaire en propriétaire selon une logique sanguinaire.",
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "SwordRareGuard",
					"name": "Falchion du Défenseur",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "SkillfulBackAndForth",
						"feature": "Difficulty_Update",
						"model": "chars/Weapons/Sword_02.fbx"
					},
					"iconeDone": true,
					"group": 8,
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "Sword",
					"price": 137,
					"rarity": 2,
					"desc": "Une arme pratique que tous les forgerons des Cinq Royaumes sauraient réaliser les yeux fermés."
				},
				{
					"id": "SwordLegendaryRuin",
					"name": "Kopis de Mehyt",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword_04.fbx",
						"skill": "EternalGloryStrike",
						"disableLoot": true,
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"price": 178,
					"rarity": 3,
					"desc": "Forgée par les Anciens dans un métal inaltérable, cette épée a vaincu le temps lui-même.",
					"group": 8,
					"iconeDone": true
				},
				{
					"id": "SwordLegendaryArena1G2",
					"name": "Gloire",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "ValiantAssault",
						"disableLoot": true,
						"model": "chars/Weapons/Sword_Arena.fbx",
						"flags": 128
					},
					"group": 8,
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "Sword",
					"price": 178,
					"rarity": 3,
					"desc": "Destinée à assurer le succès de son porteur, cette arme a pourtant failli à sa mission en causant la perte de Toro, le champion de l'arène Bernna.",
					"iconeDone": true
				},
				{
					"id": "SwordLegendaryEvoland",
					"name": "Épée de Clink",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/SwordEvoland.fbx",
						"skill": "EvolandStrike",
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"flags": 128
					},
					"iconeDone": true,
					"group": 8,
					"icon": {
						"file": "ui/Icons/GearIcons/1HSwordsIcons.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"height": 2
					},
					"type": "Sword",
					"price": 178,
					"rarity": 3,
					"desc": "Cette épée semble avoir été forgée bien loin des Cinq Royaumes."
				},
				{
					"id": "Sword2HStart",
					"name": "Vieille épée longue",
					"weight": 3,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength"
						}
					],
					"props": {
						"model": "chars/Weapons/Sword2H_01.fbx",
						"skill": "Cleave",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Sword2H",
					"price": 76,
					"desc": "Une épée à la lame longue mais abîmée.",
					"rarity": 0,
					"group": 9,
					"iconeDone": true
				},
				{
					"id": "Sword2HCommonCompanions",
					"name": "Grande épée de chevalier de la Fraternité",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword2H_05.fbx",
						"skill": "Bladestorm"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "Sword2H",
					"rarity": 0,
					"price": 109,
					"desc": "Les zébrures de la lame indiquent qu'elle a connu de nombreux combats.",
					"group": 9,
					"iconeDone": true
				},
				{
					"id": "Sword2HCommonInquisition",
					"name": "Grande épée de chevalier de l'Inquisition",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "ViolentFlogging",
						"model": "chars/Weapons/Sword2H_05.fbx"
					},
					"type": "Sword2H",
					"rarity": 0,
					"price": 109,
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"desc": "Cette grande épée est l'une des armes les plus emblématiques de l'Inquisition.",
					"group": 9,
					"iconeDone": true
				},
				{
					"id": "Sword2HArena",
					"name": "Grand Falchion d'arène",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword2H_02.fbx",
						"skill": "Estocade",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "Sword2H",
					"price": 155,
					"rarity": 2,
					"desc": "Son propriétaire était un illustre gladiateur, sans doute tombé sous les acclamations du public.",
					"group": 9,
					"iconeDone": true
				},
				{
					"id": "Sword2HUncoCraftT1",
					"name": "Grand falchion en fer",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword2H_02.fbx",
						"skill": "Cleave",
						"disableLoot": true,
						"requireLevel": 2,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Sword2H",
					"rarity": 1,
					"price": 126,
					"desc": "Un grand falchion qui, à défaut d'avoir assez de tranchant pour décapiter un adversaire, peut lui briser la nuque.",
					"group": 9,
					"iconeDone": true
				},
				{
					"id": "Sword2HUncoCraftT2",
					"name": "Grand glaive fantôme",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword2H_CraftT2.fbx",
						"skill": "Cleave",
						"disableLoot": true,
						"requireLevel": 5,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Sword2H",
					"rarity": 1,
					"desc": "Il émane de ce grand glaive quelque chose d'unique et d'un peu effrayant qui pousse souvent son porteur à s'en défaire au moment de dormir.",
					"price": 179,
					"group": 9,
					"iconeDone": true
				},
				{
					"id": "Sword2HUncoCraftT3",
					"name": "Flamberge en givracier",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword2H_CraftT3.fbx",
						"skill": "Cleave",
						"disableLoot": true,
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"group": 9,
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Sword2H",
					"rarity": 1,
					"desc": "Cette flamberge aux reflets bleus attire les regards et la convoitise.",
					"price": 219,
					"iconeDone": true
				},
				{
					"id": "Sword2HUncoLegion",
					"name": "Spatha du légionnaire",
					"weight": 3,
					"props": {
						"skill": "Interception",
						"model": "chars/Weapons/Sword2H_Legion.fbx"
					},
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 9,
						"y": 0,
						"height": 2
					},
					"type": "Sword2H",
					"baseBonus": [],
					"price": 155,
					"desc": "La garde de cette arme a été réparée plusieurs fois. La lame, elle, n'est même pas ébréchée.",
					"group": 9,
					"iconeDone": true
				},
				{
					"id": "Sword2HRareAlazar",
					"name": "Flamberge du brigadier",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"model": "chars/Weapons/Sword2H_Alazar.fbx",
						"skill": "FortifyingStrike"
					},
					"iconeDone": true,
					"group": 9,
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Sword2H",
					"desc": "La flamberge utilisée par l'armée royale doit son apparence au grand maître de la peinture Sigurd Adr Alazar.",
					"rarity": 2,
					"price": 155
				},
				{
					"id": "Sword2HUncoCraftT4",
					"name": "Grand espadon en acier akhedien",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Sword2H_06.fbx",
						"skill": "Cleave",
						"disableLoot": true,
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 9,
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Sword2H",
					"price": 271,
					"rarity": 2,
					"desc": "Il faut autant d'expérience pour manier cette arme que pour la forger."
				},
				{
					"id": "Sword2HRareFugitive05",
					"name": "Frédégonde",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveSword2HBandits",
						"disableLoot": true,
						"model": "chars/Weapons/Sword2H_Fugitif.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 4,
						"y": 2,
						"height": 2
					},
					"type": "Sword2H",
					"price": 155,
					"rarity": 2,
					"desc": "Impossible de savoir d'où provient le nom de l'épée. Peut-être quelqu'un de cher au coeur la Vieille.",
					"group": 9,
					"iconeDone": true
				},
				{
					"id": "Sword2HRareFugitive13",
					"name": "Perdine",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "FugitiveSword2HCompanions",
						"model": "chars/Weapons/Sword2H_Fugitif.fbx",
						"disableLoot": true,
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 4,
						"y": 2,
						"height": 2
					},
					"type": "Sword2H",
					"price": 155,
					"rarity": 2,
					"desc": "La poignée de l'arme semble encore dégager une odeur de vinasse.",
					"group": 9,
					"iconeDone": true
				},
				{
					"id": "Sword2HRareOutlaws",
					"name": "Claymore du criminel",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "TreacherousSetback",
						"feature": "Difficulty_Update",
						"model": "chars/Weapons/Sword2H_02.fbx"
					},
					"iconeDone": true,
					"group": 9,
					"type": "Sword2H",
					"price": 155,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 1,
						"y": 4,
						"height": 2
					},
					"desc": "Lorsqu'elle s'émousse, les brigands continuent à l'utiliser comme une masse."
				},
				{
					"id": "Sword2HLegendaryArena1G2",
					"name": "Richesse",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "LightningSpin",
						"model": "chars/Weapons/Sword2H_ArenaBoss.fbx",
						"disableLoot": true,
						"flags": 128
					},
					"group": 9,
					"type": "Sword2H",
					"icon": {
						"file": "ui/Icons/GearIcons/2HSwordsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"rarity": 3,
					"price": 259,
					"desc": "Bien qu'elle n'aurait jamais rempli le rôle que son nom lui destinait, Kogo a refusé de se séparer de son arme fétiche.",
					"iconeDone": true
				},
				{
					"id": "PolearmStart",
					"name": "Fourche de paysan",
					"weight": 2,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength"
						}
					],
					"props": {
						"model": "chars/Weapons/Polearm_01.fbx",
						"skill": "Impalement",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"price": 74,
					"desc": "Une fourche pour retourner la terre et se révolter.",
					"rarity": 0,
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmCommonCivilian",
					"name": "Fourche de fermier",
					"weight": 2,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength",
							"upValue": 35
						}
					],
					"props": {
						"model": "chars/Weapons/Polearm_CommonCivilian.fbx",
						"skill": "ForkStrike"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"price": 74,
					"rarity": 0,
					"desc": "Une fourche qui a l'air d'avoir servie à chasser quelques manants.",
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmCommonGuard",
					"name": "Lance du veilleur",
					"weight": 2,
					"props": {
						"model": "chars/Weapons/Polearm_02.fbx",
						"skill": "StunningAssault"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"rarity": 0,
					"baseBonus": [],
					"price": 106,
					"desc": "Une lance banale qui a été améliorée avec les moyens du bord.",
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmArena",
					"name": "Lance d'arène",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Polearm_02.fbx",
						"skill": "MasteredWhirlwind",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 1,
						"y": 4,
						"height": 2
					},
					"type": "Polearm",
					"price": 152,
					"rarity": 2,
					"desc": "Le bois a bu un peu trop de sang et de sueur pour retrouver sa couleur d’origine.",
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmUncoAlazar",
					"name": "Hallebarde d'Alazar",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"model": "chars/Weapons/Polearm_Alazar.fbx",
						"skill": "DefensivePrecision"
					},
					"iconeDone": true,
					"group": 10,
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"desc": "La conception de la hallebarde d'Alazar a demandé la coopération étroite d'un érudit et d'un forgeron.",
					"rarity": 1,
					"price": 152
				},
				{
					"id": "PolearmUncoCraftT1",
					"name": "Lance en fer",
					"weight": 2,
					"props": {
						"model": "chars/Weapons/Polearm_02.fbx",
						"skill": "Impalement",
						"disableLoot": true,
						"requireLevel": 2,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"rarity": 1,
					"baseBonus": [],
					"price": 98,
					"desc": "Le forgeron qui a imaginé une telle arme devait en vouloir à quelqu'un.",
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmUncoCraftT2",
					"name": "Pique fantôme",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Polearm_CraftT2.fbx",
						"skill": "Impalement",
						"disableLoot": true,
						"requireLevel": 5,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"rarity": 1,
					"desc": "Le cuir fantôme permet à cette pique d'offrir à la fois allonge et solidité.",
					"price": 131,
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmUncoCraftT3",
					"name": "Hallebarde en givracier",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Polearm_CraftT3.fbx",
						"skill": "Impalement",
						"disableLoot": true,
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"group": 10,
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"price": 171,
					"rarity": 1,
					"desc": "Célèbre pour les ravages qu'elle a infligés aux légionnaires d'Edoran pendant la conquête d'Alazar, cette hallebarde est maniée par l'élite des piquiers.",
					"iconeDone": true
				},
				{
					"id": "PolearmUncoCraftT4",
					"name": "Corsèque en acier akhedien",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Polearm_06.fbx",
						"skill": "Impalement",
						"disableLoot": true,
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 10,
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"price": 233,
					"rarity": 2,
					"desc": "L'apparence de cette corsèque a peu évolué depuis son arrivée d'Akhed dans les Cinq Royaumes."
				},
				{
					"id": "PolearmUncoDeserters",
					"name": "Lance des Déserteurs",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Polearm_02.fbx",
						"skill": "TendonRupture"
					},
					"type": "Polearm",
					"price": 152,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"desc": "Autrefois, cette lance appartenait à une armée régulière, mais la vie au grand air l'a beaucoup changée.",
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmUncoLegion",
					"name": "Pilum de la Légion",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Polearm_Legion.fbx",
						"skill": "FunctionnalPairing"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"price": 152,
					"rarity": 1,
					"desc": "Un simple contact avec la hampe de ce pilum et on sent monter l’envie d’envahir Harag.",
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmRareLegion",
					"name": "Pilum d'officier",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Polearm_Legion.fbx",
						"skill": "BlowsFlurry"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"rarity": 2,
					"price": 198,
					"desc": "Les pilum des officiers de la Légion sont reconnaissables à leurs finitions, à leur robustesse mais aussi grâce au nom de leur propriétaire gravé sur leur hampe.",
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmRareFugitive04",
					"name": "Corsèque du souvenir",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"skill": "FugitivePolearmLegion",
						"model": "chars/Weapons/Polearm_Fugitif.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Polearm",
					"price": 198,
					"rarity": 2,
					"desc": "Obsédé par la gloire passée d'Edoran, le capitaine Gacius a fait forger une corsèque d'après un modèle ancien.",
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmRareFugitive14",
					"name": "Crocopique",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Polearm_Fugitif.fbx",
						"skill": "FugitivePolearmTrackers",
						"disableLoot": true,
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Polearm",
					"price": 198,
					"rarity": 2,
					"desc": "La silhouette massive d'un crocopork a été gravée dans la pointe de cette hallebarde. Le sang des ennemis la rend clairement visible.",
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmRareTrackers",
					"name": "Pique du pourchasseur",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"skill": "HuntingSecretTechnique",
						"feature": "Difficulty_Update",
						"model": "chars/Weapons/Polearm_Harag.fbx"
					},
					"iconeDone": true,
					"group": 10,
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"height": 2
					},
					"type": "Polearm",
					"price": 198,
					"rarity": 2,
					"desc": "Forgée pour venir à bout du cuir de la Meute Fantôme, les armures légères n'ont aucune chance face à cette pique."
				},
				{
					"id": "PolearmLegendaryRuinH1",
					"name": "Pertuisane de Horoun",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Polearm_04.fbx",
						"skill": "HorounStrike",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Polearm",
					"rarity": 3,
					"desc": "Impossible d’identifier la matière dans laquelle est taillée la hampe de cette pertuisane. Après quelques utilisations, il apparaît qu’elle est indestructible.",
					"price": 259,
					"group": 10,
					"iconeDone": true
				},
				{
					"id": "PolearmLegendaryGrinmeer",
					"name": "Libératrice",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"skill": "FenrisElimination",
						"model": "chars/Weapons/Polearm_06_Boss.fbx",
						"flags": 128
					},
					"group": 10,
					"type": "Polearm",
					"rarity": 3,
					"price": 259,
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 5,
						"y": 4,
						"height": 2
					},
					"desc": "Cette hallebarde devait appartenir à un Garde de Grinmeer mais pour une raison inconnue, Fenris en a retiré toutes les parties en cuir.",
					"iconeDone": true
				},
				{
					"id": "PolearmLegendaryPathKnowledge",
					"name": "Lance de Jéru",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"skill": "LightningCharge",
						"model": "chars/Weapons/Polearm_06_Boss.fbx",
						"flags": 128,
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 10,
					"icon": {
						"file": "ui/Icons/GearIcons/PolearmIcons.png",
						"size": 96,
						"x": 5,
						"y": 4,
						"height": 2
					},
					"type": "Polearm",
					"price": 259,
					"rarity": 3,
					"desc": "Au fondement de l'histoire des Cinq Royaumes, cette lance fut maniée par saint Jéru lui-même. "
				},
				{
					"id": "BowStart",
					"name": "Arc improvisé",
					"weight": 1.5,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Dexterity"
						}
					],
					"props": {
						"model": "chars/Weapons/Bow_Simple.fbx",
						"skill": "Shot",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 75,
					"desc": "L'étrange courbure du bois laisse penser que cet arc n'a pas été conçu par un maître.",
					"rarity": 0,
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowCommonAlazar",
					"name": "Arc d'Alazar",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"model": "chars/Weapons/Bow_Alazar.fbx",
						"skill": "MudShot"
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"height": 2
					},
					"type": "Bow",
					"desc": "Le bois est à peine visible sous les renforts de givracier.",
					"rarity": 0,
					"price": 107
				},
				{
					"id": "BowCommonOutlaws",
					"name": "Arc de pillard",
					"weight": 1.5,
					"props": {
						"model": "chars/Weapons/Bow_Curved.fbx",
						"skill": "ViciousShot"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"rarity": 0,
					"baseBonus": [],
					"price": 107,
					"desc": "La petite taille de cet arc permet à son archer de prendre la fuite facile sans s'encombrer.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowCommonLegion",
					"name": "Arc de la Légion",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Bow_Legion.fbx",
						"skill": "ShootOrder"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 107,
					"rarity": 0,
					"desc": "Cet arc court est facile à produire et à réparer, parfait pour équiper les nombreux archers de la Légion.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowArena",
					"name": "Arc d'arène",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Bow_Curved.fbx",
						"skill": "AimedShot",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 153,
					"rarity": 2,
					"desc": "Cet arc n'a pas une grande portée, comme s'il avait été conçu pour des endroits clos.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowUncoDeserters",
					"name": "Arc du fuyard",
					"weight": 1.5,
					"props": {
						"model": "chars/Weapons/Bow_Curved.fbx",
						"skill": "IncendiaryArrow"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "Bow",
					"rarity": 1,
					"baseBonus": [],
					"price": 153,
					"desc": "Taillé pour faire la fierté d'un seigneur et la gloire d'un soldat, cet arc a fini en de bien mauvaises mains.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowUncoCompanions",
					"name": "Arc de la Fraternité",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Bow_05.fbx",
						"skill": "KillShot"
					},
					"type": "Bow",
					"price": 153,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"desc": "Chaque arc de la Fraternité est unique : le propriétaire de celui-ci y a inscrit les prénoms de ses enfants.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowUncoCraftT1",
					"name": "Arc long",
					"weight": 1.5,
					"props": {
						"skill": "Shot",
						"model": "chars/Weapons/Bow_Curved.fbx",
						"disableLoot": true,
						"requireLevel": 2,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 1,
						"y": 4,
						"height": 2
					},
					"type": "Bow",
					"rarity": 1,
					"baseBonus": [],
					"price": 95,
					"desc": "Un arc en if, puissant et ravageur à manier avec précaution.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowUncoCraftT2",
					"name": "Arc fantôme",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Bow_CraftT2.fbx",
						"skill": "Shot",
						"disableLoot": true,
						"requireLevel": 5,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 2,
						"y": 2,
						"height": 2
					},
					"type": "Bow",
					"rarity": 1,
					"desc": "Quelque chose dans le cuir de monstre rend cet arc plus facile à manier.",
					"price": 121,
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowUncoCraftT3",
					"name": "Arc en grivacier",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Bow_CraftT3.fbx",
						"skill": "Shot",
						"disableLoot": true,
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"group": 11,
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 162,
					"rarity": 1,
					"desc": "La courbure de cet arc est étudiée : il ne risque pas de se briser en deux à chaque fois que vous tendez sa corde.",
					"iconeDone": true
				},
				{
					"id": "BowUncoCraftT4",
					"name": "Arc en acier akhedien",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Bow_06.fbx",
						"skill": "Shot",
						"disableLoot": true,
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 230,
					"rarity": 2,
					"desc": "Qui aurait pu prédire que renformer un arc à cet endroit précis pouvait le rendre aussi puissant ?"
				},
				{
					"id": "BowRareGuard",
					"name": "Arc de guerre",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "VolleyOfArrows",
						"model": "chars/Weapons/Bow_Curved.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 199,
					"rarity": 2,
					"desc": "Un arc de guerre commun mais léger et précis.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowRareTrackers",
					"name": "Arc du chasseur",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "WildShot",
						"model": "chars/Weapons/Bow_Harag.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 2,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 199,
					"rarity": 2,
					"desc": "Les Traqueurs sont avant tout des chasseurs : cet arc est leur arme de prédilection.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowRareFugitive06",
					"name": "Libérateur",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"skill": "FugitiveTrackersBow",
						"model": "chars/Weapons/Bow_06.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 199,
					"rarity": 2,
					"desc": "Contrairement aux arcs traditionnels d'Harag, aucune matière animale a été utilisée pour la fabrication de Libérateur.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowRareFugitive12",
					"name": "Vengeresse",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"skill": "FugitiveBowLegion",
						"model": "chars/Weapons/Bow_06.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 199,
					"rarity": 2,
					"desc": "La haine qui habitait la capitaine Eleora l'a poussée à graver le nom de son ennemie sur son arme.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowRareInquisition",
					"name": "Héraut de l'Œil",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "EyeArrow",
						"feature": "Difficulty_Update",
						"model": "chars/Weapons/Bow_05.fbx"
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"type": "Bow",
					"price": 199,
					"rarity": 2,
					"desc": "Maniés par les Messagers de l'Inquisition, ces arcs sont laissés en pleine lumière des jours durant pour recevoir la bénédiction de l'Œil."
				},
				{
					"id": "BowLegendaryEliteWorld",
					"name": "L'Indomptable ",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "PiercingArrow",
						"model": "chars/Weapons/Bow_BossLegendary.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 2,
						"y": 2,
						"height": 2
					},
					"type": "Bow",
					"rarity": 3,
					"desc": "Kaghal a gravé de minutieuses silhouettes dans le bois de l’arc. Elles content la jeunesse du guerrier.",
					"price": 259,
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowLegendaryRuinH1",
					"name": "Arc de Narsès",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "NarsesShot",
						"model": "chars/Weapons/Bow_04.fbx",
						"flags": 128
					},
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 259,
					"rarity": 3,
					"desc": "Il est difficile de bander cet arc mais sa puissance est sans commune mesure. Cela vient sans doute de sa corde, tissée avec minutie et dont les fibres ressemblent étrangement au pelage de la Bête.",
					"group": 11,
					"iconeDone": true
				},
				{
					"id": "BowLegendaryArenaH1",
					"name": "Limier",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"skill": "BestialShooting",
						"model": "chars/Weapons/Bow_Arena.fbx",
						"flags": 128,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/GearIcons/BowIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Bow",
					"price": 259,
					"rarity": 3,
					"desc": "Sous ses parures et ses renforts cuivrés, Limier était auparavant un authentique arc de Traqueur."
				},
				{
					"id": "WandStart",
					"name": "Basic Wand",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Willpower"
						}
					],
					"props": {
						"model": "chars/Weapons/Mace_01.fbx",
						"skill": "PainLess",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/1HHammersIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Wand",
					"price": 49,
					"desc": "",
					"rarity": 0,
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "ShieldStart",
					"name": "Couvercle de tonneau",
					"weight": 4,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Armor"
						},
						{
							"value": 10,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Weapons/Shield_01.fbx",
						"disableLoot": true,
						"fixedLevel": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Shield",
					"price": 36,
					"desc": "Un bouclier duquel se dégage une légère odeur de vinasse.",
					"rarity": 0,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ShieldCommonGeneric",
					"name": "Targe d'entraînement",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_02.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 1,
						"y": 8,
						"height": 2
					},
					"type": "Shield",
					"price": 36,
					"rarity": 0,
					"desc": "Cet adorable petit bouclier vous rappelle votre jeunesse.",
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ShieldCommonGuard",
					"name": "Targe de la Garde",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_CommonGuard.fbx",
						"skill": "EngagingSlam",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 1,
						"y": 4,
						"height": 2
					},
					"type": "Shield",
					"price": 51,
					"rarity": 0,
					"desc": "Une targe que les brigands connaissent tous."
				},
				{
					"id": "ShieldCommonLegionary",
					"name": "Targe de la Legion",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_CommonLegionary.fbx",
						"skill": "MotivatingSlam",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 1,
						"y": 6,
						"height": 2
					},
					"type": "Shield",
					"price": 51,
					"rarity": 0,
					"desc": "Les légionnaires dorment souvent avec leur targe accrochée dans le dos pour éviter les coups en traître."
				},
				{
					"id": "ShieldCommonAlazar",
					"name": "Targe d'Alazar",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_CommonAlazar.fbx",
						"feature": "Alazar1_Update",
						"skill": "ShieldSlam",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"type": "Shield",
					"price": 51,
					"rarity": 0,
					"desc": "Pendant la guerre d'Edor, Alazar aurait fait disparaitre une forêt entière pour fournir son armée en targes comme celle-ci.",
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"height": 2
					}
				},
				{
					"id": "ShieldCommonCraftT1",
					"name": "Targe",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_02.fbx",
						"skill": "Protection",
						"disableLoot": true,
						"flags": 0,
						"fixedLevel": 2
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 1,
						"y": 8,
						"height": 2
					},
					"type": "Shield",
					"price": 45,
					"desc": "Un petit bouclier en bois, solide et pratique.",
					"rarity": 0,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ShieldUncoAlazar",
					"name": "Écu d'Alazar",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_Alazar.fbx",
						"feature": "Alazar1_Update",
						"skill": "PowerfulBackhand",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "Shield",
					"price": 51,
					"rarity": 1,
					"desc": "Frappé de l'emblème l'Alazar et peint aux couleur du roi, cet écu est reconnaissable dans tous les Cinq Royaumes."
				},
				{
					"id": "ShieldArena",
					"name": "Écu de l'arène",
					"weight": 4,
					"props": {
						"skill": "ShieldSlam",
						"model": "chars/Weapons/Shield_Arena.fbx",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 2,
						"y": 6,
						"height": 2
					},
					"type": "Shield",
					"baseBonus": [],
					"price": 104,
					"desc": "Les renforts en fer permettent de dévier les mauvais coups et assurent la solidité de cet écu en bois.",
					"rarity": 2,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ShieldUncoGeneric",
					"name": "Targe d'entraînement renforcée",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_02.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 1,
						"y": 8,
						"height": 2
					},
					"type": "Shield",
					"rarity": 1,
					"price": 104,
					"desc": "Il semble que son possesseur n'avait pas les moyens de s'acheter un vrai bouclier et n'a fait que renforcer sa targe d'entrainement.",
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ShieldUncoSmugglers",
					"name": "Targe de Contrebandier",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_UncoSmugglers.fbx",
						"passiveSkill": "CounterArrows",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 0,
						"y": 6,
						"height": 2
					},
					"type": "Shield",
					"price": 104,
					"rarity": 1,
					"desc": "Ce bouclier a clairement été repeint : les couleurs de son ancien propriétaire sont encore visibles sous la dernière couche."
				},
				{
					"id": "ShieldUncoCompanions",
					"name": "Targe de la Fraternité",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_UncoCompanions.fbx",
						"skill": "AgressiveShielding",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"type": "Shield",
					"price": 104,
					"rarity": 1,
					"desc": "Cette targe est tellement caractéristique de la Fraternité qu'elle en est devenue l'emblème."
				},
				{
					"id": "ShieldUncoCraftT1",
					"name": "Targe renforcée",
					"weight": 4,
					"props": {
						"skill": "Protection",
						"model": "chars/Weapons/Shield_CraftT1.fbx",
						"disableLoot": true,
						"requireLevel": 2,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Shield",
					"rarity": 1,
					"baseBonus": [],
					"price": 92,
					"desc": "La targe renforcée est un classique indémodable dans le mercenariat.",
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ShieldUncoCraftT2",
					"name": "Targe fantôme",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"skill": "Protection",
						"model": "chars/Weapons/Shield_CraftT2.fbx",
						"disableLoot": true,
						"requireLevel": 5,
						"fixedLevel": 6
					},
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Shield",
					"price": 135,
					"rarity": 1,
					"desc": "Le port d'un tel bouclier rendrait n'importe qui intimidant.",
					"iconeDone": true
				},
				{
					"id": "ShieldUncoCraftT3",
					"name": "Écu en givracier",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"skill": "Protection",
						"model": "chars/Weapons/Shield_CraftT3.fbx",
						"disableLoot": true,
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"height": 2
					},
					"type": "Shield",
					"rarity": 1,
					"desc": "Un écu que l'on repeint généralement à ses couleurs.",
					"price": 171,
					"iconeDone": true
				},
				{
					"id": "ShieldUncoCraftT4",
					"name": "Écu lourd en acier akhedien",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"skill": "Protection",
						"model": "chars/Weapons/Shield_CraftT4.fbx",
						"disableLoot": true,
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Shield",
					"price": 260,
					"rarity": 2,
					"desc": "Le personnage peint sur cet écu ressemble à sainte Eleor mais il en est dans la Légion pour prétendre qu'il s'agit en fait du Général Edor."
				},
				{
					"id": "ShieldUncoBandits",
					"name": "Écu des Bandits",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_UncoBandits.fbx",
						"passiveSkill": "CounterArrows",
						"skillRequireLevel": true
					},
					"type": "Shield",
					"price": 104,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 2,
						"y": 2,
						"height": 2
					},
					"desc": "Un écu qui a déjà maintes fois servi d’arme contondante.",
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ShieldUncoTrackers",
					"name": "Targe des Traqueurs",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_Harag.fbx",
						"passiveSkill": "AnimalLink",
						"skillRequireLevel": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 4,
						"y": 2,
						"height": 2
					},
					"type": "Shield",
					"price": 104,
					"rarity": 1,
					"desc": "Cette targe est conçue pour résister aux griffes de la Meute Fantôme : il sera difficile d’en trouver une meilleure.",
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ShieldRareGeneric",
					"name": "Rondache de vétéran",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_05.fbx",
						"skill": "Protection",
						"skillRequireLevel": true
					},
					"type": "Shield",
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"desc": "Cette rondache est faite pour vieillir avec son possesseur.",
					"price": 135,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ShieldRareDeserter",
					"name": "Rondache du caporal",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_RareDeserter.fbx",
						"skill": "Protection",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 3,
						"y": 2,
						"height": 2
					},
					"type": "Shield",
					"price": 135,
					"rarity": 2,
					"desc": "Censé faire la fierté de son armée, le caporal à qui appartenait cette rondache a déserté en emportant ce bouclier avec lui."
				},
				{
					"id": "ShieldRareInquisition",
					"name": "Rondache du paladin",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_RareInquisition.fbx",
						"skill": "BurningShieldSlam",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 3,
						"y": 4,
						"height": 2
					},
					"type": "Shield",
					"price": 135,
					"rarity": 2,
					"desc": "Composante essentielle de l'équipement du paladin, cette rondache a été bénie dans la cathédrale d'Edoran."
				},
				{
					"id": "ShieldRareLegion",
					"name": "Scutum de la tête brûlée",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"skill": "MartialImpact",
						"feature": "Difficulty_Update",
						"model": "chars/Weapons/Shield_RareLegion.fbx",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Shield",
					"price": 135,
					"rarity": 2,
					"desc": "Ce bouclier reconnaissable entre mille a joué un rôle crucial lors de la guerre d'Edor."
				},
				{
					"id": "ShieldRareGuard",
					"name": "Rondache du défenseur",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"skill": "QuickShieldBlow",
						"feature": "Difficulty_Update",
						"model": "chars/Weapons/Shield_RareGuard.fbx",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 4,
						"y": 8,
						"height": 2
					},
					"type": "Shield",
					"price": 135,
					"rarity": 2,
					"desc": "Alliée à une armure lourde, cette rondache rend les défenseurs de la Garde impénétrable."
				},
				{
					"id": "ShieldRareCompanion",
					"name": "Rondache du porte-paix",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"skill": "ReassuringShield",
						"feature": "Difficulty_Update",
						"model": "chars/Weapons/Shield_RareCompanions.fbx",
						"skillRequireLevel": true
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 3,
						"y": 8,
						"height": 2
					},
					"type": "Shield",
					"price": 135,
					"rarity": 2,
					"desc": "Selon la rumeur on aurait déjà vu des Frères enfoncer des portes avec leur seule rondache comme bélier."
				},
				{
					"id": "ShieldThorn",
					"name": "Écu sanguinaire",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_Thorn.fbx",
						"feature": "Alazar1_Update",
						"passiveSkill": "DamageReturn",
						"disableLoot": true
					},
					"group": 12,
					"type": "Shield",
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 2,
						"y": 4,
						"height": 2
					},
					"desc": "Ce pavois est d’autant plus effrayant lorsque ses adversaires y restent partiellement accrochés.",
					"price": 87,
					"rarity": 1,
					"iconeDone": true
				},
				{
					"id": "ShieldLegendaryArenaE1",
					"name": "Muraille",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/Shield_LegendaryArena.fbx",
						"feature": "Alazar1_Update",
						"skill": "TacticalSlam",
						"flags": 128
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/GearIcons/ShieldIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Shield",
					"price": 129,
					"rarity": 3,
					"desc": "Cet aspis n'a pas seulement la réputation d'être infranchissable ! Son pourtour a été perfidement effilé pour fracasser les crânes."
				},
				{
					"id": "BlindingPowder",
					"name": "Poudre aveuglante",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"skill": "Blind",
						"model": "chars/Weapons/LeftHand_BlindingPowder.fbx"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 2,
						"height": 2
					},
					"type": "LeftHand",
					"price": 17,
					"desc": "Un petit sachet de poudre volatile.",
					"rarity": 1,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "RagePowder",
					"name": "Poudre de rage",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/LeftHand_BlindingPowder.fbx",
						"skill": "RagePowder"
					},
					"group": 12,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 16,
						"height": 2
					},
					"type": "LeftHand",
					"rarity": 1,
					"price": 18,
					"desc": "L'utilisation de cette poudre est controversée : les épices qu'elle contient brûlent les yeux et les naseaux des animaux, les rendant agressifs.",
					"iconeDone": true
				},
				{
					"id": "OdorousPowder",
					"name": "Poudre odorante",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/LeftHand_BlindingPowder.fbx",
						"skill": "OdorousPowder"
					},
					"group": 12,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 12,
						"height": 2
					},
					"type": "LeftHand",
					"rarity": 1,
					"price": 18,
					"desc": "Le mélange de chair putride et de végétaux rend cette poudre particulièrement attrayante pour les animaux.",
					"iconeDone": true
				},
				{
					"id": "ConfusingPowder",
					"name": "Poudre de confusion",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"model": "chars/Weapons/LeftHand_BlindingPowder.fbx",
						"skill": "ConfusingPowder"
					},
					"group": 12,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 17,
						"height": 2
					},
					"type": "LeftHand",
					"rarity": 1,
					"price": 18,
					"desc": "Lorsque cette poudre entre en contact avec la peau, elle brûle et provoque des démangeaisons.",
					"iconeDone": true
				},
				{
					"id": "IncendiaryFlask",
					"name": "Fiole incendiaire",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"skill": "Flashover",
						"model": "chars/Weapons/LeftHand_IncendiaryFlask.fbx"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 2,
						"height": 2
					},
					"type": "LeftHand",
					"price": 19,
					"desc": "Un chiffon imbibé d'alcool à moitié inséré dans une fiole.",
					"rarity": 1,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "HandHeldFrag",
					"name": "Bombette à main",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"skill": "SmallExplosion",
						"model": "chars/Weapons/LeftHand_HeldFrag.fbx"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 0,
						"height": 2
					},
					"type": "LeftHand",
					"price": 11,
					"desc": "Une petite capsule en fer qui contient de la poudre hautement explosive.",
					"rarity": 1,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "HandRecoil",
					"name": "Bombette de recul",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"skill": "ForcedRecoil",
						"model": "chars/Weapons/LeftHand_HeldFrag.fbx",
						"disableLoot": true
					},
					"group": 12,
					"type": "LeftHand",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 0,
						"height": 2
					},
					"rarity": 1,
					"price": 11,
					"desc": "Les épices que contient cette bombette piquent les yeux et le nez.",
					"iconeDone": true
				},
				{
					"id": "BeeBomb",
					"name": "Bombette à abeilles",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"skill": "BeeBomb",
						"model": "chars/Weapons/LeftHand_BlindingPowder.fbx"
					},
					"iconeDone": true,
					"group": 12,
					"type": "LeftHand",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 19,
						"y": 1,
						"height": 2
					},
					"rarity": 1,
					"price": 11,
					"desc": "Il y a sans doute bien mieux à faire avec cette boite pleine d'abeilles mais quelqu'un a décrété qu'il fallait la lancer sur des ennemis."
				},
				{
					"id": "CorrosiveBomb",
					"name": "Bombette corrosive",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"skill": "CorrosiveBomb",
						"model": "chars/Weapons/LeftHand_BlindingPowder.fbx"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 17,
						"y": 1,
						"height": 2
					},
					"type": "LeftHand",
					"group": 12,
					"rarity": 1,
					"price": 12,
					"desc": "Lorsqu'elle explose, cette bombette projette un liquide capable de ronger les armures de vos ennemis."
				},
				{
					"id": "PoisonedFlask",
					"name": "Flasque de poison",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"skill": "PoisonPuddle",
						"model": "chars/Weapons/LeftHand_Flask.fbx"
					},
					"group": 12,
					"type": "LeftHand",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 19,
						"y": 9,
						"height": 2
					},
					"rarity": 1,
					"price": 19,
					"desc": "Plus d'un utilisateur s'est lui-même empoisonné en tentant d'utiliser ce genre de poisons.",
					"iconeDone": true
				},
				{
					"id": "Torch",
					"name": "Torche",
					"weight": 1,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "CritHitPercent"
						},
						{
							"value": 5,
							"attribute": "VisionRange"
						}
					],
					"props": {
						"value": 6,
						"special": 1,
						"model": "chars/Weapons/Torch.prefab",
						"skill": "TorchStrike"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 0,
						"height": 2
					},
					"type": "LeftHand",
					"price": 27,
					"desc": "Une torche capable d'éclairer les lieux les plus obscurs et de mettre le feu aux chairs infectées.",
					"rarity": 0,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "TorchRuins",
					"name": "Torche de pillard",
					"weight": 1,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "CritHitPercent"
						},
						{
							"value": 8,
							"attribute": "VisionRange"
						}
					],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"skill": "TorchRuinsThrow",
						"value": 12,
						"special": 1,
						"model": "chars/Weapons/Torch.prefab"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 19,
						"y": 3,
						"height": 2
					},
					"type": "LeftHand",
					"group": 12,
					"rarity": 1,
					"price": 60,
					"desc": "Non seulement cette torche éclaire votre chemin, mais elle peut aussi éclater la tête d'un rampant un peu trop entreprenant."
				},
				{
					"id": "Grapple",
					"name": "Grappin",
					"weight": 2,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Movement"
						}
					],
					"props": {
						"skill": "Boarding",
						"disableLoot": true,
						"model": "chars/Weapons/LeftHand_Grapple.fbx"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 2,
						"height": 2
					},
					"type": "LeftHand",
					"price": 103,
					"desc": "Un hameçon de pêche au gros ficelé au bout d'une corde.",
					"rarity": 2,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ThrowingAxe",
					"name": "Hachette de lancer",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"skill": "AxeThrow",
						"model": "chars/Weapons/LeftHand_ThrowingAxe.fbx",
						"requireLevel": 2,
						"fixedLevel": 3,
						"flags": 0,
						"enemyRequireLevel": true
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 13,
						"y": 3,
						"height": 2
					},
					"type": "LeftHand",
					"price": 10,
					"desc": "Une hachette de lancer légère mais mortelle.",
					"rarity": 0,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ThrowingAxeT2",
					"name": "Hachette de lancer fantôme",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingAxe_Iron.fbx",
						"skill": "AxeThrowT2",
						"requireLevel": 5,
						"fixedLevel": 6
					},
					"group": 12,
					"type": "LeftHand",
					"desc": "On raconte que si cette hachette apprécie son porteur, elle revient toute seule...",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 14,
						"y": 3,
						"height": 2
					},
					"rarity": 1,
					"price": 14,
					"iconeDone": true
				},
				{
					"id": "ThrowingAxeT3",
					"name": "Hachette de lancer en givracier",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingAxeT3.fbx",
						"skill": "AxeThrowT3",
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 15,
						"y": 3,
						"height": 2
					},
					"desc": "Le tranchant de cette hachette s'enfoncera parfaitement dans tous types de surfaces : bois, chair, épaule, ventre...",
					"type": "LeftHand",
					"price": 23,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "ThrowingAxeT4",
					"name": "Hachette de lancer en acier akhedien",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 15,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingAxeT4.fbx",
						"skill": "AxeThrowT4",
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 15,
						"y": 5,
						"height": 2
					},
					"type": "LeftHand",
					"price": 32,
					"rarity": 2,
					"desc": "Rarement utilisée sur les champs de bataille en raison de son prix, il serait tout de même dommage de cantonner une hachette si efficace à l'apparat."
				},
				{
					"id": "PowerfulThrowingAxe",
					"name": "Hache de lancer",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"skill": "PowerfulAxeThrow",
						"model": "chars/Weapons/LeftHand_ThrowingAxe.fbx",
						"requireLevel": 2,
						"fixedLevel": 3,
						"flags": 0
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 17,
						"y": 5,
						"height": 2
					},
					"type": "LeftHand",
					"price": 17,
					"rarity": 1,
					"desc": "Plus volumineuse et encombrante qu'une hachette, le maniement de cette hache de lancer demande un peu d'entraînement."
				},
				{
					"id": "PowerfulThrowingAxeT2",
					"name": "Hache de lancer fantôme",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingAxe_Iron.fbx",
						"skill": "PowerfulAxeThrowT2",
						"requireLevel": 5,
						"fixedLevel": 6
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 18,
						"y": 5,
						"height": 2
					},
					"type": "LeftHand",
					"price": 27,
					"rarity": 1,
					"desc": "Lorsqu'elle fend les airs, cette hache produit un son à vous glacer le sang."
				},
				{
					"id": "PowerfulThrowingAxeT3",
					"name": "Hache de lancer en givracier",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingAxeT3.fbx",
						"skill": "PowerfulAxeThrowT3",
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 19,
						"y": 5,
						"height": 2
					},
					"type": "LeftHand",
					"price": 41,
					"rarity": 1,
					"desc": "Jugée barbare à Alazar, l'usage de cette hache de lancer a peu à peu été delaissé."
				},
				{
					"id": "PowerfulThrowingAxeT4",
					"name": "Hache de lancer en acier akhedien",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 15,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingAxeT4.fbx",
						"skill": "PowerfulAxeThrowT4",
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 17,
						"y": 7,
						"height": 2
					},
					"type": "LeftHand",
					"price": 58,
					"rarity": 1,
					"desc": "On ne compte plus les héros d'Akhed qui maniaient de genre de hache."
				},
				{
					"id": "PoisonedThrowingKnife",
					"name": "Couteau de lancer empoisonné",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"skill": "PoisonedThrowingKnife",
						"model": "chars/Weapons/LeftHand_Dagger02.fbx",
						"requireLevel": 2,
						"fixedLevel": 3,
						"enemyRequireLevel": true
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 13,
						"y": 5,
						"height": 2
					},
					"type": "LeftHand",
					"price": 17,
					"desc": "Un poison verdâtre suinte le long de la lame du couteau.",
					"rarity": 1,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "PoisonedThrowingKnifeT2",
					"name": "Couteau de lancer fantôme empoisonné",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_Dagger02.fbx",
						"feature": "Alazar1_Update",
						"requireLevel": 5,
						"fixedLevel": 6,
						"skill": "PoisonedThrowingKnifeT2",
						"enemyRequireLevel": true
					},
					"group": 12,
					"type": "LeftHand",
					"desc": "Un petit couteau robuste qui permet d'empoisonner à distance.",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 14,
						"y": 5,
						"height": 2
					},
					"rarity": 1,
					"iconeDone": true,
					"price": 27
				},
				{
					"id": "PoisonedThrowingKnifeT3",
					"name": "Couteau de lancer empoisonné en givracier",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_PoisonedThrowingKnifeT3.fbx",
						"feature": "Alazar1_Update",
						"requireLevel": 8,
						"fixedLevel": 9,
						"skill": "PoisonedThrowingKnifeT3"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 18,
						"y": 7,
						"height": 2
					},
					"type": "LeftHand",
					"price": 41,
					"rarity": 1,
					"desc": "L’utilisation de givracier pour la confection d’un couteau qui, selon toutes probabilités, sera rapidement égaré, peut paraitre excessive. Ce n’est totalement pas faux."
				},
				{
					"id": "PoisonedThrowingKnifeT4",
					"name": "Couteau de lancer empoisonné en acier akhedien",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_PoisonedThrowingKnifeT4.fbx",
						"feature": "Alazar1_Update",
						"requireLevel": 11,
						"fixedLevel": 12,
						"skill": "PoisonedThrowingKnifeT4"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 19,
						"y": 7,
						"height": 2
					},
					"type": "LeftHand",
					"price": 58,
					"rarity": 1,
					"desc": "Arborer un tel couteau à la ceinture est un signe de réussite chez les brigands."
				},
				{
					"id": "ThrowingKnife",
					"name": "Couteau de lancer",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"skill": "ThrowingKnife",
						"model": "chars/Weapons/LeftHand_Dagger_01.fbx",
						"requireLevel": 2,
						"fixedLevel": 3,
						"flags": 0
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 13,
						"y": 7,
						"height": 2
					},
					"type": "LeftHand",
					"rarity": 0,
					"desc": "Un couteau de lancer aussi léger que tranchant.",
					"price": 10,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ThrowingKnifeT2",
					"name": "Couteau de lancer fantôme",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_Dagger01_Iron.fbx",
						"skill": "ThrowingKnifeT2",
						"requireLevel": 5,
						"fixedLevel": 6,
						"enemyRequireLevel": true
					},
					"group": 12,
					"type": "LeftHand",
					"desc": "Bien des guerriers étourdis se sont coupés des doigts avec une arme semblable.",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 14,
						"y": 7,
						"height": 2
					},
					"rarity": 1,
					"price": 14,
					"iconeDone": true
				},
				{
					"id": "ThrowingKnifeT3",
					"name": "Couteau de lancer en givracier",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingKnifeT3.fbx",
						"skill": "ThrowingKnifeT3",
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 15,
						"y": 7,
						"height": 2
					},
					"type": "LeftHand",
					"desc": "Le son que produit ce couteau de lancer lorsqu'il fend les airs et appelé <i>requiem</i>.",
					"rarity": 2,
					"price": 23,
					"iconeDone": true
				},
				{
					"id": "ThrowingKnifeT4",
					"name": "Couteau de lancer en acier akhedien",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingKnifeT4.fbx",
						"skill": "ThrowingKnifeT4",
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 16,
						"y": 7,
						"height": 2
					},
					"type": "LeftHand",
					"price": 32,
					"rarity": 2,
					"desc": "On considère parfois que le maniement d'une arme de lancer est peu honorable mais on pourrait être tenté de faire une exception pour un couteau pareil."
				},
				{
					"id": "ThrowingSickle",
					"name": "Faucille de lancer",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_Sickles.fbx",
						"skill": "ThrowingSickle",
						"requireLevel": 2,
						"fixedLevel": 3,
						"flags": 0,
						"enemyRequireLevel": true
					},
					"group": 12,
					"type": "LeftHand",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 13,
						"y": 9,
						"height": 2
					},
					"desc": "Légère et courbée, la lame de cette faucille peut aussi bien couper des herbes que des mains.",
					"price": 10,
					"rarity": 0,
					"iconeDone": true
				},
				{
					"id": "ThrowingSickleT2",
					"name": "Faucille de lancer fantôme",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_Sickles_CraftT2.fbx",
						"skill": "ThrowingSickleT2",
						"requireLevel": 5,
						"fixedLevel": 6,
						"enemyRequireLevel": true
					},
					"group": 12,
					"type": "LeftHand",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 14,
						"y": 9,
						"height": 2
					},
					"price": 14,
					"rarity": 1,
					"desc": "Souple et incisive, cette lame a déjà fait ses preuves.",
					"iconeDone": true
				},
				{
					"id": "ThrowingSickleT3",
					"name": "Faucille de lancer en givracier",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingSickleT3.fbx",
						"skill": "ThrowingSickleT3",
						"requireLevel": 8,
						"fixedLevel": 9
					},
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 15,
						"y": 9,
						"height": 2
					},
					"type": "LeftHand",
					"desc": "Cette faucille en métal précieux ne ressemble plus que de très loin à son ancêtre paysanne.",
					"price": 23,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "ThrowingSickleT4",
					"name": "Faucille de lancer en acier akhedien",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 15,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Weapons/LeftHand_ThrowingSickleT4.fbx",
						"skill": "ThrowingSickleT4",
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 17,
						"y": 9,
						"height": 2
					},
					"type": "LeftHand",
					"price": 32,
					"rarity": 2,
					"desc": "Un paysan ne comprendrait pas qu'on utilise un métal si précieux pour une simple faucille. Mais ce n'est <i>pas</i> une simple faucille..."
				},
				{
					"id": "ThrowingSicklePetrifying",
					"name": "Faucille de lancer pétrifiante",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "Guard"
						}
					],
					"props": {
						"skill": "ThrowingSicklePetrifying",
						"model": "chars/Weapons/LeftHand_ThrowingSicklePetrifyingT1.fbx",
						"requireLevel": 2,
						"fixedLevel": 3
					},
					"group": 12,
					"type": "LeftHand",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 13,
						"y": 11,
						"height": 2
					},
					"desc": "Le poison qui enduit cette faucille pétrifie l'esprit de celui qu'elle blesse.",
					"price": 17,
					"rarity": 1,
					"iconeDone": true
				},
				{
					"id": "ThrowingSicklePetrifyingT2",
					"name": "Faucille de lancer fantôme pétrifiante",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "Guard"
						}
					],
					"props": {
						"skill": "ThrowingSicklePetrifyingT2",
						"model": "chars/Weapons/LeftHand_Sickles_Poisoned.fbx",
						"requireLevel": 5,
						"fixedLevel": 6,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 16,
						"y": 9,
						"height": 2
					},
					"type": "LeftHand",
					"price": 27,
					"rarity": 1,
					"desc": "On pourrait prendre cette faucille pour un honnête outil si elle ne dégoulinait pas de poison."
				},
				{
					"id": "ThrowingSicklePetrifyingT3",
					"name": "Faucille de lancer pétrifiante en givracier",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "Guard"
						}
					],
					"props": {
						"skill": "ThrowingSicklePetrifyingT3",
						"model": "chars/Weapons/LeftHand_ThrowingSicklePetrifyingT3.fbx",
						"requireLevel": 8,
						"fixedLevel": 9,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 14,
						"y": 11,
						"height": 2
					},
					"type": "LeftHand",
					"price": 41,
					"rarity": 1,
					"desc": "La couleur du grivacier ressort particulièrement une fois enduit de poison."
				},
				{
					"id": "ThrowingSicklePetrifyingT4",
					"name": "Faucille de lancer pétrifiante en acier akhedien",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 15,
							"attribute": "Guard"
						}
					],
					"props": {
						"skill": "ThrowingSicklePetrifyingT4",
						"model": "chars/Weapons/LeftHand_ThrowingSicklePetrifyingT4.fbx",
						"requireLevel": 11,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 18,
						"y": 9,
						"height": 2
					},
					"type": "LeftHand",
					"price": 58,
					"rarity": 1,
					"desc": "Cette faucille est une merveille : enduite d'un poison des plus sournois et forgée dans un acier remarquable."
				},
				{
					"id": "SwampFlask",
					"name": "Fiole des marais",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"skill": "Transmission",
						"model": "chars/Weapons/LeftHand_Flask.fbx"
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 1,
						"height": 2
					},
					"type": "LeftHand",
					"rarity": 2,
					"desc": "Une fiole pleine d'une solution nauséabonde.",
					"price": 26,
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "HaragConcoction",
					"name": "Concoction d'Harag",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"skill": "Spraying",
						"model": "chars/Weapons/LeftHand_Flask.fbx"
					},
					"type": "LeftHand",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 1,
						"height": 2
					},
					"price": 22,
					"rarity": 2,
					"desc": "Une fiole à l'odeur âcre particulièrement efficace contre les moustiques des marais d'Harag.",
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "ThrowingLegendaryArenaA1",
					"name": "Perfide",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"skill": "ThrowingAlazarianAxes",
						"model": "chars/Weapons/LeftHand_AxeArena.fbx",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 16,
						"y": 5,
						"height": 2
					},
					"type": "LeftHand",
					"price": 80,
					"rarity": 3,
					"desc": "Cette hache de lancer a été forgée sur mesure pour Lisbeth. Elle ne s’adaptera jamais complètement à la main d’un autre guerrier. "
				},
				{
					"id": "ThrowingAxeLegendary01",
					"name": "Solaire",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "CritHitPercent"
						},
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"skill": "ValorousAxeThrow",
						"model": "chars/Weapons/LeftHand_AxeArena.fbx",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 14,
						"y": 3,
						"height": 2
					},
					"type": "LeftHand",
					"price": 80,
					"rarity": 3,
					"desc": "Cette hache de lancer a été créée à la suite d’un affrontement entre les Traqueurs et la Bête. On raconte que les noms qui sont gravés sur sa garde sont ceux d’un groupe de mercenaires venu en renfort."
				},
				{
					"id": "ThrowingAxeLegendary02",
					"name": "Progrès",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "CritHitPercent"
						},
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"skill": "ValorousAxeThrow",
						"model": "chars/Weapons/LeftHand_AxeArena.fbx",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 16,
						"y": 5,
						"height": 2
					},
					"type": "LeftHand",
					"price": 80,
					"rarity": 3,
					"desc": "C'est grâce aux artéfacts trouvés dans le Tombeau de Ludern que le professeur Wrinfrith et ses érudits ont pu concevoir cette hache de lancer."
				},
				{
					"id": "BundleOneHandedSwordAxeMaceT1",
					"name": "Set de forgeron apprenti  - I",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleTwoHandedSwordAxeMaceT1",
					"name": "Set de forgeron apprenti - II",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleBowDaggerPolearmT1",
					"name": "Set de forgeron apprenti - III",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleArmorT1",
					"name": "Set de forgeron apprenti - IV",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armures</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleThrowingLeftHandT1",
					"name": "Set de forgeron apprenti - V",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes de jet</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleThrowingLeftHandSpecialT1",
					"name": "Set d'alchimiste apprenti - I",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 13,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					},
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes de jet spéciale</narrator> suivantes :"
				},
				{
					"id": "BundleOneHandedSwordAxeMaceT2",
					"name": "Set de forgeron confirmé - I",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleTwoHandedSwordAxeMaceT2",
					"name": "Set de forgeron confirmé - II",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleBowDaggerPolearmT2",
					"name": "Set de forgeron confirmé - III",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleArmorT2",
					"name": "Set de forgeron confirmé - IV",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armures</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleThrowingLeftHandT2",
					"name": "Set de forgeron confirmé - V",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes de jet</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleThrowingLeftHandSpecialT2",
					"name": "Set d'alchimiste confirmé - I",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 13,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					},
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes de jet spéciale</narrator> suivantes :"
				},
				{
					"id": "BundleOneHandedSwordAxeMaceT3",
					"name": "Set de forgeron compagnon - I",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleTwoHandedSwordAxeMaceT3",
					"name": "Set de forgeron compagnon - II",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleBowDaggerPolearmT3",
					"name": "Set de forgeron compagnon - III",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleArmorT3",
					"name": "Set de forgeron compagnon - IV",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armures</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleThrowingLeftHandT3",
					"name": "Set de forgeron compagnon - V",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes de jet</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleThrowingLeftHandSpecialT3",
					"name": "Set d'alchimiste compagnon - I",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 13,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					},
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes de jet spéciale</narrator> suivantes :"
				},
				{
					"id": "BundleOneHandedSwordAxeMaceT4",
					"name": "Set de forgeron maître - I",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleTwoHandedSwordAxeMaceT4",
					"name": "Set de forgeron maître - II",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleBowDaggerPolearmT4",
					"name": "Set de forgeron maître - III",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleArmorT4",
					"name": "Set de forgeron maître - IV",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update"
					},
					"group": 13,
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armures</narrator> suivantes :",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					}
				},
				{
					"id": "BundleThrowingLeftHandT4",
					"name": "Set de forgeron maître - V",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 13,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					},
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes de jet</narrator> suivantes :"
				},
				{
					"id": "BundleThrowingLeftHandSpecialT4",
					"name": "Set d'alchimiste maître - I",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"feature": "HideInCheatMenu"
					},
					"iconeDone": true,
					"group": 13,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 1,
						"x": 4,
						"y": 1918
					},
					"type": "BundleForge",
					"desc": "Apprend les plans des <narrator>armes de jet spéciale</narrator> suivantes :"
				},
				{
					"id": "HeavyArmorCommonGeneric",
					"name": "Harnois",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/HeavyArmour_2/Model.fbx",
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 76,
					"rarity": 0,
					"desc": "Cette armure a peu de défauts en dehors de son poids.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorCommonLegion",
					"name": "Segmenta de la Légion",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LegionHeavy/Model.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 76,
					"rarity": 0,
					"desc": "À l'origine, ces armures étaient réservées aux capitaines mais elles se sont généralisées chez les combattants lourds de la Légion.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorCommonDeserters",
					"name": "Armure de plates des Déserteurs",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": 1,
							"attribute": "Transport",
							"upValue": 5
						}
					],
					"props": {
						"model": "chars/Clothes/HeavyArmour/Model.fbx",
						"skinTexture": "chars/Clothes/HeavyArmour/M_ClothesHeavyArmourBtmSkinRSoldier_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 76,
					"rarity": 0,
					"desc": "Le bruit que produit cette armure lorsque son porteur marche devient irritant à la longue.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorCommonGuard",
					"name": "Harnois de la Garde",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 17,
							"attribute": "Guard",
							"upValue": 33
						}
					],
					"props": {
						"model": "chars/Clothes/HeavyArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/HeavyArmour_2/F_ClothesHeavyArmour2BtmSkinGuard_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 76,
					"rarity": 0,
					"desc": "Porter cette armure est une fierté pour ceux qui l'ont légalement reçue.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorCommonAlazar",
					"name": "Harnois d'Alazar",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 17,
							"attribute": "Guard",
							"upValue": 33
						}
					],
					"props": {
						"model": "chars/Clothes/AlazarHeavy/Model.fbx",
						"feature": "Alazar1_Update"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 76,
					"rarity": 0,
					"desc": "Non-content d’être réputé pour ses minerais de qualités, Alazar dispose en plus d’excellents forgerons : cette armure est quasiment parfaite.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoAlazar",
					"name": "Harnois précieux d'Alazar",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 17,
							"attribute": "Guard",
							"upValue": 33
						}
					],
					"props": {
						"model": "chars/Clothes/AlazarHeavy/Model.fbx",
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 109,
					"rarity": 1,
					"desc": "Difficile d'améliorer encore le harnois d'Alazar ; l'artisan s'est donc contenté d'ajouter une fourrure plus régulière et une teinture de meilleure qualité."
				},
				{
					"id": "HeavyArmorCommonInquisition",
					"name": "Segmenta de l'Inquisition",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": 1,
							"attribute": "CritHitPercent",
							"upValue": 5
						}
					],
					"props": {
						"model": "chars/Clothes/InquisitionHeavy/Model.fbx"
					},
					"type": "ArmorHeavy",
					"price": 76,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"desc": "Cette armure sinistre se fond dans la nuit et scintille au soleil, effrayante lorsqu’on l’entend, terrifiante quand on la voit.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoGeneric",
					"name": "Harnois plein",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/HeavyArmour_2/Model.fbx",
						"flags": 1
					},
					"type": "ArmorHeavy",
					"price": 109,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"desc": "On a enduit les plaques de ce harnois pour le protéger de la pluie.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoCraftT1",
					"name": "Armure de plates renforcée",
					"weight": 5,
					"props": {
						"model": "chars/Clothes/HeavyArmour_3/Model.fbx",
						"disableLoot": true,
						"skinTexture": "chars/Clothes/HeavyArmour_3/M_ClothesHeavyArmour3BtmSkinCraft_Albedo_1K.png",
						"requireLevel": 2,
						"flags": 1,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 2,
						"height": 2
					},
					"type": "ArmorHeavy",
					"rarity": 1,
					"baseBonus": [],
					"price": 132,
					"desc": "Cette armure complète est conçue pour résister à peu près à tout.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoCraftT2",
					"name": "Armure de plates fantôme",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"requireLevel": 5,
						"disableLoot": true,
						"model": "chars/Clothes/TrackerHeavy/T2.prefab",
						"skinTexture": "chars/Clothes/TrackerHeavy/M_ClothesTrackerHeavyBtmSkinT2_Albedo_1K.png",
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 6,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 171,
					"rarity": 1,
					"desc": "Nombreux sont ceux qui rapportent avoir été mal à l'aise en arborant ce genre d'armure.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoCraftT3",
					"name": "Armure de plates en givracier",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"requireLevel": 8,
						"disableLoot": true,
						"model": "chars/Clothes/AlazarHeavy/Model.fbx",
						"skinTexture": "chars/Clothes/AlazarHeavy/Mat_ClothesAlazarHeavyBtmSkinT3_M_Albedo_1K.png",
						"flags": 1,
						"fixedLevel": 9
					},
					"group": 15,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 260,
					"rarity": 1,
					"desc": "Son apparence ordinaire rend sa résistance d’autant plus stupéfiante.",
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoCraftT4",
					"name": "Armure de plates en acier akhedien",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"requireLevel": 11,
						"disableLoot": true,
						"model": "chars/Clothes/CompanionsHeavy/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsHeavy/M_ClothesCompanionHeavyBtmSkinT4_Albedo_1K.png",
						"flags": 1,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 318,
					"rarity": 2,
					"desc": "Cette armure est un mariage réussi entre l'acier d'Akhed et l'artisanat des Cinq Royaumes."
				},
				{
					"id": "HeavyArmorArena",
					"name": "Cuirasse de l'arène",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/HeavyArmour/Model.fbx",
						"skinTexture": "chars/Clothes/HeavyArmour/M_ClothesHeavyArmourBtmSkinArena_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 4,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 109,
					"rarity": 2,
					"desc": "Un peu cabossée, cette cuirasse a été redressée plusieurs fois et le sera encore.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoCompanions",
					"name": "Harnois de la Fraternité",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent",
							"upValue": 10
						}
					],
					"props": {
						"model": "chars/Clothes/CompanionsHeavy/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsHeavy/M_ClothesCompanionHeavyBtmSkinCompanions_Albedo_1K.png",
						"feature": "Difficulty_Update"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 109,
					"rarity": 1,
					"desc": "Ce harnois ne sacrifie rien à l'esthétisme : être mercenaire est aussi une question de paraître.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoOutlaws",
					"name": "Cuirasse des hors-la-loi",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent",
							"upValue": 10
						}
					],
					"props": {
						"model": "chars/Clothes/HeavyArmour_4/Model.fbx",
						"skinTexture": "chars/Clothes/HeavyArmour_4/M_ClothesHeavyArmor4SkinBanditBtm_Albedo_1K.png"
					},
					"type": "ArmorHeavy",
					"price": 109,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"desc": "Cette cuirasse a été modifiée pour parer les coups les plus déloyaux.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoLegion",
					"name": "Segmenta d'officier",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent",
							"upValue": 10
						}
					],
					"props": {
						"model": "chars/Clothes/LegionHeavy/Model.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 109,
					"rarity": 1,
					"desc": "Quel officier se laisserait aller à porter la même armure qu'un simple soldat ?",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorUncoTrackers",
					"name": "Cuirasse des Traqueurs",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent",
							"upValue": 10
						}
					],
					"props": {
						"model": "chars/Clothes/TrackerHeavy/Model.fbx",
						"skinTexture": "chars/Clothes/TrackerHeavy/ClothesTrackerHeavyGrey_Btm_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 2,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 109,
					"rarity": 1,
					"desc": "Cette cuirasse n’est pas faite pour contrer un adversaire humain mais pour résister aux assauts d’une créature monstrueuse.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareGeneric",
					"name": "Harnois de maître",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/HeavyArmour_2/Model.fbx",
						"flags": 1
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"desc": "Le poids de ce harnois est si parfaitement réparti qu'il donne l'impression (illusoire) qu'il est moins lourd qu'une armure ordinaire.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareDeserters",
					"name": "Armure de plates du caporal",
					"weight": 5,
					"baseBonus": [
						{
							"value": 12,
							"attribute": "Armor",
							"upValue": 280
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": -2,
							"attribute": "Movement"
						}
					],
					"props": {
						"model": "chars/Clothes/HeavyArmour/Model.fbx",
						"skinTexture": "chars/Clothes/HeavyArmour/M_ClothesHeavyArmourBtmSkinChief_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Une armure plus prisée pour sa résistance que pour son esthétique.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareInquisition",
					"name": "Segmenta du paladin",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 252
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": 3,
							"attribute": "CritHitPercent",
							"upValue": 7
						}
					],
					"props": {
						"model": "chars/Clothes/InquisitionHeavy/Model.fbx"
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"desc": "Cette armure est le caprice d’un haut gradé de l’Inquisition qui ne supportait plus de ne pas se distinguer assez de ses sous-fifres.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareFugitiveOutlaws",
					"name": "Cuirasse du Fugitif",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/HeavyArmour_4/Model.fbx",
						"skinTexture": "chars/Clothes/HeavyArmour_4/M_ClothesHeavyArmor4SkinBanditBtm_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Une vilaine cuirasse, typique des Brigands.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareFugitiveDeserters",
					"name": "Armure de plates du Fugitif",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/HeavyArmour/Model.fbx",
						"skinTexture": "chars/Clothes/HeavyArmour/M_ClothesHeavyArmourBtmSkinChief_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Une armure de plates typiques des Déserteurs.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareFugitiveGuard",
					"name": "Harnois du Fugitif",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/HeavyArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/HeavyArmour_2/F_ClothesHeavyArmour2BtmSkinGuard_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Un harnois aux couleurs de la Garde.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareFugitiveLegion",
					"name": "Segmenta du Fugitif",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LegionHeavy/Model.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Une segmenta typique de la Légion.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareFugitiveCompanions",
					"name": "Harnois du Fugitif",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/CompanionsHeavy/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsHeavy/M_ClothesCompanionHeavyBtmSkinCompanions_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Un harnois aux couleurs de la Fraternité.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareFugitiveInquisition",
					"name": "Segmenta du Fugitif",
					"weight": 5,
					"baseBonus": [
						{
							"value": 13,
							"attribute": "Armor",
							"upValue": 280
						},
						{
							"value": 15,
							"attribute": "Guard",
							"upValue": 30
						},
						{
							"value": 3,
							"attribute": "CritHitPercent",
							"upValue": 7
						}
					],
					"props": {
						"model": "chars/Clothes/InquisitionHeavy/Model.fbx",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Une segmenta typique de l'Inquisition.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareFugitiveTrackers",
					"name": "Cuirasse du Fugitif",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/TrackerHeavy/Model.fbx",
						"skinTexture": "chars/Clothes/TrackerHeavy/ClothesTrackerHeavyGrey_Btm_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 2,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Une cuirasse, typique des Traqueurs.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareLegion",
					"name": "Segmenta de la tête brûlée",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"feature": "Difficulty_Update",
						"model": "chars/Clothes/LegionHeavy/Model.fbx"
					},
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Portée par les unités lourdes de la Légion, cette segmenta est aussi imposante qu'encombrante."
				},
				{
					"id": "HeavyArmorRareCompanion",
					"name": "Segmenta du porte-paix",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/CompanionsHeavy/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsHeavy/M_ClothesCompanionHeavyBtmSkinCompanions_Albedo_1K.png",
						"feature": "Difficulty_Update"
					},
					"iconeDone": true,
					"group": 15,
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "La plus grosse différence entre la segmenta du porte-paix et une segmenta régulière se trouve dans la flasque que le porte-paix porte à sa ceinture.",
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "HeavyArmorRareFugitiveAlazarSoldiers",
					"name": "Harnois du Fugitif",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/AlazarHeavy/Model.fbx",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Un harnois aux couleurs du royaume d'Alazar.",
					"group": 15,
					"iconeDone": true
				},
				{
					"id": "HeavyArmorRareGuard",
					"name": "Harnois du défenseur",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/HeavyArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/HeavyArmour_2/F_ClothesHeavyArmour2BtmSkinGuard_Albedo_1K.png",
						"feature": "Difficulty_Update"
					},
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 142,
					"rarity": 2,
					"desc": "Certains villageois n'hésitent pas à se cotiser pour acheter des armures efficaces à leurs meilleurs défenseurs."
				},
				{
					"id": "HeavyArmorLegendaryChampionArenaE1",
					"name": "Armure de plates de Kriskhed",
					"weight": 5,
					"baseBonus": [
						{
							"value": 90,
							"attribute": "Armor",
							"upValue": 1100
						},
						{
							"value": 30,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/Champions/Kriskhed/ModelWoman.fbx",
						"skinTexture": "chars/Clothes/Champions/Kriskhed/M_ClothesHeavyArmour3BtmSkinKriskhed_Albedo_1K.png",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/GearIcons/HeavyArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 6,
						"height": 2
					},
					"type": "ArmorHeavy",
					"price": 185,
					"rarity": 3,
					"desc": "Le plastron de cette armure brille tellement que le public de l'arène se voit dedans."
				},
				{
					"id": "HeavyArmorPlaceholder1",
					"name": "Contenu Alazar",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"skill": "ArmorSurrounded",
						"model": "chars/Clothes/Judge/Model.fbx",
						"skinTexture": "chars/Clothes/Judge/ClothesJudgeBtm_M_Albedo_1K.png",
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"group": 15,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "ArmorHeavy",
					"rarity": 2,
					"desc": "Placeholder",
					"iconeDone": true
				},
				{
					"id": "MediumArmorCommonGeneric",
					"name": "Gambison",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/MediumArmour_2/Model.fbx",
						"flags": 1
					},
					"rarity": 0,
					"price": 74,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"desc": "Ce gambison est dans un état médiocre, encore humide de pluie et de la sueur de son ancien propriétaire.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorCommonDeserters",
					"name": "Brigandine des déserteurs",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent",
							"upValue": 10
						}
					],
					"props": {
						"model": "chars/Clothes/MediumArmour_3/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour_3/M_ClothesMediumArmour3SkinCommonDeserters_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 4,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 74,
					"rarity": 0,
					"desc": "Composée de cuir et de tissu, cette brigandine protège surtout le buste de son porteur.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorCommonCompanions",
					"name": "Spalière de la Fraternité",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/CompanionsMedium/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsMedium/M_ClothesCompanionsMediumBtmSkinCompanions_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 74,
					"rarity": 0,
					"desc": "Cette spalière aux couleurs de la Fraternité a été forgée pour inspirer confiance aux marchands.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorCommonGuard",
					"name": "Gambison de la Garde",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 11,
							"attribute": "Guard",
							"upValue": 22
						}
					],
					"props": {
						"model": "chars/Clothes/MediumArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour_2/Mat_ClothesMediumArmour2BtmSkinGuard_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 74,
					"rarity": 0,
					"desc": "D'une région à l'autre, la qualité des gambisons est variable, soumise à la bonne volonté des bourgmestres.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorCommonAlazar",
					"name": "Gambison d'Alazar",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 11,
							"attribute": "Guard",
							"upValue": 22
						}
					],
					"props": {
						"model": "chars/Clothes/AlazarMedium/Model.fbx",
						"feature": "Alazar1_Update"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 74,
					"rarity": 0,
					"desc": "Si ce gambison semble tout à fait normal de prime abord, sa technique de rembourrage le rend plus léger et plus résistant que ceux produits dans les royaumes voisins.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorCommonInquisition",
					"name": "Hamata de l'Inquisition",
					"weight": 3,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "Armor",
							"upValue": 154
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						},
						{
							"value": 1,
							"attribute": "CritHitPercent",
							"upValue": 5
						},
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent",
							"upValue": 10
						}
					],
					"props": {
						"model": "chars/Clothes/InquisitionMedium/Model.fbx"
					},
					"type": "ArmorMedium",
					"price": 74,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"desc": "La peinture noire qui recouvre les plaques de cette armure requiert un entretien régulier pour ne pas s'effriter.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorCommonTrackers",
					"name": "Spalière des Traqueurs",
					"weight": 3,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "Armor",
							"upValue": 154
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						},
						{
							"value": 1,
							"attribute": "CritHitPercent",
							"upValue": 5
						},
						{
							"value": 5,
							"attribute": "CritHitDamageBonusPercent",
							"upValue": 10
						}
					],
					"props": {
						"model": "chars/Clothes/TrackerMedium/Model.fbx",
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 74,
					"rarity": 0,
					"desc": "Les écailles de fer qui recouvrent cette spalière n’est pas sans rappeler le cuir des crocoporks.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoGeneric",
					"name": "Gambison précieux",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/MediumArmour_2/Model.fbx",
						"flags": 1
					},
					"price": 105,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"desc": "Ce gambison est compartimenté pour empêcher qu'un seul coup d'épée le vide de son rembourrage.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoCraftT1",
					"name": "Brigandine rembourrée",
					"weight": 3,
					"props": {
						"model": "chars/Clothes/MediumArmour_3/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour_3/M_ClothesMediumArmour3SkinUncoCraftT1_Albedo_1K.png",
						"disableLoot": true,
						"requireLevel": 2,
						"flags": 1,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"rarity": 1,
					"baseBonus": [],
					"price": 117,
					"desc": "La brigandine offre un bon compromis entre la protection et la liberté de mouvement.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoCraftT2",
					"name": "Brigandine fantôme",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"model": "chars/Clothes/TrackerMedium/T2.prefab",
						"skinTexture": "chars/Clothes/TrackerMedium/ClothesMediumTrackerSkinT2_Btm_Albedo_1K.png",
						"requireLevel": 5,
						"flags": 1,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 4,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 157,
					"rarity": 1,
					"desc": "Le talent de l’artisan se ressent dans la résistance et la légèreté de cette armure.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoCraftT3",
					"name": "Brigandine en givracier",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"model": "chars/Clothes/AlazarMedium/Model.fbx",
						"skinTexture": "chars/Clothes/AlazarMedium/Mat_ClothesAlazarMediumBtmSkinT3_M_Albedo_1K.png",
						"requireLevel": 8,
						"flags": 1,
						"fixedLevel": 9
					},
					"group": 16,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 240,
					"rarity": 1,
					"desc": "Les parties en givracier de cette armure sont justement celles qui protègent les points vitaux.",
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoCraftT4",
					"name": "Brigandine en acier akhedien",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"model": "chars/Clothes/CompanionsMedium/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsMedium/M_ClothesCompanionsMediumBtmSkinT4_Albedo_1K.png",
						"requireLevel": 11,
						"flags": 1,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 16,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"rarity": 2,
					"desc": "Sous son aspect rustique, cette brigandine est en vérité l’une des meilleures armures que l’on puisse forger dans les Cinq Royaumes.",
					"price": 308
				},
				{
					"id": "MediumArmorArena",
					"name": "Armure lamellaire de l'arène",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/MediumArmour/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour/M_ClothesMediumArmourSkinArena_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 105,
					"rarity": 2,
					"desc": "Seul le travail d’un maître forgeron pouvait résister à autant de combats.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoGuard",
					"name": "Gambison du lieutenant",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Guard",
							"upValue": 22
						}
					],
					"props": {
						"model": "chars/Clothes/MediumArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour_2/Mat_ClothesMediumArmour2BtmSkinGuard_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 105,
					"rarity": 1,
					"desc": "Ce gambison est taillé dans un tissu de meilleure qualité que les autres, sans que cela n'affecte son efficacité.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoAlazar",
					"name": "Gambison précieux d'Alazar",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 11,
							"attribute": "Guard",
							"upValue": 22
						}
					],
					"props": {
						"model": "chars/Clothes/AlazarMedium/Model.fbx",
						"feature": "Alazar1_Update"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 105,
					"rarity": 1,
					"desc": "Avec un peu d'effort, un soldat peut transformer son gambison réglementaire en un habit qui convient aux jours de parade.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoOutlaws",
					"name": "Armure lamellaire du hors-la-loi",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						},
						{
							"value": 2,
							"attribute": "CritHitPercent",
							"upValue": 6
						}
					],
					"props": {
						"model": "chars/Clothes/MediumArmour/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour/M_ClothesMediumArmour_SkinMarauder_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 105,
					"rarity": 1,
					"desc": "Le souvenir de cette armure hante de nombreux paysans.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoLegion",
					"name": "Hamata du spadassin",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						},
						{
							"value": 2,
							"attribute": "Transport",
							"upValue": 6
						}
					],
					"props": {
						"model": "chars/Clothes/LegionMedium/Model.fbx",
						"skinTexture": "chars/Clothes/LegionMedium/M_ClothesMediumLegionBtmSkinRed_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"rarity": 1,
					"price": 105,
					"desc": "La propreté et l'entretien impeccable de cette hamata témoigne de la discipline de la Légion.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoInquisition",
					"name": "Hamata du purgateur",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						},
						{
							"value": 6,
							"attribute": "DamageBonusOppAttack",
							"upValue": 12
						}
					],
					"props": {
						"model": "chars/Clothes/InquisitionMedium/Model.fbx"
					},
					"type": "ArmorMedium",
					"price": 105,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"desc": "Il arrive que les hérétiques résistent à leur arrestation. Heureusement, cette cotte de mailles permet de parer à cette éventualité.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorUncoDeserters",
					"name": "Brigandine du renégat",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						},
						{
							"value": 6,
							"attribute": "DamageBonusOppAttack",
							"upValue": 12
						}
					],
					"props": {
						"model": "chars/Clothes/MediumArmour_3/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour_3/M_ClothesMediumArmour3SkinCommonDeserters_Albedo_1K.png"
					},
					"type": "ArmorMedium",
					"price": 105,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 4,
						"height": 2
					},
					"desc": "Une odeur de feu de bois et de sueur se dégage de cette brigandine. Aucun savon ne pourra en venir à bout.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareGeneric",
					"name": "Gambison renforcé",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/MediumArmour_2/Model.fbx",
						"flags": 1
					},
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"desc": "En plus du tissu et du rembourrage, du cuir bouilli vient renforcer les quelques défauts de ce gambison.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareAlazar",
					"name": "Gambison d'Alazar",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 11,
							"attribute": "Guard",
							"upValue": 22
						}
					],
					"props": {
						"model": "chars/Clothes/AlazarMedium/Model.fbx",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 16,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 105,
					"desc": "À Alazar, il est d'usage de porter contre le corps une première couche de vêtement chaud, puis la côte de mailles et enfin le gambison.",
					"rarity": 2
				},
				{
					"id": "MediumArmorRareLegion",
					"name": "Hamata du commandant",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						},
						{
							"value": 3,
							"attribute": "CritHitPercent",
							"upValue": 7
						}
					],
					"props": {
						"model": "chars/Clothes/LegionMedium/Model.fbx",
						"skinTexture": "chars/Clothes/LegionMedium/M_ClothesMediumLegionBtmSkinRed_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"rarity": 2,
					"price": 137,
					"desc": "Dernier échelon avant d'arriver aux colonels, les commandants de la Légion d'Edoran peuvent se targuer de porter l'une des armures les plus performantes des Cinq Royaumes.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareCompanions",
					"name": "Spalière du stipendié",
					"weight": 3,
					"baseBonus": [
						{
							"value": 11,
							"attribute": "Armor",
							"upValue": 174
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						},
						{
							"value": 8,
							"attribute": "CritHitDamageBonusPercent",
							"upValue": 15
						}
					],
					"props": {
						"model": "chars/Clothes/CompanionsMedium/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsMedium/M_ClothesCompanionsMediumBtmSkinCompanions_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"rarity": 2,
					"price": 137,
					"desc": "Bien que la Fraternité loue ses services au plus offrant, la compagnie arbore ses origines avec fierté sur cette spalière.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareFugitiveOutlaws",
					"name": "Armure lamellaire du Fugitif",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/MediumArmour/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour/M_ClothesMediumArmour_SkinMarauder_Albedo_1K.png",
						"disableLoot": true
					},
					"rarity": 2,
					"price": 137,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"desc": "Une armure lamellaire typique des Brigands.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareFugitiveDeserters",
					"name": "Brigandine du Fugitif",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/MediumArmour_3/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour_3/M_ClothesMediumArmour3SkinCommonDeserters_Albedo_1K.png",
						"disableLoot": true
					},
					"rarity": 2,
					"price": 137,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 4,
						"height": 2
					},
					"desc": "Une brigandine typique des Déserteurs.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareFugitiveGuard",
					"name": "Gambison du Fugitif",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/MediumArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour_2/Mat_ClothesMediumArmour2BtmSkinGuard_Albedo_1K.png",
						"disableLoot": true
					},
					"rarity": 2,
					"price": 137,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"desc": "Un gambison aux couleurs de la Garde.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareFugitiveLegion",
					"name": "Hamata du Fugitif",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LegionMedium/Model.fbx",
						"skinTexture": "chars/Clothes/LegionMedium/M_ClothesMediumLegionBtmSkinRed_Albedo_1K.png",
						"disableLoot": true
					},
					"rarity": 2,
					"price": 137,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"desc": "Une hamata aux couleurs de la Légion.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareFugitiveCompanions",
					"name": "Spalière du Fugitif",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/CompanionsMedium/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsMedium/M_ClothesCompanionsMediumBtmSkinCompanions_Albedo_1K.png",
						"disableLoot": true
					},
					"rarity": 2,
					"price": 137,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"desc": "Une spalière aux couleurs de la Fraternité.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareFugitiveInquisition",
					"name": "Hamata du Fugitif",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/InquisitionMedium/Model.fbx",
						"disableLoot": true
					},
					"rarity": 2,
					"price": 137,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"desc": "Une hamata aux couleurs de l'Inquisition.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareFugitiveTrackers",
					"name": "Spalière du Figitif",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/TrackerMedium/Model.fbx",
						"flags": 1,
						"disableLoot": true
					},
					"rarity": 2,
					"price": 137,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"desc": "Une spalière typique des Traqueurs.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareFugitiveAlazarSoldiers",
					"name": "Gambison du Fugitif",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/AlazarMedium/Model.fbx",
						"disableLoot": true
					},
					"price": 137,
					"rarity": 2,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"desc": "Un gambison aux couleurs du royaume d'Alazar.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorRareOutlaws",
					"name": "Armure lamellaire du criminel",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/MediumArmour/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour/M_ClothesMediumArmour_SkinMarauder_Albedo_1K.png",
						"feature": "Difficulty_Update"
					},
					"iconeDone": true,
					"group": 16,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 137,
					"rarity": 2,
					"desc": "Difficile de justifier d'honnêtes intentions lorsqu'on arbore une telle armure."
				},
				{
					"id": "MediumArmorRareTrackers",
					"name": "Spalière du pourchasseur",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/TrackerMedium/Model.fbx",
						"flags": 1,
						"feature": "Difficulty_Update"
					},
					"iconeDone": true,
					"group": 16,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 137,
					"rarity": 2,
					"desc": "Cette armure n’est sensée appartenir qu’à un seul individu et le suivre sur son bûcher funéraire."
				},
				{
					"id": "MediumArmorLegendaryChampionHarag",
					"name": "Spalière de Bionn",
					"weight": 3,
					"baseBonus": [
						{
							"value": 78,
							"attribute": "Armor",
							"upValue": 1250
						},
						{
							"value": 20,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/TrackerMedium/Model.fbx",
						"skinTexture": "chars/Clothes/TrackerMedium/ClothesMediumTrackerSkinHaragChamp_Btm_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 178,
					"rarity": 3,
					"desc": "Une fois nettoyée du pus et du sang accumulé pendant vingt ans d'errance, cette spalière est tout à fait utilisable.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorLegendaryChampion",
					"name": "Armure lamellaire de Matthias",
					"weight": 3,
					"baseBonus": [
						{
							"value": 36,
							"attribute": "Armor",
							"upValue": 579
						},
						{
							"value": 30,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/MediumArmour/Model.fbx",
						"skinTexture": "chars/Clothes/MediumArmour/M_ClothesMediumArmourSkinLegendaryChampion_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 178,
					"rarity": 3,
					"desc": "Il y a dans cette abomination de métal autant de pièces d'armures que Matthias Lund a fait de victimes.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorLegendaryChampion2",
					"name": "Hamata d'Alexa",
					"weight": 3,
					"baseBonus": [
						{
							"value": 78,
							"attribute": "Armor",
							"upValue": 1250
						},
						{
							"value": 40,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/Champions/Alexa/ModelWoman.fbx",
						"skinTexture": "chars/Clothes/Champions/Alexa/F_ClothesMediumLegionBtmSkinChampionAlexa_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 178,
					"rarity": 3,
					"desc": "Cette hamata est celle d’une Colonelle de la Légion : sans doute l’une des armures les plus précieuses et prestigieuses qui puissent exister.",
					"group": 16,
					"iconeDone": true
				},
				{
					"id": "MediumArmorLegendaryChampion6",
					"name": "Armure lamellaire de Fenris",
					"weight": 3,
					"baseBonus": [
						{
							"value": 78,
							"attribute": "Armor",
							"upValue": 1250
						},
						{
							"value": 20,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/Champions/Fenris/Model.fbx",
						"disableLoot": true
					},
					"group": 16,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 8,
						"height": 2
					},
					"type": "ArmorMedium",
					"rarity": 3,
					"desc": "Fenris Dredd a pris soin de retirer toutes les lanières et les cordons en cuir de cette armure pour les remplacer par du tissu ou du jonc tressé. Le résultat est étonnamment résistant.",
					"price": 178,
					"iconeDone": true
				},
				{
					"id": "MediumArmorLegendaryChampion7",
					"name": "Gambison de Trivette",
					"weight": 3,
					"baseBonus": [
						{
							"value": 75,
							"attribute": "Armor",
							"upValue": 990
						},
						{
							"value": 20,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/Champions/Trivette/ModelWoman.fbx",
						"skinTexture": "chars/Clothes/Champions/Trivette/F_ClothesMediumArmour2BtmSkinChampionTrivette_Albedo_1K.png",
						"disableLoot": true
					},
					"group": 16,
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 4,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 178,
					"rarity": 3,
					"desc": "Ce gambison a été cousu pour être vu et reconnu, même depuis le plus haut des gradins de l’arène Hoevendorp.",
					"iconeDone": true
				},
				{
					"id": "MediumArmorLegendaryChampion8",
					"name": "Brigandine de Kogo",
					"weight": 3,
					"baseBonus": [
						{
							"value": 40,
							"attribute": "Armor",
							"upValue": 675
						},
						{
							"value": 20,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/Champions/Toro_Kogo/Model.fbx",
						"skinTexture": "chars/Clothes/Champions/Toro_Kogo/M_ClothesMediumArmour3SkinChampionKogo_Albedo_1K.png",
						"disableLoot": true
					},
					"group": 16,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 8,
						"height": 2
					},
					"price": 178,
					"rarity": 3,
					"desc": "Malgré ses couleurs passées et ses coutures abîmées, cette brigandine est entretenue avec soin. Elle a sans doute une valeur sentimentale pour Kogo.",
					"iconeDone": true
				},
				{
					"id": "MediumArmorLegendaryChampion9",
					"name": "Brigandine de Toro",
					"weight": 3,
					"baseBonus": [
						{
							"value": 40,
							"attribute": "Armor",
							"upValue": 675
						},
						{
							"value": 20,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/Champions/Toro_Kogo/Model.fbx",
						"skinTexture": "chars/Clothes/Champions/Toro_Kogo/M_ClothesMediumArmour3SkinChampionToro_Albedo_1K.png",
						"disableLoot": true
					},
					"group": 16,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/MediumArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 8,
						"height": 2
					},
					"price": 178,
					"rarity": 3,
					"desc": "Rapiécée, délavée, cette brigandine tient pourtant son rôle depuis des années. C’est sans doute grâce aux bons soins de Toro qui y semble très attaché.",
					"iconeDone": true
				},
				{
					"id": "MediumArmorLegendaryChampionArenaA1",
					"name": "Pourpoint de Lisbeth",
					"weight": 3,
					"baseBonus": [
						{
							"value": 75,
							"attribute": "Armor",
							"upValue": 990
						},
						{
							"value": 20,
							"attribute": "Guard"
						}
					],
					"props": {
						"feature": "Alazar1_Update",
						"model": "chars/Clothes/Champions/Lisbeth/ModelWoman.fbx",
						"skinTexture": "chars/Clothes/Champions/Lisbeth/Mat_ClothesAlazarLightBtmSkinLisbeth_M_Albedo_1K.png"
					},
					"iconeDone": true,
					"group": 16,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 2,
						"height": 2
					},
					"type": "ArmorMedium",
					"price": 178,
					"rarity": 3,
					"desc": "Ce pourpoint a été taillé dans du cuir d'ours et réhaussé de fourrure de loup blanc. Originalités qui ont sans doute contribué au prestige de Lisbeth."
				},
				{
					"id": "MediumArmorPlaceholder1",
					"name": "Contenu Alazar",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"skill": "ArmorOpportunityCrit",
						"model": "chars/Clothes/Judge/Model.fbx",
						"skinTexture": "chars/Clothes/Judge/ClothesJudgeBtm_M_Albedo_1K.png",
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"group": 16,
					"type": "ArmorMedium",
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"rarity": 2,
					"desc": "À défaut de protéger vos tibias, cette armure vous aidera à mieux riposter.",
					"iconeDone": true
				},
				{
					"id": "LightArmorCommonGeneric",
					"name": "Veste",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LightArmour/Model.fbx",
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 74,
					"rarity": 0,
					"desc": "Pourtant taillé dans un tissu épais, cette veste ne protège ni du froid ni de la pluie.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorUncoGeneric",
					"name": "Veste précieuse",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LightArmour/Model.fbx",
						"flags": 1
					},
					"type": "ArmorLight",
					"price": 105,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"height": 2
					},
					"desc": "Le cuir et le tissu sont de bonne qualité. Leurs couleurs ont été associées avec goût.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareGeneric",
					"name": "Veste de maître",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LightArmour/Model.fbx",
						"flags": 1
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"height": 2
					},
					"desc": "Cette veste est l'œuvre d'un artisan de Bélérion. La méthode de tissage ressemble à celle utilisée pour les voiles des bateaux, rendant cette armure très résistante à l'usure et aux intempéries.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorCommonOutlaws",
					"name": "Tabard des hors-la-loi",
					"weight": 2,
					"baseBonus": [
						{
							"value": 9,
							"attribute": "Armor",
							"upValue": 119
						},
						{
							"value": 1,
							"attribute": "CritHitPercent",
							"upValue": 5
						}
					],
					"props": {
						"model": "chars/Clothes/LightArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour_2/M_ClothesLightArmour2SkinCommonOutlaws_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "ArmorLight",
					"rarity": 0,
					"price": 74,
					"desc": "Un tabard qui offre une petite protection mais qui surtout impressionne le manant.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorCommonLegion",
					"name": "Tunique de la Légion",
					"weight": 2,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "DistanceBonus"
						}
					],
					"props": {
						"model": "chars/Clothes/LegionLight/Model.fbx",
						"skinTexture": "chars/Clothes/LegionLight/M_ClothesLegionLightBtmSkinRed_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 74,
					"rarity": 0,
					"desc": "Tout soldat de la Légion a porté cette tunique au moins une fois dans sa vie.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorCommonTrackers",
					"name": "Pelisse du Traqueur",
					"weight": 2,
					"baseBonus": [
						{
							"value": 9,
							"attribute": "Armor",
							"upValue": 119
						},
						{
							"value": 1,
							"attribute": "DistanceBonus"
						}
					],
					"props": {
						"model": "chars/Clothes/TrackerLight/Model.fbx",
						"skinTexture": "chars/Clothes/TrackerLight/ClothesLightTrackerGreen_Btm_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 74,
					"rarity": 0,
					"desc": "La fourrure de ce loup sert aussi bien au camouflage qu’à tenir chaud à son porteur.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorCommonAlazar",
					"name": "Pourpoint d'Alazar",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/AlazarLight/Model.fbx",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 17,
					"type": "ArmorLight",
					"desc": "Ce n'est parce qu'on se bat et que l'on patrouille dans le blizzard qu'on ne peut pas être élégant.",
					"price": 74,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					}
				},
				{
					"id": "LightArmorUncoCraftT1",
					"name": "Veste rembourrée",
					"weight": 2,
					"props": {
						"model": "chars/Clothes/LightArmour/Model.fbx",
						"disableLoot": true,
						"flags": 1,
						"requireLevel": 2,
						"fixedLevel": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 6,
						"height": 2
					},
					"type": "ArmorLight",
					"rarity": 1,
					"baseBonus": [],
					"price": 102,
					"desc": "Une veste de bonne facture, renforcée de cuir sur les points vitaux.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorUncoCraftT2",
					"name": "Veste fantôme",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"model": "chars/Clothes/TrackerLight/T2.prefab",
						"skinTexture": "chars/Clothes/TrackerLight/ClothesTrackerLightBtmSkinT2_M_Albedo_1K.png",
						"requireLevel": 5,
						"flags": 1,
						"fixedLevel": 6
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 6,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 147,
					"rarity": 1,
					"desc": "Le cuir fantôme est doux à même la peau mais il a tendance à donner des cauchemars à son porteur.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorUncoCraftT3",
					"name": "Veste en givracier",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"model": "chars/Clothes/AlazarLight/Model.fbx",
						"skinTexture": "chars/Clothes/AlazarLight/Mat_ClothesAlazarLightBtmSkinT3_M_Albedo_1K.png",
						"requireLevel": 8,
						"flags": 1,
						"fixedLevel": 9
					},
					"group": 17,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 4,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 210,
					"rarity": 1,
					"desc": "Cette veste ne prend jamais la poussière ni l'odeur de son porteur. Aucun forgeron ne semble pouvoir expliquer le phénomène.",
					"iconeDone": true
				},
				{
					"id": "LightArmorUncoCraftT4",
					"name": "Veste en acier akhedien",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"model": "chars/Clothes/CompanionsLight/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsLight/M_ClothesCompanionLightBtmSkinT4_Albedo_1K.png",
						"requireLevel": 11,
						"flags": 1,
						"fixedLevel": 12,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 17,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 248,
					"rarity": 2,
					"desc": "Une veste qui pourrait passer pour ordinaire si elle n'était pas renforcée du meilleur alliage des Cinq Royaumes."
				},
				{
					"id": "LightArmorUncoOutlaws",
					"name": "Tabard décoré des hors-la-loi",
					"weight": 2,
					"baseBonus": [
						{
							"value": 9,
							"attribute": "Armor",
							"upValue": 119
						},
						{
							"value": 2,
							"attribute": "CritHitPercent",
							"upValue": 6
						}
					],
					"props": {
						"model": "chars/Clothes/LightArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour_2/M_ClothesLightArmour2SkinCommonOutlaws_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 105,
					"rarity": 1,
					"desc": "Cette tunique a été décorée à l'excès par son ancien propriétaire.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorUncoGuard",
					"name": "Jaque du tacticien",
					"weight": 2,
					"baseBonus": [
						{
							"value": 9,
							"attribute": "Armor",
							"upValue": 119
						},
						{
							"value": 2,
							"attribute": "CritHitPercent",
							"upValue": 6
						}
					],
					"props": {
						"model": "chars/Clothes/LightArmour_3/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour_3/M_ClothesLightArmour3SkinRareGuard_Albedo_1K.png"
					},
					"type": "ArmorLight",
					"price": 105,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 0,
						"height": 2
					},
					"desc": "Ce jaque a beau être léger, il est discrètement renforcé aux articulations.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorUncoAlazar",
					"name": "Pourpoint d'Alazar",
					"weight": 2,
					"baseBonus": [
						{
							"value": 9,
							"attribute": "Armor",
							"upValue": 119
						},
						{
							"value": 2,
							"attribute": "CritHitPercent",
							"upValue": 6
						}
					],
					"props": {
						"model": "chars/Clothes/AlazarLight/Model.fbx",
						"feature": "Alazar1_Update"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 105,
					"rarity": 1,
					"desc": "Ce vêtement est parfaitement adapté aux patrouilles dans les villes venteuses et froides d'Alazar.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorUncoCompanions",
					"name": "Pourpoint de l'archer",
					"weight": 2,
					"baseBonus": [
						{
							"value": 9,
							"attribute": "Armor",
							"upValue": 119
						},
						{
							"value": 2,
							"attribute": "CritHitPercent",
							"upValue": 6
						}
					],
					"props": {
						"model": "chars/Clothes/CompanionsLight/Model.fbx",
						"skinTexture": "chars/Clothes/CompanionsLight/M_ClothesCompanionLightBtmSkinCompanions_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 105,
					"rarity": 1,
					"desc": "Il y a une poche dissimulée à l’intérieur de ce pourpoint pour y glisser son salaire.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorUncoInquisition",
					"name": "Tunique d'adorateur",
					"weight": 2,
					"baseBonus": [
						{
							"value": 9,
							"attribute": "Armor",
							"upValue": 119
						},
						{
							"value": 2,
							"attribute": "CritHitPercent",
							"upValue": 6
						}
					],
					"props": {
						"model": "chars/Clothes/InquisitionLight/Model.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 105,
					"rarity": 1,
					"desc": "Qui a besoin d’un harnois quand on est protégé par l’Œil ?",
					"group": 17,
					"iconeDone": true,
					"tool": {}
				},
				{
					"id": "LightArmorUncoTrackers",
					"name": "Pelisse de veneur",
					"weight": 2,
					"baseBonus": [
						{
							"value": 9,
							"attribute": "Armor",
							"upValue": 119
						},
						{
							"value": 2,
							"attribute": "CritHitPercent",
							"upValue": 6
						}
					],
					"props": {
						"model": "chars/Clothes/TrackerLight/Model.fbx",
						"skinTexture": "chars/Clothes/TrackerLight/ClothesLightTrackerGreen_Btm_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 105,
					"rarity": 1,
					"desc": "Le poil de cette pelisse est resplendissant : la personne qui l’a entretenue jusqu’à maintenant savait ce qu’elle faisait.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorArena",
					"name": "Tabard de l'arène",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LightArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour_2/M_ClothesLightArmour2SkinArena_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 4,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 105,
					"rarity": 2,
					"desc": "Le tissu de ce tabard est d'excellente qualité, on voit à peine des raccommodages successifs.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareOutlaws",
					"name": "Tabard du meneur",
					"weight": 2,
					"baseBonus": [
						{
							"value": 9,
							"attribute": "Armor",
							"upValue": 119
						},
						{
							"value": 3,
							"attribute": "CritHitPercent",
							"upValue": 7
						}
					],
					"props": {
						"model": "chars/Clothes/LightArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour_2/M_ClothesLightArmour2SkinCommonOutlaws_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"desc": "Ce tabard a été cousu par un véritable tailleur, ce qui n'est pas commun pour un vêtement de malandrin.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareGuard",
					"name": "Jaque du capitaine",
					"weight": 2,
					"baseBonus": [
						{
							"value": 8,
							"attribute": "Armor",
							"upValue": 106
						},
						{
							"value": 1,
							"attribute": "Willpower",
							"upValue": 1
						},
						{
							"value": 1,
							"attribute": "CritHitPercent",
							"upValue": 5
						}
					],
					"props": {
						"model": "chars/Clothes/LightArmour_3/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour_3/M_ClothesLightArmour3SkinRareGuard_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"desc": "Un jaque constitué de couches de tissu successives étonnamment résistantes.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareAlazar",
					"name": "Pourpoint du capitaine d'Alazar",
					"weight": 2,
					"baseBonus": [
						{
							"value": 8,
							"attribute": "Armor",
							"upValue": 106
						},
						{
							"value": 1,
							"attribute": "Willpower",
							"upValue": 1
						},
						{
							"value": 1,
							"attribute": "CritHitPercent",
							"upValue": 5
						}
					],
					"props": {
						"model": "chars/Clothes/AlazarLight/Model.fbx",
						"feature": "Difficulty_Update"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"desc": "Les capitaines d’Alazar arborent fièrement un pourpoint, non pas taillé dans leur propre royaume, mais par les plus prestigieux artisans de Gosenberg.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareTrackers",
					"name": "Pelisse du trappeur",
					"weight": 2,
					"baseBonus": [
						{
							"value": 8,
							"attribute": "Armor",
							"upValue": 106
						},
						{
							"value": 1,
							"attribute": "Willpower",
							"upValue": 1
						},
						{
							"value": 1,
							"attribute": "CritHitPercent",
							"upValue": 5
						}
					],
					"props": {
						"model": "chars/Clothes/TrackerLight/Model.fbx",
						"skinTexture": "chars/Clothes/TrackerLight/ClothesLightTrackerGreen_Btm_Albedo_1K.png"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"desc": "La bête qui a servi à cette pelisse était majestueuse et digne de revêtir un trappeur.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareFugitiveOutlaws",
					"name": "Tabard du Fugitif",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LightArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour_2/M_ClothesLightArmour2SkinCommonOutlaws_Albedo_1K.png"
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"desc": "Une tunique typique des Brigands.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareFugitiveDeserters",
					"name": "Veste du Fugitif",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LightArmour/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour/M_ClothesLightArmourSkinLeader_Albedo_1K.png",
						"disableLoot": true
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"desc": "Une veste typique des Déserteurs.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareFugitiveGuard",
					"name": "Jaque du Fugitif",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LightArmour_3/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour_3/M_ClothesLightArmour3SkinRareGuard_Albedo_1K.png",
						"disableLoot": true
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 0,
						"height": 2
					},
					"desc": "Un jaque aux couleurs de la Garde.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareFugitiveLegion",
					"name": "Tunique du Fugitif",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LegionLight/Model.fbx",
						"skinTexture": "chars/Clothes/LegionLight/M_ClothesLegionLightBtmSkinRed_Albedo_1K.png",
						"disableLoot": true
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"desc": "Une tunique aux couleurs de la Légion.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareFugitiveCompanions",
					"name": "Pourpoint du Fugitif",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/CompanionsLight/Model.fbx",
						"disableLoot": true,
						"skinTexture": "chars/Clothes/CompanionsLight/M_ClothesCompanionLightBtmSkinCompanions_Albedo_1K.png"
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 8,
						"height": 2
					},
					"desc": "Un pourpoint aux couleurs de la Fraternité.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareFugitiveInquisition",
					"name": "Tunique du Fugitif",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/InquisitionLight/Model.fbx",
						"disableLoot": true
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"desc": "Une tunique aux couleurs de l'Inquisition.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareFugitiveTrackers",
					"name": "Pelisse du Fugitif",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/TrackerLight/Model.fbx",
						"skinTexture": "chars/Clothes/TrackerLight/ClothesLightTrackerGreen_Btm_Albedo_1K.png",
						"disableLoot": true
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"desc": "Une pelisse typique des Traqueurs.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareFugitiveAlazarSoldiers",
					"name": "Pourpoint du Fugitif",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/AlazarLight/Model.fbx",
						"disableLoot": true
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"desc": "Un pourpoint aux couleurs du royaume d'Alazar.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareDeserters",
					"name": "Veste du pilleur",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/LightArmour/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour/M_ClothesLightArmourSkinLeader_Albedo_1K.png",
						"feature": "Difficulty_Update"
					},
					"iconeDone": true,
					"group": 17,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"desc": "Rapiécée avec dextérité, cette veste est tout aussi résistante aujourd'hui qu'à son heure de gloire."
				},
				{
					"id": "LightArmorLegendaryChampion1",
					"name": "Tabard de Smot",
					"weight": 2,
					"baseBonus": [
						{
							"value": 75,
							"attribute": "Armor",
							"upValue": 990
						},
						{
							"value": 10,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/LightArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/LightArmour_2/M_ClothesLightArmour2SkinSmot_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 6,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 178,
					"rarity": 3,
					"desc": "Le tabard de Smot est recouvert d'une substance verdâtre.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorLegendaryChampion2",
					"name": "Pelisse de Kaghal",
					"weight": 2,
					"baseBonus": [
						{
							"value": 30,
							"attribute": "Armor",
							"upValue": 396
						},
						{
							"value": 20,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/TrackerLight/Model.fbx",
						"skinTexture": "chars/Clothes/TrackerLight/ClothesLightTrackerSkinKaghal_Btm_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 2,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 178,
					"rarity": 3,
					"desc": "Le temps a effacé les couleurs de cette pelisse et en a dévoré les coutures d’origine. Pourtant, l’habileté de Kaghal a permis à cette armure légère de traverser les époques.",
					"group": 17,
					"iconeDone": true
				},
				{
					"id": "LightArmorRareInquisition",
					"name": "Tunique de messager",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/InquisitionLight/Model.fbx",
						"feature": "Difficulty_Update"
					},
					"iconeDone": true,
					"group": 17,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 137,
					"rarity": 2,
					"desc": "Cette tenue confère une grande liberté de mouvement contrairement à ce que pourrait laisser penser son apparente lourdeur."
				},
				{
					"id": "LightArmorPlaceholder1",
					"name": "Contenu Alazar",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"skill": "ArmorLastUnitPlay",
						"model": "chars/Clothes/Judge/Model.fbx",
						"skinTexture": "chars/Clothes/Judge/ClothesJudgeBtm_M_Albedo_1K.png",
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"group": 17,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "ArmorLight",
					"rarity": 2,
					"desc": "Cette veste est parfaite pour les assassins en quête de tueries.",
					"iconeDone": true
				},
				{
					"id": "LightArmorLegendaryChampion10",
					"name": "Tabard de Kristoff Kruppe",
					"weight": 2,
					"baseBonus": [
						{
							"value": 75,
							"attribute": "Armor",
							"upValue": 990
						},
						{
							"value": 10,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/LightArmour_2/Model.fbx",
						"skinTexture": "chars/Clothes/Champions/Christoph Gluck/M_ClothesLightArmour2SkinChampionGluck_Albedo_1K.png",
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 17,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 6,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 178,
					"rarity": 3,
					"desc": "Si mystérieux et sombre que soit ce tabard de l'extérieur, il est très confortable lorsqu'il s'agit de dormir sur le pont d'un bateau."
				},
				{
					"id": "LightArmorLegendaryChampionArenaH1",
					"name": "Pelisse de Nairolf",
					"weight": 2,
					"baseBonus": [
						{
							"value": 40,
							"attribute": "Armor",
							"upValue": 675
						},
						{
							"value": 20,
							"attribute": "Guard"
						}
					],
					"props": {
						"model": "chars/Clothes/Champions/Nairolf/Model.fbx",
						"flags": 1,
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"skinTexture": "chars/Clothes/Champions/Nairolf/M_ClothesTrackerLightBtmSkinNairolf_Albedo_1K.png"
					},
					"iconeDone": true,
					"group": 17,
					"icon": {
						"file": "ui/Icons/GearIcons/LightArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 4,
						"height": 2
					},
					"type": "ArmorLight",
					"price": 178,
					"rarity": 3,
					"desc": "L'ours qui orne cette pelisse n'est autre que le précédent frère d'arme de Nairolf dont il n'a pas voulu se séparer."
				},
				{
					"id": "BaseArmorStart1",
					"name": "Hardes de paysan",
					"weight": 1,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "Armor"
						}
					],
					"props": {
						"model": "chars/Clothes/Basic2/Model.fbx",
						"disableLoot": true,
						"flags": 1,
						"fixedLevel": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 25,
					"rarity": 0,
					"desc": "De vieux vêtements pratiques et tachés de terre.",
					"group": 18,
					"iconeDone": true
				},
				{
					"id": "BaseArmorStart2",
					"name": "Hardes de pêcheur",
					"weight": 1,
					"baseBonus": [
						{
							"value": 8,
							"attribute": "Armor"
						}
					],
					"props": {
						"model": "chars/Clothes/Basic4/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 2,
						"height": 2
					},
					"type": "Armor",
					"price": 25,
					"rarity": 0,
					"desc": "Accoutumées aux intempéries, ces hardes sentent un peu le poisson.",
					"group": 18,
					"iconeDone": true
				},
				{
					"id": "BaseArmorCommonCraft",
					"name": "Hardes",
					"weight": 1,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "Armor"
						}
					],
					"props": {
						"model": "chars/Clothes/Basic3/Model.fbx",
						"disableLoot": true,
						"skinTexture": "chars/Clothes/Basic3/M_ClothesBasic3SkinCraft_Albedo_1K.png",
						"fixedLevel": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 2,
						"height": 2
					},
					"type": "Armor",
					"price": 31,
					"desc": "Des vêtements modestes mais qui protègent du froid.",
					"rarity": 0,
					"group": 18,
					"iconeDone": true
				},
				{
					"id": "BaseArmorFarmer",
					"name": "Tenue de fermier",
					"weight": 1,
					"baseBonus": [
						{
							"value": 8,
							"attribute": "Armor",
							"upValue": 135
						}
					],
					"props": {
						"model": "chars/Clothes/Peasant/Model.fbx",
						"disableLoot": true,
						"flags": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Une tenue grossière pour le travail aux champs.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "PeasantTunic",
					"name": "Vêtement de paysan",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Peasant2/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 8,
						"y": 2,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Ce vêtement de paysan est plus pratique que confortable.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "PeasantClothes",
					"name": "Braies de paysans",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"flags": 1,
						"model": "chars/Clothes/Peasant3/Model.fbx"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 2,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Un type de vêtements qui se transmet de génération en génération jusqu'à ce qu'il tombe en poussière.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "BaseArmorMerchant",
					"name": "Tenue de marchand",
					"weight": 1,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "Armor",
							"upValue": 92
						}
					],
					"props": {
						"model": "chars/Clothes/Trader_2/Model.fbx",
						"disableLoot": true,
						"flags": 3
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Des habits de roturier rapiécés.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "BlacksmithClothes",
					"name": "Tenue de forgeron",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Blacksmith/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Une tenue idéale pour qui manie le fer en fusion.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "TraderTunic",
					"name": "Vêtement de marchand",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Trader/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 5,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Une coupe élégante et un tissu résistant, parfait pour courir les marchés des Cinq Royaumes.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "TavernKeeperClothes",
					"name": "Tenue de tavernier",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/TavernKeeper/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Aucune coquetterie dans ces vêtements imbibés l'alcool et de graisse.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "NobleClothes",
					"name": "Vêtement de noble",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Noble/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Le faste qui se dégage de cet habit suffit à persuader son porteur qu'il est un grand seigneur.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "PriestClothes",
					"name": "Vêtement de prêtre",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Priest/Model.fbx",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Taillée dans le plus humble des tissus, cette robe est pourtant l'un des plus prestigieux vêtements des Cinq Royaumes.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "JudgeClothes",
					"name": "Tenue de Juge",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Judge/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 7,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Arborer la fourrure d’un monstre de la Meute Fantôme est un privilège insigne des juges d’Harag.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "RagsClothes",
					"name": "Haillon",
					"weight": 1,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Armor"
						}
					],
					"props": {
						"model": "chars/Clothes/Naked/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Ces haillons ne méritent pas le nom de vêtement.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "TumblerClothes",
					"name": "Costume de scène",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Minstrel/Model.fbx",
						"flags": 1,
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 2,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Chamarré pour être vu de loin, ce costume de bateleur est porté par toutes sortes d'artistes, du montreur d'ours au comédien.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "PuzzleManClothes",
					"name": "Tenue du Grand Résolutionneur",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Minstrel/Model_PuzzleMan.fbx",
						"skinTexture": "chars/Clothes/Minstrel/ClothesMinstrelSkinPuzzleMan_Albedo_1K.png",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 2,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Une tenue très travaillée et du plus bel effet lorsqu'elle est portée par Solvius.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "ScholarClothes",
					"name": "Tenue d'érudit",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Scholar/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 9,
						"y": 0,
						"height": 2
					},
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Il suffit de porter cette tenue pour se sentir soudain plus intelligent que ses interlocuteurs.",
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "NobleNegociant",
					"name": "Vêtement de Négociant",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/NobleNegociant/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 5,
						"y": 2,
						"height": 2
					},
					"type": "Armor",
					"desc": "Cette tenue est un mélange parfait de bon goût et de draperies fines.",
					"price": 18,
					"rarity": 0,
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "Townspeople",
					"name": "Vêtement de citoyen",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Townsman/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"type": "Armor",
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 9,
						"y": 2,
						"height": 2
					},
					"desc": "Les artisans de Gosenberg ont veillé à inventer un costume suffisamment cher pour exclure par son prix les plus pauvres de leurs concitoyens.",
					"price": 18,
					"rarity": 0,
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "TraderTunic2",
					"name": "Tenue de marchand",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Trader_2/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"type": "Armor",
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"height": 2
					},
					"desc": "Une tenue robuste mais élégante, parfaite pour parcourir les routes commerciales.",
					"price": 18,
					"rarity": 0,
					"group": 19,
					"iconeDone": true
				},
				{
					"id": "Prostitute",
					"name": "Vêtement de prostitué",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Prostitute/Model.fbx",
						"disableLoot": true,
						"flags": 1
					},
					"group": 19,
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 1,
						"y": 4,
						"height": 2
					},
					"type": "Armor",
					"desc": "Les nombreux lacets qui tiennent ensemble les pans de ce vêtement en font un habit facile à ôter mais compliqué à remettre.",
					"price": 18,
					"rarity": 0,
					"iconeDone": true
				},
				{
					"id": "Sportswear",
					"name": "Tenue de sport",
					"weight": 1,
					"baseBonus": [
						{
							"value": 0,
							"attribute": "Armor"
						}
					],
					"props": {
						"model": "chars/Clothes/Sportswear/Model.fbx",
						"disableLoot": true,
						"skinTexture": "chars/Clothes/Sportswear/M_ClothesSportswear_Albedo_1K.png"
					},
					"group": 19,
					"type": "Armor",
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 4,
						"y": 4,
						"height": 2
					},
					"desc": "Encore encroutée de boue et de sang, un peu humide à l'intérieur, cette tenue est pourtant indispensable aux joueurs de Rouste.",
					"price": 18,
					"rarity": 0,
					"iconeDone": true
				},
				{
					"id": "SportswearGosenberg",
					"name": "Tenue de sport",
					"weight": 1,
					"baseBonus": [
						{
							"value": 0,
							"attribute": "Armor"
						}
					],
					"props": {
						"model": "chars/Clothes/Sportswear/Model.fbx",
						"disableLoot": true,
						"skinTexture": "chars/Clothes/Sportswear/M_ClothesSportswearSkinGosenberg_Albedo_1K.png"
					},
					"group": 19,
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 2,
						"y": 4,
						"height": 2
					},
					"type": "Armor",
					"price": 0,
					"rarity": 0,
					"desc": "Encore encroutée de boue et de sang, un peu humide à l'intérieur, cette tenue est pourtant indispensable aux joueurs de Rouste.",
					"iconeDone": true
				},
				{
					"id": "PurifierClothes",
					"name": "Tenue de Purificateur",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"model": "chars/Clothes/Purifier/Model.fbx",
						"disableLoot": true,
						"flags": 1,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 19,
					"type": "Armor",
					"price": 18,
					"rarity": 0,
					"desc": "Ce vêtement compliqué est un phare dans la nuit pour les malades en perdition.",
					"icon": {
						"file": "ui/Icons/GearIcons/ClothArmorsIcons.png",
						"size": 96,
						"x": 3,
						"y": 4,
						"height": 2
					}
				},
				{
					"id": "BeltAccPoisonExtra",
					"name": "Flacon de poison",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccPoisonExtra",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 12
					},
					"type": "BeltAccessory",
					"price": 64,
					"rarity": 1,
					"desc": "Autrefois, la simple possession d'un flacon de poison pouvait mener directement en prison.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccPoisonDmgBonus",
					"name": "Baume infectieux",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccPoisonDmgBonus",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 11
					},
					"type": "BeltAccessory",
					"price": 63,
					"rarity": 0,
					"desc": "Cette pâte blanchâtre ressemble à de la graisse de canard.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccPoisonResist",
					"name": "Antidote",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccPoisonResist",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 12
					},
					"type": "BeltAccessory",
					"price": 68,
					"rarity": 0,
					"desc": "Préparée par un apothicaire de renom, cette lotion protège des pires poisons.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccBleedingCrit",
					"name": "Croc acéré",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccBleedingCrit"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 11
					},
					"type": "BeltAccessory",
					"price": 55,
					"rarity": 1,
					"desc": "Le croc d'une bête féroce qui n'est pas que décoratif.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccBleedingResist",
					"name": "Cataplasme",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccBleedingResist",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 13
					},
					"type": "BeltAccessory",
					"price": 67,
					"rarity": 0,
					"desc": "Les herbes et l’argile visqueuse permettent d’arrêter les saignements.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccHumanTorch",
					"name": "Onguent ignifugé",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccHumanTorch",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 12
					},
					"type": "BeltAccessory",
					"price": 62,
					"rarity": 1,
					"desc": "Isole la peau des flammes mais n’empêche pas la propagation de celles-ci à son environnement.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccBurningResist",
					"name": "Onguent anti-brûlure",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccBurningResist",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 12
					},
					"type": "BeltAccessory",
					"price": 68,
					"rarity": 0,
					"desc": "Utilisable autant sur les peaux brûlées par le feu que par le soleil.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccRangeDmg",
					"name": "Projectiles de qualité",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccRangeDmg",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 9
					},
					"type": "BeltAccessory",
					"price": 56,
					"rarity": 1,
					"desc": "Ces projectiles ont été fabriqués par un maître artisan, les rendant plus fiables.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccRangeBonus",
					"name": "Plumes légères",
					"weight": 0.1,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "DistanceBonus"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 12
					},
					"type": "BeltAccessory",
					"price": 75,
					"rarity": 1,
					"desc": "Un simple regard envers ce chapelet de plumes donne l’impression de voler.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccRangePrecisionBonus",
					"name": "Pierre de lest",
					"weight": 2,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "PrecisionBonus"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 12
					},
					"type": "BeltAccessory",
					"price": 53,
					"rarity": 1,
					"desc": "Très utile pour se débarrasser d’un cadavre encombrant, cette pierre taillée permet aussi un meilleur équilibre au combat.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccBackstabCritBonus",
					"name": "Pierre à aiguiser",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccBackstabCritBonus",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 13
					},
					"type": "BeltAccessory",
					"price": 75,
					"rarity": 1,
					"desc": "Prisée des barbiers et des guerriers, ce simple morceau de grès est un compagnon indispensable.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccBackstabDmg",
					"name": "Coffin",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccBackstabDmg",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 12
					},
					"type": "BeltAccessory",
					"rarity": 1,
					"price": 75,
					"desc": "Dans cette petite boîte se trouve un sable très fin mélangé à de l’eau qui sert à affûter les lames.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccAutoHeal",
					"name": "Chique",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccAutoHeal"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 12
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 91,
					"desc": "Mâchouillé scrupuleusement, un seul morceau de chique suffit à détendre les muscles et à apaiser la douleur.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccGuardEngaged",
					"name": "Lanières de cuir",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccGuardEngaged",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 13
					},
					"type": "BeltAccessory",
					"rarity": 1,
					"price": 75,
					"desc": "Ces lanières se placent sur les mains du combattant, amortissant les coups sur les doigts pour une garde plus ferme.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccReduceOpportunityAttack",
					"name": "Porte-bonheur en étain",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccReduceOpportunityAttack"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 13
					},
					"type": "BeltAccessory",
					"price": 50,
					"rarity": 0,
					"desc": "La silhouette totalement plate représente un jongleur en pleine accrobacie.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccBarbs",
					"name": "Tonifiant à la moutarde",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccBarbs",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 13
					},
					"type": "BeltAccessory",
					"price": 72,
					"rarity": 1,
					"desc": "Ce tonifiant a un goût si piquant qu'il réveillerait les réflexes d'un mort.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccBaseActionOnly",
					"name": "Petit gantelet",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccBaseActionOnly",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 13
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 87,
					"desc": "Les articulations des doigts sont laissées mobiles grâce à un délicat travail d’artisan.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccCandy",
					"name": "Friandises",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "AnimalCaptureChance",
								"value": 15
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 13
					},
					"type": "BeltAccessory",
					"price": 53,
					"rarity": 1,
					"desc": "N’importe quel dompteur le dirait : les bêtes (et les hommes) sont avant tout guidées par leurs ventres.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccSap",
					"name": "Chloroforme",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "HumanKnockoutChance",
								"value": 15
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 12
					},
					"type": "BeltAccessory",
					"price": 65,
					"rarity": 0,
					"desc": "Le chloroforme est un allié précieux pour qui doit se faire extraire une dent.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccCritBonus",
					"name": "Stylet",
					"weight": 1,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "CritHitPercent"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 13
					},
					"type": "BeltAccessory",
					"price": 75,
					"rarity": 1,
					"desc": "Il est aisé de dissimuler cette arme entre les plis d'une cape ou dans une manche pour attaquer au dernier moment.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccWillpowerBonus",
					"name": "Médaillon",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Willpower"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 13
					},
					"type": "BeltAccessory",
					"rarity": 0,
					"price": 50,
					"desc": "Qui eût cru qu'un pendentif en forme de blaireau puisse procurer tant de sérénité ?",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccMovementBonus",
					"name": "Sangles adaptables",
					"weight": 0.3,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Movement"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 11
					},
					"type": "BeltAccessory",
					"price": 50,
					"rarity": 0,
					"desc": "Il a fallu toute l'ingéniosité du gainier pour rendre ces sangles adaptées au maintien de n'importe quelle arme.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccMovementMalusDmgBonus",
					"name": "Corne de Teul",
					"weight": 1,
					"baseBonus": [
						{
							"value": -1,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "DamageBonusPercent"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 12
					},
					"type": "BeltAccessory",
					"price": 50,
					"rarity": 0,
					"desc": "Cette corne ressemble étrangement à celle d'un bouc mais c'est sans doute la magie des Teuls qui rend les coups de son porteur plus puissants.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccDmgCritBonus",
					"name": "Canif",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 15,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 13
					},
					"type": "BeltAccessory",
					"price": 75,
					"rarity": 1,
					"desc": "Le canif sert aussi bien à régler des différents qu'à découper du jambon. Un indispensable.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccMoraleBonus",
					"name": "Idole ancienne",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccMoraleBonus"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 9
					},
					"type": "BeltAccessory",
					"price": 75,
					"rarity": 1,
					"desc": "Petite statuette en ivoire aux yeux de rubis.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccGritEndTurn",
					"name": "Blason cousu",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccGritEndTurn"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 9
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 100,
					"desc": "Ce blason est le symbole même de l'allégeance à un seigneur. Mais vous ne parvenez pas à identifier lequel.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccGoldTeeth",
					"name": "Davier",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccGoldTeeth"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 9
					},
					"type": "BeltAccessory",
					"price": 75,
					"rarity": 1,
					"desc": "Un petit instrument pour s'improviser dentiste.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccTerrorMax",
					"name": "Charme des Traqueurs",
					"weight": 0.1,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "TerrorResistance"
						}
					],
					"props": {
						"disableLoot": true,
						"passiveSkill": "BeltAccTerrorMax"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 9
					},
					"type": "BeltAccessory",
					"rarity": 1,
					"price": 56,
					"desc": "Un colifichet de peaux et de crocs, porte-bonheur pour les Traqueurs.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccTerrorReduceRound",
					"name": "Fétiche des Anciens",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "BeltAccTerrorReduceRound"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 9
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"desc": "Cette représentation fidèle de la Bête habitue son porteur à regarder la terreur en face.",
					"price": 86,
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilProcPoison",
					"name": "Concentré d'huile empoisonnée",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilProcPoison",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 10
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 131,
					"desc": "Il faut manipuler ce concentré avec précaution et surtout bien se laver les mains après utilisation.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilProcBurning",
					"name": "Concentré d'huile acide",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilProcBurning",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 10
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 137,
					"desc": " Un apothicaire a cru bon de préciser qu’il ne fallait pas boire cette huile.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilProcBleeding",
					"name": "Concentré d'huile d'aiguisage",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilProcBleeding",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 10
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 133,
					"desc": "Ce mélange inodore permet à un guerrier inexpérimenté d’aiguiser n’importe quelle lame.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilProcTrueDmg",
					"name": "Concentré d'huile explosive",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilProcTrueDmg",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 10
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 132,
					"desc": "Il est recommandé de manipuler cette fiole avec précaution.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilStrengthProc",
					"name": "Concentré d'huile de force",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilStrengthProc",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 10
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 133,
					"desc": "Élaborée par les érudits d'Alazar, la recette de ce concentré est longtemps demeurée secrète.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilDexterityProc",
					"name": "Concentré d'huile de promptitude",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilDexterityProc",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 10
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 135,
					"desc": "Personne ne sait expliquer la couleur de ce concentré.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilDamageTakenProc",
					"name": "Concentré d'huile de renforcement",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilDamageTakenProc",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 10
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 134,
					"desc": "Ce concentré offre d'hypnotiques reflets au soleil.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilSlowProc",
					"name": "Concentré d'huile paralysante",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilSlowProc",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 11
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 133,
					"desc": "Les Freux ont déjà utilisé ce concentré comme poison en le faisait passer pour un aromate.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilSelfHeal",
					"name": "Concentré d'huile de conversion",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilSelfHeal",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 11
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 135,
					"desc": "La couleur du concentré rappelle des remèdes préparés par les apothicaires.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilDotEffect",
					"name": "Concentré d'huile infectieuse",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilDotEffect",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 11
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 132,
					"desc": "L'odeur de l'huile est déjà épouvantable, alors son concentré... !",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilCleave",
					"name": "Concentré d'huile vaporeuse",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilCleave",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 11
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 132,
					"desc": "Même sous la forme de concentré, cette huile a une consistance irréelle.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilWindfury",
					"name": "Concentré d'huile instable",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilWindfury",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 11
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 136,
					"desc": "Ce concentré a été mis au point par un apothicaire connu pour avoir assassiné son bourgmestre.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilHemorraghe",
					"name": "Concentré d'huile hémorragique",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilHemorraghe",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 10
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 132,
					"desc": "Un concentré regardé par les guérisseurs et les apothicaires comme une abomination.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccOilProcSolid",
					"name": "Concentré d'huile fortifiante",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilProcSolid",
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 10
					},
					"type": "BeltAccessory",
					"price": 132,
					"rarity": 2,
					"desc": "L'huile fortifiante a comme propriété de renforcer jusqu'à son flacon."
				},
				{
					"id": "BeltAccOilSwipping",
					"name": "Concentré d'huile protectrice",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilSwipping",
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 8,
						"y": 10
					},
					"type": "BeltAccessory",
					"price": 132,
					"rarity": 2,
					"desc": "La couleur de cette huile a quelque chose de rassurant."
				},
				{
					"id": "BeltAccOilProcFever",
					"name": "Concentré d'huile putride",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccProcFever",
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 7,
						"y": 10
					},
					"type": "BeltAccessory",
					"price": 136,
					"rarity": 2,
					"desc": "On peut voir des morceaux macérer dans l'huile."
				},
				{
					"id": "BeltAccOilBrave",
					"name": "Concentré d'huile du Brave",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilBrave",
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 10
					},
					"type": "BeltAccessory",
					"price": 133,
					"rarity": 2,
					"desc": "C'est avec fierté que l'on porte ce concentré à la ceinture : il est réservé aux braves."
				},
				{
					"id": "BeltAccOilProcSlowReflexes",
					"name": "Concentré d'huile d'épuisement",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccOilProcSlowReflexes",
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 5,
						"y": 10
					},
					"type": "BeltAccessory",
					"price": 133,
					"rarity": 2,
					"desc": "Une seule goutte de ce concentré sur les doigts et c'est toute la main qui est engourdie."
				},
				{
					"id": "BeltAccRadiusVision",
					"name": "Talisman de Bélérion",
					"weight": 0.1,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "VisionRange"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 9
					},
					"type": "BeltAccessory",
					"rarity": 0,
					"price": 50,
					"desc": "Ce type de talisman est réputé avoir guidé les Margraves jusqu’à Bélérion. S’il fonctionne en mer, il doit pouvoir en faire de même sur terre.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccBlindDay",
					"name": "Miroir en étain",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccBlindDay"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 9
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"price": 95,
					"desc": "Ce petit éclat de métal poli est très courant dans les rangs de la Légion où il est d’usage de dompter sa pilosité faciale avant de se présenter à son officier supérieur.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "LucillaLundPendant",
					"name": "Médaillon de Lucilla Lund",
					"weight": 0.1,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Willpower"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 11
					},
					"type": "BeltAccessory",
					"price": 20,
					"desc": "Du sang tâche les lettres formant le nom \"LUND\" gravé à l'arrière du pendentif.",
					"rarity": 2,
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "PurifierRing",
					"name": "Anneau de Purificateur",
					"weight": 0.1,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Willpower"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 11
					},
					"type": "BeltAccessory",
					"price": 20,
					"desc": "Un anneau en or serti d'un rubis taillé en carré, emblématique des Purificateurs.",
					"rarity": 2,
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BionnTorque",
					"name": "Torque de Bionn",
					"weight": 0.1,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Willpower"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 0
					},
					"type": "BeltAccessory",
					"price": 20,
					"rarity": 2,
					"desc": "Ce torque date au moins de l'époque de la guerre d'Edoran et se termine par des têtes de poneys.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccBeastH1",
					"name": "Poil de la Bête",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccBeastH1",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 5,
						"y": 1
					},
					"type": "BeltAccessory",
					"price": 150,
					"rarity": 3,
					"desc": "Ce poil ne ressemble pas à celui d'un animal et tient plus de la corde. À force de le regarder, on finit par être mal à l'aise.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccHoevendorp",
					"name": "Sceau des Hoevendorp",
					"weight": 0.1,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Willpower"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 11
					},
					"type": "BeltAccessory",
					"price": 50,
					"rarity": 2,
					"desc": "Ce précieux objet permet à la famille Hoevendorp d'apposer son sceau en bas des contrats.",
					"group": 21,
					"iconeDone": true
				},
				{
					"id": "BeltAccWeighted",
					"name": "Ceinture de plomb",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "BeltAccWeighted"
					},
					"group": 21,
					"type": "BeltAccessory",
					"desc": "Conçue pour entraîner les marins de Bélérion à nager en toutes circonstances, les guerriers terrestres se servent de cette ceinture pour garantir leur équilibre.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 19
					},
					"price": 75,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "BeltAccMudGuard",
					"name": "Garde-boue",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BeltAccMudGuard"
					},
					"group": 21,
					"type": "BeltAccessory",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 19
					},
					"desc": "Ses utilisateurs prétendent marcher plus facilement dans la vase lorsqu'ils le portent.",
					"price": 50,
					"rarity": 0,
					"iconeDone": true
				},
				{
					"id": "BeltAccPushDistance",
					"name": "Gaine dorsale",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "BeltAccPushDistance"
					},
					"group": 21,
					"type": "BeltAccessory",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 19
					},
					"rarity": 2,
					"price": 55,
					"desc": "Fabriquée avec des renforts de bois et de métal, cette ceinture remboursée s'enfile facilement pour soulager le dos.",
					"iconeDone": true
				},
				{
					"id": "BeltAccProtection1",
					"name": "Pansière",
					"weight": 1.3,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"passiveSkill": "BeltAccProtection1"
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 5,
						"y": 6
					},
					"type": "BeltAccessory",
					"price": 70,
					"rarity": 1,
					"desc": "Si cette pièce d'armure peut judicieusement remplacer la ceinture de son porteur, elle ne s'adapte malheureusement pas à son tour de taille."
				},
				{
					"id": "BeltAccPlague1",
					"name": "Antidote d'Alazar",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"passiveSkill": "BeltAccPlague1"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 4
					},
					"group": 21,
					"type": "BeltAccessory",
					"price": 125,
					"rarity": 2,
					"desc": "Cette version du remède d'Alazar demande à être consommé chaque jour pour prévenir la Peste. Il est plus pratique de la transporter à la ceinture."
				},
				{
					"id": "BeltAccPrisonerTrust",
					"name": "Timbale personnelle",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "BeltAccPrisonerTrust"
					},
					"group": 21,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 19
					},
					"type": "BeltAccessory",
					"rarity": 1,
					"price": 52,
					"desc": "Existe-t-il de plus grande marque de respect dans une compagnie que d’offrir une timbale personnelle à l’un de ses membres ?",
					"iconeDone": true
				},
				{
					"id": "BeltAccPrisonerPony",
					"name": "Figurine de poney",
					"weight": 1,
					"baseBonus": [
						{
							"value": 100,
							"attribute": "Transport",
							"isPercentage": true
						}
					],
					"props": {
						"disableLoot": true,
						"passiveSkill": "BeltAccPrisonerPony",
						"flags": 512
					},
					"group": 21,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 19
					},
					"type": "BeltAccessory",
					"rarity": 1,
					"price": 53,
					"desc": "Ce petit porte-bonheur représente le courage et la détermination légendaire des poneys, inspirant celui qui l’équipe.",
					"iconeDone": true
				},
				{
					"id": "BeltAccPrisonerWorkMeatDryer",
					"name": "Torchon propre",
					"weight": 1.4,
					"baseBonus": [],
					"props": {
						"flags": 512,
						"passiveSkill": "BeltAccPrisonerWorkMeatDryer",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 5,
						"y": 3
					},
					"type": "BeltAccessory",
					"rarity": 1,
					"price": 52,
					"desc": "Ce torchon nettoyé avec soin permet à son porteur d'avoir les mains propres lorsqu'il manipule la viande séchée."
				},
				{
					"id": "BeltAccPrisonerWorkBrewBarrel",
					"name": "Levure sèche",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"flags": 512,
						"passiveSkill": "BeltAccPrisonerWorkBrewBarrel",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 3
					},
					"type": "BeltAccessory",
					"rarity": 1,
					"group": 21,
					"price": 52,
					"desc": "La levure contenue dans ce petit sachet doit être conservée à l'abri de l'humidité."
				},
				{
					"id": "BeltAccPrisonerWorkSkinDryingRack",
					"name": "Tanin végétal",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"flags": 512,
						"passiveSkill": "BeltAccPrisonerWorkSkinDryingRack",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 5
					},
					"type": "BeltAccessory",
					"rarity": 1,
					"group": 21,
					"price": 52,
					"desc": "Une poudre extraite de plantes qui permet à son utilisateur de tanner du cuir."
				},
				{
					"id": "BeltAccPrisonerWorkBeeHive",
					"name": "Masque d'apiculteur",
					"weight": 0.9,
					"baseBonus": [],
					"props": {
						"flags": 512,
						"passiveSkill": "BeltAccPrisonerWorkBeeHive",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 6
					},
					"type": "BeltAccessory",
					"rarity": 1,
					"group": 21,
					"price": 52,
					"desc": "Quoi de mieux qu'un masque d'apiculteur à portée de main lorsqu'on s'occupe d'une ruche ?"
				},
				{
					"id": "BeltPathTradeCorrupt",
					"name": "Petite monnaie",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"skill": "Corrupt"
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 6
					},
					"type": "BeltAccessory",
					"rarity": 2,
					"desc": "Cette bourse est remplie de piécettes qui chantent à la ceinture de son porteur. Elles peuvent être lestement lancées en direction du manant qu’on voudrait soudoyer.",
					"price": 55
				},
				{
					"id": "BeltAccNoMovePenalty",
					"name": "Boucles de rechange",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "BeltAccNoMovePenalty"
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 3,
						"y": 6
					},
					"type": "BeltAccessory",
					"desc": "Il est inutile de s'inquiéter pour l'intégrité d'une armure lourde quand on a des boucles solides qui la maintiennent en place.",
					"rarity": 2,
					"price": 47
				},
				{
					"id": "BeltAccLightArmorCrit",
					"name": "Aiguille",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "BeltAccLightArmorCrit"
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 6
					},
					"type": "BeltAccessory",
					"desc": "Une aiguille facile à dissimuler dans une manche et à planter entre deux côtes.",
					"rarity": 2,
					"price": 43
				},
				{
					"id": "BeltAccDaganSong",
					"name": "Tablature de Dagan",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"skill": "BeltAccSong"
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 9
					},
					"type": "BeltAccessory",
					"rarity": 3,
					"price": 250,
					"desc": "Il est inutile d’être musicien pour comprendre la tablature de Dagan, tant les indications de l’artiste sont claires."
				},
				{
					"id": "BeltAccAtlessHorn",
					"name": "Olifant d'Atless",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "RankedUnitInspiration"
							}
						]
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 8,
						"y": 9
					},
					"type": "BeltAccessory",
					"rarity": 3,
					"price": 250,
					"desc": "Taillé dans l’ivoire d’une créature inconnue, cette olifant produit un son qui ravive l’espoir et le courage de vos compagnons."
				},
				{
					"id": "BeltAccNarsesNet",
					"name": "Filet de Narsès",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"skill": "BeltAccHunt"
					},
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "BeltAccessory",
					"rarity": 3,
					"price": 200,
					"desc": "L’alliage dans lequel a été forgé ce filet ne ressemble à aucun autre. Aussi fin qu’une toile d’araignée et capable de résister aux fauves que combattait Narsès, ce métal ne pèse presque rien."
				},
				{
					"id": "BeltAccHorounBox",
					"name": "Boîtier sonore d'Horoun",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "AnimalStartInspiration"
							}
						]
					},
					"iconeDone": true,
					"group": 21,
					"type": "BeltAccessory",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 11
					},
					"rarity": 3,
					"price": 200,
					"desc": "Il est difficile de décrire cet objet tant il est incongru. Taillé dans de l’os, ce boitier présente une sorte d’interrupteur qui, lorsqu’il est pressé, produit un bruit enchanteur pour les animaux."
				},
				{
					"id": "BackAccMiningGemsChance",
					"name": "Tamis",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "MiningGemsChance"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "Grace au maillage fin de ce tamis, les pierres précieuses ne peuvent plus s'échapper.",
					"rarity": 0,
					"price": 50,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccMiningGemsQuality",
					"name": "Pioche de maître",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "MiningGemsQuality"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "La finesse de cette pioche permet d'extraire des pierres précieuses sans les abîmer.",
					"rarity": 1,
					"group": 22,
					"iconeDone": true,
					"price": 100
				},
				{
					"id": "BackAccMiningOresBonus",
					"name": "Batée",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "MiningOresBonus"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "Avec un peu de technique et un certain coup de main, il devient possible de séparer la boue et les gravats des minerais convoités.",
					"rarity": 2,
					"price": 100,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccMiningSandstone",
					"name": "Burin",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "MiningSandstone"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "Ce burin aurait pu être manié par un sculpteur et laisser sa marque sur des chefs-d’œuvre. À la place, il décroche des blocs de grès récalcitrants.",
					"rarity": 1,
					"group": 22,
					"iconeDone": true,
					"price": 100
				},
				{
					"id": "BackAccMiningGreyMass",
					"name": "Rivelaine",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"bonuses": [
							{
								"bonus": "MiningGreyMass"
							}
						]
					},
					"iconeDone": true,
					"group": 22,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 1,
						"y": 8
					},
					"type": "BackPackAccessory",
					"rarity": 2,
					"price": 100,
					"desc": "Très prisée par les mineurs de Gosenberg et d’Alazar, la rivelaine permet un travail efficace et facilite l’accès aux métaux rares."
				},
				{
					"id": "BackAccMiningGoldenMetal",
					"name": "Pic",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"bonuses": [
							{
								"bonus": "MiningGoldenMetal"
							}
						]
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 10
					},
					"type": "BackPackAccessory",
					"group": 22,
					"rarity": 2,
					"price": 125,
					"desc": "Ce pic léger permet une approche plus délicate de l'abattage en évitant de fractionner l'éthérite."
				},
				{
					"id": "BackAccProfessionXp",
					"name": "Bandeau de travailleur",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "ProfessionXp",
								"value": 10
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "Noué sur le front du travailleur, le tissu empêche la sueur et les cheveux d'encombrer son visage.",
					"rarity": 1,
					"price": 75,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccProfessionKnowledge",
					"name": "Poinçon",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "ProfessionKnowledge",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "Ce poinçon en acier permet de laisser la griffe d’un artisan sur à peu près tout.",
					"rarity": 1,
					"price": 75,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccSecondProfession",
					"name": "Emblème de Sainte Lenaïde",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "ProfessionExperienceBonusGlobal",
								"value": 5
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 19
					},
					"type": "BackPackAccessory",
					"desc": "Selon la légende, Sainte Lénaïde fonda à elle seule neuf guildes d’artisanat. Aujourd’hui, ce n’est pas moins de vingt-quatre corporations qui se réclament de son prestigieux patronage.",
					"rarity": 3,
					"group": 22,
					"iconeDone": true,
					"price": 150
				},
				{
					"id": "BackAccThiefStealReduction",
					"name": "Morceau de savon",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "ThiefStealReduction",
								"value": 10
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "L’odeur printanière qui se dégage d’un voleur bien lavé dissipe les soupçons de ses victimes.",
					"rarity": 1,
					"price": 75,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccThiefLockpickDuration",
					"name": "Poche de velours",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "ThiefLockpickDuration",
								"value": 20
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "La rudesse des brigands disparait quand il s’agit de prendre soin de leurs crochets. Nombreux sont ceux qui les enveloppent de velours pour les préserver de la rouille.",
					"rarity": 1,
					"price": 53,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccThiefLockpickEasy",
					"name": "Cornet",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "ThiefLockpickEasy"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "Ce type de cornet en fer est avant tout destiné aux vieillards dont l’ouïe décline. Mais il se place aussi volontiers entre l’oreille d’un voleur et la serrure qu’il crochète.",
					"rarity": 0,
					"price": 50,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccThiefStealNoPrison",
					"name": "Mouchoir brodé",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "ThiefStealNoStolen"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "Ce mouchoir est sans aucun doute la chose la plus charismatique de votre troupe. Un simple coup d’œil à sa dentelle éclatante et on considère son porteur comme quelqu’un de respectable.",
					"rarity": 2,
					"price": 100,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccBlacksmithQuality",
					"name": "Étampe",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "BlacksmithQuality"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "L'étampe permet au forgeron d'imprimer au métal une forme régulière.",
					"rarity": 2,
					"price": 100,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccBlacksmithResources",
					"name": "Tenaille de forge",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "BlacksmithResources"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "Cette tenaille permet de manipuler les métaux brûlants sans perdre ses doigts.",
					"rarity": 1,
					"group": 22,
					"iconeDone": true,
					"price": 75
				},
				{
					"id": "BackAccAlchemyResources",
					"name": "Herbier",
					"weight": 1.2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "AlchemyResources"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "Ce recueil très complet recense presque toutes les herbes de Bélérion à Alazar. Les spécimens séchés permettent au lecteur de reconnaître facilement chaque variété de plantes.",
					"rarity": 1,
					"price": 78,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccFishingNumber",
					"name": "Mouche",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "FishingNumber"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 18
					},
					"type": "BackPackAccessory",
					"price": 75,
					"desc": "Attachée au bout d'une ligne de pêche, la mouche imite le mouvement des insectes sur l'eau.",
					"rarity": 1,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccFishingCalamity",
					"name": "Leurre solide",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "Ce leurre a la taille d’un gros rat et représente un poisson moustachu.",
					"rarity": 3,
					"group": 22,
					"iconeDone": true,
					"price": 150
				},
				{
					"id": "BackAccCookingNoSalt",
					"name": "Pelle à sel",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "CookingNoSalt",
								"value": 2
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "Cette petite pelle permet de doser parfaitement le sel, de ne pas en renverser et de donner un air plus professionnel à son utilisateur.",
					"rarity": 1,
					"price": 68,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccCookingResources",
					"name": "Louche de cuisinier",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "CookingResources"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "Les louches permettent de faire à peu près tout dans une cuisine de campagne : du dosage au service, c’est la compagne de route de tous les marmitons.",
					"rarity": 1,
					"price": 68,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccTinkererResources",
					"name": "Pige en bois",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "TinkererResources"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "Les mesures inscrites sur ce morceau de bois sont celles d’un inconnu. Ses pieds servent à construire des maisons depuis fort longtemps.",
					"rarity": 1,
					"price": 75,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccMedicNoCost",
					"name": "Atèle",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "SleepingInjury"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "Ingénieux ensemble de bois, de cuir et de tissu, cette atèle permet d'immobiliser un membre pour accélérer sa guérison.",
					"rarity": 1,
					"price": 68,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccMedicDoubleInjury",
					"name": "Masque de médecin",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "SleepingInjury"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 17
					},
					"type": "BackPackAccessory",
					"desc": "Ce masque en plâtre est moulé sur la statue du divin Saint Balfroy. Sa seule vue suffit aux malades pour les persuader qu'ils sont guéris.",
					"rarity": 1,
					"price": 75,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccMedicPlague",
					"name": "Traité d'Alazar",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 18
					},
					"type": "BackPackAccessory",
					"desc": "La copie d'une copie, d'une copie des travaux de recherche de Sophy Adr Alazar.",
					"rarity": 2,
					"group": 22,
					"iconeDone": true,
					"price": 100
				},
				{
					"id": "BackAccScholarTime",
					"name": "Écritoire",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "ScholarTime"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 19
					},
					"type": "BackPackAccessory",
					"desc": "Noter une découverte un jour permet de ne pas la redécouvrir le lendemain.",
					"rarity": 1,
					"price": 75,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccScholarKnowledgeRest",
					"name": "Livre de poche",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "ScholarKnowledgeRest"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 19
					},
					"type": "BackPackAccessory",
					"desc": "Réputée interminable, la Geste de Jéru est une mine d'informations sur les Cinq Royaumes.",
					"rarity": 1,
					"price": 75,
					"group": 22,
					"iconeDone": true
				},
				{
					"id": "BackAccFishBonuses",
					"name": "Boëtte",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "FishingBonus"
							}
						]
					},
					"group": 22,
					"type": "BackPackAccessory",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 19
					},
					"desc": "Un appât de qualité que les pêcheurs se disputent volontiers.",
					"price": 75,
					"rarity": 0,
					"iconeDone": true
				},
				{
					"id": "BackAccRousteBall",
					"name": "Trophée de Rouste",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"bonuses": [
							{
								"bonus": "RousteBall"
							}
						]
					},
					"iconeDone": true,
					"group": 22,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 19
					},
					"type": "BackPackAccessory",
					"price": 75,
					"rarity": 0,
					"desc": "On pourrait croire qu'il ne s'agit que d'une simple balle mâchouillée par un crocopork mais c'est bien le symbole d'une victoire éclatante."
				},
				{
					"id": "BackAccErkeshetTool",
					"name": "Bédane d'Erkeshet",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"bonuses": [
							{
								"bonus": "ToolProductionIncreased"
							}
						]
					},
					"iconeDone": true,
					"group": 22,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 10,
						"y": 9
					},
					"rarity": 3,
					"price": 250,
					"type": "BackPackAccessory",
					"desc": "Cet outil ne paie pas de mine et pourtant, il a suscité l'admiration des Anciens des décennies après la mort de sa propriétaire."
				},
				{
					"id": "BackAccNeptiAbacus",
					"name": "Boulier de Nepti",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"bonuses": [
							{
								"bonus": "TradeGoodBuyInfluence"
							}
						]
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 11
					},
					"type": "BackPackAccessory",
					"price": 250,
					"rarity": 3,
					"group": 22,
					"desc": "D’or et d’ivoire, ce boulier ridiculement précieux est à l'image de Nepti."
				},
				{
					"id": "BackAccBehediteCompass",
					"name": "Compas de Behedite",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"bonuses": [
							{
								"bonus": "StrategyTableBonusesAcc"
							}
						]
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 11,
						"y": 9
					},
					"type": "BackPackAccessory",
					"price": 250,
					"rarity": 3,
					"group": 22,
					"desc": "D’après les textes, ce compas n’aurait en réalité jamais pu appartenir au légendaire explorateur Behedite. Malgré cela, il se dégage de l'outil quelque chose d'unique."
				},
				{
					"id": "AnimAccAnimalWalkSpeed",
					"name": "Fer à cheval",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"flags": 64,
						"bonuses": [
							{
								"bonus": "WalkSpeed",
								"value": 3
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 9
					},
					"type": "AnimalAccessory",
					"price": 50,
					"rarity": 0,
					"desc": "Un fer à cheval récemment forgé par un maréchal-ferrant.",
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccCarriage",
					"name": "Fontes",
					"weight": 1,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "Transport"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 9
					},
					"type": "AnimalAccessory",
					"desc": "Harnachées à un animal, ces sacoches permettent de répartir le poids de la charge supportée.",
					"rarity": 0,
					"price": 53,
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccAllyMelee",
					"name": "Collier d'unité",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "AnimAccAllyMelee"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 9
					},
					"type": "AnimalAccessory",
					"rarity": 1,
					"desc": "Un collier imprégné de l'odeur des congénères du porteur.",
					"price": 75,
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccNoAllyMelee",
					"name": "Collier de solitude",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "AnimAccNoAllyMelee"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 9
					},
					"type": "AnimalAccessory",
					"rarity": 1,
					"desc": "Un collier de cuir préféré des animaux solitaires.",
					"price": 75,
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccCritDmg",
					"name": "Collier à dents",
					"weight": 0.2,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "CritHitDamageBonusPercent"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 9
					},
					"type": "AnimalAccessory",
					"rarity": 1,
					"desc": "Des dents encastrées dans une lanière de cuir.",
					"price": 51,
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccGritIfKill",
					"name": "Collier de fidélité",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "BraveVictory",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 9
					},
					"type": "AnimalAccessory",
					"rarity": 2,
					"desc": "Un collier en cuir noble, symbole de l'attachement de son porteur à son propriétaire.",
					"price": 100,
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccBerserkProc",
					"name": "Collier clouté",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "AnimAccBerserkProc",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 1
					},
					"type": "AnimalAccessory",
					"rarity": 2,
					"price": 101,
					"desc": "Il faut être cruel pour mettre un tel collier à un animal : la gorge percée par des clous, la bête finit enragée.",
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccRegen",
					"name": "Collier infusé",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "AnimAccRegen",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 1,
						"y": 1
					},
					"type": "AnimalAccessory",
					"rarity": 1,
					"price": 73,
					"desc": "Les fibres de cet élégant accessoire sont imprégnées d’onguents médicinaux qui veillent à la bonne santé de l’animal.",
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccSecondLife",
					"name": "Collier de protection",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "AnimAccSecondLife",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 1
					},
					"type": "AnimalAccessory",
					"rarity": 1,
					"price": 78,
					"desc": "Les prêtres de l'Œil fabriquent ce collier en suivant les préceptes de Sainte Lénaïde, lesquels n'ont pas changé depuis près de cinq cent ans.",
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccObey",
					"name": "Collier bardé de lard",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"passiveSkill": "AnimAccObey",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 3,
						"y": 1
					},
					"type": "AnimalAccessory",
					"rarity": 1,
					"price": 52,
					"desc": "L’odeur de ce collier est alléchante dans les premiers temps mais demande un entretien régulier pour ne pas devenir méphitique.",
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "AnimAccGuard",
					"name": "Collier de garde",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"passiveSkill": "AnimAccGuard"
					},
					"iconeDone": true,
					"group": 23,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 1,
						"y": 9
					},
					"type": "AnimalAccessory",
					"price": 73,
					"rarity": 1,
					"desc": "Il est difficile de dormir avec un collier pareil. Rien d’étonnant à ce que l’animal qui le porte soit le premier informé d’une attaque surprise."
				},
				{
					"id": "AnimAccDomination",
					"name": "Collier de dressage",
					"weight": 1.2,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "Strength",
							"isPercentage": true
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 23,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 9
					},
					"type": "AnimalAccessory",
					"price": 78,
					"rarity": 1,
					"desc": "Le nœud coulant qui constitue ce collier permet un dressage plus rapide et efficace. Non sans occasionner quelques douleurs pour l’animal."
				},
				{
					"id": "AnimAccSwiftness",
					"name": "Collier à plumes",
					"weight": 1.6,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 23,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"type": "AnimalAccessory",
					"rarity": 1,
					"price": 86,
					"desc": "Un collier d’une douceur incomparable qui chatouille délicatement le cou de l’animal lorsqu’il se déplace."
				},
				{
					"id": "AnimAccPoison",
					"name": "Collier empoisonnés",
					"weight": 1.2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"passiveSkill": "AnimAccPoison"
					},
					"iconeDone": true,
					"group": 23,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 9
					},
					"type": "AnimalAccessory",
					"rarity": 0,
					"price": 51,
					"desc": "Ce collier a été inventé par quelqu’un qui, de toute évidence, n’avait qu’une vision utilitaire des animaux."
				},
				{
					"id": "AnimAccFire",
					"name": "Collier ardent",
					"weight": 1.3,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"passiveSkill": "AnimAccFire"
					},
					"iconeDone": true,
					"group": 23,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 9
					},
					"type": "AnimalAccessory",
					"rarity": 1,
					"price": 47,
					"desc": "Il faut vraiment détester les animaux pour laisser une créature porter un tel collier."
				},
				{
					"id": "ArmorPlatePonyT2",
					"name": "Plaque d'armure légère de poney",
					"weight": 3,
					"baseBonus": [
						{
							"value": 12,
							"attribute": "Armor",
							"upValue": 193
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						}
					],
					"props": {
						"disableLoot": true,
						"requireLevel": 5,
						"model": "chars/Horse/Model_HorseArmor_01.fbx",
						"fixedLevel": 6,
						"passiveSkill": "DamageReturn"
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 16,
						"y": 3,
						"height": 2
					},
					"type": "HorseArmor",
					"desc": "Bien que les poneys n'apprécient guère porter l'armure, celle-ci a été pensée pour leur confort.",
					"price": 106,
					"rarity": 1,
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "ArmorPlatePonyT3",
					"name": "Plaque d'armure intermédiaire de poney",
					"weight": 3,
					"baseBonus": [
						{
							"value": 12,
							"attribute": "Armor",
							"upValue": 193
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						}
					],
					"props": {
						"disableLoot": true,
						"requireLevel": 8,
						"passiveSkill": "DamageReturn",
						"model": "chars/Horse/Model_HorseArmor_02.fbx",
						"fixedLevel": 9
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 17,
						"y": 3,
						"height": 2
					},
					"type": "HorseArmor",
					"desc": "Rien n'est trop onéreux pour protéger son équidé préféré : l'artisan a même rajouté des ciselures sur les plaques de l'armure.",
					"price": 147,
					"rarity": 1,
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "ArmorPlatePonyT4",
					"name": "Plaque d'armure lourde de poney",
					"weight": 3.5,
					"baseBonus": [
						{
							"value": 12,
							"attribute": "Armor",
							"upValue": 193
						},
						{
							"value": 10,
							"attribute": "Guard",
							"upValue": 20
						}
					],
					"props": {
						"disableLoot": true,
						"requireLevel": 11,
						"model": "chars/Horse/Model_HorseArmor_03.fbx",
						"feature": "Alazar1_Update",
						"fixedLevel": 12,
						"passiveSkill": "DamageReturn"
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 18,
						"y": 3,
						"height": 2
					},
					"type": "HorseArmor",
					"desc": "Cette armure couvre le poney des naseaux à la croupe.",
					"price": 175,
					"rarity": 1,
					"group": 23,
					"iconeDone": true
				},
				{
					"id": "LayerCommonArmor",
					"name": "Renfort du Défenseur",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Armor"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 9,
						"y": 2
					},
					"type": "ArmorLayer",
					"price": 53,
					"desc": "Un renfort utilisé par les Défenseurs d’Harag pour parfaire leurs armures.",
					"rarity": 0,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerCommonGuard",
					"name": "Renfort du Traqueur",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Guard"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 4,
						"y": 2
					},
					"type": "ArmorLayer",
					"price": 56,
					"desc": "Apprécié des Traqueurs, ce renfort lourd permet d’encaisser les chocs et de dévier les lames.",
					"rarity": 0,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerCommonDexterity",
					"name": "Renfort du Chasseur",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Dexterity"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 5,
						"y": 2
					},
					"type": "ArmorLayer",
					"price": 52,
					"desc": "Le cuir de ce renfort protège les corps des chasseurs sans altérer leurs mouvements.",
					"rarity": 0,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerCommonStrength",
					"name": "Renfort du Guerrier",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 6,
						"y": 2
					},
					"type": "ArmorLayer",
					"price": 52,
					"desc": "Ce renfort confère une nouvelle inertie aux coups de son porteur.",
					"rarity": 0,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerCommonCritical",
					"name": "Renfort du Barde",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 7,
						"y": 2
					},
					"type": "ArmorLayer",
					"price": 51,
					"desc": "Un renfort élégant et recherché qui permet à son porteur de démontrer tout son potentiel.",
					"rarity": 0,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerCommonMovement",
					"name": "Renfort du Sage",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 1,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 8,
						"y": 2
					},
					"type": "ArmorLayer",
					"desc": "Le sage choisit toujours la liberté de mouvement face à la puissance.",
					"rarity": 0,
					"price": 51,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoArmor",
					"name": "Renfort du Sanglier",
					"weight": 0,
					"baseBonus": [
						{
							"value": 8,
							"attribute": "Armor"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 4,
						"y": 1
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "Ce renfort rend une armure aussi résistante que le cuir d’un sanglier.",
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoGuard",
					"name": "Renfort de l'Ours",
					"weight": 0,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "Guard"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 2,
						"y": 1
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "La patte d’ours gravée sur ce renfort sert de talisman à son porteur.",
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoDexterity",
					"name": "Renfort de l'Aigle",
					"weight": 0,
					"baseBonus": [
						{
							"value": 4,
							"attribute": "Dexterity"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 3,
						"y": 1
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "Il n’est pas rare de voir des chasseurs d’Harag arborer ce renfort : l’aigle est leur emblème et cette pièce est idéale pour un archer.",
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoStrength",
					"name": "Renfort du Loup",
					"weight": 0,
					"baseBonus": [
						{
							"value": 4,
							"attribute": "Strength"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 1,
						"y": 1
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "Une gueule de loup stylisée sur ce renfort est destinée à effrayer les mauvais esprits.",
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoCritical",
					"name": "Renfort du Lynx",
					"weight": 0,
					"baseBonus": [
						{
							"value": 5,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 5,
						"y": 1
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "Inspiré par l’acuité du lynx, le porteur de ce renfort est censé faire preuve d’autant de précision que l’animal.",
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoMovement",
					"name": "Renfort du Renard",
					"weight": 1,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 6,
						"y": 1
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "Il suffit de remplacer les articulations roides de son armure par ce cuir pour se déplacer plus vite et plus discrètement.",
					"price": 72,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoArmorGuard",
					"name": "Renfort du Bœuf",
					"weight": 1,
					"baseBonus": [
						{
							"value": 4,
							"attribute": "Armor"
						},
						{
							"value": 2,
							"attribute": "Guard"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 7,
						"y": 1
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "Tout en plates, la conception de ce renfort date seulement de la guerre d’Edor.",
					"price": 75,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoArmorStrength",
					"name": "Renfort du Cerf",
					"weight": 1,
					"baseBonus": [
						{
							"value": 4,
							"attribute": "Armor"
						},
						{
							"value": 2,
							"attribute": "Strength"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 8,
						"y": 1
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "L’agencement des écailles de ce renfort dessine des andouillers.",
					"price": 74,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoGuardStrength",
					"name": "Renfort du Cheval",
					"weight": 1,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Guard"
						},
						{
							"value": 2,
							"attribute": "Strength"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 9,
						"y": 1
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "À bien y regarder, le cheval gravé ressemble plus à un poney qu’à un étalon.",
					"group": 24,
					"price": 70,
					"iconeDone": true
				},
				{
					"id": "LayerUncoDexterityCritical",
					"name": "Renfort de Faucon",
					"weight": 1,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Dexterity"
						},
						{
							"value": 2,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 0,
						"y": 2
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "Les écailles fauves du renfort rappellent le plumage d’un faucon.",
					"price": 77,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoDexterityMovement",
					"name": "Renfort de l'Hermine",
					"weight": 1,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Dexterity"
						},
						{
							"value": 1,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 3,
						"y": 2
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "Conçu par un chasseur pour son enfant, ce renfort est plus petit que les autres mais s’adapte à toutes les armures.",
					"group": 24,
					"price": 83,
					"iconeDone": true
				},
				{
					"id": "LayerUncoDexterity2Movement",
					"name": "Renfort des érudits",
					"weight": 1,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Dexterity"
						},
						{
							"value": 1,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"group": 24,
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 9,
						"y": 0
					},
					"type": "ArmorLayer",
					"price": 83,
					"rarity": 1,
					"desc": "Élaboré par les érudits d'Alazar, ce renfort ressemble à s'y méprendre aux renforts des traqueurs.",
					"iconeDone": true
				},
				{
					"id": "LayerUncoStrengthCritical",
					"name": "Renfort du Serpent",
					"weight": 1,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "Strength"
						},
						{
							"value": 2,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 1,
						"y": 2
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "Tristement célèbre à Harag, ce renfort était le favori des Freux. Depuis, les Traqueurs considèrent qu’il porte malheur et peu le fabriquent encore.",
					"price": 77,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerUncoCriticalMovement",
					"name": "Renfort du Rat",
					"weight": 1,
					"baseBonus": [
						{
							"value": 2,
							"attribute": "CritHitPercent"
						},
						{
							"value": 1,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 2,
						"y": 2
					},
					"type": "ArmorLayer",
					"rarity": 1,
					"desc": "On raconte que ce renfort portait autrefois un nom plus honorable mais que sa prévalence chez les renégats en fit un objet de mépris.",
					"price": 75,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareArmor",
					"name": "Renfort de la Terre",
					"weight": 0,
					"baseBonus": [
						{
							"value": 15,
							"attribute": "Armor"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 1,
						"y": 3
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareGuard",
					"name": "Renfort de la Montagne",
					"weight": 0,
					"baseBonus": [
						{
							"value": 6,
							"attribute": "Guard"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 6,
						"y": 3
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareDexterity",
					"name": "Renfort du Vent",
					"weight": 0,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "Dexterity"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 5,
						"y": 3
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareStrength",
					"name": "Renfort du Feu",
					"weight": 0,
					"baseBonus": [
						{
							"value": 7,
							"attribute": "Strength"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 7,
						"y": 3
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareCritical",
					"name": "Renfort de l'Eclair",
					"weight": 0,
					"baseBonus": [
						{
							"value": 6,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 9,
						"y": 3
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareArmorGuard",
					"name": "Renfort du Roc",
					"weight": 0,
					"baseBonus": [
						{
							"value": 8,
							"attribute": "Armor"
						},
						{
							"value": 3,
							"attribute": "Guard"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 6,
						"y": 4
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareArmorStrength",
					"name": "Renfort des Astres",
					"weight": 0,
					"baseBonus": [
						{
							"value": 8,
							"attribute": "Armor"
						},
						{
							"value": 3,
							"attribute": "Strength"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 5,
						"y": 5
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareGuardStrength",
					"name": "Renfort de la Glace",
					"weight": 0,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "Guard"
						},
						{
							"value": 4,
							"attribute": "Strength"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 5,
						"y": 4
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareDexterityCritical",
					"name": "Renfort de la Tempête",
					"weight": 0,
					"baseBonus": [
						{
							"value": 4,
							"attribute": "Dexterity"
						},
						{
							"value": 3,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 8,
						"y": 4
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareDexterityMovement",
					"name": "Renfort de l'Orage",
					"weight": 0,
					"baseBonus": [
						{
							"value": 4,
							"attribute": "Dexterity"
						},
						{
							"value": 1,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 4,
						"y": 5
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareStrengthCritical",
					"name": "Renfort du Brasier",
					"weight": 0,
					"baseBonus": [
						{
							"value": 4,
							"attribute": "Strength"
						},
						{
							"value": 3,
							"attribute": "CritHitPercent"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 4,
						"y": 4
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "LayerRareCriticalMovement",
					"name": "Renfort de l'Onde",
					"weight": 0,
					"baseBonus": [
						{
							"value": 3,
							"attribute": "CritHitPercent"
						},
						{
							"value": 1,
							"attribute": "Movement"
						}
					],
					"props": {
						"disableLoot": true,
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons/GearIcons/ArmorLayer.png",
						"size": 96,
						"x": 2,
						"y": 5
					},
					"type": "ArmorLayer",
					"rarity": 2,
					"group": 24,
					"iconeDone": true
				},
				{
					"id": "RawMaterials",
					"name": "Matériaux bruts",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"price": 5,
					"props": {
						"startQuantity": 15,
						"wealth": 1,
						"startQuantityDifficultyBonus": [
							{
								"qty": 10,
								"difficulty": 0
							},
							{
								"qty": 5,
								"difficulty": 1
							},
							{
								"qty": 0,
								"difficulty": 2
							}
						]
					},
					"desc": "Quelques pièces de métal et de cuir utiles pour réparer les armures des compagnons entre les combats.",
					"weight": 0.5,
					"baseBonus": [],
					"type": "Miscellaneous",
					"rarity": 0,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "Remedy",
					"name": "Remède",
					"weight": 0.2,
					"props": {
						"special": 0,
						"refItem": "Flask",
						"startQuantity": 5,
						"disableLoot": true,
						"wealth": 1
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 6
					},
					"type": "Remedy",
					"price": 39,
					"baseBonus": [],
					"desc": "Un puissant onguent soignant une Blessure d'un compagnon. La fiole est récupérée après usage.",
					"rarity": 1,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "FakeRemedy",
					"name": "Repousse-cheveux",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"refItem": "Flask",
						"disableLoot": true,
						"refElement": "HairGrowingElement",
						"flags": 48,
						"displayType": "Remedy",
						"wealth": 1
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 6
					},
					"type": "Event",
					"desc": "Le Repousse-cheveux de Monsieur Lesage (grand érudit) est censé faire repousser la chevelure de vos compagnons en l'espace d'un repos.",
					"price": 20,
					"rarity": 2,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "ApprenticeRemedy",
					"name": "Remède imparfait",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"special": 0,
						"refItem": "Flask",
						"disableLoot": true,
						"healProbability": 0.5,
						"wealth": 1
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 9
					},
					"type": "Remedy",
					"price": 26,
					"rarity": 0,
					"desc": "Un remède fait avec amour et application mais sans connaissances rigoureuses. La fiole est récupérée après usage.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "PlagueRemedy",
					"name": "Remède contre la Peste",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"special": 0,
						"refItem": "Flask",
						"disableLoot": true,
						"wealth": 1
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 6
					},
					"type": "Remedy",
					"price": 59,
					"rarity": 2,
					"desc": "Un remède particulièrement puissant capable de guérir une blessure pestiférée. La fiole est récupérée après usage.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "LockPick",
					"name": "Crochet",
					"weight": 0.1,
					"props": {
						"wealth": 1
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 11
					},
					"price": 9,
					"desc": "Ce petit crochet permet de déverrouiller les serrures qui se dressent entre le voleur et son butin.",
					"baseBonus": [],
					"type": "Miscellaneous",
					"rarity": 0,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "Piton",
					"name": "Piton",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"wealth": 1
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 3
					},
					"type": "Miscellaneous",
					"price": 14,
					"desc": "Enfoncé dans la roche, le piton permet d'accrocher une corde et de descendre des hauteurs escarpées.",
					"rarity": 0,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "Chains",
					"name": "Chaînes",
					"weight": 0.5,
					"props": {
						"wealth": 1
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 5
					},
					"price": 20,
					"desc": "De solides chaînes en alazarite capables d'enchaîner un prisonnier une fois qu'il a été capturé.",
					"baseBonus": [],
					"type": "Miscellaneous",
					"rarity": 1,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "GhostPackChain",
					"name": "Chaînes d'Alazar",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 5
					},
					"type": "Miscellaneous",
					"price": 0,
					"rarity": 3,
					"desc": "Il a fallu tout l'ingéniosité d'Alazar vous fabriquer ces chaines capables de capturer un monstre de la Meute Fantôme.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "E1TrackerMap",
					"name": "Traque d'Arthes",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 12
					},
					"type": "TrackMap",
					"price": 10,
					"rarity": 2,
					"desc": "Le compte-rendu indique qu'une attaque a eu lieu dans un champ près de l'abbaye de Sainte-Eleor. La Meute Fantôme s'est ensuite enfuie dans une direction inconnue. Il faudra probablement attendre la nuit.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "S1TrackerMap",
					"name": "Traque de Tiltrën",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 12
					},
					"type": "TrackMap",
					"price": 10,
					"rarity": 2,
					"desc": "Le compte-rendu indique qu’un nouveau cadavre a été découvert au nord de l’écurie. Tout accuse l'énorme louve Sikha, traquée depuis quelques semaines.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "G1TrackerMap",
					"name": "Traque de Vertruse",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 12
					},
					"type": "TrackMap",
					"price": 10,
					"desc": "Le compte-rendu fait état d'un cadavre à moitié dévoré au sud de la grotte de Rochebrune. S'il s'agit bien de la Meute Fantôme, il faudra attendre la nuit avant de se lancer à sa poursuite.",
					"rarity": 2,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "H1TrackerMap",
					"name": "Traque de Ludern",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 12
					},
					"type": "TrackMap",
					"price": 10,
					"rarity": 2,
					"desc": "Le compte-rendu décrit un cadavre quelque part entre la prison de Ludern et la grotte du Gras Griffu. Si c'est l'oeuvre de la Meute Fantôme, il faudra attendre la nuit avant de la poursuivre.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "G2TrackerMap",
					"name": "Traque de Grinmeer",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 12
					},
					"type": "TrackMap",
					"price": 10,
					"rarity": 2,
					"desc": "Le compte-rendu évoque un cadavre trouvé sur une plage au sud-ouest de la région. Les rumeurs parlent de la Meute Fantôme. Il faudra attendre la nuit avant de la poursuivre.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "A1TrackerMap",
					"name": "Traque de Drombach",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"group": 25,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 12
					},
					"type": "TrackMap",
					"price": 10,
					"rarity": 2,
					"desc": "Le compte-rendu parle d'une érudite disparue alors qu'elle se rendait à la cascade des statues.",
					"iconeDone": true
				},
				{
					"id": "HideoutMap",
					"name": "Position du Repaire",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"custom": {
							"defenderKilledPrice": 10
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 12
					},
					"type": "Miscellaneous",
					"price": 10,
					"desc": "Après avoir vaincu un de leurs membres, vous avez obtenu cette carte qui indique l'emplacement du repaire des <b>::name::</b>.",
					"rarity": 2,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "E1TreasureMap",
					"name": "Le trésor de la Mercenaire",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"model": "content/systemic/maps/map01.jpg",
						"refElement": "E1Treasure",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 12
					},
					"type": "Map",
					"price": 30,
					"desc": "Indique le trésor de la Mercenaire.",
					"rarity": 2,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "G1BourgomasterTreasure",
					"name": "Documents de la Bourgmestre",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"model": "content/systemic/maps/map04.jpg"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 12
					},
					"type": "Map",
					"price": 10,
					"rarity": 2,
					"desc": "Indique un endroit important pour la Bourgmestre de Marheim.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "G1ApothecaryMap",
					"name": "Point de rendez-vous de l'apothicaire",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"model": "content/systemic/maps/map03.jpg",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "Map",
					"price": 10,
					"rarity": 2,
					"desc": "Indique l'endroit où Joren Toverdrank doit rejoindre son oncle.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "E1KnowledgePath1",
					"name": "Rendez-vous des Inquisiteurs",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"model": "content/systemic/maps/map05.jpg"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "Map",
					"desc": "Cette carte indique un point de rendez-vous de l'Inquisition",
					"price": 20,
					"rarity": 2,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "H1TreasureMap",
					"name": "Le trésor de la Colonelle Détéore",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"model": "content/systemic/maps/map07.jpg",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 12
					},
					"type": "Map",
					"price": 10,
					"rarity": 2,
					"desc": "Indique le trésor de la Colonelle Détéore.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "H1GhostPackMap",
					"name": "Carte de Winfrith",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"model": "content/systemic/maps/map06.jpg",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "Map",
					"price": 10,
					"rarity": 2,
					"desc": "Indique le lieu où vous devez accompagner Winfrith.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "G2BanditTreasure",
					"name": "Carte des brigands",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"model": "content/systemic/maps/map08.jpg",
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 12
					},
					"type": "Map",
					"price": 10,
					"rarity": 2,
					"desc": "Indique le Trésor des brigands de Grinmeer.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "A1TreasureMap",
					"name": "Le trésor des brigands de Drombach",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"model": "content/systemic/maps/map09.jpg",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 25,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 12
					},
					"type": "Map",
					"price": 10,
					"rarity": 2,
					"desc": "Indique le trésor des brigands de Drombach."
				},
				{
					"id": "GoldenKey",
					"name": "Clé dorée",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"questItem": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 11
					},
					"type": "Miscellaneous",
					"desc": "Cette clé est précieuse, mais sans doute moins que le trésor qu'elle scelle.",
					"rarity": 1,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "WroughtKey",
					"name": "Clé ouvragée",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"questItem": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 10
					},
					"type": "Miscellaneous",
					"desc": "Travail d'un excellent ferronnier, cette clé doit déverrouiller des serrures avancées.",
					"rarity": 1,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "CoarseKey",
					"name": "Clé grossière",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"questItem": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 11
					},
					"type": "Miscellaneous",
					"desc": "Cette clé n'ouvrira sans doute que des serrures aussi basiques qu'elle.",
					"rarity": 1,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "InfectedBrain",
					"name": "Cerveau infecté",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"wealth": 1
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 3
					},
					"type": "Miscellaneous",
					"price": 22,
					"desc": "Ce cerveau infecté intéressera sûrement les scientifiques d'Alazar.",
					"rarity": 2,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "Pass",
					"name": "Laissez-passer",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 4
					},
					"type": "Miscellaneous",
					"desc": "Un laissez-passer qui permet de traverser une frontière sans payer.",
					"rarity": 2,
					"price": 100,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "Tip",
					"name": "Information",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "Miscellaneous",
					"rarity": 2,
					"desc": "Vous êtes bien trop respectueux pour décacheter cette lettre.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "G2Letter",
					"name": "Information",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "Miscellaneous",
					"price": 3,
					"rarity": 2,
					"desc": "Poème à propos d'Adelise.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "G2Mountain",
					"name": "Information",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "Miscellaneous",
					"price": 3,
					"rarity": 2,
					"desc": "La date sur cette note remonte à plusieurs jours. Elle dit : <i>Rendez-vous ce soir à la Mine Hoevendorp. Prenez des cisailles. N'oubliez pas de brûler cette note !</i>",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "G2Hoevendorp",
					"name": "Contrat de vente",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "Miscellaneous",
					"price": 3,
					"rarity": 2,
					"desc": "Ce contrat daté d'avant le meurtre de la Négociante atteste de la vente de l'arène Bernna à la famille Hovendorp.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "G2RookInstructions",
					"name": "Lettre anonyme",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"group": 25,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "Miscellaneous",
					"price": 3,
					"rarity": 2,
					"desc": "Le contact des Freux se déguise en marchand. Pour révéler sa vraie nature, vendez-lui un brouet d'anguilles.",
					"iconeDone": true
				},
				{
					"id": "A1AstronomerLetter",
					"name": "Lettre de l'astronome",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 25,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"type": "Miscellaneous",
					"rarity": 2,
					"desc": "Cette lettre est à remettre à l'astronome de Gosenberg."
				},
				{
					"id": "Fangs",
					"name": "Croc en parfait état",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 3
					},
					"type": "Miscellaneous",
					"desc": "Un croc d'animal sauvage qui peut servir de monnaie d'échange auprès des Traqueurs.",
					"rarity": 0,
					"price": 0,
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "Fishhook",
					"name": "Hameçon de pêche",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"wealth": 1,
						"value": 0
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 3
					},
					"type": "Miscellaneous",
					"price": 9,
					"rarity": 0,
					"desc": "Un hameçon en fer qui empêche le poisson de se décrocher de la ligne.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "SolidFishhook",
					"name": "Hameçon de pêche solide",
					"weight": 0.2,
					"baseBonus": [],
					"props": {
						"wealth": 1,
						"value": 1
					},
					"iconeDone": true,
					"group": 25,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 3
					},
					"type": "Miscellaneous",
					"price": 13,
					"rarity": 1,
					"desc": "Un hameçon solide qui ramène un poisson supplémentaire."
				},
				{
					"id": "ExpertFishhook",
					"name": "Hameçon de pêche d'expert",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"wealth": 1,
						"value": 2
					},
					"iconeDone": true,
					"group": 25,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 3
					},
					"type": "Miscellaneous",
					"price": 20,
					"rarity": 2,
					"desc": "Un hameçon d'expert qui ramène deux poissons supplémentaires."
				},
				{
					"id": "Bait",
					"name": "Appâts",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 4
					},
					"type": "Miscellaneous",
					"price": 2,
					"rarity": 0,
					"desc": "Des petits vers qui gigotent lamentablement.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "GoldenTooth",
					"name": "Dent en or",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"wealth": 1
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 6
					},
					"type": "Miscellaneous",
					"price": 10,
					"rarity": 0,
					"desc": "Une dent en or arrachée de force à son ancien propriétaire.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "WeedKillingPotion",
					"name": "Potion désherbante",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 9
					},
					"type": "Miscellaneous",
					"price": 31,
					"rarity": 2,
					"desc": "Lorsqu'elle est versée sur une plante, cette potion la brûle des feuilles aux racines.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "BarberKit",
					"name": "Kit de barbier",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"sfx": {
							"onUse": "Customize"
						}
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 3,
						"y": 0
					},
					"type": "Miscellaneous",
					"price": 25,
					"rarity": 1,
					"desc": "Tout mercenaire qui a passé une semaine dans la nature ne rêve que d'une chose : une petite lame, un blaireau et un peu de temps devant soi.",
					"group": 25,
					"iconeDone": true
				},
				{
					"id": "ToothPaste",
					"name": "Pâte à dents",
					"weight": 0.3,
					"baseBonus": [],
					"props": {},
					"group": 25,
					"type": "Miscellaneous",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 19
					},
					"rarity": 2,
					"price": 13,
					"desc": "Les apothicaires ont beau prétendre qu'il n'y a que des cendres, de l'argile et de la menthe, l'arrière goût fait penser à autre chose.",
					"iconeDone": true
				},
				{
					"id": "SkillMastery",
					"name": "Maîtrise de Compétence",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"flags": 64,
						"buyRequireBonus": "CanBuySkillMastery"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 8
					},
					"type": "Consumable",
					"price": 300,
					"desc": "Renferme un savoir permettant à un de vos compagnons d'améliorer l'une de ses compétences de classe.",
					"rarity": 2,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "FirstAidManual",
					"name": "",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"special": 2,
						"skill": "FirstAid",
						"flags": 64
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 8
					},
					"type": "SkillManual",
					"price": 300,
					"rarity": 2,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "DashManual",
					"name": "",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"special": 2,
						"skill": "Dash",
						"flags": 64
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 8
					},
					"type": "SkillManual",
					"rarity": 2,
					"price": 300,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "TauntManual",
					"name": "",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"special": 2,
						"skill": "Taunt",
						"flags": 64
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 8
					},
					"type": "SkillManual",
					"rarity": 2,
					"price": 300,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "WrathManual",
					"name": "",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"special": 2,
						"skill": "Wrath",
						"flags": 64
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 8
					},
					"type": "SkillManual",
					"rarity": 2,
					"price": 300,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "AimManual",
					"name": "",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"special": 2,
						"skill": "Aim",
						"flags": 64
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 8
					},
					"type": "SkillManual",
					"rarity": 2,
					"price": 300,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "SPDompting",
					"name": "",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"skill": "DomptingStrategy",
						"special": 2
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 0
					},
					"type": "StrategicPlan",
					"price": 100,
					"rarity": 2,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "SPSetback",
					"name": "",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"skill": "PrecisionStrategy",
						"special": 2
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 0
					},
					"type": "StrategicPlan",
					"price": 100,
					"rarity": 2,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "WarChronicles",
					"name": "Chroniques de guerre",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"converts": {
							"action": "DlgRead",
							"item": "Knowledge"
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 10
					},
					"type": "Consumable",
					"price": 100,
					"rarity": 2,
					"desc": "Ouvrage mentionnant une série de campagnes militaires datant de l'Empire d'Edoran.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "MilitaryReport",
					"name": "Rapport militaire",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"converts": {
							"action": "DlgRead",
							"item": "Knowledge"
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 10
					},
					"type": "Consumable",
					"price": 100,
					"rarity": 2,
					"desc": "Un petit carnet de bord retraçant au jour le jour la vie d'une patrouille de la Garde.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "WorkManual",
					"name": "Manuel de travail",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"converts": {
							"action": "DlgRead",
							"item": "Knowledge"
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 10
					},
					"type": "Consumable",
					"price": 100,
					"rarity": 2,
					"desc": "Ouvrage traitant des techniques de travail anciennes.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "PestTreatise",
					"name": "Traité sur la peste",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"converts": {
							"action": "DlgRead",
							"item": "Knowledge"
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 10
					},
					"type": "Consumable",
					"price": 100,
					"rarity": 2,
					"desc": "Ouvrage traitant de la Peste et de ses traitements.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "EdoranChronicles",
					"name": "Chroniques d'Edoran",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"converts": {
							"action": "DlgRead",
							"item": "Knowledge"
						}
					},
					"type": "Consumable",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 10
					},
					"rarity": 2,
					"price": 100,
					"desc": "Un morceau d'Histoire portant sur la mort d'Edor.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "TraderManual",
					"name": "Manuel de marchand",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"converts": {
							"action": "DlgRead",
							"item": "Knowledge"
						}
					},
					"type": "Consumable",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 10
					},
					"rarity": 2,
					"price": 100,
					"desc": "Apprend à vendre n'importe quoi à n'importe qui.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "MedecineEncyclopedia",
					"name": "Encyclopédie médicale",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"converts": {
							"action": "DlgRead",
							"item": "Knowledge"
						}
					},
					"type": "Consumable",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 10
					},
					"rarity": 2,
					"price": 100,
					"desc": "Les dessins anatomiques font froid dans le dos.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "GhostPackMemories",
					"name": "Mémoires sur la Meute Fantôme",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"converts": {
							"action": "DlgRead",
							"item": "Knowledge"
						}
					},
					"type": "Consumable",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 10
					},
					"rarity": 2,
					"price": 100,
					"desc": "Récits des Traqueurs à la poursuite de la Meute Fantôme.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "FrostReport",
					"name": "Recueil du Givre",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"converts": {
							"action": "DlgRead",
							"item": "Knowledge"
						}
					},
					"type": "Consumable",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 10
					},
					"rarity": 2,
					"price": 100,
					"desc": "Un recueil de témoignages à propos du Givre.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilStrengthProcWeak",
					"name": "Huile fortifiante",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilStrengthProcWeak"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 10,
						"y": 11
					},
					"type": "Oil",
					"price": 40,
					"rarity": 1,
					"desc": "Cette huile est souvent fabriquée par les apprentis apothicaires dans le but de s’exercer.",
					"group": 26
				},
				{
					"id": "OilDexterityProcWeak",
					"name": "Huile tonifiante",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilDexterityProcWeak"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 11,
						"y": 11
					},
					"type": "Oil",
					"price": 40,
					"rarity": 1,
					"desc": "Cette huile est peut-être imparfaite, mais comme disent les camelots : c’est mieux que rien. ",
					"group": 26
				},
				{
					"id": "OilDamageTakenProcWeak",
					"name": "Huile défensive",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilDamageTakenProcWeak",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 12,
						"y": 11
					},
					"type": "Oil",
					"price": 40,
					"rarity": 1,
					"desc": "Il serait aisé de dédaigner les huiles imparfaites, mais ce serait omettre qu’elles ont déjà permis des victoires inespérées.",
					"group": 26
				},
				{
					"id": "OilProcPoison1",
					"name": "Huile empoisonnée I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilProcPoison1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 14
					},
					"type": "Oil",
					"desc": "Cette solution de plantes vénéneuses mélangée à des huiles végétales épaisses possède des propriétés toxiques efficaces, tandis que sa texture onctueuse assure sa bonne tenue sur une arme.",
					"price": 80,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilProcBurning1",
					"name": "Huile acide I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilProcBurning1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 13
					},
					"type": "Oil",
					"desc": "Cette solution hautement caustique stabilisée dans une mixture abrasive cause d'importantes brûlures cutanées, sans pour autant causer le moindre dommage aux armes auxquelles elle est appliquée.",
					"price": 80,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilProcBleeding1",
					"name": "Huile d'aiguisage I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilProcBleeding1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 15
					},
					"type": "Oil",
					"desc": "Un mélange abrasif de poudres minérales pris dans une solution légèrement acide attaque et affûte les parties les plus saillantes de l'arme à laquelle elle est appliquée.",
					"price": 82,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilProcTrueDmg1",
					"name": "Huile explosive I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilProcTrueDmg1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 15
					},
					"type": "Oil",
					"desc": "Cette préparation instable a la capacité de détoner lorsqu'elle est soumise à un choc, accentuant les dégâts provoqués par l'impact initial.",
					"price": 81,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilStrengthProc1",
					"name": "Huile de force I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilStrengthProc1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 16
					},
					"type": "Oil",
					"desc": "Une mixture grumeleuse et légèrement collante qui permet une meilleure prise de l'arme, et ainsi de porter des coups avec plus de force. La sensation au toucher est assez désagréable.",
					"price": 83,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilDexterityProc1",
					"name": "Huile de promptitude I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilDexterityProc1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 15
					},
					"type": "Oil",
					"desc": "Une huile légère qui lubrifie très subtilement l'arme à laquelle elle est appliquée sans la rendre glissante, ce qui permet un réajustement rapide et aisé de la prise pour profiter constamment du meilleur équilibre possible.",
					"price": 83,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilDamageTakenProc1",
					"name": "Huile de renforcement I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilDamageTakenProc1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 14
					},
					"type": "Oil",
					"desc": "Bien que malodorante, cette huile médicinale, à laquelle a été ajoutée un excipient transcutané, a la capacité de réduire la sensation de douleur, rendant son utilisateur plus résistant.",
					"price": 83,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilIgnoreGuard1",
					"name": "Huile de perforage I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilIgnoreGuard1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 15
					},
					"type": "Oil",
					"desc": "Une solution irritante liquide qui a tendance à éclabousser la cible de l'arme sur laquelle elle est appliquée, imprégnant les vêtements et provoquant des blessures en dépit des protections.",
					"price": 87,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilSlowProc1",
					"name": "Huile paralysante I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilSlowProc1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 13
					},
					"type": "Oil",
					"desc": "La fragrance douceureuse de cette substance gélatineuse fait facilement oublier qu'il s'agit d'un poison affectant brièvement le système nerveux, ce qui conduit à un ralentissement des mouvements de la victime.",
					"price": 83,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilAnimalsDmg1",
					"name": "Huile d'essence animale I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilAnimalsDmg1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 15
					},
					"type": "Oil",
					"desc": "Cette formule aux propriétés toxiques a la particularité d'affecter les animaux sans présenter de danger pour les êtres humains.",
					"rarity": 1,
					"price": 83,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilSelfheal1",
					"name": "Huile de conversion I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilSelfheal1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 14
					},
					"type": "Oil",
					"desc": "Une huile médicinale pénétrant la peau et dont les propriétés s'activent particulièrement en cas de poussée d'adrénaline, en faisant une excellente substance toute désignée pour le combat.",
					"price": 84,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilPlagueDmg1",
					"name": "Huile d'essence pestiférée I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilPlagueDmg1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 16
					},
					"type": "Oil",
					"desc": "Cette préparation odorante est issue d'expérimentations pour guérir la Peste. Malheureusement, elle provoque d'intenses douleurs aux malades, et ses effets curatifs restent encore à prouver.",
					"price": 82,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilDotEffect1",
					"name": "Huile infectieuse I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilDotEffect1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 16
					},
					"type": "Oil",
					"desc": "Ce mélange dégoûtant, véritable bouillon de culture microbien, infecte rapidement les blessures causées par l'arme à laquelle il est appliqué.",
					"price": 81,
					"rarity": 1,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilCleave1",
					"name": "Huile vaporeuse I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilCleave1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 13
					},
					"type": "Oil",
					"desc": "Une substance gélatineuse qui a la particularité de se brumiser à l'impact, se dissipant sur une aire autour de l'impact. Les adjuvants irritants rendent douloureux son contact avec les muqueuses.",
					"rarity": 1,
					"price": 82,
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilWindfury1",
					"name": "Huile instable I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilWindfury1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 16
					},
					"type": "Oil",
					"rarity": 1,
					"price": 84,
					"desc": "Une huile à la texture équilibrée, très subtile, qui donne une meilleure prise en main de l'arme sur laquelle elle est appliquée, et qui permet de mieux surprendre l'adversaire avec un geste inattendu.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilOpportunityAttack1",
					"name": "Huile de vivacité I",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 15,
							"attribute": "DamageBonusOppAttack"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 14
					},
					"type": "Oil",
					"rarity": 1,
					"price": 80,
					"desc": "Cette mystérieuse préparation semble stimuler le système nerveux du porteur de l'arme sur laquelle elle est appliquée et lui permet d'être particulièrement efficace à des moments cruciaux, et extrêmement fugaces.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilCrit1",
					"name": "Huile d'affilage I",
					"weight": 0.5,
					"baseBonus": [
						{
							"value": 10,
							"attribute": "CritHitPercent"
						}
					],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 14
					},
					"type": "Oil",
					"price": 84,
					"rarity": 1,
					"desc": "Cette huile corrosive, appliquée avec un certain-savoir faire, affûte les parties les plus stratégiques d'une arme pour maximiser les dégâts lors des impacts les plus efficaces.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilHemorraghe1",
					"name": "Huile hémorragique I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilHemorraghe1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 13
					},
					"type": "Oil",
					"price": 79,
					"rarity": 1,
					"desc": "Pensée initialement comme une crème anti-coagulante pour aider aux saignées, cette solution grasse sert maintenant surtout à aggraver les saignements provoqués en combat.",
					"group": 26,
					"iconeDone": true
				},
				{
					"id": "OilProcSolid",
					"name": "Huile fortifiante I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilProcSolid"
					},
					"iconeDone": true,
					"group": 26,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 11
					},
					"type": "Oil",
					"price": 83,
					"desc": "Une arme ainsi ointe a moins de chance de se briser sous le choc d'une attaque.",
					"rarity": 1
				},
				{
					"id": "OilSwipping",
					"name": "Huile d'immunité I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilSwipping"
					},
					"iconeDone": true,
					"group": 26,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 8,
						"y": 11
					},
					"type": "Oil",
					"price": 82,
					"desc": "Rien qu’au parfum délicat qui s’en dégage, on sait que cette huile a une fonction protectrice.",
					"rarity": 1
				},
				{
					"id": "OilProcFever",
					"name": "Huile putride I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilProcFever"
					},
					"iconeDone": true,
					"group": 26,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 7,
						"y": 11
					},
					"type": "Oil",
					"price": 84,
					"desc": "On trouve l’origine de cette huile à Harag dont les effets ne sont pas sans rappeler les maladies qu'on peut attraper dans ses marais.",
					"rarity": 1
				},
				{
					"id": "OilBrave",
					"name": "Huile du Brave I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilBrave"
					},
					"iconeDone": true,
					"group": 26,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 11
					},
					"type": "Oil",
					"price": 82,
					"desc": "Qui ne connait pas la légendaire Huile du Brave ? Vendue par les apothicaires peu scrupuleux et prisées des mercenaires superstitieux, on a coutume d’attribuer à cette mixture toutes sortes de vertus.",
					"rarity": 1
				},
				{
					"id": "OilProcSlowReflexes",
					"name": "Huile d'épuisement I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilProcSlowReflexes"
					},
					"iconeDone": true,
					"group": 26,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 5,
						"y": 11
					},
					"type": "Oil",
					"price": 82,
					"desc": "Cette huile est parfois utilisée à Tiltrën comme antalgique : au contact des chairs, elle engourdit le membre et le rend insensible à la douleur. ",
					"rarity": 1
				},
				{
					"id": "OilSticky1",
					"name": "Huile poisseuse I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilSticky1"
					},
					"group": 26,
					"type": "Oil",
					"desc": "L’huile est difficile à appliquer mais sa texture permet de dévier les coups.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 15
					},
					"price": 81,
					"rarity": 1,
					"iconeDone": true
				},
				{
					"id": "OilProtection1",
					"name": "Huile de protection I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilProtection1"
					},
					"group": 26,
					"type": "Oil",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 16
					},
					"desc": "Même dans leur noir, l'odeur de cette huile permet à vos alliés de vous repérer et d'éviter de vous frapper.",
					"rarity": 1,
					"price": 82,
					"iconeDone": true
				},
				{
					"id": "OilPlague1",
					"name": "Huile Pestiférée I",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"passiveSkill": "OilPlague1"
					},
					"iconeDone": true,
					"group": 26,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 3,
						"y": 7
					},
					"type": "Oil",
					"price": 77,
					"rarity": 1,
					"desc": "Cette huile, dérivée du remède contre la Peste, a été élaborée par le fameux Laboratoire Sophy Adr Alazar de Drombach."
				},
				{
					"id": "RatBait",
					"name": "Appât à rats",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"value": 8,
						"disableLoot": true
					},
					"group": 26,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 12
					},
					"desc": "Versée sur un nid de rat, cette huile permet de le reconstituer en <narrator>[VALUE] heures</narrator>. Mais qui voudrait faire cela ?",
					"rarity": 2,
					"type": "Oil",
					"price": 118,
					"iconeDone": true
				},
				{
					"id": "Charcoal",
					"name": "Charbon",
					"weight": 0.2,
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 0
					},
					"price": 5,
					"baseBonus": [],
					"type": "Component",
					"desc": "Couplé à du fer, le charbon permet de forger de puissantes armes et armures.",
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Rope",
					"name": "Corde",
					"weight": 0.2,
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 5
					},
					"price": 4,
					"baseBonus": [],
					"rarity": 0,
					"type": "Component",
					"desc": "Les cordes en chanvre sont utilisées pour fabriquer des arcs ainsi que du matériel de navigation et d'escalade.",
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Leather",
					"name": "Cuir",
					"weight": 0.5,
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 4
					},
					"price": 5,
					"baseBonus": [],
					"rarity": 0,
					"type": "Component",
					"desc": "Ce cuir est utilisé dans la fabrication d'armes, d'armures et de renforts d'armure.",
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Cloth",
					"name": "Tissu",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 7
					},
					"type": "Component",
					"price": 4,
					"rarity": 0,
					"desc": "Ces pièces de tissu permettent de fabriquer des vêtements qui durent.",
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Fat",
					"name": "Graisse",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 0
					},
					"type": "Component",
					"price": 2,
					"rarity": 0,
					"desc": "Cette graisse permet de concevoir des torches, très utiles pour voyager dans l'obscurité.",
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Flask",
					"name": "Fiole",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 10
					},
					"type": "Component",
					"price": 10,
					"desc": "Une petite fiole en verre utilisée dans la fabrication de remèdes et de préparations alchimiques.",
					"rarity": 1,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Salt",
					"name": "Sel",
					"weight": 0.3,
					"baseBonus": [],
					"props": {},
					"type": "Component",
					"price": 2,
					"desc": "Vendu chez la plupart des marchands, le sel est un ingrédient essentiel à la préparation des plats.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 8
					},
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "PlaguedLeather",
					"name": "Cuir pestiféré",
					"weight": 0.5,
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 6
					},
					"type": "Component",
					"price": 6,
					"desc": "Au toucher, une aura singulière émane de ce cuir. Peut-être quelqu'un saurait-il le tanner ?",
					"baseBonus": [],
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Wood",
					"name": "Bois",
					"weight": 0.5,
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 0
					},
					"price": 5,
					"baseBonus": [],
					"type": "Component",
					"desc": "Combustible par excellence, le bois peut également être employé dans la fabrication de bateaux ou de manches d'armes.",
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "SnowWillow",
					"name": "Saule des montagnes",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 27,
					"type": "Component",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 8
					},
					"price": 9,
					"rarity": 2,
					"desc": "Le saule des montagnes a la particularité de s'épanouir partout, y compris en haute altitude et de résister à la plupart des champignons arboricoles."
				},
				{
					"id": "IronOre",
					"name": "Minerai de fer",
					"weight": 0.5,
					"props": {
						"xpMinerValue": 0.5
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 0
					},
					"type": "Component",
					"desc": "Ces minerais de fer permettent de fabriquer des armes, des armures et des pièces de construction.",
					"price": 7,
					"baseBonus": [],
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "GreyMass",
					"name": "Agglomérat gris",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"xpMinerValue": 10
					},
					"group": 27,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 2
					},
					"type": "Component",
					"desc": "Cet amas de métal et de roche est inexploitable sous sa forme brute. Néanmoins, un bon alchimiste peut en tirer du givracier.",
					"rarity": 2,
					"price": 6,
					"iconeDone": true
				},
				{
					"id": "Rimesteel",
					"name": "Givracier",
					"weight": 0.4,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"group": 27,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 1,
						"y": 2
					},
					"type": "Component",
					"price": 14,
					"rarity": 2,
					"desc": "Difficile à extraire, impossible à trouver à l'état naturel, le givracier n'a été découvert que récemment. Seuls les meilleurs forgerons savent l'employer.",
					"iconeDone": true
				},
				{
					"id": "Etherit",
					"name": "Éthérite",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"xpMinerValue": 15
					},
					"iconeDone": true,
					"group": 27,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 10
					},
					"desc": "L'éthérite n'a longtemps été appréciée que pour son aspect esthétique mais l'arrivée des Irhiens et de leur savoir alchimique a changé la donne.",
					"price": 12,
					"rarity": 2,
					"type": "Component"
				},
				{
					"id": "GoldMineral",
					"name": "Acier akhedien",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 27,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 1,
						"y": 10
					},
					"type": "Component",
					"rarity": 2,
					"price": 18,
					"desc": "L'acier akhedien tient son nom de la ville d'Akhed, en Estant. Sans l'apport de ses savants, les Cinq Royaumes n'auraient jamais su que faire de l'étherite."
				},
				{
					"id": "Sandstone",
					"name": "Grès",
					"weight": 0.5,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 0
					},
					"type": "Component",
					"price": 5,
					"rarity": 0,
					"desc": "Légèrement friable, cette roche pourrait disposer de nombreux usages.",
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "SnowIris",
					"name": "Iris des neiges",
					"weight": 0.1,
					"props": {},
					"type": "Flowers",
					"price": 5,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 7
					},
					"baseBonus": [],
					"desc": "Cette fleur éclot essentiellement dans les régions enneigées.",
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Comfrey",
					"name": "Consoude",
					"weight": 0.1,
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 8
					},
					"type": "Flowers",
					"price": 5,
					"baseBonus": [],
					"desc": "La consoude abonde dans les prairies et les champs.",
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Cowbane",
					"name": "Persil des marais",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Flowers",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 7
					},
					"price": 5,
					"rarity": 0,
					"desc": "Très répandue dans les endroits humides tels que les marécages et les rives, cette plante cause des nausées, des convulsions et permet également d'abaisser le rythme cardiaque.",
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Starflower",
					"name": "Immortelle",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"group": 27,
					"type": "Flowers",
					"price": 5,
					"rarity": 0,
					"desc": "Une fleur qui pousse dans les sols sablonneux du littoral.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "StrangeRoot",
					"name": "Tubercule étrange",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 8
					},
					"type": "Plants",
					"price": 2,
					"rarity": 2,
					"desc": "Les replis de son écorce imitent une figure humaine.",
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Wheat",
					"name": "Blé",
					"weight": 0.3,
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 0
					},
					"desc": "A besoin d'être cuisiné pour être consommé.",
					"price": 2,
					"baseBonus": [],
					"rarity": 0,
					"type": "Component",
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "FreshMint",
					"name": "Menthe fraîche",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"group": 27,
					"type": "Component",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 5
					},
					"price": 2,
					"rarity": 0,
					"desc": "Cette herbe est indispensable aux marchands qui réalisent des merveilles avec une haleine fraîche.",
					"iconeDone": true
				},
				{
					"id": "Hemp",
					"name": "Chanvre",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 27,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 11,
						"y": 6
					},
					"type": "Component",
					"price": 2,
					"rarity": 0,
					"desc": "Une plante versatile qui aussi bien servir à la fabrication de textile qu'à la cuisine."
				},
				{
					"id": "WhiteLeather",
					"name": "Cuir blanc",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 4
					},
					"type": "Component",
					"price": 8,
					"desc": "Un cuir étrange dont l'aspect soyeux contraste avec sa robustesse exceptionnelle.",
					"rarity": 1,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "AlazarPowder",
					"name": "Poudre d'Alazar",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 4
					},
					"type": "Component",
					"price": 8,
					"desc": "Une forte odeur de soufre et de charbon émane de cette poudre.",
					"rarity": 1,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "AlchemicResidue",
					"name": "Résidu alchimique",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 27,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 10,
						"y": 10
					},
					"type": "Component",
					"price": 6,
					"rarity": 1,
					"desc": "En alchimie, <i>rien ne se perd</i> y compris ce qui résulte d'une autre recette et dont on ne sait que faire."
				},
				{
					"id": "PestiferousGrowthSample",
					"name": "Échantillon pestiféré",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 3
					},
					"type": "Component",
					"price": 16,
					"desc": "Extraite des excroissances pestiférées, cette substance pourrait être grandement utile en alchimie.",
					"rarity": 2,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "FishOil",
					"name": "Huile de poisson",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 1
					},
					"type": "Component",
					"price": 2,
					"desc": "Une huile grasse à la forte odeur marine.",
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "InfectedBlood",
					"name": "Sang infecté",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 1
					},
					"type": "Component",
					"price": 3,
					"desc": "Un échantillon de sang infecté qui pourrait intéresser les Purificateurs.",
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "RedEyeball",
					"name": "Globe oculaire rouge",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 2
					},
					"type": "Component",
					"price": 5,
					"desc": "Un globe oculaire dont la couleur rouge vif donne la nausée.",
					"rarity": 0,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "VirginEssence",
					"name": "Essence vierge",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 5
					},
					"type": "Component",
					"price": 39,
					"desc": "Une essence poisseuse translucide, ingrédient essentiel de la préparation des huiles alchimiques.",
					"rarity": 2,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "MosquitoPiece",
					"name": "Rostre de moustique",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 18,
						"y": 0
					},
					"type": "Component",
					"rarity": 0,
					"desc": "Étonnamment flexibles et résistants, les rostres peuvent être réduits en poudre après avoir été séchés.",
					"price": 4,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "CrocoporkScale",
					"name": "Écaille de crocopork",
					"weight": 0.3,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 19,
						"y": 0
					},
					"type": "Component",
					"price": 6,
					"rarity": 1,
					"desc": "La peau des crocoporks est constituée d'écailles reptiliennes qui, une fois moulues, constituent un réactif alchimique remarquable.",
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Ruby",
					"name": "Rubis",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"xpMinerValue": 5
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 5
					},
					"type": "Luxuries",
					"price": 40,
					"desc": "Objet à revendre. Le rubis évoque le sang et le feu. On l'associe au courage et à l'amour.",
					"rarity": 2,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "Sapphire",
					"name": "Saphir",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"xpMinerValue": 5
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 5
					},
					"type": "Luxuries",
					"price": 40,
					"desc": "Objet à revendre. Le saphir est l'emblème de la paix et de la sérénité. Les riches superstitieux le portent pour se protéger du mauvais sort.",
					"rarity": 2,
					"group": 27,
					"iconeDone": true
				},
				{
					"id": "SmallItemFragments",
					"name": "Fragments de petit objet",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 1
					},
					"type": "SmallAntiquity",
					"rarity": 1,
					"desc": "Un petit objet ancien dont il ne reste que des fragments épars. Un érudit pourrait le reconstituer.",
					"price": 5,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity1",
					"name": "Morceau de poterie",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 5
					},
					"type": "SmallAntiquity",
					"desc": "Cet éclat est stupéfiant : l'oiseau qui l'orne est plus vrai que nature.",
					"rarity": 1,
					"price": 80,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity2",
					"name": "Collier terni",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 2
					},
					"type": "SmallAntiquity",
					"desc": "Impossible de savoir si ce bijou ornait le cou d'un homme ou d'une femme.",
					"rarity": 1,
					"price": 80,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity3",
					"name": "Boucle de ceinture",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 2
					},
					"type": "SmallAntiquity",
					"desc": "Le reste de la ceinture a disparu mais cette boucle est à peine tordue.",
					"rarity": 1,
					"price": 80,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity4",
					"name": "Statuette masculine",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 3
					},
					"type": "SmallAntiquity",
					"desc": "La sculpture est un peu grossière et ne semble représenter personne en particulier. Un détail pourtant vous fait penser qu'il s'agit d'un mâle.",
					"rarity": 1,
					"price": 80,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity5",
					"name": "Bracelet en corail",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 3
					},
					"type": "SmallAntiquity",
					"desc": "Les couleurs vives de ce bracelet brillent à la lumière du soleil.",
					"rarity": 1,
					"price": 80,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity6",
					"name": "Lentille en verre",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 4
					},
					"type": "SmallAntiquity",
					"desc": "Lorsqu'on regarde à travers cet objet, la vision est déformée. Il semble que la lentille devait être insérée dans quelque chose.",
					"rarity": 1,
					"price": 80,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity7",
					"name": "Hochet en os",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 4
					},
					"type": "SmallAntiquity",
					"desc": "Des traces de toutes petites dents sont encore visibles sur ce jouet.",
					"rarity": 1,
					"price": 80,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity8",
					"name": "Pièce de monnaie",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 1
					},
					"type": "SmallAntiquity",
					"desc": "Il y a un trou au milieu de cette pièce en bronze.",
					"rarity": 1,
					"price": 80,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "BigItemFragments",
					"name": "Fragments d'objet précieux",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 2
					},
					"type": "BigAntiquity",
					"rarity": 2,
					"desc": "Les fragments de cet objet détruit attestent d'une majesté perdue. Un érudit pourrait le reconstituer.",
					"price": 10,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity9",
					"name": "Statuette en argent",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 4
					},
					"type": "BigAntiquity",
					"rarity": 2,
					"desc": "La créature représentée ressemble à un serpent mais en beaucoup plus effrayant.",
					"price": 150,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity10",
					"name": "Miroir à main",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 4
					},
					"type": "BigAntiquity",
					"rarity": 2,
					"desc": "Personne n'a jamais vu une telle matière. Aucun métal poli ne peut refléter une figure avec tant de précision.",
					"price": 150,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity11",
					"name": "Médaille militaire",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 1
					},
					"type": "BigAntiquity",
					"rarity": 2,
					"desc": "Cette broche a une forme très particulière et les lances gravées dessus laissent penser qu'il s'agit plutôt d'une médaille.",
					"price": 150,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity12",
					"name": "Calice gravé",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 1
					},
					"type": "BigAntiquity",
					"rarity": 2,
					"desc": "De nombreux dessins ornent cette coupe. S'il s'agit bien d'étoiles, les constellations qu'elles forment sont parfaitement fantaisistes.",
					"price": 150,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity13",
					"name": "Manteau inaltéré",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 1
					},
					"type": "BigAntiquity",
					"rarity": 2,
					"desc": "La matière dans laquelle ce manteau a été taillé est inconnue mais elle a parfaitement résistée au temps.",
					"price": 150,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity14",
					"name": "Tablette lisse",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 1
					},
					"type": "BigAntiquity",
					"rarity": 2,
					"desc": "Cet objet est suffisamment étrange pour valoir cher : sa surface est totalement plane et vide.",
					"price": 150,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "Antiquity15",
					"name": "Figure de gardien",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 28,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 2
					},
					"type": "BigAntiquity",
					"price": 150,
					"rarity": 2,
					"desc": "L'être représenté par cette statuette tient une sorte de bouclier... à moins que ce ne soit une lanterne ?"
				},
				{
					"id": "Antiquity16",
					"name": "Coffret précieux",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 28,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 11
					},
					"type": "Miscellaneous",
					"price": 150,
					"rarity": 2,
					"desc": "Recouvert d'ornements guerriers et de pierres précieuses, ce coffret devait renfermer quelque chose d'important aujourd'hui disparu."
				},
				{
					"id": "FakeAntiquity1",
					"name": "Tire-bouchon",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 28,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 3,
						"y": 10
					},
					"type": "Miscellaneous",
					"price": 10,
					"rarity": 0,
					"desc": "Un tire-bouchon maquillé en antiquité. Les allumni d'Alazar ont tellement d'humour !"
				},
				{
					"id": "LegendaryMaceRuinAntiquity",
					"name": "Trésor des Anciens",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"refItem": "MaceLegendaryRuin"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 4
					},
					"type": "Antiquity",
					"rarity": 3,
					"desc": "Le propriétaire de cette relique morcelée devait être issu d'une famille de très haute lignée. Un érudit pourrait le reconstituer.",
					"price": 50,
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "LegendaryBowRuinH1",
					"name": "Trésor des Anciens",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"refItem": "BowLegendaryRuinH1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 4
					},
					"type": "Antiquity",
					"price": 50,
					"rarity": 3,
					"desc": "Le propriétaire de cette relique morcelée devait être issu d'une famille de très haute lignée. Un érudit pourrait le reconstituer.",
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "LegendaryPolearmRuinH1",
					"name": "Trésor des Anciens",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"refItem": "PolearmLegendaryRuinH1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 4
					},
					"type": "Antiquity",
					"price": 50,
					"rarity": 3,
					"desc": "Le propriétaire de cette relique morcelée devait être issu d'une famille de très haute lignée. Un érudit pourrait le reconstituer.",
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "LegendarySwordRuinS1",
					"name": "Trésor des Anciens",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"refItem": "SwordLegendaryRuin"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 4
					},
					"type": "Antiquity",
					"price": 50,
					"rarity": 3,
					"desc": "Le propriétaire de cette relique morcelée devait être issu d'une famille de très haute lignée. Un érudit pourrait le reconstituer.",
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "LegendaryDaggerRuinG2",
					"name": "Trésor des Anciens",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"refItem": "DaggerLegendaryRuinG2"
					},
					"group": 28,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 4
					},
					"type": "Antiquity",
					"price": 50,
					"rarity": 3,
					"desc": "Le propriétaire de cette relique morcelée devait être issu d'une famille de très haute lignée. Un érudit pourrait le reconstituer.",
					"iconeDone": true
				},
				{
					"id": "LegendaryAxeRuinG1",
					"name": "Trésor des Anciens",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"refItem": "AxeLegendaryRuins"
					},
					"iconeDone": true,
					"group": 28,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 4
					},
					"type": "Antiquity",
					"price": 50,
					"rarity": 3,
					"desc": "Le propriétaire de cette relique morcelée devait être issu d'une famille de très haute lignée. Un érudit pourrait le reconstituer."
				},
				{
					"id": "LegendaryMace2HRuinS1",
					"name": "Trésor des Anciens",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"refItem": "Mace2HLegendaryRuinS1"
					},
					"iconeDone": true,
					"group": 28,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 4
					},
					"price": 50,
					"rarity": 3,
					"desc": "Le propriétaire de cette relique morcelée devait être issu d'une famille de très haute lignée. Un érudit pourrait le reconstituer.",
					"type": "Antiquity"
				},
				{
					"id": "CommonFakeAntiquity1",
					"name": "Trésor des Anciens",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"refItem": "FakeAntiquity1",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 28,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 4
					},
					"type": "Antiquity",
					"rarity": 0,
					"price": 0,
					"desc": "Seul un érudit pourrait découvrir la véritable nature de cette antiquité."
				},
				{
					"id": "PathKnowledge1Item",
					"name": "Pièce de puzzle",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"type": "Other",
					"rarity": 0,
					"desc": "Les bords épais de cette petite pièce en marbre doivent s'imbriquer dans d'autres pièces.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 8
					},
					"group": 28,
					"iconeDone": true
				},
				{
					"id": "DragonBones1",
					"name": "Os de dragon - I",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 29,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"type": "Other",
					"price": 0,
					"rarity": 3,
					"desc": "D'après les recherches de la Professeure Maurith, ces ossements seraient ceux d'un authentique dragon."
				},
				{
					"id": "DragonBones2",
					"name": "Os de dragon - II",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 29,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"type": "Other",
					"price": 0,
					"rarity": 3,
					"desc": "D'après les recherches de la Professeure Maurith, ces ossements seraient ceux d'un authentique dragon."
				},
				{
					"id": "DragonBones3",
					"name": "Os de dragon - III",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 29,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"type": "Other",
					"price": 0,
					"rarity": 3,
					"desc": "D'après les recherches de la Professeure Maurith, ces ossements seraient ceux d'un authentique dragon."
				},
				{
					"id": "PrayerCollection",
					"name": "Recueil de prières",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Livre de prières dédiées à l'Œil et à Jéru.",
					"price": 10,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 2
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "EyeNecklace",
					"name": "Collier en forme d'oeil",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"desc": "Collier sacré avec un pendentif en forme d'œil.",
					"type": "Trinket",
					"price": 15,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 4
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "OokStatuette",
					"name": "Statuette en bois",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Une petite statuette en forme de soldat.",
					"rarity": 0,
					"price": 5,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 0
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "GoldenEarrings",
					"name": "Boucles d'oreilles en or",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"price": 15,
					"rarity": 0,
					"desc": "Des boucles d'oreilles précieuses.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 6
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "Lyre",
					"name": "Lyre",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"price": 15,
					"rarity": 0,
					"desc": "Un instrument de musique très prisé des ménestrels, troubadours et jongleurs.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 6
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "MasterPiece",
					"name": "Chef-d'oeuvre",
					"weight": 0.5,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Aucun mot ne pourrait rendre justice à un tel chef-d'œuvre pictural.",
					"price": 25,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 6
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "Daub",
					"name": "Croûte",
					"weight": 0.5,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Il suffit de poser le regard sur cet horrible portrait pour sentir ses yeux piquer.",
					"price": 5,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 6
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "LaceRibbon",
					"name": "Ruban en dentelle",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Ce ruban est destiné à orner les plus belles toilettes de Gosenberg.",
					"price": 20,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 8
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "PoetryCollection",
					"name": "Recueil de poésie",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"desc": "Qui ne sentirait pas son cœur chavirer à la lecture de cette œuvre ?",
					"type": "Trinket",
					"price": 15,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 2
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "SilkGlove",
					"name": "Gant en soie",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Des fanfreluches et une matière délicate pour souffleter un rival avec courtoisie.",
					"price": 15,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 7
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "SilverPin",
					"name": "Broche en argent",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"price": 15,
					"rarity": 0,
					"desc": "Petit bijou élégant et délicat qui conviendra à toute personne de bon goût.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 6
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "AnatomyBook",
					"name": "Manuel d'anatomie",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Tous ces corps écorchés donnent la nausée.",
					"price": 10,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 8
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "Lancet",
					"name": "Scalpel",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"desc": "Un instrument chirurgical qui a déjà servi.",
					"type": "Trinket",
					"price": 10,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 6
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "PreservationBowl",
					"name": "Bocal de préservation",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"desc": "Il y a quelque chose qui flotte dans ce bocal. Ça a l'air... humain.",
					"price": 15,
					"rarity": 0,
					"type": "Trinket",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 6
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "TeacherHourglass",
					"name": "Sablier de professeur",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Utilisé par les plus grands professeurs des plus prestigieuses Universités d’Alazar pour ne pas enseigner une seconde de trop à leurs étudiants.",
					"price": 15,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 8
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "Lorgnon",
					"name": "Lorgnon",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"price": 15,
					"rarity": 0,
					"desc": "Lorsqu'on regarde à travers ces verres, la vision est déformée. Bizarre.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 7
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "BirdCall",
					"name": "Appeau à oiseaux",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Lorsqu'on souffle dedans, l'instrument pousse un cri de canard.",
					"price": 10,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 7
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "HuntTrophy",
					"name": "Trophée de chasse",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"price": 10,
					"rarity": 0,
					"desc": "Ce blaireau d'Harag a été empaillé avec beaucoup de soin.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 7
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "HuntressDoll",
					"name": "Poupée de chasseresse",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Cette poupée de chiffon figure une chasseresse.",
					"price": 5,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 7
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "IronTorque",
					"name": "Torque en fer",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"desc": "Les extrémités du torque représentent des gueules de loups.",
					"type": "Trinket",
					"price": 10,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 7
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "ExcellentHairbrush",
					"name": "Brosse à cheveux formidable",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Vos cheveux sont doux et soyeux après être passés entre les poils de sanglier.",
					"price": 8,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 7
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "LapisLazuliBracelet",
					"name": "Bracelet de lapis lazuli",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"price": 15,
					"rarity": 0,
					"desc": "Les couleurs vives de ce bracelet en font un objet d'exception.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 7
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "BoatModel",
					"name": "Maquette de bateau",
					"weight": 0.5,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"price": 15,
					"rarity": 0,
					"desc": "Ce jouet en forme de bateau bélérois flotte sur l'eau.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 4,
						"y": 8
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "BoneLuckyCharm",
					"name": "Porte-bonheur en os",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"desc": "Un petit soleil en os qui sourit à pleines dents.",
					"rarity": 0,
					"price": 5,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 8
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "Logbook",
					"name": "Journal de bord",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"price": 10,
					"rarity": 0,
					"desc": "L'eau et le sel ont grignoté les pages et les mots de son propriétaire.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 3,
						"y": 2
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "SmallTapestry",
					"name": "Petite tapisserie",
					"weight": 0.5,
					"baseBonus": [],
					"props": {},
					"type": "Trinket",
					"price": 25,
					"rarity": 0,
					"desc": "Cette petite tapisserie personnalise le Givre sous la forme d’un gigantesque oiseau.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 18
					},
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "PreciousTapestry",
					"name": "Tapisserie précieuse",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 8
					},
					"type": "Trinket",
					"rarity": 2,
					"desc": "Cette tapisserie est très belle. Peut-être pas un chef d'oeuvre, mais la technique de l'artisan est admirable.",
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "PlayingCard",
					"name": "Cartes à jouer",
					"weight": 0.5,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 7
					},
					"type": "Trinket",
					"price": 10,
					"rarity": 0,
					"desc": "Les cartes sont réparties en quatre familles : la roue, la couronne, la tour et le cerf.",
					"group": 30,
					"iconeDone": true
				},
				{
					"id": "MerchantPen",
					"name": "Plume de marchand",
					"weight": 0.1,
					"baseBonus": [],
					"props": {},
					"group": 30,
					"type": "Trinket",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 6
					},
					"desc": "Cette plume est la meilleure alliée du marchand : aussi utile pour faire sa comptabilité que pour conclure des accords commerciaux.",
					"rarity": 0,
					"price": 20,
					"iconeDone": true
				},
				{
					"id": "RousteBall",
					"name": "Balle de Rouste",
					"weight": 0.5,
					"baseBonus": [],
					"props": {},
					"group": 30,
					"type": "Trinket",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 19
					},
					"desc": "Hors du terrain, cette balle en cuir ne vaut pas grand-chose.",
					"rarity": 0,
					"price": 15,
					"iconeDone": true
				},
				{
					"id": "ChewedRousteBall",
					"name": "Balle mâchouillée",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 30,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 7,
						"y": 6
					},
					"type": "Trinket",
					"price": 5,
					"rarity": 0,
					"desc": "Cette balle a passé un certain temps dans l'estomac d'un crocopork."
				},
				{
					"id": "ChampionStatuette",
					"name": "Statuette de champion",
					"weight": 1,
					"baseBonus": [],
					"props": {},
					"group": 30,
					"type": "Trinket",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 19
					},
					"desc": "Ce genre de statuette s'achète dans les gradins des arènes et permet au public de conserver un souvenir.",
					"rarity": 0,
					"price": 20,
					"iconeDone": true
				},
				{
					"id": "LydericLetter",
					"name": "Lettre d'amour",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 30,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 3,
						"y": 2
					},
					"type": "Trinket",
					"price": 5,
					"rarity": 0,
					"desc": "Une lettre mièvre écrite par une certaine Adelise à destination de Lyderic Ald Hoevendorp. Il y est question d'un rendez-vous Place des Arts."
				},
				{
					"id": "SinisterIngredient",
					"name": "Casse-tête",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 30,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 7
					},
					"type": "Trinket",
					"rarity": 0,
					"price": 10,
					"desc": "Il est assez vexant de savoir qu'à Alazar ce genre de puzzles est réservé aux enfants."
				},
				{
					"id": "Sulfur",
					"name": "Pipeau",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 30,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 8
					},
					"type": "Trinket",
					"rarity": 0,
					"price": 20,
					"desc": "Les bergers d'Alazar usent de cet instrument pour passer le temps dans les alpages."
				},
				{
					"id": "RuneGeneric",
					"name": "Runes & Codexes",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 14
					},
					"rarity": 2,
					"type": "Rune",
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneWar",
					"name": "Guerre",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 3,
							"shiftY": 1
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 14
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneCity",
					"name": "Ville",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 1,
							"shiftY": 3
						}
					},
					"type": "Rune",
					"rarity": 2,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 14
					},
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneBuilding",
					"name": "Bâtiment",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 0,
							"shiftY": 0
						}
					},
					"type": "Rune",
					"rarity": 2,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 14
					},
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneKnowledge",
					"name": "Savoir",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 0,
							"shiftY": 3
						}
					},
					"type": "Rune",
					"rarity": 2,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 14
					},
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneRiver",
					"name": "Fleuve",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 2,
							"shiftY": 2
						}
					},
					"type": "Rune",
					"rarity": 2,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 14
					},
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneMountain",
					"name": "Montagne",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 1,
							"shiftY": 0
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 15
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneForest",
					"name": "Campagne",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 1,
							"shiftY": 1
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 6,
						"y": 15
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneLake",
					"name": "Lac",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 0,
							"shiftY": 1
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 14
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneCelebration",
					"name": "Spectacle",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 3,
							"shiftY": 2
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 15
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneTravel",
					"name": "Voyage",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 0,
							"shiftY": 2
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 14
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneDeath",
					"name": "Mort",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 1,
							"shiftY": 2
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 15
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneDestruction",
					"name": "Destruction",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 3,
							"shiftY": 3
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 15
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneMystery",
					"name": "Mystère",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 2,
							"shiftY": 3
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 15
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneBad",
					"name": "Mauvais",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 2,
							"shiftY": 0
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 15
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneShore",
					"name": "Rivage",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 2,
							"shiftY": 1
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 15
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"desc": "",
					"iconeDone": true
				},
				{
					"id": "RunePeople",
					"name": "Peuple",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 0,
							"shiftY": 4
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 15
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneSea",
					"name": "Mer",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 3,
							"shiftY": 0
						}
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 14
					},
					"type": "Rune",
					"rarity": 2,
					"group": 31,
					"iconeDone": true
				},
				{
					"id": "RuneWealth",
					"name": "Richesse",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true,
						"custom": {
							"shiftX": 2,
							"shiftY": 4
						}
					},
					"iconeDone": true,
					"group": 31,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 8,
						"y": 6
					},
					"type": "Rune",
					"rarity": 2
				},
				{
					"id": "WarriorCodex1",
					"name": "Codex du Guerrier - Chapitre I",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneCity"
							},
							{
								"item": "RuneBuilding"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 16
					},
					"desc": "…. fut détruite par le feu. Tyr fut engloutie dans les flots. Manat fut ensevelie sous la montagne. C'est de cette ville dont venait Narsès.",
					"rarity": 2,
					"type": "Codex",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "WarriorCodex2",
					"name": "Codex du Guerrier - Chapitre II",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneCity"
							},
							{
								"item": "RuneBuilding"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 16
					},
					"rarity": 2,
					"desc": "Narsès mena le Peuple contre les monstres. (Phrase effacée) Les villes furent refondées mais celle de Narsès demeura détruite. … déposa son bouclier là où était Manat et renonça au combat.",
					"type": "Codex",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "WarriorCodex3",
					"name": "Codex du Guerrier - Chapitre III",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneCity"
							},
							{
								"item": "RuneBuilding"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 16
					},
					"rarity": 2,
					"desc": "Le Peuple enterra Narsès selon ses souhaits. D'un seul regard, son âme pourrait contempler sa ville et la mer.",
					"type": "Codex",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "BuilderCodex1",
					"name": "Codex de la Bâtisseuse - Chapitre I",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneCity"
							},
							{
								"item": "RuneBuilding"
							},
							{
								"item": "RuneKnowledge"
							}
						]
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Je me suis endormi à Canope et réveillé à Siefrid mais les villes se ressemblaient tant que j’ai cru ne jamais être sorti du port ! C’est pitié de voir tous les jeunes bâtisseurs copier le travail d’Erkeshet.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 16
					},
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "BuilderCodex2",
					"name": "Codex de la Bâtisseuse - Chapitre II",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneMountain"
							},
							{
								"item": "RuneBuilding"
							},
							{
								"item": "RuneCity"
							}
						]
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "L’épicentre de ce phénomène est sans conteste Teeltren. Depuis qu’Erkeshet a redessiné la ville, personne n’a osé y bouger une pierre. On croirait les lieux figés dans le temps.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 16
					},
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "BuilderCodex3",
					"name": "Codex de la Bâtisseuse - Chapitre III",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneCelebration"
							},
							{
								"item": "RuneLake"
							},
							{
								"item": "RuneRiver"
							}
						]
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "La ville profite aussi, non sans un certain cynisme, de la renommée de la Bâtisseuse. Il faut voir ses gens massés sur la presqu’île du lac, descendre dans les sous-sols pour admirer la bouche ouverte, et les poches vides, une simple bédane !",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 16
					},
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "FightersCodex1",
					"name": "Codex des Combattants - Chapitre I",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneCity"
							},
							{
								"item": "RuneCelebration"
							},
							{
								"item": "RuneBad"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 16
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Apprenez, ami lecteur, que je ne m’insurge pas sans raison contre la vulgarité des arènes. Elles sont, je ne crains pas de l’affirmer, non pas l’exutoire mais la source de notre sauvagerie. Ces spectacles ne conviennent pas à un peuple qui se targue de civilisation.",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "FightersCodex2",
					"name": "Codex des Combattants - Chapitre II",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneTravel"
							},
							{
								"item": "RuneForest"
							},
							{
								"item": "RuneKnowledge"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 16
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Puisque mes chroniques le requièrent et que pour la Connaissance je ne renoncerai à aucune extrémité – dût-elle me coûter personnellement -, je me suis rendu à l’arène d’Horoun et Narsès. Quel spectacle ! Le bâtiment, au milieu d’une campagne généreuse et de vignes centenaires, surgit tel un furoncle…",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "FightersCodex3",
					"name": "Codex des Combattants - Chapitre III",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneRiver"
							},
							{
								"item": "RuneBuilding"
							},
							{
								"item": "RuneMountain"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 16
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "… aux abords de l’arène, les clameurs d’une foule hystérique couvrent tout autre bruit : du chant délicat des oiseaux à celui, pourtant puissant, des deux rivières qui l’enserrent. Quant à l’entrée du bâtiment, elle défigure une petite falaise de calcaire qui sans cela, aurait pu être tout à fait bucolique…",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "ArtistCodex1",
					"name": "Codex de l'Artiste - Chapitre I",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneCelebration"
							},
							{
								"item": "RuneCity"
							},
							{
								"item": "RuneBuilding"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 17
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Cette nuit, je fus tiré de mon sommeil par un vacarme qui faisait trembler mes fenêtres. En me rendant au jardin, je vis que l’on tirait dans la ville des feux d’artifice. Le spectacle ainsi offert compensa en partie la contrariété d’un réveil brutal.",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "ArtistCodex2",
					"name": "Codex de l'Artiste - Chapitre II",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneLake"
							},
							{
								"item": "RuneMountain"
							},
							{
								"item": "RuneDestruction"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 17
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Qui d’autre qu’un artiste eût pu concevoir une chose aussi belle ? Il est dit que ce spectacle est d’autant plus appréciable lorsqu’il se joue au-dessus d’un lac, ainsi qu’il a été imaginé à l’origine par Dagan dans ses montagnes.",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "ArtistCodex3",
					"name": "Codex de l'Artiste - Chapitre III",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneShore"
							},
							{
								"item": "RuneTravel"
							},
							{
								"item": "RuneDestruction"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 17
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "L’artiste avait pour habitude de tirer ses feux d’artifice depuis l’autre côté du lac, face à la ville d’Amessa qui occupe encore aujourd’hui, une enclave rocheuse. Pour éviter tout accident avec sa poudre inflammable, c’est aussi là qu’il installa son atelier. J’espère m’y rendre prochainement…",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "ExploratorCodex1",
					"name": "Codex de l'Explorateur - Chapitre I",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneTravel"
							},
							{
								"item": "RuneMystery"
							},
							{
								"item": "RuneKnowledge"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 18
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Malgré de nombreuses années à sillonner le monde et arpenter les archives de nos cités, je crains de ne jamais avoir trouvé de sources fiables concernant Behedite. Ce que nous savons du fondateur de notre civilisation est aussi mystérieux qu’embrouillé de légendes.",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "ExploratorCodex2",
					"name": "Codex de l'Explorateur - Chapitre II",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneBuilding"
							},
							{
								"item": "RuneBad"
							},
							{
								"item": "RuneDeath"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 18
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Comment être certain qu’il ait seulement un jour existé ? Son tombeau lui-même a été érigé mille ans après sa mort estimée. Quant au compas que la ville de Lahearta protège comme une relique, est-on bien sûr qu’il lui appartenait ?",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "ExploratorCodex3",
					"name": "Codex de l'Explorateur - Chapitre III",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneRiver"
							},
							{
								"item": "RuneBad"
							},
							{
								"item": "RuneTravel"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 18
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Je n’ai pu résister à contempler l’objet de mes yeux : j’ai voyagé jusqu’à ce sanctuaire, installé au nord d’une île fluviale. Je suis descendu dans la crypte avec les fidèles. Mais tout ce que j’y ai vu, c’est un compas semblable à celui qu'usaient nos grand-parents. Quel aurait été son utilité lorsque Behedite voyageait dans…",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "GeneralCodex1",
					"name": "Codex de la Générale - Chapitre I",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RunePeople"
							},
							{
								"item": "RuneWar"
							},
							{
								"item": "RuneCity"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 19
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Malgré les protestations de la populace et les mises en garde des savants, la Générale précipita la guerre entre Canope et Siefrid. Les armes dont nous disposions - le pensait-elle sincèrement ? - devaient nous offrir une victoire facile. Il n’en fut rien.",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "GeneralCodex2",
					"name": "Codex de la Générale - Chapitre II",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneDestruction"
							},
							{
								"item": "RuneForest"
							},
							{
								"item": "RuneCelebration"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 19
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "La destruction mutuelle de nos patries se jouait de notre vivant. Quel être peut imaginer un tel tourment ? ... ce que nos pères avaient bâti, ce que nos mères avaient construit, les rues et les champs que nous chérissions enfants, tout n’est plus que ruines et déserts stériles.",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "GeneralCodex3",
					"name": "Codex de la Générale - Chapitre III",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneDeath"
							},
							{
								"item": "RuneSea"
							},
							{
								"item": "RuneShore"
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 19
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "… comme pour punir Atless de ses ambitions, la mort l’emporta loin de son Tombeau, séparée des honneurs par une mer bouillonnante de navires de guerre. Que son corps pourrisse loin des vivants, dans les débris du port de Tyssa, au milieu des relents putrides de la destruction.",
					"group": 32,
					"iconeDone": true
				},
				{
					"id": "MerchantCodex1",
					"name": "Codex du Marchand - Chapitre I",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneWealth"
							},
							{
								"item": "RuneDeath"
							},
							{
								"item": "RuneKnowledge"
							}
						]
					},
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 3
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "<i>Riche comme Nepti</i>, <i>fils de Nepti</i>… le Roi-Marchand n’est plus guère mentionné que dans les expressions populaires. Nos contemporains semblent avoir oublié que Nepti, avant d’être assassiné par son propre fils, n’était pas seulement l’homme le plus riche du monde, c’était aussi un visionnaire."
				},
				{
					"id": "MerchantCodex2",
					"name": "Codex du Marchand - Chapitre II",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RuneSea"
							},
							{
								"item": "RuneCity"
							},
							{
								"item": "RuneCelebration"
							}
						]
					},
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 3,
						"y": 3
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Il suffit d’avoir contempler le port de Drometh une fois, pour s’en rendre compte. Temple du commerce, certes, mais prouesse d’ingéniosité, surtout ! Ce port qui ne ressemble à nul autre, qui transforma une médiocre presqu’île en région prospère, aurait fait mériter à son créateur une plus digne postérité."
				},
				{
					"id": "MerchantCodex3",
					"name": "Codex du Marchand - Chapitre III",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItems": [
							{
								"item": "RunePeople"
							},
							{
								"item": "RuneLake"
							},
							{
								"item": "RuneDestruction"
							}
						]
					},
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 4,
						"y": 3
					},
					"type": "Codex",
					"rarity": 2,
					"desc": "Cette ingratitude manifeste trouve peut-être ses racines dans ce que le Roi-Marchand refusa à ses héritiers. Les chroniques qui relatent les derniers instants de Nepti, font mention d’un [Objet], jeté dans les profondeurs du bassin au sud du port de Drometh."
				},
				{
					"id": "Corpse",
					"name": "Restes humains",
					"weight": 10,
					"props": {
						"foodQuantity": 0
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 8
					},
					"desc": "Des restes probablement inutiles. Quoique...",
					"price": 0,
					"baseBonus": [],
					"type": "Corpse",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "AllyCorpse",
					"name": "Corps de [NAME]",
					"weight": 10,
					"baseBonus": [],
					"props": {
						"foodQuantity": 0
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 12,
						"y": 7
					},
					"type": "Corpse",
					"price": 0,
					"desc": "Le corps de [NAME]. Vous pouvez l'enterrer où vous le souhaitez.",
					"group": 33
				},
				{
					"id": "AnimalAllyCorpse",
					"name": "",
					"weight": 10,
					"baseBonus": [],
					"props": {},
					"iconeDone": true,
					"group": 33,
					"type": "Corpse",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 12,
						"y": 8
					},
					"price": 0
				},
				{
					"id": "PigCorpse",
					"name": "Carcasse de cochon",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"foodQuantity": 0
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 3
					},
					"type": "Meat",
					"desc": "Un reste de cochon nauséabond.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "AnimalCorpse",
					"name": "Carcasse",
					"weight": 2,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 6
					},
					"price": 0,
					"desc": "Des restes animaux.",
					"type": "Meat",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "SpectralAnimalCorpse",
					"name": "Carcasse Fantôme",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"foodQuantity": 0
					},
					"iconeDone": true,
					"group": 33,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 5,
						"y": 2
					},
					"type": "Meat",
					"price": 1,
					"desc": "Des restes d'animaux fantômes."
				},
				{
					"id": "Pork",
					"name": "Porc",
					"weight": 1,
					"props": {
						"foodQuantity": 4
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 1
					},
					"price": 6,
					"desc": "Une belle pièce de porc grasse et charnue.",
					"baseBonus": [],
					"rarity": 0,
					"type": "Meat",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Crocopork",
					"name": "Crocopork",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"foodQuantity": 5
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 5,
						"y": 0
					},
					"type": "Meat",
					"price": 6,
					"rarity": 0,
					"desc": "Le crocopork, bien que très nourrissant, ne présente que peu d'intérêt pour la cuisine.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Sheep",
					"name": "Mouton",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"foodQuantity": 4
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 1
					},
					"type": "Meat",
					"price": 6,
					"rarity": 0,
					"desc": "Rien qu'à l'odeur, cette viande est reconnaissable entre mille.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Chicken",
					"name": "Poulet",
					"weight": 1,
					"props": {
						"foodQuantity": 4
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 0
					},
					"price": 6,
					"baseBonus": [],
					"rarity": 0,
					"type": "Meat",
					"desc": "La tête du poulet pend, inerte, au bout d'un cou flasque.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Wolf",
					"name": "Loup",
					"weight": 1,
					"props": {
						"foodQuantity": 4
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 1
					},
					"price": 6,
					"baseBonus": [],
					"rarity": 0,
					"type": "Meat",
					"desc": "L'odeur très forte de la viande de loup met l'eau à la bouche.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "GameMeat",
					"name": "Gibier",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"foodQuantity": 4,
						"trappedQuantity": 2
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 1
					},
					"type": "Meat",
					"price": 6,
					"rarity": 0,
					"desc": "Des morceaux de gibier débités en petits tronçons.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Bear",
					"name": "Ours",
					"weight": 1.5,
					"baseBonus": [],
					"props": {
						"foodQuantity": 6
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 0
					},
					"type": "Meat",
					"price": 9,
					"rarity": 0,
					"desc": "À Harag, manger de l'ours aiderait à soigner les maux de l'âme.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Rat",
					"name": "Rat",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"trappedQuantity": 2
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 1
					},
					"type": "Meat",
					"price": 3,
					"rarity": 0,
					"desc": "Un met assez peu ragoûtant, il faut l'avouer.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "DriedMeat",
					"name": "Viande séchée",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"noConverter": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 8
					},
					"type": "Meat",
					"price": 1,
					"rarity": 0,
					"desc": "Les vrais amateurs de viande séchée la dégustent en fines tranches.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Carp",
					"name": "Carpe",
					"weight": 1,
					"props": {
						"foodQuantity": 4
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 1
					},
					"type": "FreshwaterFish",
					"price": 6,
					"baseBonus": [],
					"rarity": 0,
					"desc": "Un poisson aux écailles luisantes.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Eel",
					"name": "Anguille",
					"weight": 1,
					"props": {
						"foodQuantity": 4
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 11,
						"y": 1
					},
					"type": "Fish",
					"price": 6,
					"baseBonus": [],
					"rarity": 0,
					"desc": "La fraîcheur de cette anguille est avérée.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Perch",
					"name": "Perche",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"foodQuantity": 4
					},
					"group": 33,
					"type": "FreshwaterFish",
					"price": 6,
					"rarity": 0,
					"desc": "Les rayures sur son dos lui permettent de se camoufler dans les algues.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 8
					},
					"iconeDone": true
				},
				{
					"id": "Pike",
					"name": "Brochet",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"foodQuantity": 4
					},
					"group": 33,
					"type": "FreshwaterFish",
					"price": 6,
					"rarity": 0,
					"desc": "Il faut être prudent lorsqu'on chasse ce carnassier, bien capable de couper les doigts d'un pêcheur maladroit.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 10
					},
					"iconeDone": true
				},
				{
					"id": "Bass",
					"name": "Bar",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"foodQuantity": 4
					},
					"group": 33,
					"type": "Fish",
					"price": 6,
					"rarity": 0,
					"desc": "Sa chair est succulente et constitue un met de choix.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 8
					},
					"iconeDone": true
				},
				{
					"id": "Sardine",
					"name": "Sardine",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"foodQuantity": 4
					},
					"group": 33,
					"desc": "Une ballade populaire raconte l'histoire d'un grand guerrier terrassé par l'arrête d'une sardine restée coincée dans sa gorge.",
					"type": "Fish",
					"price": 6,
					"rarity": 0,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 8
					},
					"iconeDone": true
				},
				{
					"id": "DriedFish",
					"name": "Poisson séché",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"noConverter": true
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 8
					},
					"type": "PreparedFish",
					"price": 1,
					"rarity": 0,
					"desc": "Les pêcheurs belerois sont notamment reconnus pour leur méthode de séchage du poisson à l'air libre.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Apple",
					"name": "Pommes",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 3
					},
					"price": 3,
					"type": "Fruits",
					"props": {
						"foodQuantity": 2,
						"startQuantity": 8,
						"startQuantityDifficultyBonus": [
							{
								"qty": 8,
								"difficulty": 0
							},
							{
								"qty": 4,
								"difficulty": 1
							},
							{
								"qty": 0,
								"difficulty": 2
							}
						]
					},
					"weight": 0.5,
					"baseBonus": [],
					"rarity": 0,
					"desc": "Des pommes croquantes et juteuses.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Grape",
					"name": "Raisin",
					"weight": 0.5,
					"props": {
						"foodQuantity": 2
					},
					"type": "Fruits",
					"price": 3,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 0
					},
					"baseBonus": [],
					"rarity": 0,
					"desc": "Un raisin doux et sucré.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Cherry",
					"name": "Cerises",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"foodQuantity": 2
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 0
					},
					"type": "Fruits",
					"price": 3,
					"rarity": 0,
					"desc": "Des cerises rouges à la chair fine et sucrée.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Blueberries",
					"name": "Myrtilles",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"foodQuantity": 2,
						"disableLoot": true
					},
					"iconeDone": true,
					"group": 33,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 2,
						"y": 7
					},
					"type": "Fruits",
					"price": 3,
					"rarity": 0,
					"desc": "Ces baies sauvages sont assez peu goûtées par les habitants des Cinq Royaumes qui préfèrent les laisser aux animaux sauvages."
				},
				{
					"id": "Cabbage",
					"name": "Chou",
					"weight": 0.5,
					"props": {
						"foodQuantity": 2
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 1
					},
					"type": "Vegetables",
					"price": 3,
					"baseBonus": [],
					"rarity": 0,
					"desc": "Les feuilles de ce chou sont appétissantes.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Beans",
					"name": "Haricots",
					"weight": 1,
					"baseBonus": [],
					"props": {
						"foodQuantity": 4
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 0
					},
					"type": "Vegetables",
					"price": 6,
					"rarity": 0,
					"desc": "Bourratifs et nourrissants, les haricots mettent de l'ambiance autour d'un feu de camp.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Mushrooms",
					"name": "Champignons",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"foodQuantity": 2
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 0
					},
					"type": "Vegetables",
					"price": 3,
					"rarity": 0,
					"desc": "Des petits bolets appétissants.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Milk",
					"name": "Lait",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"foodQuantity": 2
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 1
					},
					"type": "Food",
					"price": 3,
					"desc": "Peu onéreux, le lait permet d'ajouter du liant à vos plats.",
					"rarity": 0,
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Cheese",
					"name": "Fromage",
					"weight": 0.5,
					"props": {
						"foodQuantity": 2
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 3
					},
					"type": "Food",
					"price": 3,
					"baseBonus": [],
					"rarity": 0,
					"desc": "Un fromage dont l'odeur ne laisse personne indifférent.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Beer",
					"name": "Bière",
					"weight": 0.5,
					"props": {
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 4
					},
					"type": "Alcohol",
					"price": 4,
					"baseBonus": [],
					"rarity": 0,
					"desc": "Une bière brassée, fraîche et ambrée.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Wine",
					"name": "Vin",
					"weight": 0.5,
					"props": {
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 2
					},
					"type": "Alcohol",
					"price": 4,
					"baseBonus": [],
					"rarity": 0,
					"desc": "Un vin plutôt tanique, soyeux en bouche.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Brandy",
					"name": "Eau-de-vie",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 2
					},
					"type": "Alcohol",
					"price": 3,
					"rarity": 0,
					"desc": "Un alcool fort qui pourrait servir à déboucher les latrines.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "EdoranWine",
					"name": "Vin d'Edoran",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 2
					},
					"type": "Alcohol",
					"price": 3,
					"rarity": 1,
					"desc": "Du vinaigre qui prétend être du vin.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "GosenbergWine",
					"name": "Vin de Gosenberg",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 2
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 2
					},
					"type": "Alcohol",
					"price": 8,
					"rarity": 1,
					"desc": "Réputé le meilleur vin du continent, il est sans conteste le plus cher.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Mead",
					"name": "Hydromel",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 2
							}
						]
					},
					"type": "Alcohol",
					"rarity": 1,
					"price": 8,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 2
					},
					"desc": "Le met préféré des dieux, s'il en est.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Cider",
					"name": "Cidre",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 1
							}
						]
					},
					"type": "Alcohol",
					"rarity": 0,
					"price": 3,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 7
					},
					"desc": "Habituellement cantonné aux consommations occasionnelles, le cidre se boit depuis quelques années en apéritif à Gosenberg.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Honey",
					"name": "Miel",
					"weight": 0.3,
					"baseBonus": [],
					"props": {
						"foodQuantity": 2,
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 0
					},
					"type": "Food",
					"price": 5,
					"desc": "Un miel doré, délicieux et onctueux.",
					"rarity": 1,
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Bread",
					"name": "Pain",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 2
					},
					"type": "Food",
					"price": 5,
					"props": {
						"foodQuantity": 4,
						"startQuantity": 8,
						"startQuantityDifficultyBonus": [
							{
								"qty": 8,
								"difficulty": 0
							},
							{
								"qty": 4,
								"difficulty": 1
							},
							{
								"qty": 0,
								"difficulty": 2
							}
						]
					},
					"weight": 0.4,
					"baseBonus": [],
					"desc": "Un pain à la mie généreuse.",
					"rarity": 1,
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "BraisedChicken",
					"name": "Poulet braisé",
					"weight": 0.7,
					"props": {
						"foodQuantity": 6
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 0
					},
					"type": "CookedMeat",
					"price": 10,
					"baseBonus": [],
					"rarity": 1,
					"desc": "Un poulet légèrement braisé et suintant de graisse.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "GrilledPork",
					"name": "Porc grillé",
					"weight": 0.7,
					"props": {
						"foodQuantity": 6
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 7
					},
					"type": "CookedMeat",
					"price": 10,
					"baseBonus": [],
					"rarity": 1,
					"desc": "Quelques belles pièces de porc grillées à souhait.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "WolfSausages",
					"name": "Saucisses de loup",
					"weight": 0.7,
					"baseBonus": [],
					"props": {
						"foodQuantity": 6
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 3
					},
					"type": "CookedMeat",
					"price": 10,
					"rarity": 1,
					"desc": "Des saucisses de loup au goût prononcé.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "MediumCookedSheep",
					"name": "Mouton cuit à point",
					"weight": 0.7,
					"baseBonus": [],
					"props": {
						"foodQuantity": 6
					},
					"type": "CookedMeat",
					"price": 10,
					"rarity": 1,
					"desc": "Le mouton cuit à même le charbon est l'une des spécialités d'Edoran.",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 6
					},
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "GameSkewers",
					"name": "Brochettes de gibier",
					"weight": 0.7,
					"baseBonus": [],
					"props": {
						"foodQuantity": 6
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 17,
						"y": 7
					},
					"type": "CookedMeat",
					"price": 10,
					"rarity": 1,
					"desc": "Des brochettes de gibier parfaitement cuites.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "GrilledCarp",
					"name": "Carpe grillée",
					"weight": 0.7,
					"props": {
						"foodQuantity": 6
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 8
					},
					"type": "CookedFish",
					"price": 10,
					"baseBonus": [],
					"rarity": 1,
					"desc": "Une carpe grillée au feu de bois.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "BoiledEel",
					"name": "Anguille bouillie",
					"weight": 0.7,
					"props": {
						"foodQuantity": 6
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 7
					},
					"type": "CookedFish",
					"price": 10,
					"baseBonus": [],
					"rarity": 1,
					"desc": "Une anguille bouillie, plat favori des pêcheurs bélérois.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "RostedBass",
					"name": "Bar rôti",
					"weight": 0.7,
					"baseBonus": [],
					"props": {
						"foodQuantity": 6
					},
					"group": 33,
					"type": "CookedFish",
					"price": 10,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 7
					},
					"rarity": 1,
					"desc": "Un plat simple mais toujours très apprécié.",
					"iconeDone": true
				},
				{
					"id": "SmokedSardine",
					"name": "Sardine fumée",
					"weight": 0.7,
					"baseBonus": [],
					"props": {
						"foodQuantity": 6
					},
					"group": 33,
					"price": 10,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 9
					},
					"type": "CookedFish",
					"desc": "Sans doute le casse-croûte le plus courant de Gosenberg.",
					"iconeDone": true
				},
				{
					"id": "SoupPike",
					"name": "Potage de brochet",
					"weight": 0.7,
					"baseBonus": [],
					"props": {
						"foodQuantity": 6
					},
					"group": 33,
					"price": 10,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 4,
						"width": 2
					},
					"type": "CookedFish",
					"desc": "Il existe autant de façon de cuisiner le potage de brochet qu'il y a de familles à Vertruse.",
					"iconeDone": true
				},
				{
					"id": "BrothPerch",
					"name": "Perche en bouillon",
					"weight": 0.7,
					"baseBonus": [],
					"props": {
						"foodQuantity": 6
					},
					"group": 33,
					"price": 10,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 11,
						"y": 4,
						"width": 2
					},
					"type": "CookedFish",
					"desc": "Le bouillon doit être particulièrement aromatisé pour réussir à donner du goût à un poisson qui en a peu.",
					"iconeDone": true
				},
				{
					"id": "FakeMedecine",
					"name": "Homéopastilles",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"foodQuantity": 2,
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 33,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 1,
						"y": 3
					},
					"type": "CookedMeal",
					"price": 10,
					"rarity": 1,
					"desc": "Vendus comme remède à la Peste par des charlatans, ces petits granules sucrés constituent un encas réconfortant."
				},
				{
					"id": "BlueberriesTisane",
					"name": "Tisane à la myrtille",
					"weight": 0.4,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"foodQuantity": 6,
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 33,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 1,
						"y": 7
					},
					"type": "Tisane",
					"price": 8,
					"rarity": 1,
					"desc": "Passé un certain âge, il est de coutume de se mettre à la tisane à la myrtille."
				},
				{
					"id": "MintTisane",
					"name": "Infusion de chanvre",
					"weight": 0.5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"foodQuantity": 6,
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 33,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 0,
						"y": 7
					},
					"type": "Tisane",
					"price": 9,
					"rarity": 1,
					"desc": "Excellent remède à la gueule de bois, certains taverniers en servent même tôt le matin."
				},
				{
					"id": "AppleMatefaim",
					"name": "Matefaim aux pommes",
					"weight": 1.9,
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"value": 30,
								"bonus": "Tiredness"
							},
							{
								"bonus": "Tiredness",
								"value": 45,
								"quality": 1
							}
						]
					},
					"type": "CookedMeal",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 9,
						"width": 2
					},
					"baseBonus": [],
					"rarity": 2,
					"price": 30,
					"desc": "Les pommes fondantes dégagent une agréable odeur caramélisée.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "EelBrouet",
					"name": "Brouet d'anguille",
					"weight": 2,
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "Dexterity",
								"value": 15
							},
							{
								"bonus": "Dexterity",
								"value": 20,
								"quality": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 15,
						"y": 3,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 31,
					"baseBonus": [],
					"rarity": 2,
					"desc": "L'aspect grossier de ce brouet présage un repas peu ragoûtant quoique nourrissant.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "SheepHericoq",
					"name": "Héricoq de mouton",
					"weight": 1.8,
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "Strength",
								"value": 15
							},
							{
								"bonus": "Strength",
								"value": 20,
								"quality": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 3,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 29,
					"baseBonus": [],
					"rarity": 2,
					"desc": "Un délicieux ragoût de mouton cuit lentement plusieurs heures.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "StuffedCabbage",
					"name": "Chou farci",
					"weight": 2,
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "Critical",
								"value": 10
							},
							{
								"bonus": "Critical",
								"value": 15,
								"quality": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 18,
						"y": 4,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 31,
					"baseBonus": [],
					"rarity": 2,
					"desc": "Quelques feuilles de chou englobent une farce de poulet appétissante.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "TrapperFondue",
					"name": "Fondue du trappeur",
					"weight": 2,
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "WalkSpeed",
								"value": 10
							},
							{
								"bonus": "WalkSpeed",
								"value": 15,
								"quality": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 4,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 31,
					"baseBonus": [],
					"rarity": 2,
					"desc": "Le fromage coulant côtoie le gibier faisandé dans cette préparation typique des montagnes d'Alazar.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "SurfAndTurfSkewer",
					"name": "Terre et mer à la broche",
					"weight": 2,
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "Constitution",
								"value": 15
							},
							{
								"bonus": "Constitution",
								"quality": 1,
								"value": 20
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 4,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 31,
					"baseBonus": [],
					"rarity": 2,
					"desc": "La parfaite alliance des produits de la terre et de la mer embrochés sur des pics en noyer.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "CandiedFruits",
					"name": "Fruits confits",
					"weight": 1.7,
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 2
							},
							{
								"bonus": "Happy",
								"value": 3,
								"quality": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 14,
						"y": 5,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 30,
					"baseBonus": [],
					"rarity": 2,
					"desc": "Quelques fruits cuits plusieurs fois dans un mélange de miel et d'épices.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "Oatmeal",
					"name": "Porridge",
					"weight": 1.4,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "Movement",
								"value": 1
							},
							{
								"bonus": "Movement",
								"value": 2,
								"quality": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 16,
						"y": 5,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 29,
					"rarity": 2,
					"desc": "Un peu de lait, de miel et beaucoup d'avoine pour un repas consistant.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "PorkStew",
					"name": "Ragoût de porc",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "ActionPoint",
								"value": 1
							},
							{
								"bonus": "ActionPoint",
								"value": 2,
								"quality": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 12,
						"y": 5,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 31,
					"rarity": 2,
					"desc": "Spécialité de l'Edoran rural, son odeur éloigne les bêtes sauvages.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "BeerBastedWolfRibs",
					"name": "Côtes de loup à la bière",
					"weight": 1.7,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "CritDmg",
								"value": 20
							},
							{
								"bonus": "CritDmg",
								"value": 30,
								"quality": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 13,
						"y": 7,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 29,
					"rarity": 2,
					"desc": "Tout le secret est dans la marinade.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "MintPork",
					"name": "Saucisson aux graines",
					"weight": 1.8,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "TradeGoodsPriceBonus",
								"value": 10
							},
							{
								"bonus": "TradeGoodsPriceBonus",
								"value": 15,
								"quality": 1
							}
						]
					},
					"group": 33,
					"type": "CookedMeal",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 7
					},
					"desc": "L'apport des graines de chanvre fait passer ce saucisson à un tout autre niveau.",
					"price": 29,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "RatStew",
					"name": "Rat-Goût",
					"weight": 1.8,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "SurprisingFighter",
								"value": 1
							},
							{
								"bonus": "SurprisingFighter",
								"value": 1,
								"quality": 1
							},
							{
								"bonus": "Critical",
								"value": 10,
								"quality": 1
							}
						]
					},
					"group": 33,
					"type": "CookedMeal",
					"desc": "Ce plat peu ragoûtant aura le mérite de remplir les estomacs les plus affamés.",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 7,
						"y": 2,
						"width": 2
					},
					"price": 29,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "MeadPike",
					"name": "Brochet à l'hydromel",
					"weight": 1.6,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "RunSpeed",
								"value": 10
							},
							{
								"bonus": "RunSpeed",
								"value": 15,
								"quality": 1
							}
						]
					},
					"group": 33,
					"type": "CookedMeal",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 13,
						"y": 2,
						"width": 2
					},
					"desc": "Ce plat a fait, pendant des années, la réputation de la table des Armeman.",
					"price": 31,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "HerbalBass",
					"name": "Bar mariné à l'huile de chanvre",
					"weight": 1.8,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "GatherBonus",
								"value": 25
							},
							{
								"bonus": "GatherBonus",
								"value": 40,
								"quality": 1
							}
						]
					},
					"group": 33,
					"type": "CookedMeal",
					"desc": "La marinade donne au poisson une étrange couleur verte.",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 7,
						"y": 7,
						"width": 2
					},
					"price": 29,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "MushroomSardine",
					"name": "Sardine aux champignons",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "AnimalsDmg",
								"value": 10
							},
							{
								"bonus": "AnimalsDmg",
								"value": 15,
								"quality": 1
							}
						]
					},
					"group": 33,
					"type": "CookedMeal",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 7,
						"y": 5,
						"width": 2
					},
					"price": 31,
					"rarity": 2,
					"desc": "Ce mélange étrange est la preuve, s'il en fallait, que les habitants de Grinmeer sont plein d'inventivité.",
					"iconeDone": true
				},
				{
					"id": "PerchCabbage",
					"name": "Perche au chou",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "RunStamina",
								"value": 10
							},
							{
								"bonus": "RunStamina",
								"value": 15,
								"quality": 1
							}
						]
					},
					"group": 33,
					"type": "CookedMeal",
					"desc": "Malgré son odeur persistante, la perche au chou s'est imposée comme l'un des plats préférés des habitants de Tiltrën.",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 4,
						"width": 2
					},
					"price": 31,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "FlamedCrocopork",
					"name": "Crocopork flambé",
					"weight": 1.8,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "FoodReduction",
								"value": 2
							},
							{
								"bonus": "FoodReduction",
								"value": 3,
								"quality": 1
							}
						]
					},
					"group": 33,
					"type": "CookedMeal",
					"desc": "Le goût vaseux de la viande de crocopork est presque camouflé par le cidre.",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 3,
						"width": 2
					},
					"price": 29,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "MintCake",
					"name": "Biscuits aux graines",
					"weight": 1.7,
					"baseBonus": [],
					"props": {
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "Influenceur",
								"value": 15
							},
							{
								"bonus": "Influenceur",
								"value": 20,
								"quality": 1
							}
						]
					},
					"group": 33,
					"type": "CookedMeal",
					"desc": "Prétendument faciles à transporter, ils finissent souvent en miettes dans les poches de voyageurs.",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 8
					},
					"price": 30,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "HumanMixture",
					"name": "Velouté de voyageurs",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"disableLoot": true,
						"bonuses": [
							{
								"bonus": "InfluenceGainAmbushFight",
								"value": 20
							},
							{
								"bonus": "XpGainAmbushFight",
								"value": 20
							},
							{
								"bonus": "InfluenceGainAmbushFight",
								"value": 30,
								"quality": 1
							},
							{
								"bonus": "XpGainAmbushFight",
								"value": 30,
								"quality": 1
							}
						]
					},
					"group": 33,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 8,
						"y": 8
					},
					"price": 25,
					"rarity": 2,
					"type": "CookedMeal",
					"iconeDone": true,
					"desc": "Délicieux et économique."
				},
				{
					"id": "CheeseSheep",
					"name": "Mouton gratiné",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "SnowSpeedBonus",
								"value": 20
							},
							{
								"bonus": "RunSnowWanted",
								"value": 20
							},
							{
								"bonus": "Happy",
								"value": 1,
								"quality": 1
							}
						]
					},
					"iconeDone": true,
					"group": 33,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 6,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 31,
					"rarity": 2,
					"desc": "La douceur du fromage atténue la puissance du mouton."
				},
				{
					"id": "BeanBears",
					"name": "Potée montagnarde",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "GoldGainFightSnow",
								"value": 5
							},
							{
								"bonus": "InfluenceGainFightSnow",
								"value": 5
							},
							{
								"bonus": "Happy",
								"value": 1,
								"quality": 1
							}
						]
					},
					"iconeDone": true,
					"group": 33,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 7,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 31,
					"rarity": 2,
					"desc": "Un plat lourd et copieux qui tient au corps et réchauffe."
				},
				{
					"id": "BlueberriesChicken",
					"name": "Rôti en sauce bleue",
					"weight": 1.7,
					"baseBonus": [],
					"props": {
						"feature": "Alazar1_Update",
						"foodQuantity": 14,
						"bonuses": [
							{
								"bonus": "AnimalAggro"
							},
							{
								"bonus": "AnimalsDmg",
								"quality": 1,
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 33,
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 8,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 30,
					"rarity": 2,
					"desc": "Un poulet parfaitement rôti, arrosé d'une onctueuse sauce aux myrtilles."
				},
				{
					"id": "TiltrenFeast",
					"name": "Le choc des cultures",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"foodQuantity": 40,
						"bonuses": [
							{
								"bonus": "Strength",
								"value": 20
							},
							{
								"bonus": "Tiredness",
								"value": 35
							},
							{
								"bonus": "Happy",
								"value": 1
							},
							{
								"bonus": "Strength",
								"quality": 1,
								"value": 25
							},
							{
								"bonus": "Tiredness",
								"quality": 1,
								"value": 50
							},
							{
								"bonus": "Happy",
								"quality": 1,
								"value": 2
							}
						]
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 7,
						"y": 1,
						"width": 2
					},
					"type": "CookedMeal",
					"price": 100,
					"rarity": 3,
					"desc": "Un repas complet typique de la région de Tiltrën préparé à l'image de ses habitants : un subtil mélange de force et de douceur.",
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "EdoranFeast",
					"name": "Le réconfort paysan",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"foodQuantity": 40,
						"bonuses": [
							{
								"bonus": "ActionPoint",
								"value": 2
							},
							{
								"bonus": "Movement",
								"value": 1
							},
							{
								"bonus": "Happy",
								"value": 1
							},
							{
								"bonus": "ActionPoint",
								"quality": 1,
								"value": 3
							},
							{
								"bonus": "Movement",
								"quality": 1,
								"value": 2
							},
							{
								"bonus": "Happy",
								"quality": 1,
								"value": 2
							}
						]
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 9,
						"y": 1,
						"width": 2
					},
					"type": "CookedMeal",
					"rarity": 3,
					"desc": "Une sélection de produits d'Edoran exclusivement concoctés pour bénéficier autant au corps qu'à l'âme.",
					"price": 99,
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "GosenbergFeast",
					"name": "Le délice des coteaux",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"foodQuantity": 40,
						"bonuses": [
							{
								"bonus": "Dexterity",
								"value": 20
							},
							{
								"bonus": "Tiredness",
								"value": 35
							},
							{
								"bonus": "Happy",
								"value": 1
							},
							{
								"bonus": "Dexterity",
								"quality": 1,
								"value": 25
							},
							{
								"bonus": "Tiredness",
								"quality": 1,
								"value": 50
							},
							{
								"bonus": "Happy",
								"quality": 1,
								"value": 2
							}
						]
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 11,
						"y": 1,
						"width": 2
					},
					"type": "CookedMeal",
					"rarity": 3,
					"desc": "Un repas comme les épicuriens les aiment : riche, généreux et arrosé du plus délicat des vins. À Gosenberg, un repas sans vin est un jour sans soleil.",
					"price": 118,
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "GosenbergFeastTwo",
					"name": "La table du Négociant",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"foodQuantity": 40,
						"bonuses": [
							{
								"bonus": "RunSpeed",
								"value": 15
							},
							{
								"bonus": "TradeGoodsBuyPriceReduction",
								"value": 20
							},
							{
								"bonus": "Happy",
								"value": 1
							},
							{
								"bonus": "RunSpeed",
								"quality": 1,
								"value": 20
							},
							{
								"bonus": "TradeGoodsBuyPriceReduction",
								"quality": 1,
								"value": 25
							},
							{
								"bonus": "Happy",
								"quality": 1,
								"value": 2
							}
						]
					},
					"group": 33,
					"type": "CookedMeal",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 11,
						"y": 2,
						"width": 2
					},
					"rarity": 3,
					"price": 117,
					"desc": "Il faut être riche comme un Négociant pour se procurer un tel festin.",
					"iconeDone": true
				},
				{
					"id": "HaragFeast",
					"name": "La fable du loup et du houblon",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"foodQuantity": 40,
						"bonuses": [
							{
								"bonus": "CritDmg",
								"value": 25
							},
							{
								"bonus": "Happy",
								"value": 4
							},
							{
								"bonus": "CritDmg",
								"quality": 1,
								"value": 35
							},
							{
								"bonus": "Happy",
								"quality": 1,
								"value": 6
							}
						]
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 13,
						"y": 1,
						"width": 2
					},
					"type": "CookedMeal",
					"rarity": 3,
					"desc": "Des produits frais préparés à la mode d'Harag qui sauront ravir les palais les plus difficiles.",
					"price": 108,
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "AlazarFeast",
					"name": "Le festin du roi",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"foodQuantity": 40,
						"bonuses": [
							{
								"bonus": "SnowSpeedBonus",
								"value": 20
							},
							{
								"bonus": "RunSnowWanted",
								"value": 20
							},
							{
								"bonus": "GoldGainFightSnow",
								"value": 5
							},
							{
								"bonus": "InfluenceGainFightSnow",
								"value": 5
							},
							{
								"bonus": "Happy",
								"value": 3,
								"quality": 1
							}
						],
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 33,
					"type": "CookedMeal",
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 6,
						"y": 9,
						"width": 2
					},
					"rarity": 3,
					"price": 111,
					"desc": "Le festin du roi porte bien son nom car il n'y a pas une fête à la cour d'Alazar où il ne soit pas servi."
				},
				{
					"id": "RestFood",
					"name": "",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons/Icons_Resources_02.png",
						"size": 96,
						"x": 7,
						"y": 8
					},
					"group": 33,
					"iconeDone": true
				},
				{
					"id": "AppleMatefaimRecipe",
					"name": "",
					"weight": 0.1,
					"props": {
						"disableLoot": true,
						"refItem": "AppleMatefaim"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"baseBonus": [],
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "EelBrouetRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "EelBrouet"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "StuffedCabbageRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "StuffedCabbage"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "SheepHericoqRecipe",
					"name": "",
					"weight": 0.1,
					"props": {
						"disableLoot": true,
						"refItem": "SheepHericoq"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"baseBonus": [],
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "TrapperFondueRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "TrapperFondue"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "SurfAndTurfSkewerRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "SurfAndTurfSkewer"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "CandiedFruitsRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "CandiedFruits"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "OatmealRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "Oatmeal"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "PorkStewRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "PorkStew"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "BeerBastedWolfRibsRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeerBastedWolfRibs"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "MintPorkRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "MintPork",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "RatStewRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "RatStew",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "MeadPikeRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "MeadPike",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "PerchCabbageRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "PerchCabbage",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "HerbalBassRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "HerbalBass",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "MushroomSardineRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "MushroomSardine",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "FlamedCrocoporkRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "FlamedCrocopork",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "MintCakeRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "MintCake",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "HumanRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "HumanMixture",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "FakeMedecineRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "FakeMedecine",
						"disableLoot": true,
						"feature": "Alazar1_Update",
						"bonuses": [
							{
								"bonus": "Happy",
								"value": 2
							}
						]
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2
				},
				{
					"id": "CheeseSheepRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "CheeseSheep",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"rarity": 2,
					"type": "Recipe",
					"price": 100
				},
				{
					"id": "BeanBearsRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "BeanBears",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"rarity": 2,
					"type": "Recipe",
					"price": 100
				},
				{
					"id": "BlueberriesChickenRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "BlueberriesChicken",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"rarity": 2,
					"type": "Recipe",
					"price": 100
				},
				{
					"id": "LayerCommonArmorRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerCommonArmor"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "LayerCommonGuardRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerCommonGuard"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "LayerCommonDexterityRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerCommonDexterity"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "LayerCommonStrengthRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerCommonStrength"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "LayerCommonCriticalRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerCommonCritical"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "LayerCommonMovementRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerCommonMovement"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"desc": "",
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "LayerUncoMovementRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerUncoMovement"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "LayerUncoCritMovementRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerUncoCriticalMovement"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeLayerUncoArmorStrength",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerUncoArmorStrength"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeLayerUncoDexterityCrit",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerUncoDexterityCritical"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeLayerUncoDexterityMovement",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "LayerUncoDexterityMovement",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"group": 34,
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "RecipeLayerUncoGuardStrength",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "LayerUncoGuardStrength",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "RecipeLayerUncoDexterity2Movement",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "LayerUncoDexterity2Movement",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"iconeDone": true
				},
				{
					"id": "GrappleRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "Grapple",
						"skill": "Boarding"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "PoisonedThrowingKnifeRecipe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "PoisonedThrowingKnife",
						"skill": "PoisonedThrowingKnife"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "ThrowingSickleRecipePetrifying",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "ThrowingSicklePetrifying",
						"disableLoot": true,
						"skill": "ThrowingSicklePetrifying"
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"price": 75,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "ThrowingPowerfulThrowingAxe",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "PowerfulThrowingAxe",
						"disableLoot": true,
						"skill": "PowerfulAxeThrow"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2
				},
				{
					"id": "RecipeHandRecoil",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "HandRecoil",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 75,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "RecipeIncendiaryFlask",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "IncendiaryFlask",
						"disableLoot": true
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2,
					"group": 34
				},
				{
					"id": "RecipePoisonedFlask",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "PoisonedFlask",
						"disableLoot": true
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2,
					"group": 34
				},
				{
					"id": "RecipeOilProcBurning1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilProcBurning1",
						"refItem": "OilProcBurning1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilProcBleeding1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilProcBleeding1",
						"refItem": "OilProcBleeding1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilProcTrueDmg1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilProcTrueDmg1",
						"refItem": "OilProcTrueDmg1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilStrengthProc1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilStrengthProc1",
						"refItem": "OilStrengthProc1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 75,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilDexterityProc1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilDexterityProc1",
						"refItem": "OilDexterityProc1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 75,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilDamageTakenProc1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilDamageTakenProc1",
						"refItem": "OilDamageTakenProc1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 75,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilIgnoreGuard1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilIgnoreGuard1",
						"refItem": "OilIgnoreGuard1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilSlowProc1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilSlowProc1",
						"refItem": "OilSlowProc1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilAnimalsDmg1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilAnimalsDmg1",
						"refItem": "OilAnimalsDmg1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 75,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilSelfHeal1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilSelfheal1",
						"refItem": "OilSelfheal1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilPlagueDmg1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilPlagueDmg1",
						"refItem": "OilPlagueDmg1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilDotEffect1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilDotEffect1",
						"refItem": "OilDotEffect1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilCleave1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilCleave1",
						"refItem": "OilCleave1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilWindfury1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilWindfury1",
						"refItem": "OilWindfury1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilOpportunityAttack1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "OilOpportunityAttack1"
					},
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilCrit1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "OilCrit1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilSticky1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "OilSticky1",
						"disableLoot": true,
						"passiveSkill": "OilSticky1"
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 75,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "RecipeOilProtection1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "OilProtection1",
						"disableLoot": true,
						"passiveSkill": "OilProtection1"
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"price": 100,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "RecipeOilHemorrhage1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "OilHemorraghe1",
						"disableLoot": true,
						"passiveSkill": "OilHemorraghe1"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34
				},
				{
					"id": "RecipeRatBait1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "RatBait",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccPoisonResist",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPoisonResist",
						"passiveSkill": "BeltAccPoisonResist"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltWeighted",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccWeighted",
						"passiveSkill": "BeltAccWeighted"
					},
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccBleedingResist",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccBleedingResist",
						"passiveSkill": "BeltAccBleedingResist"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccBurningResist",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccBurningResist",
						"passiveSkill": "BeltAccBurningResist"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccPoisonExtra",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPoisonExtra",
						"passiveSkill": "BeltAccPoisonExtra"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccPoisonDmgBonus",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPoisonDmgBonus",
						"passiveSkill": "BeltAccPoisonDmgBonus"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccPlague",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPlague1",
						"feature": "Alazar1_Update",
						"passiveSkill": "BeltAccPlague1"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 0,
					"group": 34
				},
				{
					"id": "RecipeOilProcPoison1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilProcPoison1",
						"refItem": "OilProcPoison1"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeOilProcSolid",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilProcSolid",
						"refItem": "OilProcSolid",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1
				},
				{
					"id": "RecipeOilSwipping",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilSwipping",
						"refItem": "OilSwipping",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1
				},
				{
					"id": "RecipeOilProcFever",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilProcFever",
						"refItem": "OilProcFever",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1
				},
				{
					"id": "RecipeOilBrave",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilBrave",
						"refItem": "OilBrave",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1
				},
				{
					"id": "RecipeOilProcSlowReflexes",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"passiveSkill": "OilProcSlowReflexes",
						"refItem": "OilProcSlowReflexes",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1
				},
				{
					"id": "RecipeBackAccFishingNumber",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BackAccFishingNumber"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBlindingPowder",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BlindingPowder",
						"skill": "Blind"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeRagePowder",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"skill": "RagePowder",
						"refItem": "RagePowder",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "RecipeOdorousPowder",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"skill": "OdorousPowder",
						"refItem": "OdorousPowder",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "RecipeConfusingPowder",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"skill": "ConfusingPowder",
						"refItem": "ConfusingPowder",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "RecipeSwampFlask",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "SwampFlask",
						"disableLoot": true,
						"skill": "Transmission"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34
				},
				{
					"id": "RecipePlagueRemedy",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "PlagueRemedy"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true,
					"desc": "Un remède particulièrement puissant capable de guérir une blessure pestiférée."
				},
				{
					"id": "RecipeBeltAccRangeDmg",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccRangeDmg",
						"passiveSkill": "BeltAccRangeDmg"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBrewBarrel",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BrewBarrel"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 2,
					"price": 100,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeStretcher",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "Stretcher"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 2,
					"price": 100,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeTrainingDummy",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "TrainingDummy"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 2,
					"price": 100,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeMeatDryer",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "MeatDryer"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 2,
					"price": 100,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeSkinDryingRack",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "SkinDryingRack"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 2,
					"price": 100,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeehive",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "Beehive"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 2,
					"price": 100,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeWatchStool",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "WatchStool"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 2,
					"price": 100,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccSap",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccSap",
						"bonuses": [
							{
								"bonus": "HumanKnockoutChance",
								"value": 15
							}
						]
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 0,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccHumanTorch",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccHumanTorch",
						"skill": "BeltAccHumanTorch"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 0,
					"group": 34
				},
				{
					"id": "RecipeBeltAccTerrorMax",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccTerrorMax",
						"passiveSkill": "BeltAccTerrorMax"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 1,
					"price": 50,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccBarbs",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccBarbs",
						"passiveSkill": "BeltAccBarbs"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 1,
					"price": 75,
					"desc": "",
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccCandy",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccCandy"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"price": 50,
					"rarity": 1,
					"type": "Recipe",
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccBleedingCrit",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccBleedingCrit",
						"passiveSkill": "BeltAccBleedingCrit"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccPushDistance",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPushDistance",
						"passiveSkill": "BeltAccPushDistance"
					},
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccPrisonerTrust",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPrisonerTrust",
						"passiveSkill": "BeltAccPrisonerTrust"
					},
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 1,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccPrisonerPony",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPrisonerPony",
						"passiveSkill": "BeltAccPrisonerPony"
					},
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 1,
					"iconeDone": true
				},
				{
					"id": "RecipeBeltAccPrisonerWorkMeatDryer",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPrisonerWorkMeatDryer",
						"passiveSkill": "BeltAccPrisonerWorkMeatDryer",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 1
				},
				{
					"id": "RecipeBeltAccPrisonerWorkBrewBarrel",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPrisonerWorkBrewBarrel",
						"passiveSkill": "BeltAccPrisonerWorkBrewBarrel",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 1,
					"group": 34
				},
				{
					"id": "RecipeBeltAccPrisonerWorkSkinDryingRack",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPrisonerWorkSkinDryingRack",
						"passiveSkill": "BeltAccPrisonerWorkSkinDryingRack",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 1,
					"group": 34
				},
				{
					"id": "RecipeBeltAccPrisonerWorkBeeHive",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccPrisonerWorkBeeHive",
						"passiveSkill": "BeltAccPrisonerWorkBeeHive",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 1,
					"group": 34
				},
				{
					"id": "recipeBeltAccProtection1",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BeltAccProtection1",
						"passiveSkill": "BeltAccProtection1",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0
				},
				{
					"id": "RecipeToothPaste",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "ToothPaste"
					},
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 2,
					"iconeDone": true
				},
				{
					"id": "RecipeWeedkillingPotion",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "WeedKillingPotion"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 35,
					"rarity": 2,
					"group": 34,
					"iconeDone": true,
					"desc": "Selon l'apothicaire de Vertruse, cette potion détruirait des plantes spécifiques de la région."
				},
				{
					"id": "RecipeAnimAccCritDmg",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccCritDmg"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 1,
					"price": 75,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBackAccCookingNoSalt",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BackAccCookingNoSalt"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 1,
					"price": 75,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBackAccMedicNoCost",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BackAccMedicNoCost"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeBackAccThiefLockpickDuration",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "BackAccThiefLockpickDuration"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeApprenticeRemedy",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "ApprenticeRemedy"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 0,
					"group": 34,
					"iconeDone": true,
					"desc": "Un remède fait avec amour et application mais sans connaissances rigoureuses. Parfois soigne les blessures, parfois non."
				},
				{
					"id": "RecipeLayerUncoStrengthCrit",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerUncoStrengthCritical"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeLayerUncoArmorGuard",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "LayerUncoArmorGuard"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeDiceGame",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "DiceGame"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeStake",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "Stake"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeLute",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "Lute"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeAnimAccObey",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccObey"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 50,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeAnimAccRegen",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccRegen"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeAnimAccBerserkProc",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccBerserkProc"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeAnimAccGuard",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccGuard",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34
				},
				{
					"id": "RecipeAnimAccDomination",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccDomination",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34
				},
				{
					"id": "RecipeAnimAccSwiftness",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccSwiftness",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34
				},
				{
					"id": "RecipeAnimAccPoison",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccPoison",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34
				},
				{
					"id": "RecipeAnimAccFire",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccFire",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 1,
					"group": 34
				},
				{
					"id": "RecipeHaragFeast",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "HaragFeast"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 150,
					"rarity": 3,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeEdoranFeast",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "EdoranFeast"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 150,
					"rarity": 3,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeGosenbergFeast",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "GosenbergFeast"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 150,
					"rarity": 3,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeTiltrenFeast",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "TiltrenFeast"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"type": "Recipe",
					"price": 150,
					"rarity": 3,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeGosenbergFeastTwo",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "GosenbergFeastTwo",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"price": 150,
					"rarity": 3,
					"iconeDone": true
				},
				{
					"id": "RecipeAlazarFeast",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "AlazarFeast",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"type": "Recipe",
					"price": 150,
					"rarity": 3,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 10,
						"y": 5
					}
				},
				{
					"id": "RecipeAnimAccSecondLife",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "AnimAccSecondLife"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"rarity": 1,
					"price": 75,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeHaragConcoction",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "HaragConcoction",
						"skill": "Spraying"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipePillory",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"disableLoot": true,
						"refItem": "Pillory"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 100,
					"rarity": 2,
					"group": 34,
					"iconeDone": true
				},
				{
					"id": "RecipeShieldThorn",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "ShieldThorn",
						"disableLoot": true
					},
					"group": 34,
					"type": "Recipe",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"price": 75,
					"rarity": 1,
					"iconeDone": true
				},
				{
					"id": "RecipeTorchRuins",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "TorchRuins",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1
				},
				{
					"id": "RecipeBeeBomb",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "BeeBomb",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1
				},
				{
					"id": "RecipeCorrosiveBomb",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "CorrosiveBomb",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 1,
					"group": 34
				},
				{
					"id": "RecipeBeltAccNoMovePenalty",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "BeltAccNoMovePenalty",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2
				},
				{
					"id": "RecipeBeltAccLightArmorCrit",
					"name": "",
					"weight": 0.1,
					"baseBonus": [],
					"props": {
						"refItem": "BeltAccLightArmorCrit",
						"disableLoot": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 34,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"type": "Recipe",
					"price": 75,
					"rarity": 2
				},
				{
					"id": "Firecamp",
					"name": "Feu de camp",
					"weight": 2,
					"props": {
						"startQuantity": 1,
						"model": "prefabs/camp/elements/Campfire.prefab",
						"value": 1,
						"bonuses": [
							{
								"bonus": "FirecampUpgrade2_Influence",
								"value": 5,
								"hidden": 3
							},
							{
								"bonus": "FireCampUpgrade1_minHappiness",
								"value": -5,
								"hidden": 3
							}
						]
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 18,
						"y": 0,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"desc": "Vous pouvez utiliser le feu de camp pour payer et nourrir votre troupe.\n\n[ASSIGN] génère <happy><good>+[VALUE]</good></happy> à chaque Repos.",
					"baseBonus": [],
					"price": 100,
					"tool": {
						"startQuantity": 1,
						"campWidth": 4,
						"campHeight": 4,
						"toolAnim": "Sit",
						"toolCapacity": 4,
						"height": 4,
						"width": 4,
						"animation": "Sit",
						"capacity": 4,
						"preventRemove": "Vos compagnons ne survivraient pas une nuit sans feu.",
						"tier": 1,
						"bonusIfAssign": {
							"value": 1,
							"bonus": "Happy"
						}
					},
					"rarity": 2,
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "FirecampT2",
					"name": "Feu de camp",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/FireCamp/Campfire_Lvl2.prefab",
						"value": 1,
						"refItem": "Firecamp",
						"bonuses": [
							{
								"bonus": "FirecampFirstAssign",
								"value": 1
							},
							{
								"bonus": "FireCampUpgrade1_minHappiness",
								"value": -7,
								"hidden": 2
							},
							{
								"bonus": "FireCampUpgrade1_CombatXpHappinessMax",
								"value": 20,
								"hidden": 2
							},
							{
								"bonus": "FirecampUpgrade2_Influence",
								"value": 5,
								"hidden": 3
							},
							{
								"bonus": "FirecampUpgrade1",
								"hidden": 1
							},
							{
								"bonus": "FirecampCharcoalUpgrade"
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 6,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"rarity": 2,
					"type": "Tool",
					"price": 100,
					"desc": "Vous pouvez utiliser le feu de camp pour payer et nourrir votre troupe.\n\n[ASSIGN] génère <happy><good>+[VALUE]</good></happy> à chaque Repos.",
					"tool": {
						"startQuantity": 1,
						"campWidth": 4,
						"campHeight": 4,
						"toolAnim": "Sit",
						"toolCapacity": 4,
						"height": 4,
						"width": 4,
						"animation": "Sit",
						"capacity": 4,
						"preventRemove": "Vos compagnons ne survivraient pas une nuit sans feu.",
						"tier": 2,
						"bonusIfAssign": {
							"value": 1,
							"bonus": "Happy"
						}
					}
				},
				{
					"id": "FirecampT3",
					"name": "Feu de camp",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/FireCamp/Campfire_Lvl3.prefab",
						"value": 1,
						"refItem": "Firecamp",
						"bonuses": [
							{
								"bonus": "FirecampFirstAssign",
								"value": 2
							},
							{
								"bonus": "FireCampUpgrade1_minHappiness",
								"value": -10,
								"hidden": 2
							},
							{
								"bonus": "FireCampUpgrade1_CombatXpHappinessMax",
								"value": 20,
								"hidden": 2
							},
							{
								"bonus": "FirecampUpgrade2_MaxBravoure",
								"value": 2,
								"hidden": 2
							},
							{
								"bonus": "FirecampUpgrade2_Influence",
								"value": 6,
								"hidden": 2
							},
							{
								"bonus": "FirecampUpgrade2",
								"hidden": 1
							},
							{
								"bonus": "FirecampCharcoalUpgrade"
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 6,
						"y": 6,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"rarity": 2,
					"price": 100,
					"desc": "Vous pouvez utiliser le feu de camp pour payer et nourrir votre troupe.\n\n[ASSIGN] génère <happy><good>+[VALUE]</good></happy> à chaque Repos.",
					"tool": {
						"startQuantity": 1,
						"campWidth": 4,
						"campHeight": 4,
						"toolAnim": "Sit",
						"toolCapacity": 4,
						"height": 4,
						"width": 4,
						"animation": "Sit",
						"capacity": 4,
						"preventRemove": "Vos compagnons ne survivraient pas une nuit sans feu.",
						"tier": 3,
						"bonusIfAssign": {
							"value": 1,
							"bonus": "Happy"
						}
					}
				},
				{
					"id": "Workshop",
					"name": "Atelier",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Workshop/Workshop_lvl1.prefab",
						"startQuantity": 1,
						"activity": "Tinker"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 8,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"type": "ToolProd",
					"desc": "Un petit atelier de fortune qui permet à vos compagnons de concevoir de nombreux objets utiles.\n\n[JOBASSIGN] production de <img src=\"item/RawMaterials\"/>[VALUE] à chaque Repos.",
					"price": 100,
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 1,
						"height": 3,
						"width": 4,
						"preventRemove": "Vos compagnons sont très attachés à leur atelier et refusent de le retirer du camp.",
						"animation": "Workshop",
						"capacity": 1,
						"tier": 1,
						"bonusIfAssign": {
							"value": 2,
							"bonus": "RawMaterialOnRest"
						}
					},
					"rarity": 2,
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "WorkshopT2",
					"name": "Atelier",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Workshop.prefab",
						"refItem": "Workshop",
						"activity": "Tinker",
						"bonuses": [
							{
								"bonus": "Workshop_Dismantle_Common_T2",
								"value": 1
							},
							{
								"bonus": "Workshop_Dismantle_Rare_T2"
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 16,
						"y": 0,
						"width": 2,
						"height": 2
					},
					"rarity": 2,
					"type": "ToolProd",
					"price": 100,
					"desc": "Un petit atelier de fortune qui permet à vos compagnons de concevoir de nombreux objets utiles.\n\n[JOBASSIGN] production de <img src=\"item/RawMaterials\"/>[VALUE] à chaque Repos.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 1,
						"height": 3,
						"width": 4,
						"preventRemove": "Vos compagnons sont très attachés à leur atelier et refusent de le retirer du camp.",
						"animation": "Workshop",
						"capacity": 1,
						"tier": 2,
						"bonusIfAssign": {
							"value": 2,
							"bonus": "RawMaterialOnRest"
						}
					}
				},
				{
					"id": "WorkshopT3",
					"name": "Atelier",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Workshop/Workshop_lvl3.prefab",
						"refItem": "Workshop",
						"activity": "Tinker",
						"bonuses": [
							{
								"bonus": "Workshop_Dismantle_Common_T3",
								"value": 2
							},
							{
								"bonus": "Workshop_Dismantle_Rare_T3"
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 8,
						"y": 6,
						"width": 2,
						"height": 2
					},
					"type": "ToolProd",
					"rarity": 2,
					"price": 100,
					"desc": "Un petit atelier de fortune qui permet à vos compagnons de concevoir de nombreux objets utiles.\n\n[JOBASSIGN] production de <img src=\"item/RawMaterials\"/>[VALUE] à chaque Repos.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 1,
						"height": 3,
						"width": 4,
						"preventRemove": "Vos compagnons sont très attachés à leur atelier et refusent de le retirer du camp.",
						"animation": "Workshop",
						"capacity": 1,
						"tier": 3,
						"bonusIfAssign": {
							"value": 2,
							"bonus": "RawMaterialOnRest"
						}
					}
				},
				{
					"id": "Tent",
					"name": "Tente",
					"weight": 2.5,
					"props": {
						"model": "prefabs/camp/elements/Tent.prefab",
						"bonuses": [
							{
								"bonus": "ActionPoint",
								"value": 1
							}
						],
						"actionTitle": "Gérer",
						"value": 1
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 4,
						"y": 2,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"desc": "[ASSIGN] génère <ap><good>+[VALUE]</good></ap> à chaque Repos.",
					"baseBonus": [],
					"price": 99,
					"tool": {
						"startQuantity": 1,
						"campWidth": 6,
						"campHeight": 8,
						"height": 8,
						"toolCapacity": 4,
						"toolAnim": "Sit",
						"width": 6,
						"tipZ": 1,
						"capacity": 4,
						"tier": 1,
						"hideHandEquipment": true
					},
					"rarity": 2,
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "TentT2",
					"name": "Tente",
					"weight": 2.5,
					"baseBonus": [],
					"props": {
						"refItem": "Tent",
						"model": "prefabs/camp/elements/Tent/Tent_LVL2.prefab",
						"bonuses": [
							{
								"bonus": "TentFirstAssign_Rest",
								"value": 1
							},
							{
								"bonus": "ActionPoint",
								"value": 2
							}
						],
						"actionTitle": "Gérer",
						"value": 1
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 10,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"rarity": 2,
					"price": 99,
					"desc": "[ASSIGN] génère <ap><good>+[VALUE]</good></ap> à chaque Repos.",
					"tool": {
						"startQuantity": 1,
						"campWidth": 6,
						"campHeight": 8,
						"height": 8,
						"toolCapacity": 4,
						"toolAnim": "Sit",
						"width": 6,
						"tipZ": 1,
						"capacity": 4,
						"tier": 2,
						"hideHandEquipment": true
					}
				},
				{
					"id": "TentT3",
					"name": "Tente",
					"weight": 2.5,
					"baseBonus": [],
					"props": {
						"refItem": "Tent",
						"model": "prefabs/camp/elements/Tent/Tent_LVL3.prefab",
						"bonuses": [
							{
								"bonus": "TentFirstAssign_Rest",
								"value": 1
							},
							{
								"bonus": "TentFirstAssign_Fight",
								"value": 1
							},
							{
								"bonus": "ActionPoint",
								"value": 3
							}
						],
						"actionTitle": "Gérer",
						"value": 1
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 10,
						"y": 6,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"rarity": 2,
					"price": 99,
					"desc": "[ASSIGN] génère <ap><good>+[VALUE]</good></ap> à chaque Repos.",
					"tool": {
						"startQuantity": 1,
						"campWidth": 6,
						"campHeight": 8,
						"height": 8,
						"toolCapacity": 4,
						"toolAnim": "Sit",
						"width": 6,
						"tipZ": 1,
						"capacity": 4,
						"tier": 3,
						"hideHandEquipment": true
					}
				},
				{
					"id": "PonyAuge",
					"name": "Poteau d'attelage",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/PonyAuge/PonyAuge_Lvl1.prefab"
					},
					"iconeDone": true,
					"group": 35,
					"type": "Tool",
					"price": 100,
					"desc": "Vous pouvez y assigner vos poneys afin d'augmenter leur confort ainsi que leur capacité de transport.",
					"rarity": 2,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 4,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"tool": {
						"width": 9,
						"height": 9,
						"tier": 1,
						"capacity": 2,
						"tipZ": 2,
						"hideHandEquipment": true,
						"personalBonuses": [
							{
								"value": 10,
								"bonus": "PonyAugeTransport",
								"isPercent": false
							}
						]
					}
				},
				{
					"id": "PonyAugeT2",
					"name": "Poteau d'attelage",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"refItem": "PonyAuge",
						"model": "prefabs/camp/elements/PonyAuge/PonyAuge_Lvl2.prefab"
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 12,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 100,
					"rarity": 2,
					"desc": "Vous pouvez y assigner vos poneys afin d'augmenter leur confort ainsi que leur capacité de transport.",
					"tool": {
						"width": 9,
						"height": 9,
						"tier": 2,
						"capacity": 3,
						"tipZ": 2,
						"hideHandEquipment": true,
						"personalBonuses": [
							{
								"value": 10,
								"bonus": "PonyAugeTransport",
								"isPercent": false
							},
							{
								"value": 5,
								"bonus": "PonyAugeTransportTrait",
								"isPercent": false
							},
							{
								"value": 10,
								"bonus": "PonyAugeExperienceCombat",
								"isPercent": true
							}
						]
					}
				},
				{
					"id": "PonyAugeT3",
					"name": "Poteau d'attelage",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"refItem": "PonyAuge",
						"model": "prefabs/camp/elements/PonyAuge/PonyAuge_Lvl3.prefab"
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 12,
						"y": 6,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 100,
					"rarity": 2,
					"desc": "Vous pouvez y assigner vos poneys afin d'augmenter leur confort ainsi que leur capacité de transport.",
					"tool": {
						"width": 9,
						"height": 9,
						"tier": 3,
						"capacity": 4,
						"tipZ": 2,
						"hideHandEquipment": true,
						"personalBonuses": [
							{
								"value": 10,
								"bonus": "PonyAugeTransport",
								"isPercent": false
							},
							{
								"value": 10,
								"bonus": "PonyAugeTransportTrait",
								"isPercent": false
							},
							{
								"value": 20,
								"bonus": "PonyAugeExperienceCombat",
								"isPercent": true
							}
						]
					}
				},
				{
					"id": "CookingPot",
					"name": "Marmite",
					"props": {
						"model": "prefabs/camp/elements/CookingPot/CookingPot_Lvl1.prefab",
						"activity": "Cook",
						"bonuses": [
							{
								"bonus": "CookingPotMoreAssign",
								"value": 2,
								"hidden": 2
							}
						]
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 2,
						"y": 2,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"desc": "Vous pouvez préparer des plats nourrissants conférant des bonus à la troupe.\n\n[JOBASSIGN] réduit de <img src=\"icon/Food\"/>[VALUE] la consommation de nourriture quotidienne de la troupe.",
					"weight": 4,
					"price": 99,
					"baseBonus": [],
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 2,
						"width": 2,
						"capacity": 1,
						"animation": "CookingPot",
						"hideHandEquipment": true,
						"tier": 1,
						"bonusIfAssign": {
							"value": 2,
							"bonus": "FoodReduction"
						}
					},
					"rarity": 2,
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "CookingPotT2",
					"name": "Marmite",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/CookingPot.prefab",
						"refItem": "CookingPot",
						"activity": "Cook",
						"bonuses": [
							{
								"bonus": "PerfectRecipe",
								"value": 15
							},
							{
								"bonus": "CookingPotMoreAssign",
								"value": 4,
								"hidden": 2
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"type": "Tool",
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 14,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 2,
						"width": 2,
						"capacity": 1,
						"animation": "CookingPot",
						"hideHandEquipment": true,
						"tier": 2,
						"bonusIfAssign": {
							"value": 4,
							"bonus": "FoodReduction"
						}
					},
					"rarity": 2,
					"price": 99,
					"desc": "Vous pouvez préparer des plats nourrissants conférant des bonus à la troupe.\n\n[JOBASSIGN] réduit de <img src=\"icon/Food\"/>[VALUE] la consommation de nourriture quotidienne de la troupe."
				},
				{
					"id": "CookingPotT3",
					"name": "Marmite",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/CookingPot/CookingPot_Lvl3.prefab",
						"activity": "Cook",
						"refItem": "CookingPot",
						"bonuses": [
							{
								"bonus": "PerfectRecipe",
								"value": 30
							},
							{
								"bonus": "CookingPotMoreAssign",
								"value": 6,
								"hidden": 2
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 14,
						"y": 6,
						"width": 2,
						"height": 2
					},
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 2,
						"width": 2,
						"capacity": 1,
						"animation": "CookingPot",
						"hideHandEquipment": true,
						"tier": 3,
						"bonusIfAssign": {
							"value": 6,
							"bonus": "FoodReduction"
						}
					},
					"rarity": 2,
					"type": "Tool",
					"price": 99,
					"desc": "Vous pouvez préparer des plats nourrissants conférant des bonus à la troupe.\n\n[JOBASSIGN] réduit de <img src=\"icon/Food\"/>[VALUE] la consommation de nourriture quotidienne de la troupe."
				},
				{
					"id": "Stretcher",
					"name": "Civière",
					"weight": 2.5,
					"baseBonus": [],
					"props": {
						"value": 1,
						"model": "prefabs/camp/elements/Stretcher/Stretcher_Lvl1.prefab"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 8,
						"y": 0,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 99,
					"rarity": 2,
					"desc": "[ASSIGN] [VALUE] Blessure est soignée pendant le Repos.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 5,
						"width": 5,
						"capacity": 1,
						"animation": "Stretcher",
						"tier": 1,
						"hideHandEquipment": true
					},
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "StretcherT2",
					"name": "Civière",
					"weight": 2.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Stretcher/Stretcher_Lvl2.prefab",
						"value": 1,
						"refItem": "Stretcher"
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 16,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 5,
						"width": 5,
						"capacity": 2,
						"animation": "Stretcher",
						"tier": 2,
						"hideHandEquipment": true
					},
					"rarity": 2,
					"type": "Tool",
					"price": 99,
					"desc": "[ASSIGN] [VALUE] Blessure est soignée pendant le Repos."
				},
				{
					"id": "StretcherT3",
					"name": "Civière",
					"weight": 2.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Stretcher/Stretcher_Lvl3.prefab",
						"value": 1,
						"refItem": "Stretcher",
						"bonuses": [
							{
								"bonus": "StretcherDoped"
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 16,
						"y": 6,
						"width": 2,
						"height": 2
					},
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 5,
						"width": 5,
						"capacity": 2,
						"animation": "Stretcher",
						"tier": 3,
						"hideHandEquipment": true
					},
					"type": "Tool",
					"rarity": 2,
					"price": 99,
					"desc": "[ASSIGN] [VALUE] Blessure est soignée pendant le Repos."
				},
				{
					"id": "TrainingDummy",
					"name": "Mannequin d'entraînement",
					"weight": 2.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/TrainingDummy/TrainingDummy_Lvl1.prefab",
						"bonuses": [
							{
								"bonus": "TrainingDummyExperienceBonus",
								"value": 5
							}
						]
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 10,
						"y": 0,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 99,
					"rarity": 2,
					"desc": "[ASSIGN] assimile un peu d'expérience pendant le Repos.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 2,
						"width": 3,
						"capacity": 1,
						"animation": "IdleEngaged",
						"tier": 1
					},
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "TrainingDummyT2",
					"name": "Mannequin d'entraînement",
					"weight": 2.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/TrainingDummy/TrainingDummy_Lvl2.prefab",
						"refItem": "TrainingDummy",
						"bonuses": [
							{
								"bonus": "TrainingDummyExperienceBonus",
								"value": 6
							},
							{
								"bonus": "TrainingDummyTrainingExperience",
								"value": 20
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"type": "Tool",
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 18,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"desc": "[ASSIGN] gagne de l'expérience pendant le Repos.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 2,
						"width": 3,
						"capacity": 2,
						"animation": "IdleEngaged",
						"tier": 2
					},
					"rarity": 2,
					"price": 99
				},
				{
					"id": "TrainingDummyT3",
					"name": "Mannequin d'entraînement",
					"weight": 2.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/TrainingDummy/TrainingDummy_Lvl3.prefab",
						"refItem": "TrainingDummy",
						"bonuses": [
							{
								"bonus": "TrainingDummyExperienceBonus",
								"value": 7
							},
							{
								"bonus": "TrainingDummyTrainingExperience",
								"value": 20
							},
							{
								"bonus": "CareerPlan_CostBonus",
								"value": 50
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 18,
						"y": 6,
						"width": 2,
						"height": 2
					},
					"desc": "[ASSIGN] génère de l'expérience pendant le Repos.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 2,
						"width": 3,
						"capacity": 2,
						"animation": "IdleEngaged",
						"tier": 3
					},
					"type": "Tool",
					"rarity": 2,
					"price": 99
				},
				{
					"id": "MeatDryer",
					"name": "Séchoir à viande",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/MeatDryer/MeatDryer_Lvl1.prefab"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 0,
						"y": 2,
						"width": 2,
						"height": 2
					},
					"type": "ToolProd",
					"desc": "[ASSIGN] production de viande et de poisson séchés pendant le Repos.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 1,
						"height": 3,
						"width": 3,
						"converterTool": true,
						"capacity": 1,
						"animation": "MeatDryer",
						"hideHandEquipment": true,
						"tier": 1
					},
					"price": 100,
					"rarity": 2,
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "MeatDryerT2",
					"name": "Séchoir à viande",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/MeatDryer/MeatDryer_Lvl2.prefab",
						"refItem": "MeatDryer",
						"bonuses": [
							{
								"bonus": "MeatDryer_AdditionalFishOil",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"type": "ToolProd",
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 8,
						"y": 8,
						"width": 2,
						"height": 2
					},
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 1,
						"height": 3,
						"width": 3,
						"converterTool": true,
						"capacity": 1,
						"animation": "MeatDryer",
						"hideHandEquipment": true,
						"tier": 2
					},
					"rarity": 2,
					"price": 100,
					"desc": "[ASSIGN] production de viande et de poisson séchés pendant le Repos."
				},
				{
					"id": "MeatDryerT3",
					"name": "Séchoir à viande",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/MeatDryer/MeatDryer_Lvl3.prefab",
						"refItem": "MeatDryer",
						"bonuses": [
							{
								"bonus": "MeatDryer_AdditionalFishOil",
								"value": 1
							},
							{
								"bonus": "MeatDryer_AdditionalFat",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 8,
						"y": 10,
						"width": 2,
						"height": 2
					},
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 1,
						"height": 3,
						"width": 3,
						"converterTool": true,
						"capacity": 1,
						"animation": "MeatDryer",
						"hideHandEquipment": true,
						"tier": 3
					},
					"type": "ToolProd",
					"rarity": 2,
					"price": 100,
					"desc": "[ASSIGN] production de viande et de poisson séchés pendant le Repos."
				},
				{
					"id": "SkinDryingRack",
					"name": "Étendoir à peaux",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/SkinDryingRack.prefab"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 6,
						"y": 0,
						"width": 2,
						"height": 2
					},
					"type": "ToolProd",
					"price": 100,
					"rarity": 2,
					"desc": "[ASSIGN] production de cuir à partir de carcasses animales pendant le Repos.",
					"tool": {
						"width": 3,
						"height": 2,
						"converterTool": true,
						"capacity": 1,
						"animation": "SkinDrying",
						"hideHandEquipment": true,
						"tier": 1
					},
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "SkinDryingRackT2",
					"name": "Étendoir à peaux",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/SkinDryingRack/SkinDryingRack_Lvl2.prefab",
						"refItem": "SkinDryingRack",
						"bonuses": [
							{
								"bonus": "SkinDryingRack_WhiteLeather"
							},
							{
								"bonus": "SkinDryingRack_AdditionnalBlood",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"type": "ToolProd",
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 10,
						"y": 8,
						"width": 2,
						"height": 2
					},
					"rarity": 2,
					"price": 100,
					"desc": "[ASSIGN] production de cuir à partir de carcasses animales pendant le Repos.",
					"tool": {
						"width": 3,
						"height": 2,
						"converterTool": true,
						"capacity": 1,
						"animation": "SkinDrying",
						"hideHandEquipment": true,
						"tier": 2
					}
				},
				{
					"id": "SkinDryingRackT3",
					"name": "Étendoir à peaux",
					"weight": 3,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/SkinDryingRack/SkinDryingRack_Lvl3.prefab",
						"refItem": "SkinDryingRack",
						"bonuses": [
							{
								"bonus": "SkinDryingRack_WhiteLeather"
							},
							{
								"bonus": "SkinDryingRack_AdditionalSkin",
								"value": 1
							},
							{
								"bonus": "SkinDryingRack_AdditionnalBlood",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 10,
						"y": 10,
						"width": 2,
						"height": 2
					},
					"type": "ToolProd",
					"rarity": 2,
					"price": 100,
					"desc": "[ASSIGN] production de cuir à partir de carcasses animales pendant le Repos.",
					"tool": {
						"width": 3,
						"height": 2,
						"converterTool": true,
						"capacity": 1,
						"animation": "SkinDrying",
						"hideHandEquipment": true,
						"tier": 3
					}
				},
				{
					"id": "Lectern",
					"name": "Lutrin",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Lectern/Lectern_Lvl1.prefab",
						"activity": "Study"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 4,
						"y": 0,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 100,
					"rarity": 2,
					"desc": "[JOBASSIGN] \n- Reconstitue des Antiquités trouvées dans les Tombeaux des Anciens pendant le Repos.\n- Augmente votre connaissance pendant le Repos.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 3,
						"width": 4,
						"capacity": 1,
						"converterTool": true,
						"hideHandEquipment": true,
						"animation": "Lectern",
						"tier": 1
					},
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "LecternT2",
					"name": "Lutrin",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Lectern/Lectern_Lvl2.prefab",
						"activity": "Study",
						"refItem": "Lectern",
						"bonuses": [
							{
								"bonus": "LecternDiscoveryBonus",
								"value": 10
							},
							{
								"bonus": "LecternDayDiscount",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"type": "Tool",
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 12,
						"y": 8,
						"width": 2,
						"height": 2
					},
					"rarity": 2,
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 3,
						"width": 4,
						"capacity": 1,
						"converterTool": true,
						"hideHandEquipment": true,
						"animation": "Lectern",
						"tier": 2
					},
					"desc": "[JOBASSIGN]\n- Reconstitue des Antiquités trouvées dans les Tombeaux des Anciens pendant le Repos.\n- Augmente votre connaissance pendant le Repos.",
					"price": 100
				},
				{
					"id": "LecternT3",
					"name": "Lutrin",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Lectern/Lectern_Lvl3.prefab",
						"activity": "Study",
						"refItem": "Lectern",
						"bonuses": [
							{
								"bonus": "LecternDiscoveryBonus",
								"value": 20
							},
							{
								"bonus": "LecternDayDiscount",
								"value": 2
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 12,
						"y": 10,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"rarity": 2,
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 3,
						"width": 4,
						"capacity": 1,
						"converterTool": true,
						"hideHandEquipment": true,
						"animation": "Lectern",
						"tier": 3
					},
					"desc": "[JOBASSIGN] \n- Reconstitue des Antiquités trouvées dans les Tombeaux des Anciens pendant le Repos.\n- Augmente votre connaissance pendant le Repos.",
					"price": 100
				},
				{
					"id": "StrategyTable",
					"name": "Table de stratégie",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/StrategyTable/StrategyTable_Lvl1.prefab",
						"value": 1
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 10,
						"y": 2,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 100,
					"rarity": 2,
					"tool": {
						"width": 4,
						"height": 3,
						"capacity": 1,
						"animation": "StrategyTable",
						"hideHandEquipment": true,
						"tier": 1
					},
					"desc": "Élaborez une stratégie de combat pour prendre le dessus sur vos adversaires.\n\n[RANKEDASSIGN] : génère <ap>[VALUE]</ap> supplémentaire à chaque Repos.",
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "StrategyTableT2",
					"name": "Table de stratégie",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/StrategyTable/StrategyTable_Lvl2.prefab",
						"value": 1,
						"refItem": "StrategyTable",
						"bonuses": [
							{
								"bonus": "StrategyTableT2",
								"hidden": 2
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"type": "Tool",
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 14,
						"y": 8,
						"width": 2,
						"height": 2
					},
					"rarity": 2,
					"tool": {
						"tier": 2,
						"width": 4,
						"height": 3,
						"capacity": 1,
						"hideHandEquipment": true,
						"animation": "StrategyTable"
					},
					"price": 100,
					"desc": "Élaborez une stratégie de combat pour prendre le dessus sur vos adversaires.  \n\n[RANKEDASSIGN] : génère <ap>[VALUE]</ap> supplémentaire à chaque Repos."
				},
				{
					"id": "StrategyTableT3",
					"name": "Table de stratégie",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/StrategyTable/StrategyTable_Lvl3.prefab",
						"value": 1,
						"refItem": "StrategyTable",
						"bonuses": [
							{
								"bonus": "StrategyTableT3",
								"hidden": 2
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 14,
						"y": 10,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"rarity": 2,
					"tool": {
						"tier": 3,
						"width": 4,
						"height": 3,
						"capacity": 1,
						"animation": "StrategyTable",
						"hideHandEquipment": true
					},
					"price": 100,
					"desc": "Élaborez une stratégie de combat pour prendre le dessus sur vos adversaires.  \n\n[RANKEDASSIGN] : génère <ap>[VALUE]</ap> supplémentaire à chaque Repos."
				},
				{
					"id": "Pillory",
					"name": "Pilori",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Pillory.prefab"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 2,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 104,
					"rarity": 2,
					"tool": {
						"width": 2,
						"height": 2,
						"capacity": 1,
						"tipZ": 2,
						"hideHandEquipment": true,
						"tier": 1
					},
					"desc": "[ASSIGN] les prisonniers assignés ne peuvent pas s'enfuir pendant le repos.",
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "PilloryT2",
					"name": "Pilori",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Pillory.prefab",
						"refItem": "Pillory"
					},
					"iconeDone": true,
					"group": 35,
					"type": "Tool",
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 16,
						"y": 8,
						"width": 2,
						"height": 2
					},
					"rarity": 2,
					"tool": {
						"width": 2,
						"height": 2,
						"capacity": 2,
						"tipZ": 2,
						"hideHandEquipment": true,
						"tier": 2
					},
					"price": 104,
					"desc": "[ASSIGN] les prisonniers assignés ne peuvent pas s'enfuir pendant le repos."
				},
				{
					"id": "PilloryT3",
					"name": "Pilori",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Pillory.prefab",
						"refItem": "Pillory"
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 16,
						"y": 10,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"rarity": 2,
					"tool": {
						"width": 2,
						"height": 2,
						"capacity": 4,
						"tipZ": 2,
						"hideHandEquipment": true,
						"tier": 3
					},
					"price": 104,
					"desc": "[ASSIGN] les prisonniers assignés ne peuvent pas s'enfuir pendant le repos."
				},
				{
					"id": "Stake",
					"name": "Pieu d'empalement",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Stake.prefab",
						"value": 2
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 8,
						"y": 2,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 101,
					"rarity": 2,
					"tool": {
						"width": 3,
						"height": 2,
						"capacity": 1,
						"animation": "Stake",
						"hideHandEquipment": true,
						"tier": 1,
						"tipZ": 2
					},
					"desc": "Placez un cadavre au bout du pieu pour générer de l'Influence après chaque Repos.\n\n[ASSIGN] double l'Influence générée par le cadavre.",
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "StakeT2",
					"name": "Pieu d'empalement",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Stake/Stake_Lvl2.prefab",
						"refItem": "Stake",
						"value": 2,
						"bonuses": [
							{
								"bonus": "StakeMoreInfluence",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"type": "Tool",
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 18,
						"y": 8,
						"width": 2,
						"height": 2
					},
					"rarity": 2,
					"price": 101,
					"desc": "Placez un cadavre au bout du pieu pour générer de l'Influence après chaque Repos.\n\n[ASSIGN] double l'Influence générée par le cadavre.",
					"tool": {
						"width": 3,
						"height": 2,
						"capacity": 1,
						"animation": "Stake",
						"hideHandEquipment": true,
						"tier": 2,
						"tipZ": 2
					}
				},
				{
					"id": "StakeT3",
					"name": "Pieu d'empalement",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Stake/Stake_Lvl3.prefab",
						"refItem": "Stake",
						"value": 2,
						"bonuses": [
							{
								"bonus": "StakeMoreInfluence",
								"value": 2
							}
						]
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 18,
						"y": 10,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"rarity": 2,
					"price": 101,
					"desc": "Placez un cadavre au bout du pieu pour générer de l'Influence après chaque Repos.\n\n[ASSIGN] double l'Influence générée par le cadavre.",
					"tool": {
						"width": 3,
						"height": 2,
						"capacity": 1,
						"animation": "Stake",
						"hideHandEquipment": true,
						"tier": 3,
						"tipZ": 2
					}
				},
				{
					"id": "Trap",
					"name": "Piège",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Trap.prefab"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 12,
						"y": 2
					},
					"type": "Tool",
					"price": 10,
					"rarity": 2,
					"desc": "Ce dispositif permet d’attraper des petits animaux pendant un Repos. Utilisable une fois.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 2,
						"width": 2
					},
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "Banner",
					"name": "Bannière",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/BannerCamp.prefab"
					},
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 18,
						"y": 2,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 0,
					"rarity": 2,
					"tool": {
						"width": 2,
						"height": 2,
						"tipZ": 2,
						"tier": 1,
						"capacity": 1
					},
					"desc": "Cette bannière représente votre troupe et votre fierté.\n\n[ASSIGN] Un lieutenant assigné portera fièrement la bannière dans le monde."
				},
				{
					"id": "Chest",
					"name": "Coffre de camp",
					"weight": 2,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Chest.prefab",
						"value": 10,
						"activity": "MoneyLaundering"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 6,
						"y": 2,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 94,
					"rarity": 2,
					"tool": {
						"width": 3,
						"height": 3,
						"capacity": 1,
						"hideHandEquipment": true,
						"animation": "Chest"
					},
					"desc": "Stockez les objets que vous souhaitez conserver dans ce coffre.\n\n[JOBASSIGN] : Blanchit petit à petit les objets stockés volés pendant les Repos.",
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "BrewBarrel",
					"name": "Tonneau de brassage",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"value": 1,
						"model": "prefabs/camp/elements/BrewBarrel.prefab"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 2,
						"y": 0,
						"width": 2,
						"height": 2
					},
					"type": "ToolProd",
					"rarity": 2,
					"desc": "[ASSIGN] production d'alcool par brassage de fruits pendant le Repos.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 2,
						"width": 2,
						"capacity": 1,
						"converterTool": true,
						"animation": "BrewBarrel",
						"hideHandEquipment": true
					},
					"price": 96,
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "Beehive",
					"name": "Ruche",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Beehive.prefab"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 0,
						"y": 0,
						"width": 2,
						"height": 2
					},
					"type": "ToolProd",
					"price": 100,
					"rarity": 2,
					"desc": "[ASSIGN] production de miel avec des plantes pendant le Repos.",
					"tool": {
						"width": 2,
						"height": 2,
						"converterTool": true,
						"capacity": 1,
						"animation": "Beehive",
						"hideHandEquipment": true
					},
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "WatchStool",
					"name": "Tabouret de veille",
					"weight": 4,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/WatchStool.prefab"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 14,
						"y": 0,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 98,
					"rarity": 2,
					"desc": "[ASSIGN] \n- Réduit les chances d’être attaqué pendant le Repos. \n- Réduit les chances d'évasion des prisonniers.",
					"tool": {
						"campWidth": 2,
						"campHeight": 2,
						"toolCapacity": 2,
						"height": 4,
						"width": 4,
						"capacity": 1,
						"hideHandEquipment": true,
						"animation": "WatchStool"
					},
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "DiceGame",
					"name": "Jeu de dés",
					"weight": 2.5,
					"baseBonus": [],
					"props": {
						"value": 2,
						"model": "prefabs/camp/elements/Dice_Game.prefab"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 16,
						"y": 2,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"desc": "[ASSIGN] génère <happy><good>+[VALUE]</good></happy> à chaque Repos si deux compagnons sont assignés.",
					"tool": {
						"width": 2,
						"height": 2,
						"capacity": 2,
						"hideHandEquipment": true,
						"animation": "DiceIdle",
						"assignOffset": {
							"x": 0.3
						},
						"bonusIfAssign": {
							"value": 2,
							"bonus": "Happy"
						}
					},
					"rarity": 2,
					"price": 104,
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "Lute",
					"name": "Luth",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"value": 1,
						"activity": "Sing",
						"model": "prefabs/camp/elements/Lute.prefab",
						"actionTitle": "Consulter le Répertoire"
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 14,
						"y": 2,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"desc": "Vous pouvez jouer des morceaux dans les tavernes pour récolter un peu de Krowns et d’Influence.\n\n[JOBASSIGN] confère [VALUE] [Willpower] à chaque compagnon.",
					"rarity": 2,
					"price": 100,
					"tool": {
						"width": 2,
						"height": 2,
						"capacity": 1,
						"animation": "Sing",
						"hideHandEquipment": true,
						"assignOffset": {
							"x": 0.5,
							"y": 0.3,
							"z": 0
						},
						"bonusIfAssign": {
							"value": 1,
							"bonus": "Willpower"
						}
					},
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "Whip",
					"name": "Fouet",
					"weight": 3.5,
					"baseBonus": [],
					"props": {
						"model": "prefabs/camp/elements/Whip.prefab",
						"custom": {
							"missProbability": 1,
							"malusCompanionHappiness": -3
						}
					},
					"icon": {
						"file": "ui/Icons/Icons_Camp.png",
						"size": 96,
						"x": 0,
						"y": 4,
						"width": 2,
						"height": 2
					},
					"type": "Tool",
					"price": 99,
					"rarity": 2,
					"tool": {
						"width": 2,
						"height": 2,
						"capacity": 1
					},
					"desc": "[ASSIGN] vous pouvez fouetter vos compagnons afin de les motiver à travailler.",
					"group": 35,
					"iconeDone": true
				},
				{
					"id": "Anvil",
					"name": "Enclume",
					"weight": 20,
					"props": {
						"activity": "Forge",
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 18
					},
					"type": "Tool",
					"desc": "Choisissez un compagnon pour forger armes et armures à l'aide de minerais, de cuir et de bois.",
					"baseBonus": [],
					"lore": "",
					"group": 36,
					"iconeDone": true
				},
				{
					"id": "ApothecaryTable",
					"name": "Table d'apothicaire",
					"weight": 20,
					"baseBonus": [],
					"props": {
						"activity": "Alchemy",
						"feature": "HideInCheatMenu"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 19,
						"y": 18
					},
					"type": "Tool",
					"desc": "Choisissez un compagnon pour confectionner des remèdes à l'aide d'herbacés et divers composants alchimiques.",
					"group": 36,
					"iconeDone": true
				},
				{
					"id": "Gems",
					"name": "Gemmes",
					"weight": 10,
					"props": {
						"flags": 64,
						"notes": "Lieu : Arthès"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 4
					},
					"type": "TradeGoods",
					"price": 100,
					"baseBonus": [],
					"rarity": 2,
					"desc": "Des pierres aux reflets chamarrés qu'on incruste aux bijoux et aux couronnes.",
					"group": 37,
					"iconeDone": true
				},
				{
					"id": "Silver",
					"name": "Argent",
					"weight": 10,
					"baseBonus": [],
					"props": {
						"flags": 64,
						"notes": "Lieu : Vertruse"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 6
					},
					"type": "TradeGoods",
					"price": 100,
					"desc": "Un métal rare et difficile à produire qu'on utilise principalement pour mesurer le succès et le pouvoir d'un individu.",
					"rarity": 2,
					"group": 37,
					"iconeDone": true
				},
				{
					"id": "Pottery",
					"name": "Poteries",
					"weight": 7,
					"baseBonus": [],
					"props": {
						"flags": 64,
						"notes": "Lieu : Tiltrën, Grinmeer"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 5
					},
					"type": "TradeGoods",
					"price": 75,
					"rarity": 1,
					"desc": "Oscillant entre l'artisanat et l'art, les poteries sont des biens à part, notamment à cause de leur proportions à se briser pendant le voyage.",
					"group": 37,
					"iconeDone": true
				},
				{
					"id": "Furs",
					"name": "Fourrures",
					"weight": 7,
					"baseBonus": [],
					"props": {
						"flags": 64,
						"notes": "Lieu : Ludern, Arthes, Alazar"
					},
					"type": "TradeGoods",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 5
					},
					"rarity": 1,
					"price": 75,
					"desc": "Produire une fourrure est plus difficile qu'on ne le croit : nombreux sont les facteurs qui peuvent affecter sa valeur.",
					"group": 37,
					"iconeDone": true
				},
				{
					"id": "Parchment",
					"name": "Parchemins",
					"weight": 7,
					"baseBonus": [],
					"props": {
						"flags": 64,
						"notes": "Lieu : Vertruse, Grinmeer"
					},
					"group": 37,
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 5,
						"y": 14
					},
					"type": "TradeGoods",
					"price": 75,
					"rarity": 1,
					"desc": "Indispensables aux érudits, ces parchemins trouveront aussi des acquéreurs parmi les marchands et les bourgmestres qui aiment tenir leurs comptes.",
					"iconeDone": true
				},
				{
					"id": "Spices",
					"name": "Épices",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"flags": 64,
						"notes": "Lieu : Vertruse, Arthes, Ludern"
					},
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 6
					},
					"type": "TradeGoods",
					"price": 50,
					"rarity": 0,
					"desc": "Des biens énigmatiques pour le peuple qui s'étonne de leurs couleurs quand les artistocrates profitent de leurs saveurs.",
					"group": 37,
					"iconeDone": true
				},
				{
					"id": "Linen",
					"name": "Draps",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"flags": 64,
						"notes": "Lieu : Tiltrën, Grinmeer, Alazar"
					},
					"type": "TradeGoods",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 0,
						"y": 6
					},
					"price": 50,
					"rarity": 0,
					"desc": "Si la qualité de la laine est importante pour faire un bon drap, c'est la méthode de tissage qui détermine sa valeur sur le marché.",
					"group": 37,
					"iconeDone": true
				},
				{
					"id": "Amber",
					"name": "Ambre",
					"weight": 5,
					"baseBonus": [],
					"props": {
						"flags": 64,
						"notes": "Lieu : Arthès, Ludern, Alazar"
					},
					"type": "TradeGoods",
					"icon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 2,
						"y": 5
					},
					"price": 50,
					"rarity": 0,
					"desc": "L'ambre est prisé aussi bien pour son aspect esthétique que pour ses prétendues qualités curatives.",
					"group": 37,
					"iconeDone": true
				},
				{
					"id": "Knowledge",
					"name": "Connaissance",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true
					},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 11,
						"y": 3
					},
					"desc": "La <b>Connaissance</b> permet d'apprendre de nouveaux plans, patrons et recettes dans le Compendium.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "Discovery",
					"name": "Découverte",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true
					},
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 3
					},
					"desc": "Découvrez de nouveaux lieux pour faire progresser la jauge et obtenir des points de Connaissance.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "PathMightKnowledge",
					"name": "Connaissance Puissance et Justice",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true
					},
					"iconeDone": true,
					"group": 38,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 7,
						"y": 8
					},
					"desc": "Vous avez un point à dépenser pour débloquer un bonus dans la Voie Puissance et Justice."
				},
				{
					"id": "PathTradeKnowledge",
					"name": "Connaissance Commerce et Artisanat",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true
					},
					"iconeDone": true,
					"group": 38,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 8,
						"y": 8
					},
					"desc": "Vous avez un point à dépenser pour débloquer un bonus dans la Voie Commerce et Artisanat."
				},
				{
					"id": "PathCrimeKnowledge",
					"name": "Connaissance Crime et Chaos",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true
					},
					"iconeDone": true,
					"group": 38,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 9,
						"y": 8
					},
					"desc": "Vous avez un point à dépenser pour débloquer un bonus dans la Voie Crime et Chaos."
				},
				{
					"id": "PathMysteryKnowledge",
					"name": "Connaissance Mystère et Connaissance",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"hidden": true
					},
					"iconeDone": true,
					"group": 38,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 10,
						"y": 8
					},
					"desc": "Vous avez un point à dépenser pour débloquer un bonus dans la Voie Mystère et Connaissance."
				},
				{
					"id": "RunAbility",
					"name": "Course",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "CanRun",
								"value": 1
							}
						]
					},
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 10
					},
					"desc": "Vous pouvez courir pendant quelques instants. Idéal pour échapper à des poursuivants.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "EnduranceTraining",
					"name": "Entraînement d'endurance",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "WalkSpeed",
								"value": 5
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 12
					},
					"type": "Command",
					"desc": "La troupe améliore sa résistance à l'effort ce qui lui permet de se déplacer plus rapidement.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "CareerPlan",
					"name": "Plan de carrière",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "CareerPlan",
								"value": 1
							}
						]
					},
					"group": 38,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 14
					},
					"type": "Command",
					"desc": "Vous permet d'améliorer le contrôle de l'évolution de vos compagnons quand ils gagnent un niveau.",
					"iconeDone": true
				},
				{
					"id": "Restauration",
					"name": "Restauration",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RawMaterialEfficacity",
								"value": 5
							}
						]
					},
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 7
					},
					"desc": "Votre troupe apprend à mieux prendre soin de ses armures.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "Rationing",
					"name": "Rationnement",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "FoodReduction",
								"value": 3
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 12
					},
					"type": "Command",
					"desc": "Vos compagnons deviennent plus raisonnables et rationnent leur nourriture.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "WeightTraining",
					"name": "Entraînement lesté",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "TransportBonus",
								"value": 10
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 11
					},
					"type": "Command",
					"desc": "La troupe s'entraîne lestée et devient capable de porter de lourds poids sur de longues distances.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "Frugality",
					"name": "Frugalité",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "UnitSalaryReduction",
								"value": 10
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 12
					},
					"type": "Command",
					"desc": "Chaque compagnon accepte d'être un peu moins payé pour le bien commun.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "ActionPointBonus1",
					"name": "Créateurs d'exploits",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"value": 1,
								"bonus": "ActionPoint"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 15
					},
					"type": "Command",
					"desc": "Vos compagnons sont prêts à en découdre et à réaliser des actions d'éclat sur le champ de bataille.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "FightForGold",
					"name": "Pour l'argent !",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "GoldGainFight",
								"value": 5
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 13
					},
					"type": "Command",
					"desc": "Les compagnons fouillent les cadavres ennemis dans les endroits les plus farfelus pour trouver des krowns.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "BidHunters",
					"name": "Chasseurs d'offres",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "MoreContractsBoard",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 12
					},
					"type": "Command",
					"desc": "Vos compagnons se mettent à soudoyer l'Émissaire des primes pour obtenir d'autres contrats.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "BountiesStream",
					"name": "Flot de primes",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "ContractsQuantity",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 12
					},
					"type": "Command",
					"desc": "Votre troupe est de mieux en mieux organisée et cherche à rafler de plus en plus de primes.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "Orientation",
					"name": "Orientation",
					"weight": 0,
					"baseBonus": [],
					"props": {},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 15
					},
					"type": "Command",
					"desc": "Votre troupe peut indiquer un objectif sur la carte avec [RMB] de façon à pouvoir se repérer.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "Cannibalism",
					"name": "Cannibalisme",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "Cannibalism"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 10
					},
					"type": "Command",
					"desc": "Votre troupe est prête à tout pour survivre, y compris manger ses congénères...",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "HumanTannery",
					"name": "Industrie humaine",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "HumanTannery"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 13
					},
					"type": "Command",
					"desc": "L'éthique n'arrête plus vos compagnons qui ne font plus de différences entre humain et animal.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "Cunning",
					"name": "Roublardise",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "SuspicionLowerFaster",
								"value": 10
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 10
					},
					"type": "Command",
					"desc": "Vos compagnons aiguisent leurs compétences criminelles et passent maîtres dans l'art de passer inaperçus.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "RecruitCostReduced",
					"name": "Sens de la conversation",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "CompanionsRecruitCostReduction",
								"value": 10
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 13
					},
					"type": "Command",
					"desc": "Vos compagnons deviennent d'habiles orateurs capables de convaincre n'importe qui de les rejoindre.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "SpeedupRecruit",
					"name": "Formation accélérée",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "SpeedupRecruit"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 14
					},
					"type": "Command",
					"desc": "Votre troupe sait accueillir les nouvelles recrues et leur réserve un traitement de choix.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "WhipToDeath",
					"name": "Pour l'exemple !",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "WhipDeath"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 14
					},
					"type": "Command",
					"desc": "Votre troupe craint les coups de fouet un peu trop appuyés.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "PoisonMastery",
					"name": "Maîtrise du poison",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "PoisonMastery"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 14
					},
					"type": "Command",
					"desc": "Vos compagnons apprennent à manipuler les plantes toxiques et autres agents infectieux pour causer la mort dans d'atroces souffrances.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "BleedingMastery",
					"name": "Maîtrise du saignement",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "BleedingMastery"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 10
					},
					"type": "Command",
					"desc": "Vos compagnons apprennent l'art délicat de la boucherie sur le champ de bataille.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "BurningMastery",
					"name": "Maîtrise de la brûlure",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "BurningMastery"
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 13
					},
					"type": "Command",
					"desc": "Votre troupe développe un goût prononcé pour les chairs carbonisées.",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "RestaurationForgeGosenberg",
					"name": "Restauration de Gosenberg",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RawMaterialEfficacity",
								"value": 5
							}
						],
						"buyRequireCounter": "VertruseSettingCompleted"
					},
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 7
					},
					"type": "Command",
					"desc": "Votre troupe optimise l'entretien des armures selon les méthodes de Gosenberg.",
					"price": 100,
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "RestaurationForgeEdoran",
					"name": "Restauration d'Edoran",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RawMaterialEfficacity",
								"value": 5
							}
						],
						"buyRequireCounter": "ArthesSettingCompleted"
					},
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 7
					},
					"type": "Command",
					"desc": "Votre troupe optimise l'entretien des armures selon les méthodes d'Edoran.",
					"price": 100,
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "RestaurationForgeHarag",
					"name": "Restauration de Harag",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RawMaterialEfficacity",
								"value": 5
							}
						],
						"buyRequireCounter": "LudernSettingCompleted"
					},
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 7
					},
					"type": "Command",
					"desc": "Votre troupe optimise l'entretien des armures selon les méthodes de Harag.",
					"price": 100,
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "RestaurationForgeTiltren",
					"name": "Restauration de Tilrën",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RawMaterialEfficacity",
								"value": 5
							}
						],
						"buyRequireCounter": "TiltrenSettingCompleted"
					},
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 7
					},
					"price": 100,
					"desc": "Votre troupe optimise l'entretien des armures selon les méthodes de Tiltrën.",
					"type": "Command",
					"group": 38,
					"iconeDone": true
				},
				{
					"id": "RestaurationForgeAlazar",
					"name": "Restauration d'Alazar",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RawMaterialEfficacity",
								"value": 5
							}
						],
						"feature": "Alazar1_Update",
						"buyRequireCounter": "AlazarSettingCompleted"
					},
					"iconeDone": true,
					"group": 38,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 7
					},
					"price": 100,
					"desc": "Votre troupe optimise l'entretien des armures selon les méthodes d'Alazar"
				},
				{
					"id": "Rationning2",
					"name": "Rationnement Strict",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "FoodReduction",
								"value": 3
							}
						]
					},
					"iconeDone": true,
					"group": 39,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 12
					},
					"desc": "Vos compagnons sont vraiment très économes sur la nourriture."
				},
				{
					"id": "ImprovedRestauration",
					"name": "Restauration améliorée",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RawMaterialEfficacity",
								"value": 5
							}
						]
					},
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 7
					},
					"desc": "Votre troupe optimise l'entretien des armures.",
					"group": 39,
					"iconeDone": true
				},
				{
					"id": "FightForRenown",
					"name": "Pour la gloire !",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "InfluenceGainFight",
								"value": 5
							}
						],
						"hidden": true
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 12
					},
					"type": "Command",
					"desc": "La troupe a tendance à se vanter après avoir rossé n'importe quel adversaire.",
					"group": 39,
					"iconeDone": true
				},
				{
					"id": "FightForPower",
					"name": "Pour la puissance !",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "ExperienceFightBonus",
								"value": 10
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 39,
					"type": "Command",
					"desc": "Votre troupe apprend mieux de ses combats.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 13
					}
				},
				{
					"id": "ActionPointBonus2",
					"name": "Braves parmi les braves",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "ActionPoint",
								"value": 1
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 15
					},
					"type": "Command",
					"desc": "Votre troupe surentraînée est prête à tout pour remporter la victoire. Avec classe.",
					"group": 39,
					"iconeDone": true
				},
				{
					"id": "Ruthless",
					"name": "Impitoyables",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "MoraleCombatBonus",
								"value": 1
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 39,
					"type": "Command",
					"desc": "Éliminer les premiers adversaires augmente grandement les chances de victoire.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 15
					}
				},
				{
					"id": "Opportunism",
					"name": "Opportunistes",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "OpportunityAttackDamageBonus",
								"value": 5
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 39,
					"type": "Command",
					"desc": "Vos compagnons apprennent à profiter des faiblesses de leurs adversaires.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 14
					}
				},
				{
					"id": "MoreLayers",
					"name": "Artisans Défenseurs",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "AdditionnalLayerSlot",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 39,
					"type": "Command",
					"desc": "Si l'on entretient correctement son armure, il est possible de l'améliorer bien au-delà des limites habituelles.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 13
					}
				},
				{
					"id": "NonDestroyedLayers",
					"name": "Récupérateur soigneux",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RemovedLayersUpgrade"
							}
						]
					},
					"iconeDone": true,
					"group": 39,
					"type": "Command",
					"desc": "Vos compagnons apprennent à mieux prendre soin de leur équipement.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 13
					}
				},
				{
					"id": "Forgecraft",
					"name": "Art de la Forge",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "CraftedWeaponsStatsBonus",
								"value": 10
							},
							{
								"bonus": "CraftedArmorsStatsBonus",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 39,
					"type": "Command",
					"desc": "Votre troupe peut compter sur des forgerons passionnés et appliqués.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 13
					}
				},
				{
					"id": "ForgeTrade",
					"name": "Commerce de Forge",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "WeaponsPriceBonus",
								"value": 10
							},
							{
								"bonus": "ArmorsPriceBonus",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 39,
					"type": "Command",
					"desc": "Votre troupe peut compter sur des revenus conséquent grâce à sa forge.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 14
					}
				},
				{
					"id": "LeftHandedSpecialist",
					"name": "Spécialistes main gauche",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "LeftHandedForge",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 39,
					"type": "Command",
					"desc": "Si l'on possède deux mains, c'est pour les utiliser toutes les deux correctement.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 13
					}
				},
				{
					"id": "PathRunners",
					"name": "Course de fond",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "PathRoadSpeedBonus",
								"value": 20
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 12
					},
					"type": "Command",
					"desc": "Le temps, c'est de l'argent. En tant qu'honnête marchand, la troupe apprend à maximiser ses déplacements.",
					"group": 40,
					"iconeDone": true
				},
				{
					"id": "Carrier",
					"name": "Déménageurs",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "TransportBonus",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 40,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 11
					},
					"type": "Command",
					"desc": "Plus on transporte et plus on vend. C'est la recette de la richesse."
				},
				{
					"id": "Negociator",
					"name": "Négociateurs",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "ContractsNegociation"
							}
						]
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 12
					},
					"desc": "Les commanditaires qui proposent les primes des contrats peuvent faire plus d'efforts. Il faut juste savoir leur expliquer comment."
				},
				{
					"id": "MissionGold",
					"name": "Mercenaires de valeur",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "ContratsKrownsBonus",
								"value": 20
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 12
					},
					"desc": "Une troupe aussi connue que la vôtre se doit d’être mieux rémunérée que les autres."
				},
				{
					"id": "PrestigiousMercenaries",
					"name": "Mercenaires prestigieux",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "ContractsQuantity",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 12
					},
					"desc": "Votre troupe est plus efficace dans la résolution des contrats et peut donc les multiplier."
				},
				{
					"id": "TradeGoodsBought",
					"name": "Approvisionneurs",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "TradeGoodsBuyPriceReduction",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 12
					},
					"desc": "Votre troupe sait comment obtenir de meilleurs tarifs auprès des autres marchands."
				},
				{
					"id": "TradeMissionDone",
					"name": "Marchands habiles",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "TradeGoodsPriceBonus",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 12
					},
					"desc": "Savoir proposer aux acheteurs ce qui leur manque est un art très lucratif."
				},
				{
					"id": "MasterFollower",
					"name": "Maîtres et disciples",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "DoubleJobXP"
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 12
					},
					"desc": "Apprendre par soi-même, c'est important, mais il est tout aussi bénéfique de partager les connaissances de ses ainés."
				},
				{
					"id": "LuxuriesSold",
					"name": "Orfèvres",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "LuxuriesPriceBonus",
								"value": 50
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 12
					},
					"desc": "Il est toujours rentable de vendre cher ce que les riches peuvent acheter."
				},
				{
					"id": "PrisonnersGiven",
					"name": "Incorruptibles",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "InfluenceGainPrisonnersGiven",
								"value": 20
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 14
					},
					"desc": "Servir la justice pour l'argent peut aussi avoir des bons cotés sur la notoriété."
				},
				{
					"id": "Cooperative",
					"name": "Coopérative",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "UnitSalaryReduction",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 14
					},
					"desc": "Les salaires sont négociés à la baisse pour le bienfait de la troupe."
				},
				{
					"id": "TradeHorses",
					"name": "Chevaux de commerce",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "TradeHorses",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 40,
					"type": "Command",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 12
					},
					"desc": "Mieux harnachés, les poneys supportent plus de charge."
				},
				{
					"id": "MerchantFought",
					"name": "Brigands de grands chemin",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "InfluenceGainMerchantsFightBonus",
								"value": 20
							},
							{
								"bonus": "XpGainMerchantsFightBonus",
								"value": 20
							}
						]
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "La base de la criminalité est de débusquer les krowns là où ils sont.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 15
					}
				},
				{
					"id": "AmbushDone",
					"name": "Sans-vergognes",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "InfluenceGainAmbushFight",
								"value": 20
							},
							{
								"bonus": "XpGainAmbushFight",
								"value": 20
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "Une embuscade réussie, c'est limiter les risques tout en maximisant le butin.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 15
					}
				},
				{
					"id": "Backstabs",
					"name": "Attaque en traître",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "BackstabCritChances",
								"value": 5
							}
						]
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "Attaquer un ennemi de dos, ce n'est pas de la lâcheté, c'est de stratégie.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 16
					}
				},
				{
					"id": "NonLetal",
					"name": "Non-létal",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "HumanKnockoutChance",
								"value": 20
							}
						]
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "Votre troupe apprend où frapper pour ne pas abîmer la future main-d'œuvre.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 14
					}
				},
				{
					"id": "Bandits",
					"name": "Gibiers de potence",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RunForestWanted",
								"value": 20
							}
						]
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "La forêt est le domaine des plantes, des animaux et de ceux qui veulent rester discrets.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 16
					}
				},
				{
					"id": "AssassinApprentice",
					"name": "Apprentis assassins",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "AssassinationMissionUnlocked"
							}
						]
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "Vos compagnons n'ont plus de scrupules et acceptent les contrats les plus douteux.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 16
					}
				},
				{
					"id": "StolenItemsCount",
					"name": "Doigts de fée",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "SuspicionStealReduction",
								"value": 20
							}
						]
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "Vos compagnons sont de plus en plus discrets durant leur rapine.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 14
					}
				},
				{
					"id": "WantedDuration",
					"name": "Innocents",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "SuspicionLowerFaster",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "Pour être un bon voleur, il faut avoir la tête la plus innocente possible, et savoir se faire oublier.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 16
					}
				},
				{
					"id": "Awareness",
					"name": "Sur le qui-vive",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "SurpriseAndAmbush",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "Anticiper. Prévoir. Préparer. Ce sont les maîtres-mots pour que toutes les situations tournent à votre avantage.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 16
					}
				},
				{
					"id": "SoldStolenItemsCount",
					"name": "Clients réguliers",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "StolenItemsPriceBonus",
								"value": 15
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "Les receleurs sont des voleurs comme les autres. Il faut savoir parler leur langage afin d'obtenir les bons tarifs.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 15
					}
				},
				{
					"id": "Parley",
					"name": "Parlementer",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "GuardInquisitionParley"
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "Personne n'est totalement insensible à un discours poignant et enflammé.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 16
					}
				},
				{
					"id": "Scapegoat",
					"name": "Boucs émissaires",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "GuardCulprit"
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 41,
					"type": "Command",
					"desc": "En accusant dans un même élan et de façon unanime, il est possible de faire passer pratiquement n'importe qui pour coupable.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 16
					}
				},
				{
					"id": "RunLonger",
					"name": "Course d'endurance",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "RunStamina",
								"value": 20
							}
						]
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 2,
						"y": 10
					},
					"type": "Command",
					"desc": "À force de parcourir le monde, vous pouvez courir plus longtemps.",
					"group": 42,
					"iconeDone": true
				},
				{
					"id": "Ascetism",
					"name": "Ascétisme",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "FoodReduction",
								"value": 3
							}
						]
					},
					"iconeDone": true,
					"group": 42,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 13
					},
					"type": "Command",
					"desc": "Vos compagnons apprennent à se satisfaire de moins de nourriture."
				},
				{
					"id": "Encyclopedist",
					"name": "Archiviste",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "DoubleLecternKnowledge"
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 42,
					"desc": "Votre troupe étudie l'Histoire et cherche surtout à y entrer en racontant la sienne.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 13
					},
					"type": "Command"
				},
				{
					"id": "Archaeologist",
					"name": "Archéologues",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "AntiquitiesPriceBonus",
								"value": 50
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 42,
					"desc": "Du point de vue de la connaissance, les antiquités n'ont pas de prix. Mais il est toujours possible de s'entendre sur un montant.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 13
					},
					"type": "Command"
				},
				{
					"id": "LegendCollectors",
					"name": "Restaurateurs de légendes",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "LegendaryWeaponUpdatePriceReduction",
								"value": 50
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 42,
					"desc": "Une arme plus célèbre que son porteur mérite d'être utilisée à son plein potentiel.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 13
					},
					"type": "Command"
				},
				{
					"id": "PestControl",
					"name": "Dératiseurs",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "InfluenceGainRatNest",
								"value": 50
							}
						]
					},
					"iconeDone": true,
					"group": 42,
					"desc": "Personne ne veut s'introduire dans ces nids sordides. C'est d'autant plus de prestige pour votre troupe.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 13
					},
					"type": "Command"
				},
				{
					"id": "Cleaner",
					"name": "Nettoyeurs",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "MoreSamplesRats",
								"value": 1
							}
						]
					},
					"iconeDone": true,
					"group": 42,
					"desc": "Votre troupe comprend l'importance des richesses qui peuvent être ramenées des nids de rats.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 13
					},
					"type": "Command"
				},
				{
					"id": "LessWounds",
					"name": "Juste une égratignure",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "LessInjuries",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 42,
					"desc": "Mieux vaut prévenir que guérir.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 13
					},
					"type": "Command"
				},
				{
					"id": "Poachers",
					"name": "Braconniers",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "AnimalCaptureChance",
								"value": 50
							}
						]
					},
					"iconeDone": true,
					"group": 42,
					"desc": "Aimer la nature, c'est se l'approprier sans l'abîmer.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 13
					},
					"type": "Command"
				},
				{
					"id": "TrackersLanguage",
					"name": "Langage des Traqueurs",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "TrackersMerchantsPriceReduction",
								"value": 10
							}
						]
					},
					"iconeDone": true,
					"group": 42,
					"desc": "Votre troupe est connue et reconnue auprès des Traqueurs.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 15
					},
					"type": "Command"
				},
				{
					"id": "MoreLights",
					"name": "Avis éclairés",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "BetterTorch"
							}
						],
						"hidden": true
					},
					"iconeDone": true,
					"group": 42,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 15
					},
					"type": "Command",
					"desc": "Il est tout aussi important de suivre une lumière spirituelle que physique."
				},
				{
					"id": "AnimalInstinct",
					"name": "Instinct animal",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "AnimalAggro"
							}
						]
					},
					"iconeDone": true,
					"group": 42,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 15
					},
					"type": "Command",
					"desc": "Respecter la nature, c'est savoir la comprendre sans la détruire."
				},
				{
					"id": "ResolutionMoreTransport",
					"name": "Promesse de profit",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "TransportBonus",
								"value": 50
							}
						]
					},
					"iconeDone": true,
					"group": 43,
					"type": "Resolution",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 18
					},
					"desc": "Jusqu'au prochain repos, votre troupe accepte de se surcharger afin de transporter plus de biens précieux."
				},
				{
					"id": "ResolutionMoreXp",
					"name": "Progrès fulgurants",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "ExperienceFightBonus",
								"value": 30
							}
						]
					},
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 17
					},
					"type": "Resolution",
					"desc": "Jusqu'au prochain repos, ce qui ne tuera pas les compagnons les rendra plus forts !"
				},
				{
					"id": "ResolutionMoreGather",
					"name": "Ramassage coordonné",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "GatherBonus",
								"value": 50
							}
						]
					},
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 16
					},
					"type": "Resolution",
					"desc": "Jusqu'au prochain repos, votre troupe ramasse des ressources en plus grosse quantité."
				},
				{
					"id": "ResolutionMoreKnowledge",
					"name": "Soif de connaissances",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "KnowledgeExperienceBonus",
								"value": 50
							}
						]
					},
					"iconeDone": true,
					"group": 43,
					"type": "Resolution",
					"desc": "Jusqu'au prochain repos, votre troupe est plus attentive aux détails du monde qui l'entoure.",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 15
					}
				},
				{
					"id": "ResolutionMoreLoot",
					"name": "Respect de l'adversaire",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "MoreLoot",
								"value": 50
							}
						],
						"refBonus": "ResolutionMight"
					},
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 14
					},
					"type": "Resolution",
					"desc": "Jusqu'au prochain repos, le groupe ramasse plus de butin après un combat."
				},
				{
					"id": "ResolutionSellPriceCraftedItems",
					"name": "Foire aux artisans",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "BonusCraftedItemPrice",
								"value": 50
							}
						],
						"refBonus": "ResolutionTrade"
					},
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 19
					},
					"type": "Resolution",
					"desc": "Jusqu'au prochain repos, vous annoncez avec fierté votre grande brocante dédiée à la vente de vos équipements et objets manufacturés."
				},
				{
					"id": "ResolutionNoWanted",
					"name": "Innocence feinte",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "NoWanted",
								"value": 1
							}
						],
						"refBonus": "ResolutionCrime"
					},
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 15
					},
					"type": "Resolution",
					"desc": "Jusqu'au prochain repos,votre troupe se fait passer pour une troupe commune, plus difficilement détectable aux yeux de l'autorité locale."
				},
				{
					"id": "ResolutionForcedMarch",
					"name": "Motivation débordante",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"bonuses": [
							{
								"bonus": "Tiredness",
								"value": 25
							}
						],
						"refBonus": "ResolutionMystery"
					},
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 16
					},
					"type": "Resolution",
					"desc": "Jusqu'au prochain repos, motivée par l'appât du gain, votre troupe ressent une nouvelle poussée de puissance pour se déplacer plus longtemps."
				},
				{
					"id": "PoneyItem",
					"name": "Poney",
					"weight": 0,
					"baseBonus": [],
					"props": {
						"disableLoot": true
					},
					"group": 44,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 6
					},
					"type": "Trinket",
					"rarity": 0,
					"desc": "Un poney à l'œil brillant et au crin soyeux.",
					"iconeDone": true
				}
			],
			"props": {
				"displayIcon": "icon",
				"hasGroup": true
			},
			"separators": [
				{
					"title": "Currencies",
					"id": "Unknown"
				},
				{
					"title": "Weapons",
					"id": "DaggerBase"
				},
				{
					"level": 1,
					"title": "Base",
					"id": "DaggerBase"
				},
				{
					"title": "Daggers",
					"level": 2,
					"id": "DaggerStart"
				},
				{
					"title": "Maces",
					"level": 2,
					"id": "MaceStart"
				},
				{
					"title": "Maces 2H",
					"level": 2,
					"id": "Mace2HStart"
				},
				{
					"title": "Axes",
					"level": 2,
					"id": "AxeStart"
				},
				{
					"title": "Axes 2H",
					"level": 2,
					"id": "Axe2HStart"
				},
				{
					"title": "Swords",
					"level": 2,
					"id": "SwordStart"
				},
				{
					"title": "Swords 2H",
					"level": 2,
					"id": "Sword2HStart"
				},
				{
					"title": "Polearms",
					"level": 2,
					"id": "PolearmStart"
				},
				{
					"title": "Bows",
					"level": 2,
					"id": "BowStart"
				},
				{
					"title": "Wands",
					"level": 2,
					"id": "WandStart"
				},
				{
					"title": "Lefthand",
					"level": 2,
					"id": "ShieldStart"
				},
				{
					"level": 2,
					"title": "BundleForge",
					"id": "BundleOneHandedSwordAxeMaceT1"
				},
				{
					"title": "Armors",
					"id": "HeavyArmorCommonGeneric"
				},
				{
					"title": "Heavy",
					"level": 1,
					"id": "HeavyArmorCommonGeneric"
				},
				{
					"title": "Intermediate",
					"level": 1,
					"id": "MediumArmorCommonGeneric"
				},
				{
					"title": "Light",
					"level": 1,
					"id": "LightArmorCommonGeneric"
				},
				{
					"title": "BasicGear",
					"level": 1,
					"id": "BaseArmorStart1"
				},
				{
					"title": "People",
					"level": 1,
					"id": "BaseArmorFarmer"
				},
				{
					"title": "Accessories",
					"id": "BeltAccPoisonExtra"
				},
				{
					"title": "BeltAccessories",
					"level": 1,
					"id": "BeltAccPoisonExtra"
				},
				{
					"title": "BackpackAccessories",
					"level": 1,
					"id": "BackAccMiningGemsChance"
				},
				{
					"title": "AnimalAccessories",
					"level": 1,
					"id": "AnimAccAnimalWalkSpeed"
				},
				{
					"title": "ArmorLayer",
					"id": "LayerCommonArmor"
				},
				{
					"title": "Miscellaneous",
					"id": "RawMaterials"
				},
				{
					"title": "Consumable",
					"id": "SkillMastery"
				},
				{
					"title": "Component",
					"id": "Charcoal"
				},
				{
					"title": "Antiquities",
					"id": "SmallItemFragments"
				},
				{
					"title": "DragonBones",
					"id": "DragonBones1"
				},
				{
					"title": "Trinkets",
					"id": "PrayerCollection"
				},
				{
					"title": "Runes",
					"id": "RuneGeneric"
				},
				{
					"title": "Codex",
					"id": "WarriorCodex1"
				},
				{
					"title": "Food",
					"id": "Corpse"
				},
				{
					"title": "Recipe",
					"id": "AppleMatefaimRecipe"
				},
				{
					"title": "Tools",
					"id": "Firecamp"
				},
				{
					"title": "TownTools",
					"id": "Anvil"
				},
				{
					"title": "TradingGoods",
					"id": "Gems"
				},
				{
					"title": "Knowledges",
					"id": "Knowledge"
				},
				{
					"title": "PathMight",
					"id": "Rationning2"
				},
				{
					"title": "PathTrade",
					"id": "PathRunners"
				},
				{
					"title": "PathCrime",
					"id": "MerchantFought"
				},
				{
					"title": "PathMystery",
					"id": "RunLonger"
				},
				{
					"title": "Resolutions",
					"id": "ResolutionMoreTransport"
				},
				{
					"title": "Animals",
					"id": "PoneyItem"
				}
			]
		},
		{
			"name": "craft",
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "6:item",
					"name": "tool",
					"documentation": "Utiliser seulement le tool générique. Utiliser le champ toolTier pour spécifier un niveau de tool minimum"
				},
				{
					"typeStr": "8",
					"name": "recipe"
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "3",
					"name": "jobLevel"
				},
				{
					"typeStr": "8",
					"name": "learnCost"
				},
				{
					"typeStr": "8",
					"name": "itemCost"
				},
				{
					"typeStr": "4",
					"name": "calcPrice",
					"opt": true,
					"editor": {
						"formula": "craftPrice",
						"ignoreExport": true
					},
					"kind": "hidden",
					"display": 1
				}
			],
			"lines": [
				{
					"item": "Bread",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Wheat"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "GrilledPork",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Pork"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "BraisedChicken",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Chicken"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {
						"require": [
							{
								"item": "GrilledPork"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "WolfSausages",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Wolf"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "MediumCookedSheep",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Sheep"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "GameSkewers",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "GameMeat"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {
						"require": [
							{
								"item": "WolfSausages"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "GrilledCarp",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Carp"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "BoiledEel",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Eel"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {
						"require": [
							{
								"item": "GrilledCarp"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "SmokedSardine",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Sardine"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "RostedBass",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Bass"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {
						"require": [
							{
								"item": "SmokedSardine"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "SoupPike",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Pike"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "BrothPerch",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Perch"
						},
						{
							"qty": 1,
							"item": "Salt"
						}
					],
					"props": {
						"require": [
							{
								"item": "SoupPike"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "MintTisane",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Hemp"
						},
						{
							"qty": 1,
							"item": "Milk"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BlueberriesTisane",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Blueberries"
						},
						{
							"qty": 1,
							"item": "Milk"
						}
					],
					"props": {
						"require": [
							{
								"item": "MintTisane"
							}
						],
						"feature": "Alazar1_Update"
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "FakeMedecine",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Honey"
						},
						{
							"qty": 1,
							"item": "Mushrooms"
						},
						{
							"qty": 1,
							"item": "Hemp"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "FakeMedecineRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "AppleMatefaim",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 4,
							"item": "Apple"
						},
						{
							"qty": 3,
							"item": "Wheat"
						},
						{
							"qty": 1,
							"item": "Honey"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "AppleMatefaimRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "EelBrouet",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Eel"
						},
						{
							"qty": 2,
							"item": "Cabbage"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "EelBrouetRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "SheepHericoq",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Sheep"
						},
						{
							"qty": 2,
							"item": "Grape"
						},
						{
							"qty": 2,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "SheepHericoqRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "StuffedCabbage",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Chicken"
						},
						{
							"qty": 2,
							"item": "Cabbage"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "StuffedCabbageRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "TrapperFondue",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Cheese"
						},
						{
							"qty": 2,
							"item": "GameMeat"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "TrapperFondueRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "SurfAndTurfSkewer",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Carp"
						},
						{
							"qty": 2,
							"item": "Mushrooms"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "SurfAndTurfSkewerRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "CandiedFruits",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "Apple"
						},
						{
							"qty": 2,
							"item": "Grape"
						},
						{
							"qty": 3,
							"item": "Cherry"
						},
						{
							"qty": 1,
							"item": "Honey"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "CandiedFruitsRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "Oatmeal",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Wheat"
						},
						{
							"qty": 2,
							"item": "Milk"
						},
						{
							"qty": 3,
							"item": "Honey"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "OatmealRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "PorkStew",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Pork"
						},
						{
							"qty": 1,
							"item": "Beans"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "PorkStewRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeerBastedWolfRibs",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Wolf"
						},
						{
							"qty": 1,
							"item": "Beer"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "BeerBastedWolfRibsRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "MintCake",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 3,
							"item": "Milk"
						},
						{
							"qty": 2,
							"item": "Wheat"
						},
						{
							"qty": 2,
							"item": "Salt"
						},
						{
							"qty": 3,
							"item": "Hemp"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "MintCakeRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "FlamedCrocopork",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Crocopork"
						},
						{
							"qty": 2,
							"item": "Cider"
						},
						{
							"qty": 2,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "FlamedCrocoporkRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "PerchCabbage",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Perch"
						},
						{
							"qty": 2,
							"item": "Cabbage"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "PerchCabbageRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "MeadPike",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Pike"
						},
						{
							"qty": 1,
							"item": "Mead"
						},
						{
							"qty": 2,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "MeadPikeRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "HerbalBass",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Bass"
						},
						{
							"qty": 2,
							"item": "Hemp"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "HerbalBassRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "MushroomSardine",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Sardine"
						},
						{
							"qty": 2,
							"item": "Mushrooms"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "MushroomSardineRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "RatStew",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 3,
							"item": "Rat"
						},
						{
							"qty": 3,
							"item": "Cabbage"
						},
						{
							"qty": 2,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RatStewRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "MintPork",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Pork"
						},
						{
							"qty": 2,
							"item": "Hemp"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "MintPorkRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "HumanMixture",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Mushrooms"
						},
						{
							"qty": 1,
							"item": "Milk"
						},
						{
							"qty": 3,
							"item": "Corpse"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "HumanRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "CheeseSheep",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Sheep"
						},
						{
							"qty": 2,
							"item": "Cheese"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "CheeseSheepRecipe"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeanBears",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Bear"
						},
						{
							"qty": 1,
							"item": "Beans"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "BeanBearsRecipe"
						}
					],
					"itemCost": []
				},
				{
					"item": "BlueberriesChicken",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 2,
							"item": "Chicken"
						},
						{
							"qty": 2,
							"item": "Blueberries"
						},
						{
							"qty": 1,
							"item": "Honey"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "BlueberriesChickenRecipe"
						}
					],
					"itemCost": []
				},
				{
					"item": "TiltrenFeast",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "SheepHericoq"
						},
						{
							"qty": 1,
							"item": "AppleMatefaim"
						},
						{
							"qty": 6,
							"item": "Brandy"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeTiltrenFeast"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "EdoranFeast",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "PorkStew"
						},
						{
							"qty": 1,
							"item": "Oatmeal"
						},
						{
							"qty": 6,
							"item": "EdoranWine"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeEdoranFeast"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "GosenbergFeast",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "EelBrouet"
						},
						{
							"qty": 1,
							"item": "AppleMatefaim"
						},
						{
							"qty": 4,
							"item": "GosenbergWine"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeGosenbergFeast"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "GosenbergFeastTwo",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "MeadPike"
						},
						{
							"qty": 1,
							"item": "MintPork"
						},
						{
							"qty": 4,
							"item": "GosenbergWine"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeGosenbergFeastTwo"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "HaragFeast",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "BeerBastedWolfRibs"
						},
						{
							"qty": 1,
							"item": "CandiedFruits"
						},
						{
							"qty": 6,
							"item": "Beer"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeHaragFeast"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "AlazarFeast",
					"tool": "CookingPot",
					"recipe": [
						{
							"qty": 1,
							"item": "BeanBears"
						},
						{
							"qty": 1,
							"item": "BlueberriesChicken"
						},
						{
							"qty": 4,
							"item": "GosenbergWine"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAlazarFeast"
						}
					],
					"itemCost": []
				},
				{
					"item": "BaseArmorCommonCraft",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "Cloth"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "ShieldCommonCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 1,
							"item": "Leather"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "ShieldUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Leather"
						}
					],
					"props": {
						"require": [
							{
								"item": "ShieldCommonCraftT1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "BundleOneHandedSwordAxeMaceT1",
					"tool": "Anvil",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BundleTwoHandedSwordAxeMaceT1",
					"tool": "Anvil",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BundleBowDaggerPolearmT1",
					"tool": "Anvil",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BundleArmorT1",
					"tool": "Anvil",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BundleThrowingLeftHandT1",
					"tool": "Anvil",
					"recipe": [],
					"props": {},
					"jobLevel": 1,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "BundleOneHandedSwordAxeMaceT2",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleOneHandedSwordAxeMaceT1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BundleTwoHandedSwordAxeMaceT2",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleTwoHandedSwordAxeMaceT1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BundleBowDaggerPolearmT2",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleBowDaggerPolearmT1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BundleArmorT2",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleArmorT1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BundleThrowingLeftHandT2",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleThrowingLeftHandT1"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BundleOneHandedSwordAxeMaceT3",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleOneHandedSwordAxeMaceT2"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "BundleTwoHandedSwordAxeMaceT3",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleTwoHandedSwordAxeMaceT2"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "BundleBowDaggerPolearmT3",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleBowDaggerPolearmT2"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "BundleArmorT3",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleArmorT2"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "BundleThrowingLeftHandT3",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleThrowingLeftHandT2"
							}
						]
					},
					"jobLevel": 4,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BundleOneHandedSwordAxeMaceT4",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleOneHandedSwordAxeMaceT3"
							}
						],
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BundleTwoHandedSwordAxeMaceT4",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleTwoHandedSwordAxeMaceT3"
							}
						],
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BundleBowDaggerPolearmT4",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleBowDaggerPolearmT3"
							}
						],
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BundleArmorT4",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleArmorT3"
							}
						],
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BundleThrowingLeftHandT4",
					"tool": "Anvil",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BundleThrowingLeftHandT3"
							}
						]
					},
					"jobLevel": 5,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "ThrowingSickle",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "IronOre"
						},
						{
							"qty": 1,
							"item": "Wood"
						},
						{
							"qty": 1,
							"item": "Leather"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "ThrowingKnife",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "IronOre"
						},
						{
							"qty": 1,
							"item": "Wood"
						},
						{
							"qty": 1,
							"item": "Leather"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "ThrowingAxe",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "IronOre"
						},
						{
							"qty": 1,
							"item": "Wood"
						},
						{
							"qty": 1,
							"item": "Leather"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "ArmorPlatePonyT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 4,
							"item": "WhiteLeather"
						},
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Charcoal"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "ShieldUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"require": [
							{
								"item": "ShieldUncoCraftT1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "ThrowingKnifeT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 1,
							"item": "WhiteLeather"
						},
						{
							"qty": 2,
							"item": "Charcoal"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Wood"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "ThrowingSickleT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 1,
							"item": "WhiteLeather"
						},
						{
							"qty": 2,
							"item": "Charcoal"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Wood"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "ThrowingAxeT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 1,
							"item": "WhiteLeather"
						},
						{
							"qty": 2,
							"item": "Charcoal"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Wood"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "ArmorPlatePonyT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Cloth"
						},
						{
							"qty": 5,
							"item": "Charcoal"
						},
						{
							"qty": 4,
							"item": "Rimesteel"
						}
					],
					"props": {
						"require": [
							{
								"item": "ArmorPlatePonyT2"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "ShieldUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 7,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Rimesteel"
						},
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 7,
							"item": "Charcoal"
						}
					],
					"props": {
						"require": [
							{
								"item": "ShieldUncoCraftT2"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "ThrowingKnifeT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 2,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "Rimesteel"
						},
						{
							"qty": 4,
							"item": "Wood"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "ThrowingSickleT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 2,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "Rimesteel"
						},
						{
							"qty": 4,
							"item": "Wood"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "ThrowingAxeT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 2,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "Rimesteel"
						},
						{
							"qty": 4,
							"item": "Wood"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "ArmorPlatePonyT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						},
						{
							"qty": 5,
							"item": "GoldMineral"
						}
					],
					"props": {
						"require": [
							{
								"item": "ArmorPlatePonyT3"
							}
						],
						"feature": "Alazar1_Update"
					},
					"jobLevel": 4,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "ShieldUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 9,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "GoldMineral"
						},
						{
							"qty": 3,
							"item": "Cloth"
						},
						{
							"qty": 9,
							"item": "Charcoal"
						}
					],
					"props": {
						"require": [
							{
								"item": "ShieldUncoCraftT3"
							}
						],
						"feature": "Alazar1_Update"
					},
					"jobLevel": 4,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "ThrowingKnifeT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "GoldMineral"
						},
						{
							"qty": 6,
							"item": "Wood"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "ThrowingSickleT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "GoldMineral"
						},
						{
							"qty": 6,
							"item": "Wood"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "ThrowingAxeT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "GoldMineral"
						},
						{
							"qty": 6,
							"item": "Wood"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "MaceUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 2,
							"item": "Leather"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "AxeUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 2,
							"item": "Leather"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "SwordUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 8,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Wood"
						},
						{
							"qty": 2,
							"item": "Leather"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "Mace2HUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 8,
							"item": "IronOre"
						},
						{
							"qty": 8,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Leather"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "Axe2HUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 10,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 4,
							"item": "Leather"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "Sword2HUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 10,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 4,
							"item": "Leather"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BowUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "Rope"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "DaggerUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 7,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Leather"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "PolearmUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 7,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Leather"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "HeavyArmorUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 14,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Cloth"
						}
					],
					"props": {
						"bundle": "BundleArmorT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "MediumArmorUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 8,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 5,
							"item": "Leather"
						}
					],
					"props": {
						"bundle": "BundleArmorT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LightArmorUncoCraftT1",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 8,
							"item": "Leather"
						},
						{
							"qty": 5,
							"item": "Cloth"
						}
					],
					"props": {
						"bundle": "BundleArmorT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LayerCommonArmor",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "LayerCommonArmorRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "LayerCommonGuard",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "LayerCommonGuardRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "LayerCommonDexterity",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "LayerCommonDexterityRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "LayerCommonStrength",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "LayerCommonStrengthRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "LayerCommonCritical",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Charcoal"
						},
						{
							"qty": 2,
							"item": "Fat"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "LayerCommonCriticalRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "LayerCommonMovement",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "Leather"
						},
						{
							"qty": 5,
							"item": "Fat"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "LayerCommonMovementRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "MaceUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 2,
							"item": "WhiteLeather"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "AxeUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 2,
							"item": "WhiteLeather"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "SwordUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 2,
							"item": "WhiteLeather"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "Mace2HUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 7,
							"item": "IronOre"
						},
						{
							"qty": 9,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 7,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "Axe2HUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 8,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 4,
							"item": "WhiteLeather"
						},
						{
							"qty": 8,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "Sword2HUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 8,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 5,
							"item": "WhiteLeather"
						},
						{
							"qty": 8,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BowUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "IronOre"
						},
						{
							"qty": 8,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 5,
							"item": "Rope"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "DaggerUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "PolearmUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 5,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "HeavyArmorUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 9,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 4,
							"item": "WhiteLeather"
						},
						{
							"qty": 9,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleArmorT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "MediumArmorUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "WhiteLeather"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleArmorT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "LightArmorUncoCraftT2",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 8,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "WhiteLeather"
						},
						{
							"qty": 4,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleArmorT2"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "LayerUncoArmorStrength",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeLayerUncoArmorStrength"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LayerUncoDexterityCritical",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 5,
							"item": "Fat"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeLayerUncoDexterityCrit"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LayerUncoCriticalMovement",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "Charcoal"
						},
						{
							"qty": 7,
							"item": "Fat"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "LayerUncoCritMovementRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LayerUncoStrengthCritical",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "Charcoal"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeLayerUncoStrengthCrit"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LayerUncoMovement",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "Fat"
						},
						{
							"qty": 5,
							"item": "WhiteLeather"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "LayerUncoMovementRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LayerUncoArmorGuard",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "WhiteLeather"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						},
						{
							"qty": 3,
							"item": "Charcoal"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeLayerUncoArmorGuard"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LayerUncoDexterityMovement",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 4,
							"item": "Cloth"
						},
						{
							"qty": 5,
							"item": "WhiteLeather"
						},
						{
							"qty": 2,
							"item": "RawMaterials"
						},
						{
							"qty": 4,
							"item": "Fat"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeLayerUncoDexterityMovement"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LayerUncoGuardStrength",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						},
						{
							"qty": 2,
							"item": "Charcoal"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeLayerUncoGuardStrength"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LayerUncoDexterity2Movement",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 3,
							"item": "WhiteLeather"
						},
						{
							"qty": 2,
							"item": "RawMaterials"
						},
						{
							"qty": 5,
							"item": "Fat"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeLayerUncoDexterity2Movement"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "MaceUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Rimesteel"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "AxeUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 9,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Rimesteel"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 9,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "SwordUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Rimesteel"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 5,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "Mace2HUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 9,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Rimesteel"
						},
						{
							"qty": 8,
							"item": "Wood"
						},
						{
							"qty": 9,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "Axe2HUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 9,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Rimesteel"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 9,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "Sword2HUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 8,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "Rimesteel"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 8,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "BowUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 9,
							"item": "Wood"
						},
						{
							"qty": 5,
							"item": "Rope"
						},
						{
							"qty": 3,
							"item": "Rimesteel"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "DaggerUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 7,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Rimesteel"
						},
						{
							"qty": 7,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "PolearmUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Rimesteel"
						},
						{
							"qty": 8,
							"item": "Cloth"
						},
						{
							"qty": 5,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "HeavyArmorUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 10,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 7,
							"item": "Rimesteel"
						},
						{
							"qty": 10,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleArmorT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "MediumArmorUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 8,
							"item": "Rimesteel"
						},
						{
							"qty": 6,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleArmorT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "LightArmorUncoCraftT3",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "Rimesteel"
						},
						{
							"qty": 10,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleArmorT3"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "MaceUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "GoldMineral"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "AxeUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 10,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "GoldMineral"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 10,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "SwordUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "GoldMineral"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleOneHandedSwordAxeMaceT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "Mace2HUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 10,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "GoldMineral"
						},
						{
							"qty": 9,
							"item": "Wood"
						},
						{
							"qty": 10,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "Axe2HUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 10,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "GoldMineral"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 10,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "Sword2HUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 8,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "GoldMineral"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 8,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleTwoHandedSwordAxeMaceT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "BowUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "GoldMineral"
						},
						{
							"qty": 10,
							"item": "Wood"
						},
						{
							"qty": 5,
							"item": "Rope"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "DaggerUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 8,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "GoldMineral"
						},
						{
							"qty": 3,
							"item": "Wood"
						},
						{
							"qty": 8,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "PolearmUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "GoldMineral"
						},
						{
							"qty": 10,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleBowDaggerPolearmT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "HeavyArmorUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 11,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Cloth"
						},
						{
							"qty": 9,
							"item": "GoldMineral"
						},
						{
							"qty": 11,
							"item": "Charcoal"
						}
					],
					"props": {
						"bundle": "BundleArmorT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "MediumArmorUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 10,
							"item": "GoldMineral"
						},
						{
							"qty": 6,
							"item": "Charcoal"
						},
						{
							"qty": 6,
							"item": "Cloth"
						}
					],
					"props": {
						"bundle": "BundleArmorT4",
						"feature": "Alazar1_Update"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "LightArmorUncoCraftT4",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 7,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "GoldMineral"
						},
						{
							"qty": 7,
							"item": "Charcoal"
						},
						{
							"qty": 12,
							"item": "Cloth"
						}
					],
					"props": {
						"bundle": "BundleArmorT4",
						"feature": "Alazar1_Update"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 5
				},
				{
					"item": "ShieldThorn",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 2,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeShieldThorn"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "Grapple",
					"tool": "Anvil",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Rope"
						}
					],
					"props": {
						"feature": "Feature_Disabled"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "GrappleRecipe"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "LockPick",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 1,
							"item": "IronOre"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "Piton",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 1,
							"item": "IronOre"
						},
						{
							"qty": 1,
							"item": "Rope"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "Fishhook",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 1,
							"item": "IronOre"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "SolidFishhook",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 1,
							"item": "IronOre"
						},
						{
							"qty": 1,
							"item": "Bait"
						}
					],
					"props": {
						"requiresJob": {
							"job": "Fisherman",
							"level": 2
						}
					},
					"jobLevel": 1,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "ExpertFishhook",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Bait"
						}
					],
					"props": {
						"requiresJob": {
							"job": "Fisherman",
							"level": 4
						}
					},
					"jobLevel": 1,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "Rope",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Hemp"
						}
					],
					"props": {},
					"jobLevel": 1,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "Torch",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 1,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "Fat"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "TorchRuins",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "SnowWillow"
						},
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 4,
							"item": "Fat"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeTorchRuins"
						}
					],
					"itemCost": []
				},
				{
					"item": "BackAccThiefLockpickDuration",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 8,
							"item": "Cloth"
						},
						{
							"qty": 1,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "Rope"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBackAccThiefLockpickDuration"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BackAccMedicNoCost",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Rope"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBackAccMedicNoCost"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BackAccCookingNoSalt",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Wood"
						},
						{
							"qty": 1,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "Rope"
						}
					],
					"props": {},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 0,
							"item": "RecipeBackAccCookingNoSalt"
						}
					],
					"itemCost": []
				},
				{
					"item": "BackAccCookingResources",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 1,
							"item": "Rope"
						}
					],
					"props": {
						"require": [
							{
								"item": "BackAccCookingNoSalt"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "AnimAccCarriage",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "IronOre"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "AnimAccCritDmg",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "IronOre"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccCritDmg"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "AnimAccBerserkProc",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "WhiteLeather"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "InfectedBlood"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccBerserkProc"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "AnimAccRegen",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "WhiteLeather"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						},
						{
							"qty": 2,
							"item": "SnowIris"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccRegen"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "AnimAccSecondLife",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "WhiteLeather"
						},
						{
							"qty": 4,
							"item": "CrocoporkScale"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccSecondLife"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "AnimAccObey",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "Fat"
						},
						{
							"qty": 2,
							"item": "GameMeat"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccObey"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "AnimAccGuard",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Fangs"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccGuard"
						}
					],
					"itemCost": []
				},
				{
					"item": "AnimAccDomination",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "WhiteLeather"
						},
						{
							"qty": 4,
							"item": "Fangs"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccDomination"
						}
					],
					"itemCost": []
				},
				{
					"item": "AnimAccSwiftness",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "WhiteLeather"
						},
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 5,
							"item": "Fat"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccSwiftness"
						}
					],
					"itemCost": []
				},
				{
					"item": "AnimAccFire",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "Fat"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccFire"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccBleedingCrit",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 5,
							"item": "Sandstone"
						},
						{
							"qty": 1,
							"item": "Fangs"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccBleedingCrit"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccNoMovePenalty",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "Fat"
						},
						{
							"qty": 3,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccNoMovePenalty"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccLightArmorCrit",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Rope"
						},
						{
							"qty": 5,
							"item": "Fangs"
						}
					],
					"props": {},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccLightArmorCrit"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccRangeDmg",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "IronOre"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccRangeDmg"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccRangePrecisionBonus",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Sandstone"
						},
						{
							"qty": 4,
							"item": "Rope"
						}
					],
					"props": {
						"require": [
							{
								"item": "BeltAccRangeDmg"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccCandy",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "Fat"
						},
						{
							"qty": 2,
							"item": "GameMeat"
						},
						{
							"qty": 2,
							"item": "Carp"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccCandy"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccTerrorMax",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Rope"
						},
						{
							"qty": 5,
							"item": "Fangs"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccTerrorMax"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccPrisonerTrust",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 1,
							"item": "Sandstone"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPrisonerTrust"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccPrisonerPony",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 5,
							"item": "Wood"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPrisonerPony"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccPrisonerWorkMeatDryer",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "Charcoal"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPrisonerWorkMeatDryer"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccPrisonerWorkBrewBarrel",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 10,
							"item": "Fangs"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPrisonerWorkBrewBarrel"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccPrisonerWorkSkinDryingRack",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "Sandstone"
						},
						{
							"qty": 1,
							"item": "RawMaterials"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPrisonerWorkSkinDryingRack"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccPrisonerWorkBeeHive",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "SnowIris"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						},
						{
							"qty": 1,
							"item": "Starflower"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPrisonerWorkBeeHive"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccWeighted",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 3,
							"item": "Sandstone"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltWeighted"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BeltAccPushDistance",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "Sandstone"
						},
						{
							"qty": 6,
							"item": "Fangs"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPushDistance"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BeltAccProtection1",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "RawMaterials"
						},
						{
							"qty": 2,
							"item": "Rope"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "recipeBeltAccProtection1"
						}
					],
					"itemCost": []
				},
				{
					"item": "ToothPaste",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 1,
							"item": "Fat"
						},
						{
							"qty": 2,
							"item": "Hemp"
						},
						{
							"qty": 1,
							"item": "Cloth"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeToothPaste"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "FirecampT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "Sandstone"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 5,
							"item": "Charcoal"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "Firecamp"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "FirecampT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 10,
							"item": "IronOre"
						},
						{
							"qty": 5,
							"item": "Sandstone"
						},
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 5,
							"item": "Charcoal"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "FirecampT2"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "WorkshopT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Leather"
						},
						{
							"qty": 10,
							"item": "IronOre"
						},
						{
							"qty": 10,
							"item": "Wood"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "Workshop"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "WorkshopT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 15,
							"item": "IronOre"
						},
						{
							"qty": 12,
							"item": "Wood"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "WorkshopT2"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Tent",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 6,
							"item": "Leather"
						},
						{
							"qty": 6,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 2,
							"item": "Rope"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "TentT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 12,
							"item": "Leather"
						},
						{
							"qty": 12,
							"item": "Cloth"
						},
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Rope"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "Tent"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "TentT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 18,
							"item": "Leather"
						},
						{
							"qty": 18,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Rope"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "TentT2"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "PonyAuge",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Wood"
						},
						{
							"qty": 2,
							"item": "Rope"
						},
						{
							"qty": 10,
							"item": "Salt"
						}
					],
					"props": {},
					"jobLevel": 1,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "PonyAugeT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 6,
							"item": "Rope"
						},
						{
							"qty": 10,
							"item": "Salt"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "PonyAuge"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "PonyAugeT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 10,
							"item": "Wood"
						},
						{
							"qty": 10,
							"item": "Rope"
						},
						{
							"qty": 10,
							"item": "Salt"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "PonyAugeT2"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "CookingPot",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 8,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Wood"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "CookingPotT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 12,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "CookingPot"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "CookingPotT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 16,
							"item": "IronOre"
						},
						{
							"qty": 8,
							"item": "Wood"
						},
						{
							"qty": 4,
							"item": "Sandstone"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "CookingPotT2"
							}
						]
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Stretcher",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "Cloth"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 5,
							"item": "Rope"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeStretcher"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "StretcherT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 6,
							"item": "Leather"
						},
						{
							"qty": 6,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 8,
							"item": "Rope"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "Stretcher"
							}
						]
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "StretcherT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 8,
							"item": "Leather"
						},
						{
							"qty": 8,
							"item": "Cloth"
						},
						{
							"qty": 8,
							"item": "Wood"
						},
						{
							"qty": 10,
							"item": "Rope"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "StretcherT2"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "TrainingDummy",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Cloth"
						},
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Rope"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeTrainingDummy"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "TrainingDummyT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "Cloth"
						},
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 5,
							"item": "Rope"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "TrainingDummy"
							}
						]
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "TrainingDummyT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 6,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 8,
							"item": "Wood"
						},
						{
							"qty": 7,
							"item": "Rope"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "TrainingDummyT2"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "MeatDryer",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 9,
							"item": "Wood"
						},
						{
							"qty": 6,
							"item": "Rope"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeMeatDryer"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "MeatDryerT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Cloth"
						},
						{
							"qty": 11,
							"item": "Wood"
						},
						{
							"qty": 8,
							"item": "Rope"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "MeatDryer"
							}
						]
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "MeatDryerT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Cloth"
						},
						{
							"qty": 13,
							"item": "Wood"
						},
						{
							"qty": 10,
							"item": "Rope"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "MeatDryerT2"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "SkinDryingRack",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 9,
							"item": "Wood"
						},
						{
							"qty": 6,
							"item": "Rope"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeSkinDryingRack"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "SkinDryingRackT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Cloth"
						},
						{
							"qty": 11,
							"item": "Wood"
						},
						{
							"qty": 8,
							"item": "Rope"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "SkinDryingRack"
							}
						]
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "SkinDryingRackT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Cloth"
						},
						{
							"qty": 13,
							"item": "Wood"
						},
						{
							"qty": 10,
							"item": "Rope"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "SkinDryingRackT2"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Lectern",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 9,
							"item": "Wood"
						}
					],
					"props": {
						"requiresBonus": "UnlockLectern"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "LecternT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 12,
							"item": "Wood"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "Lectern"
							}
						]
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "LecternT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 15,
							"item": "Wood"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "LecternT2"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "StrategyTable",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 8,
							"item": "Wood"
						}
					],
					"props": {
						"requiresBonus": "StrategyTableUnlocked"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "StrategyTableT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "Cloth"
						},
						{
							"qty": 4,
							"item": "IronOre"
						},
						{
							"qty": 10,
							"item": "Wood"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "StrategyTable"
							}
						]
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "StrategyTableT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "Leather"
						},
						{
							"qty": 6,
							"item": "Cloth"
						},
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 12,
							"item": "Wood"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "StrategyTableT2"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Pillory",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 9,
							"item": "Wood"
						},
						{
							"qty": 2,
							"item": "Chains"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipePillory"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "PilloryT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 9,
							"item": "Wood"
						},
						{
							"qty": 3,
							"item": "Chains"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "Pillory"
							}
						]
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "PilloryT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "IronOre"
						},
						{
							"qty": 9,
							"item": "Wood"
						},
						{
							"qty": 4,
							"item": "Chains"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "PilloryT2"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Stake",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Rope"
						},
						{
							"qty": 12,
							"item": "Wood"
						},
						{
							"qty": 4,
							"item": "Fat"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeStake"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "StakeT2",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Rope"
						},
						{
							"qty": 15,
							"item": "Wood"
						},
						{
							"qty": 5,
							"item": "Fat"
						},
						{
							"qty": 100,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "Stake"
							}
						]
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "StakeT3",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 6,
							"item": "Rope"
						},
						{
							"qty": 18,
							"item": "Wood"
						},
						{
							"qty": 6,
							"item": "Fat"
						},
						{
							"qty": 200,
							"item": "Gold"
						}
					],
					"props": {
						"require": [
							{
								"item": "StakeT2"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Banner",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Wood"
						},
						{
							"qty": 4,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "Rope"
						}
					],
					"props": {
						"requiresBonus": "BannerUnlocked"
					},
					"jobLevel": 1,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "Chest",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 6,
							"item": "IronOre"
						},
						{
							"qty": 6,
							"item": "Wood"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "BrewBarrel",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 2,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 10,
							"item": "Wood"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBrewBarrel"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "Beehive",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "Wood"
						},
						{
							"qty": 8,
							"item": "Rope"
						},
						{
							"qty": 10,
							"item": "Wheat"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeehive"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "WatchStool",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 5,
							"item": "Leather"
						},
						{
							"qty": 10,
							"item": "Wood"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeWatchStool"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "DiceGame",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 10,
							"item": "Wood"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeDiceGame"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "Lute",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 6,
							"item": "Rope"
						},
						{
							"qty": 2,
							"item": "Fat"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeLute"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "Whip",
					"tool": "Workshop",
					"recipe": [
						{
							"qty": 6,
							"item": "Leather"
						},
						{
							"qty": 6,
							"item": "Wood"
						},
						{
							"qty": 4,
							"item": "Rope"
						}
					],
					"props": {
						"require": [
							{
								"item": "Pillory"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "Remedy",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "Flask"
						},
						{
							"qty": 2,
							"item": "SnowIris"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "ApprenticeRemedy",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "Flask"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeApprenticeRemedy"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "PlagueRemedy",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "Remedy"
						},
						{
							"qty": 1,
							"item": "MosquitoPiece"
						},
						{
							"qty": 1,
							"item": "SnowWillow"
						},
						{
							"qty": 1,
							"item": "InfectedBrain"
						}
					],
					"props": {},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 4
				},
				{
					"item": "HandHeldFrag",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 2,
							"item": "IronOre"
						},
						{
							"qty": 1,
							"item": "Cloth"
						},
						{
							"qty": 2,
							"item": "AlazarPowder"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "HandRecoil",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 2,
							"item": "AlazarPowder"
						},
						{
							"qty": 2,
							"item": "Charcoal"
						},
						{
							"qty": 2,
							"item": "Leather"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "BeeBomb",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 2,
							"item": "AlazarPowder"
						},
						{
							"qty": 4,
							"item": "Fangs"
						},
						{
							"qty": 3,
							"item": "Honey"
						}
					],
					"props": {
						"produces": 4
					},
					"jobLevel": 1,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "CorrosiveBomb",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 2,
							"item": "AlazarPowder"
						},
						{
							"qty": 3,
							"item": "Starflower"
						},
						{
							"qty": 3,
							"item": "Hemp"
						}
					],
					"props": {
						"produces": 4
					},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 0,
							"item": "RecipeCorrosiveBomb"
						}
					],
					"itemCost": []
				},
				{
					"item": "IncendiaryFlask",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "Flask"
						},
						{
							"qty": 2,
							"item": "Brandy"
						},
						{
							"qty": 3,
							"item": "Cloth"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeIncendiaryFlask"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "PoisonedFlask",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "Flask"
						},
						{
							"qty": 2,
							"item": "Cowbane"
						},
						{
							"qty": 3,
							"item": "InfectedBlood"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipePoisonedFlask"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BlindingPowder",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "AlazarPowder"
						},
						{
							"qty": 4,
							"item": "Leather"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBlindingPowder"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "RagePowder",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 2,
							"item": "AlazarPowder"
						},
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "FishOil"
						},
						{
							"qty": 5,
							"item": "Fangs"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeRagePowder"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OdorousPowder",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 2,
							"item": "AlazarPowder"
						},
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						},
						{
							"qty": 4,
							"item": "FishOil"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOdorousPowder"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "ConfusingPowder",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 2,
							"item": "AlazarPowder"
						},
						{
							"qty": 4,
							"item": "Leather"
						},
						{
							"qty": 4,
							"item": "Starflower"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeConfusingPowder"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "PoisonedThrowingKnife",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingKnife"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						},
						{
							"qty": 1,
							"item": "FishOil"
						},
						{
							"qty": 3,
							"item": "Salt"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT1"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "PoisonedThrowingKnifeT2",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingKnifeT2"
						},
						{
							"qty": 3,
							"item": "Cowbane"
						},
						{
							"qty": 2,
							"item": "InfectedBlood"
						},
						{
							"qty": 1,
							"item": "CrocoporkScale"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT2"
					},
					"jobLevel": 3,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "PoisonedThrowingKnifeT3",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingKnifeT3"
						},
						{
							"qty": 4,
							"item": "Cowbane"
						},
						{
							"qty": 2,
							"item": "InfectedBlood"
						},
						{
							"qty": 2,
							"item": "CrocoporkScale"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT3"
					},
					"jobLevel": 4,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "PoisonedThrowingKnifeT4",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingKnifeT4"
						},
						{
							"qty": 5,
							"item": "Cowbane"
						},
						{
							"qty": 2,
							"item": "InfectedBlood"
						},
						{
							"qty": 3,
							"item": "CrocoporkScale"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT4"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "ThrowingSicklePetrifying",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingSickle"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						},
						{
							"qty": 1,
							"item": "Starflower"
						},
						{
							"qty": 1,
							"item": "Fat"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT1"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "ThrowingSickleRecipePetrifying"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "ThrowingSicklePetrifyingT2",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingSicklePetrifyingT2"
						},
						{
							"qty": 3,
							"item": "Starflower"
						},
						{
							"qty": 2,
							"item": "Cowbane"
						},
						{
							"qty": 1,
							"item": "Fat"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT2"
					},
					"jobLevel": 3,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "ThrowingSicklePetrifyingT3",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingSicklePetrifyingT3"
						},
						{
							"qty": 4,
							"item": "Starflower"
						},
						{
							"qty": 2,
							"item": "Cowbane"
						},
						{
							"qty": 2,
							"item": "Fat"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT3"
					},
					"jobLevel": 4,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "ThrowingSicklePetrifyingT4",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingSickleT4"
						},
						{
							"qty": 4,
							"item": "Starflower"
						},
						{
							"qty": 3,
							"item": "SnowWillow"
						},
						{
							"qty": 2,
							"item": "Fat"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT4"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "PowerfulThrowingAxe",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingAxe"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						},
						{
							"qty": 2,
							"item": "Hemp"
						},
						{
							"qty": 1,
							"item": "Brandy"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT1"
					},
					"jobLevel": 2,
					"learnCost": [
						{
							"qty": 1,
							"item": "ThrowingPowerfulThrowingAxe"
						}
					],
					"itemCost": []
				},
				{
					"item": "PowerfulThrowingAxeT2",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingAxeT2"
						},
						{
							"qty": 4,
							"item": "Hemp"
						},
						{
							"qty": 2,
							"item": "Brandy"
						},
						{
							"qty": 3,
							"item": "MosquitoPiece"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT2"
					},
					"jobLevel": 3,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "PowerfulThrowingAxeT3",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingAxeT3"
						},
						{
							"qty": 6,
							"item": "Hemp"
						},
						{
							"qty": 2,
							"item": "Brandy"
						},
						{
							"qty": 4,
							"item": "MosquitoPiece"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT3"
					},
					"jobLevel": 4,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "PowerfulThrowingAxeT4",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "ThrowingAxeT4"
						},
						{
							"qty": 7,
							"item": "Hemp"
						},
						{
							"qty": 2,
							"item": "GosenbergWine"
						},
						{
							"qty": 5,
							"item": "MosquitoPiece"
						}
					],
					"props": {
						"produces": 4,
						"bundle": "BundleThrowingLeftHandSpecialT4"
					},
					"jobLevel": 5,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "WeedKillingPotion",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "Flask"
						},
						{
							"qty": 3,
							"item": "Salt"
						},
						{
							"qty": 1,
							"item": "GosenbergWine"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeWeedkillingPotion"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "VirginEssence",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "Flask"
						},
						{
							"qty": 2,
							"item": "FishOil"
						},
						{
							"qty": 1,
							"item": "PestiferousGrowthSample"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilProcPoison1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 4,
							"item": "Cowbane"
						},
						{
							"qty": 1,
							"item": "InfectedBlood"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilProcPoison1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilProcBurning1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 3,
							"item": "Charcoal"
						},
						{
							"qty": 1,
							"item": "Brandy"
						},
						{
							"qty": 1,
							"item": "Starflower"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilProcBurning1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilProcBleeding1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 2,
							"item": "Fat"
						},
						{
							"qty": 4,
							"item": "Sandstone"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilProcBleeding1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilStrengthProc1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 3,
							"item": "Comfrey"
						},
						{
							"qty": 5,
							"item": "Fangs"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilStrengthProc1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilDexterityProc1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 3,
							"item": "SnowIris"
						},
						{
							"qty": 5,
							"item": "Fangs"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilDexterityProc1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilDamageTakenProc1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 2,
							"item": "Fat"
						},
						{
							"qty": 3,
							"item": "IronOre"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilDamageTakenProc1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilAnimalsDmg1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 10,
							"item": "Fangs"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilAnimalsDmg1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilOpportunityAttack1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 3,
							"item": "Comfrey"
						},
						{
							"qty": 4,
							"item": "FishOil"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilOpportunityAttack1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilSticky1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 2,
							"item": "Starflower"
						},
						{
							"qty": 2,
							"item": "Honey"
						},
						{
							"qty": 4,
							"item": "Fat"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilSticky1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilProtection1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 3,
							"item": "Comfrey"
						},
						{
							"qty": 2,
							"item": "Starflower"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilProtection1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilCrit1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 5,
							"item": "Salt"
						},
						{
							"qty": 2,
							"item": "AlazarPowder"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilCrit1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilIgnoreGuard1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 4,
							"item": "MosquitoPiece"
						},
						{
							"qty": 2,
							"item": "CrocoporkScale"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilIgnoreGuard1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilPlagueDmg1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 1,
							"item": "FishOil"
						},
						{
							"qty": 1,
							"item": "InfectedBrain"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilPlagueDmg1"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "OilDotEffect1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 6,
							"item": "Fangs"
						},
						{
							"qty": 4,
							"item": "InfectedBlood"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilDotEffect1"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "OilSlowProc1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 5,
							"item": "SnowIris"
						}
					],
					"props": {},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilSlowProc1"
						}
					],
					"itemCost": []
				},
				{
					"item": "OilProcTrueDmg1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 3,
							"item": "AlazarPowder"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilProcTrueDmg1"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "OilSelfheal1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 2,
							"item": "Honey"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						},
						{
							"qty": 2,
							"item": "SnowIris"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilSelfHeal1"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "OilHemorraghe1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 4,
							"item": "Fangs"
						},
						{
							"qty": 2,
							"item": "Charcoal"
						},
						{
							"qty": 2,
							"item": "Salt"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilHemorrhage1"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "OilWindfury1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 2,
							"item": "Salt"
						},
						{
							"qty": 2,
							"item": "Brandy"
						},
						{
							"qty": 2,
							"item": "AlazarPowder"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilWindfury1"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "OilCleave1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 2,
							"item": "AlazarPowder"
						},
						{
							"qty": 2,
							"item": "CrocoporkScale"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilCleave1"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "OilProcSolid",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 2,
							"item": "MosquitoPiece"
						},
						{
							"qty": 1,
							"item": "SnowWillow"
						},
						{
							"qty": 1,
							"item": "AlazarPowder"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilProcSolid"
						}
					],
					"itemCost": []
				},
				{
					"item": "OilSwipping",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 3,
							"item": "Comfrey"
						},
						{
							"qty": 2,
							"item": "Starflower"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilSwipping"
						}
					],
					"itemCost": []
				},
				{
					"item": "OilProcFever",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 2,
							"item": "SnowWillow"
						},
						{
							"qty": 1,
							"item": "Cowbane"
						},
						{
							"qty": 1,
							"item": "InfectedBlood"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilProcFever"
						}
					],
					"itemCost": []
				},
				{
					"item": "OilBrave",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 1,
							"item": "SnowWillow"
						},
						{
							"qty": 4,
							"item": "Hemp"
						},
						{
							"qty": 1,
							"item": "GosenbergWine"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilBrave"
						}
					],
					"itemCost": []
				},
				{
					"item": "OilProcSlowReflexes",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "VirginEssence"
						},
						{
							"qty": 1,
							"item": "SnowWillow"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						},
						{
							"qty": 2,
							"item": "Starflower"
						}
					],
					"props": {
						"feature": "Alazar1_Update"
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeOilProcSlowReflexes"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccOilProcSolid",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilProcSolid"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"feature": "Alazar1_Update",
						"require": [
							{
								"item": "OilProcSolid"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccOilSwipping",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilSwipping"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"feature": "Alazar1_Update",
						"require": [
							{
								"item": "OilSwipping"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccOilProcFever",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilProcFever"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"feature": "Alazar1_Update",
						"require": [
							{
								"item": "OilProcFever"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccOilBrave",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilBrave"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"feature": "Alazar1_Update",
						"require": [
							{
								"item": "OilBrave"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccOilProcSlowReflexes",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilProcSlowReflexes"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"feature": "Alazar1_Update",
						"require": [
							{
								"item": "OilProcSlowReflexes"
							}
						]
					},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccOilProcPoison",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilProcPoison1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilProcPoison1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccOilProcBleeding",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilProcBleeding1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilProcBleeding1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccOilProcBurning",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilProcBurning1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilProcBurning1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccOilProcTrueDmg",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilProcTrueDmg1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilProcTrueDmg1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BeltAccOilStrengthProc",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilStrengthProc1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilStrengthProc1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccOilDexterityProc",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilDexterityProc1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilDexterityProc1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccOilDamageTakenProc",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilDamageTakenProc1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilDamageTakenProc1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccOilSlowProc",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilSlowProc1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilSlowProc1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BeltAccOilSelfHeal",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilSelfheal1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilSelfheal1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BeltAccOilDotEffect",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilDotEffect1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilDotEffect1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BeltAccOilCleave",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilCleave1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilCleave1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BeltAccOilWindfury",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilWindfury1"
						},
						{
							"qty": 1,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilWindfury1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BeltAccOilHemorraghe",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "OilHemorraghe1"
						},
						{
							"qty": 2,
							"item": "RedEyeball"
						}
					],
					"props": {
						"require": [
							{
								"item": "OilHemorraghe1"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "BeltAccSap",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "Flask"
						},
						{
							"qty": 3,
							"item": "Brandy"
						},
						{
							"qty": 4,
							"item": "Cloth"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccSap"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccPoisonExtra",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "Flask"
						},
						{
							"qty": 3,
							"item": "Cowbane"
						},
						{
							"qty": 3,
							"item": "InfectedBlood"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPoisonExtra"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "BeltAccPoisonDmgBonus",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 1,
							"item": "Cowbane"
						},
						{
							"qty": 3,
							"item": "Fat"
						},
						{
							"qty": 1,
							"item": "InfectedBrain"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPoisonDmgBonus"
						}
					],
					"itemCost": [],
					"jobLevel": 1
				},
				{
					"item": "BeltAccPoisonResist",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						},
						{
							"qty": 3,
							"item": "Cowbane"
						},
						{
							"qty": 6,
							"item": "Fat"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPoisonResist"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "AnimAccPoison",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 3,
							"item": "Cowbane"
						},
						{
							"qty": 3,
							"item": "InfectedBlood"
						}
					],
					"props": {},
					"jobLevel": 1,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeAnimAccPoison"
						}
					],
					"itemCost": []
				},
				{
					"item": "BeltAccBleedingResist",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "Comfrey"
						},
						{
							"qty": 6,
							"item": "Fat"
						},
						{
							"qty": 3,
							"item": "Sandstone"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccBleedingResist"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccHumanTorch",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 6,
							"item": "Fat"
						},
						{
							"qty": 7,
							"item": "Brandy"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccHumanTorch"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccBurningResist",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Leather"
						},
						{
							"qty": 2,
							"item": "SnowIris"
						},
						{
							"qty": 3,
							"item": "Charcoal"
						},
						{
							"qty": 6,
							"item": "Fat"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccBurningResist"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "BeltAccPlague1",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "Flask"
						},
						{
							"qty": 1,
							"item": "FishOil"
						},
						{
							"qty": 5,
							"item": "SnowWillow"
						},
						{
							"qty": 1,
							"item": "InfectedBrain"
						}
					],
					"props": {},
					"jobLevel": 3,
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeBeltAccPlague"
						}
					],
					"itemCost": []
				},
				{
					"item": "BackAccAlchemyResources",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 3,
							"item": "Comfrey"
						},
						{
							"qty": 3,
							"item": "SnowIris"
						},
						{
							"qty": 3,
							"item": "Cowbane"
						},
						{
							"qty": 3,
							"item": "Leather"
						}
					],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 2
				},
				{
					"item": "HaragConcoction",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "Flask"
						},
						{
							"qty": 5,
							"item": "InfectedBlood"
						},
						{
							"qty": 4,
							"item": "MosquitoPiece"
						},
						{
							"qty": 1,
							"item": "AlchemicResidue"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeHaragConcoction"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "SwampFlask",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 4,
							"item": "Flask"
						},
						{
							"qty": 5,
							"item": "Cowbane"
						},
						{
							"qty": 2,
							"item": "MosquitoPiece"
						},
						{
							"qty": 1,
							"item": "AlchemicResidue"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RecipeSwampFlask"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "RatBait",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 7,
							"item": "Honey"
						},
						{
							"qty": 7,
							"item": "Fat"
						},
						{
							"qty": 8,
							"item": "MosquitoPiece"
						},
						{
							"qty": 8,
							"item": "InfectedBlood"
						}
					],
					"props": {
						"requiresBonus": "RatBaitRecipe"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "Rimesteel",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "GreyMass"
						},
						{
							"qty": 1,
							"item": "AlazarPowder"
						}
					],
					"props": {
						"produceBonus": "RimesteelCraftBonusLoot"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 3
				},
				{
					"item": "GoldMineral",
					"tool": "ApothecaryTable",
					"recipe": [
						{
							"qty": 1,
							"item": "Etherit"
						},
						{
							"qty": 1,
							"item": "AlchemicResidue"
						}
					],
					"props": {
						"produceBonus": "RimesteelCraftBonusLoot"
					},
					"jobLevel": 4,
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Beer",
					"tool": "BrewBarrel",
					"recipe": [
						{
							"qty": 3,
							"item": "Hemp"
						}
					],
					"props": {
						"produces": 3,
						"feature": "Alazar1_Update"
					},
					"jobLevel": 0,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "Wine",
					"tool": "BrewBarrel",
					"recipe": [
						{
							"qty": 3,
							"item": "Grape"
						}
					],
					"props": {
						"produces": 3
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Cider",
					"tool": "BrewBarrel",
					"recipe": [
						{
							"qty": 3,
							"item": "Apple"
						}
					],
					"props": {
						"produces": 3
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Mead",
					"tool": "BrewBarrel",
					"recipe": [
						{
							"qty": 3,
							"item": "Honey"
						}
					],
					"props": {
						"produces": 3
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Brandy",
					"tool": "BrewBarrel",
					"recipe": [
						{
							"qty": 3,
							"itemType": "Fruits"
						}
					],
					"props": {
						"produces": 3
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Leather",
					"tool": "SkinDryingRack",
					"recipe": [
						{
							"qty": 3,
							"item": "AnimalCorpse"
						}
					],
					"props": {
						"produces": 2
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "WhiteLeather",
					"tool": "SkinDryingRack",
					"recipe": [
						{
							"qty": 3,
							"item": "SpectralAnimalCorpse"
						}
					],
					"props": {
						"produces": 1,
						"toolTier": 2
					},
					"jobLevel": 0,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "Leather",
					"tool": "SkinDryingRack",
					"recipe": [
						{
							"qty": 1,
							"item": "Corpse"
						}
					],
					"props": {
						"produces": 1,
						"requiresBonus": "HumanTannery"
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Leather",
					"tool": "SkinDryingRack",
					"recipe": [
						{
							"qty": 1,
							"item": "PlaguedLeather"
						}
					],
					"props": {
						"produces": 1,
						"toolTier": 2,
						"feature": "Alazar1_Update"
					},
					"jobLevel": 0,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "DriedMeat",
					"tool": "MeatDryer",
					"recipe": [
						{
							"qty": 2,
							"item": "Rat"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "DriedMeat",
					"tool": "MeatDryer",
					"recipe": [
						{
							"qty": 2,
							"itemType": "Meat"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "DriedMeat",
					"tool": "MeatDryer",
					"recipe": [
						{
							"qty": 2,
							"item": "AnimalCorpse"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "DriedMeat",
					"tool": "MeatDryer",
					"recipe": [
						{
							"qty": 2,
							"item": "SpectralAnimalCorpse"
						}
					],
					"props": {
						"produces": 4
					},
					"jobLevel": 0,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "DriedMeat",
					"tool": "MeatDryer",
					"recipe": [
						{
							"qty": 2,
							"item": "PigCorpse"
						}
					],
					"props": {
						"produces": 4
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "DriedMeat",
					"tool": "MeatDryer",
					"recipe": [
						{
							"qty": 1,
							"item": "Corpse"
						}
					],
					"props": {
						"produces": 2,
						"requiresBonus": "Cannibalism"
					},
					"jobLevel": 0,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "DriedFish",
					"tool": "MeatDryer",
					"recipe": [
						{
							"qty": 2,
							"itemType": "Fish"
						}
					],
					"props": {
						"produces": 10
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "DriedFish",
					"tool": "MeatDryer",
					"recipe": [
						{
							"qty": 2,
							"itemType": "FreshwaterFish"
						}
					],
					"props": {
						"produces": 10
					},
					"jobLevel": 0,
					"learnCost": [],
					"itemCost": []
				},
				{
					"item": "Honey",
					"tool": "Beehive",
					"recipe": [
						{
							"qty": 3,
							"itemType": "Flowers"
						}
					],
					"props": {
						"produces": 3
					},
					"learnCost": [],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "RunAbility",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "EnduranceTraining",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "RunAbility"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "CareerPlan",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Rationing",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Frugality",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "FightForGold",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "Frugality"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Restauration",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "WeightTraining",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "RecruitCostReduced",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "SpeedupRecruit",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "RecruitCostReduced"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "ActionPointBonus1",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "BidHunters",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "FightForGold"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "BountiesStream",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "FightForGold"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Orientation",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Cunning",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "WhipToDeath",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "Whip"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Cannibalism",
					"tool": "Knowledge",
					"recipe": [],
					"props": {},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "HumanTannery",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "Cannibalism"
							},
							{
								"item": "SkinDryingRack"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "PoisonMastery",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BeltAccOilProcPoison"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "BleedingMastery",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BeltAccOilHemorraghe"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "BurningMastery",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "BeltAccOilProcBurning"
							}
						]
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "Knowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "RestaurationForgeTiltren",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"requireCounter": "TiltrenSettingCompleted",
						"iconForUnlock": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 0,
							"y": 4
						}
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RestaurationForgeTiltren"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "RestaurationForgeEdoran",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"requireCounter": "ArthesSettingCompleted",
						"iconForUnlock": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 13,
							"y": 6
						}
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RestaurationForgeEdoran"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "RestaurationForgeHarag",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"requireCounter": "LudernSettingCompleted",
						"iconForUnlock": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 14,
							"y": 7
						}
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RestaurationForgeHarag"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "RestaurationForgeGosenberg",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"requireCounter": "VertruseSettingCompleted",
						"iconForUnlock": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 14,
							"y": 6
						}
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "RestaurationForgeGosenberg"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "RestaurationForgeAlazar",
					"tool": "Knowledge",
					"recipe": [],
					"props": {
						"requireCounter": "AlazarSettingCompleted",
						"iconForUnlock": {
							"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
							"size": 48,
							"x": 19,
							"y": 3
						}
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "RestaurationForgeAlazar"
						}
					],
					"itemCost": []
				},
				{
					"item": "ActionPointBonus2",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "ActionPointBonus1"
							}
						],
						"path": "PathMight"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "LeftHandedSpecialist",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMight"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "ImprovedRestauration",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "Restauration"
							}
						],
						"path": "PathMight"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Forgecraft",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMight"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Rationning2",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "Rationing"
							}
						],
						"path": "PathMight"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "ForgeTrade",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMight"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "MoreLayers",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMight"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "NonDestroyedLayers",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMight",
						"require": [
							{
								"item": "MoreLayers"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "FightForPower",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "FightForGold"
							}
						],
						"path": "PathMight"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Opportunism",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMight",
						"require": [
							{
								"item": "FightForPower"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "FightForRenown",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "FightForGold"
							}
						],
						"path": "PathMight"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Ruthless",
					"tool": "PathMightKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMight",
						"require": [
							{
								"item": "FightForRenown"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMightKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "PathRunners",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "EnduranceTraining"
							}
						],
						"path": "PathTrade"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "Cooperative",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Carrier",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "TradeHorses",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade",
						"require": [
							{
								"item": "Carrier"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "TradeGoodsBought",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "TradeMissionDone",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade",
						"require": [
							{
								"item": "TradeGoodsBought"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Negociator",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "PrestigiousMercenaries",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade",
						"require": [
							{
								"item": "Negociator"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "MissionGold",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade",
						"require": [
							{
								"item": "Negociator"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "LuxuriesSold",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade",
						"require": [
							{
								"item": "Negociator"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "MasterFollower",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "PrisonnersGiven",
					"tool": "PathTradeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathTrade"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathTradeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "WantedDuration",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime",
						"require": [
							{
								"item": "Cunning"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Bandits",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "StolenItemsCount",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime",
						"require": [
							{
								"item": "Cunning"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "MerchantFought",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Backstabs",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "NonLetal",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime",
						"require": [
							{
								"item": "Backstabs"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "AssassinApprentice",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Awareness",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime",
						"require": [
							{
								"item": "AssassinApprentice"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "SoldStolenItemsCount",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime",
						"requiresBonus": "BlackMarketUnlocked"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "AmbushDone",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Parley",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Scapegoat",
					"tool": "PathCrimeKnowledge",
					"recipe": [],
					"props": {
						"path": "PathCrime",
						"require": [
							{
								"item": "Parley"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathCrimeKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "RunLonger",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"require": [
							{
								"item": "RunAbility"
							}
						],
						"path": "PathMystery"
					},
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": [],
					"jobLevel": 0
				},
				{
					"item": "LessWounds",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "AnimalInstinct",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Poachers",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery",
						"require": [
							{
								"item": "AnimalInstinct"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Ascetism",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery",
						"require": [
							{
								"item": "Frugality"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "TrackersLanguage",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "PestControl",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Cleaner",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery",
						"require": [
							{
								"item": "PestControl"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Encyclopedist",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery",
						"requiresBonus": "UnlockLectern"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "LegendCollectors",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "MoreLights",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery"
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				},
				{
					"item": "Archaeologist",
					"tool": "PathMysteryKnowledge",
					"recipe": [],
					"props": {
						"path": "PathMystery",
						"require": [
							{
								"item": "MoreLights"
							}
						]
					},
					"jobLevel": 0,
					"learnCost": [
						{
							"qty": 1,
							"item": "PathMysteryKnowledge"
						}
					],
					"itemCost": []
				}
			],
			"separators": [
				{
					"index": 0,
					"title": "CookingPot"
				},
				{
					"index": 43,
					"title": "Anvil"
				},
				{
					"index": 149,
					"title": "Workshop"
				},
				{
					"index": 149,
					"title": "Divers",
					"level": 1
				},
				{
					"index": 161,
					"level": 1,
					"title": "Animal"
				},
				{
					"index": 171,
					"level": 1,
					"title": "Belts"
				},
				{
					"index": 188,
					"level": 1,
					"title": "ToolCampUpgradable"
				},
				{
					"index": 225,
					"level": 1,
					"title": "ToolCampNonUpgradable"
				},
				{
					"index": 233,
					"title": "Apothecary"
				},
				{
					"index": 325,
					"title": "ConverterTools"
				},
				{
					"index": 343,
					"title": "Meta"
				},
				{
					"index": 369,
					"title": "PathMight"
				},
				{
					"index": 381,
					"title": "PathTrade"
				},
				{
					"index": 393,
					"level": 1,
					"title": "PathCrime"
				},
				{
					"index": 405,
					"title": "PathMystery"
				}
			],
			"props": {}
		},
		{
			"name": "craft@recipe",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "qty"
				},
				{
					"typeStr": "6:item",
					"name": "item",
					"opt": true
				},
				{
					"typeStr": "6:itemType",
					"name": "itemType",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "craft@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "produces",
					"opt": true
				},
				{
					"typeStr": "6:item",
					"name": "unlockWith",
					"opt": true
				},
				{
					"typeStr": "6:bonus",
					"name": "requiresBonus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "require",
					"opt": true
				},
				{
					"typeStr": "6:loot",
					"name": "produceBonus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:item",
					"name": "bundle",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:constant",
					"name": "feature",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:icon",
					"name": "path",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:counter",
					"name": "requireCounter",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "a_noRecipe",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "toolTier",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "14",
					"name": "iconForUnlock",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "requiresJob",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "craft@props@require",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				}
			]
		},
		{
			"name": "craft@props@requiresJob",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:trait",
					"name": "job",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "level",
					"kind": null
				}
			]
		},
		{
			"name": "craft@learnCost",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "qty"
				},
				{
					"typeStr": "6:item",
					"name": "item"
				}
			]
		},
		{
			"name": "craft@itemCost",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "qty",
					"kind": null
				},
				{
					"typeStr": "6:item",
					"name": "item",
					"kind": null
				}
			]
		},
		{
			"name": "loot",
			"columns": [
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "8",
					"name": "content"
				},
				{
					"typeStr": "6:loot",
					"name": "includes",
					"opt": true
				}
			],
			"lines": [
				{
					"id": "Default",
					"content": []
				},
				{
					"id": "HumanBase",
					"content": [
						{
							"proba": 8,
							"min": 11,
							"max": 15,
							"item": "Gold"
						},
						{
							"proba": 2,
							"min": 1,
							"loot": "Component"
						},
						{
							"proba": 2,
							"item": "Cloth",
							"min": 2,
							"max": 3
						},
						{
							"proba": 1,
							"min": 1,
							"loot": "TrinketBandit"
						},
						{
							"proba": 3
						}
					]
				},
				{
					"id": "HumanBaseAlazar",
					"content": [
						{
							"proba": 8,
							"min": 11,
							"max": 15,
							"item": "Gold"
						},
						{
							"proba": 2,
							"min": 1,
							"loot": "Component"
						},
						{
							"proba": 2,
							"item": "Cloth",
							"min": 2,
							"max": 3
						},
						{
							"proba": 1,
							"min": 1,
							"loot": "TrinketAlazar"
						},
						{
							"proba": 1,
							"item": "AlazarPowder",
							"min": 1,
							"max": 2
						},
						{
							"proba": 1,
							"item": "Blueberries",
							"min": 2,
							"max": 3
						},
						{
							"proba": 0,
							"item": "SnowWillow",
							"min": 1,
							"max": 2
						},
						{
							"proba": 3
						}
					]
				},
				{
					"id": "HumanBaseHarag",
					"content": [
						{
							"proba": 8,
							"min": 11,
							"max": 15,
							"item": "Gold"
						},
						{
							"proba": 2,
							"min": 1,
							"loot": "Component"
						},
						{
							"proba": 2,
							"item": "Cloth",
							"min": 2,
							"max": 3
						},
						{
							"proba": 1,
							"min": 1,
							"loot": "TrinketHarag"
						},
						{
							"proba": 1,
							"min": 1,
							"max": 20,
							"item": "Fangs"
						},
						{
							"proba": 3
						}
					]
				},
				{
					"id": "HumanBaseGosenberg",
					"content": [
						{
							"proba": 8,
							"min": 11,
							"max": 15,
							"item": "Gold"
						},
						{
							"proba": 2,
							"min": 1,
							"loot": "Component"
						},
						{
							"proba": 2,
							"item": "Cloth",
							"min": 2,
							"max": 3
						},
						{
							"proba": 1,
							"min": 1,
							"loot": "TrinketGosenberg"
						},
						{
							"proba": 1,
							"item": "GosenbergWine",
							"max": 1,
							"min": 1
						},
						{
							"proba": 3
						}
					]
				},
				{
					"id": "HumanBaseEdoran",
					"content": [
						{
							"proba": 8,
							"min": 11,
							"max": 15,
							"item": "Gold"
						},
						{
							"proba": 2,
							"min": 1,
							"loot": "Component"
						},
						{
							"proba": 2,
							"item": "Cloth",
							"min": 2,
							"max": 3
						},
						{
							"proba": 1,
							"min": 1,
							"loot": "TrinketEdoran"
						},
						{
							"proba": 1,
							"min": 1,
							"max": 1,
							"item": "EdoranWine"
						},
						{
							"proba": 3
						}
					]
				},
				{
					"id": "HumanBaseFood",
					"content": [
						{
							"proba": 2,
							"loot": "Meat"
						},
						{
							"proba": 2,
							"loot": "Fish"
						},
						{
							"proba": 2,
							"loot": "Alcohol"
						},
						{
							"proba": 6,
							"loot": "Vegetables"
						},
						{
							"proba": 3
						}
					]
				},
				{
					"id": "Outlaws",
					"content": [
						{
							"proba": 1,
							"item": "LockPick",
							"min": 1
						}
					],
					"includes": "HumanBase"
				},
				{
					"id": "OutlawsCancel",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 5,
							"max": 10
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 1,
							"max": 2
						}
					]
				},
				{
					"id": "BrigandsCancel",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 75,
							"max": 100
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 15,
							"max": 25
						}
					]
				},
				{
					"id": "HumanBaseWorld",
					"content": [
						{
							"proba": 8,
							"min": 11,
							"max": 15,
							"item": "Gold"
						},
						{
							"proba": 2,
							"min": 1,
							"loot": "Component"
						},
						{
							"proba": 2,
							"item": "Cloth",
							"min": 2,
							"max": 3
						},
						{
							"proba": 1,
							"type": "Trinket",
							"min": 1
						}
					]
				},
				{
					"id": "AnimalBase",
					"content": [
						{
							"proba": 5,
							"item": "Leather",
							"min": 1,
							"max": 3
						},
						{
							"proba": 3,
							"item": "Fat",
							"min": 1,
							"max": 2
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "AnimalFangs",
					"content": [
						{
							"proba": 1,
							"item": "Fangs",
							"min": 3,
							"max": 5
						}
					]
				},
				{
					"id": "Boars",
					"content": [
						{
							"proba": 8,
							"item": "Pork",
							"min": 1
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "BoarCancel",
					"content": [
						{
							"proba": 0,
							"type": "Food",
							"min": 1,
							"max": 1,
							"item": "Apple"
						}
					]
				},
				{
					"id": "Wolves",
					"content": [
						{
							"proba": 8,
							"item": "Wolf",
							"min": 1
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "WolfCancel",
					"content": [
						{
							"proba": 0,
							"type": "Meat",
							"min": 1,
							"max": 1,
							"item": "Pork"
						}
					]
				},
				{
					"id": "Rats",
					"content": [
						{
							"proba": 8,
							"item": "Rat",
							"min": 1
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "Crocoporks",
					"content": [
						{
							"proba": 4,
							"item": "Crocopork",
							"min": 1
						},
						{
							"proba": 4,
							"item": "CrocoporkScale",
							"min": 1,
							"max": 2
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "Mosquitoes",
					"content": [
						{
							"proba": 4,
							"item": "MosquitoPiece",
							"min": 1
						},
						{
							"proba": 4,
							"item": "InfectedBlood",
							"min": 1
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "Bears",
					"content": [
						{
							"proba": 8,
							"item": "Bear",
							"min": 3
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "BearsCancel",
					"content": [
						{
							"proba": 0,
							"type": "Food",
							"min": 3,
							"max": 3,
							"item": "Apple"
						}
					]
				},
				{
					"id": "KillBoar",
					"content": [
						{
							"proba": 1,
							"item": "Pork",
							"min": 1,
							"max": 5
						},
						{
							"proba": 1,
							"item": "Fat",
							"min": 1,
							"max": 10
						}
					]
				},
				{
					"id": "KillSow",
					"content": [
						{
							"proba": 1,
							"item": "Pork",
							"min": 2,
							"max": 8
						},
						{
							"proba": 1,
							"item": "Fat",
							"min": 4,
							"max": 15
						}
					]
				},
				{
					"id": "KillSwamoar",
					"content": [
						{
							"proba": 1,
							"item": "Crocopork",
							"min": 1,
							"max": 5
						},
						{
							"proba": 1,
							"item": "Fat",
							"min": 1,
							"max": 10
						}
					]
				},
				{
					"id": "RuinsBase",
					"content": [
						{
							"proba": 1,
							"loot": "Crawlers",
							"min": 2,
							"item": "Fangs",
							"max": 4
						}
					]
				},
				{
					"id": "Crawlers",
					"content": [
						{
							"proba": 8,
							"item": "Cloth",
							"min": 1,
							"max": 3
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "Molerats",
					"content": [
						{
							"proba": 2,
							"item": "Rat",
							"min": 2
						},
						{
							"proba": 3,
							"item": "Leather",
							"min": 2
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "Rune",
					"content": [
						{
							"proba": 1,
							"item": "RuneBuilding",
							"max": 1
						},
						{
							"proba": 1,
							"item": "RuneCity",
							"max": 1
						},
						{
							"proba": 1,
							"item": "RuneKnowledge",
							"max": 1
						},
						{
							"proba": 1,
							"item": "RuneRiver",
							"max": 1
						},
						{
							"proba": 1,
							"item": "RuneWar",
							"max": 1
						}
					]
				},
				{
					"id": "GhostPackBase",
					"content": [
						{
							"proba": 1,
							"item": "WhiteLeather",
							"min": 2,
							"max": 3
						},
						{
							"proba": 1,
							"item": "RedEyeball",
							"min": 1,
							"max": 2
						}
					]
				},
				{
					"id": "Nightmare",
					"content": [
						{
							"proba": 1,
							"item": "WhiteLeather",
							"min": 5
						},
						{
							"proba": 1,
							"item": "RedEyeball",
							"min": 2
						}
					]
				},
				{
					"id": "Plagueridden",
					"content": [
						{
							"proba": 4,
							"item": "InfectedBlood",
							"min": 1,
							"max": 2
						},
						{
							"proba": 4,
							"item": "Cloth",
							"min": 1,
							"max": 3
						},
						{
							"proba": 2
						}
					]
				},
				{
					"id": "RatInvasionRat",
					"content": [
						{
							"proba": 3,
							"item": "PlaguedLeather",
							"min": 2
						},
						{
							"proba": 3,
							"item": "InfectedBlood",
							"min": 2
						},
						{
							"proba": 3,
							"item": "Rat",
							"min": 2
						},
						{
							"proba": 2
						},
						{
							"proba": 2,
							"min": 1,
							"max": 2,
							"item": "Bait"
						}
					]
				},
				{
					"id": "RatInvasionRatEnraged",
					"content": [
						{
							"proba": 1,
							"item": "RedEyeball",
							"min": 1
						}
					],
					"includes": "RatInvasionRat"
				},
				{
					"id": "RatInvasionNest",
					"content": [
						{
							"proba": 1,
							"item": "PestiferousGrowthSample",
							"min": 2,
							"max": 3
						}
					]
				},
				{
					"id": "RatInvasionMatriarch",
					"content": [
						{
							"proba": 1,
							"item": "InfectedBrain",
							"min": 1
						},
						{
							"proba": 1,
							"item": "PestiferousGrowthSample",
							"min": 1,
							"max": 2
						}
					]
				},
				{
					"id": "FoodMerchant",
					"content": [
						{
							"proba": 1,
							"type": "Food",
							"rarity": 0,
							"min": 8,
							"max": 12
						}
					]
				},
				{
					"id": "AlcoholMerchant",
					"content": [
						{
							"proba": 1,
							"type": "Alcohol",
							"rarity": 0,
							"min": 8,
							"max": 10
						}
					]
				},
				{
					"id": "MeatMerchant",
					"content": [
						{
							"proba": 1,
							"type": "Meat",
							"rarity": 0,
							"min": 8,
							"max": 12
						}
					]
				},
				{
					"id": "FishMerchant",
					"content": [
						{
							"proba": 1,
							"type": "Fish",
							"rarity": 0,
							"min": 8,
							"max": 12
						},
						{
							"proba": 1,
							"item": "Bait",
							"min": 5,
							"max": 5
						}
					]
				},
				{
					"id": "VegetablesMerchant",
					"content": [
						{
							"proba": 1,
							"type": "Vegetables",
							"rarity": 0,
							"min": 8,
							"max": 12
						}
					]
				},
				{
					"id": "TradeGoodsMerchant",
					"content": [
						{
							"proba": 1,
							"min": 4,
							"max": 6,
							"type": "TradeGoods",
							"rarity": 1
						}
					]
				},
				{
					"id": "ComponentMerchant",
					"content": [
						{
							"proba": 1,
							"min": 8,
							"max": 12,
							"type": "Component",
							"rarity": 0
						}
					]
				},
				{
					"id": "WeaponsMerchant",
					"content": [
						{
							"proba": 1,
							"type": "Weapon",
							"rarity": 1
						}
					]
				},
				{
					"id": "ArmorsMerchant",
					"content": [
						{
							"proba": 1,
							"type": "Armor",
							"rarity": 1
						}
					]
				},
				{
					"id": "GearMerchant",
					"content": [
						{
							"proba": 1,
							"type": "Weapon",
							"rarity": 1
						},
						{
							"proba": 1,
							"type": "Armor",
							"rarity": 1
						}
					]
				},
				{
					"id": "AlchemistsItems",
					"content": [
						{
							"proba": 1,
							"item": "RecipeOilStrengthProc1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilDexterityProc1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilDamageTakenProc1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilIgnoreGuard1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilDotEffect1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilCleave1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilOpportunityAttack1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilCrit1",
							"min": 1
						}
					]
				},
				{
					"id": "TrackersItems",
					"content": [
						{
							"proba": 1,
							"item": "LayerCommonDexterityRecipe",
							"min": 1
						},
						{
							"proba": 1,
							"item": "LayerCommonStrengthRecipe",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeSkinDryingRack",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeMeatDryer",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeBeltAccRangeDmg",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeBeltAccBleedingCrit",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilAnimalsDmg1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeBeltAccSap",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeBeltAccTerrorMax",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeStake",
							"min": 1
						},
						{
							"proba": 1
						},
						{
							"proba": 1,
							"item": "Trap",
							"min": 1,
							"max": 3
						}
					]
				},
				{
					"id": "ArenaItems",
					"content": [
						{
							"proba": 1,
							"item": "RecipeOilProcTrueDmg1",
							"min": 1
						},
						{
							"proba": 1,
							"min": 1,
							"item": "RecipeBeltAccPoisonResist"
						},
						{
							"proba": 1,
							"min": 1,
							"item": "RecipeCorrosiveBomb"
						},
						{
							"proba": 1,
							"min": 1,
							"item": "RecipeBeltAccBurningResist"
						},
						{
							"proba": 1,
							"item": "RecipeTrainingDummy",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeBeltWeighted",
							"min": 1
						}
					]
				},
				{
					"id": "HideoutItems",
					"content": [
						{
							"proba": 1,
							"item": "BeltAccBackstabCritBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccGoldTeeth",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeWatchStool",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeBrewBarrel",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeBackAccCookingNoSalt",
							"min": 1
						},
						{
							"proba": 1
						},
						{
							"proba": 1
						}
					]
				},
				{
					"id": "PrisonItems",
					"content": [
						{
							"proba": 1,
							"item": "RecipeBeltAccCandy",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeBeltAccSap",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeDiceGame",
							"min": 1
						}
					]
				},
				{
					"id": "RuinsItems",
					"content": [
						{
							"proba": 1,
							"item": "BeltAccMoraleBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccGritEndTurn",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccRadiusVision",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccBlindDay",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilWindfury1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BackAccScholarTime",
							"min": 1
						},
						{
							"proba": 1,
							"item": "AnimAccGritIfKill",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BackAccScholarKnowledgeRest",
							"min": 1
						},
						{
							"proba": 0,
							"item": "BeltAccTerrorReduceRound",
							"min": 1
						}
					]
				},
				{
					"id": "BeltAccWorld",
					"content": [
						{
							"proba": 1,
							"item": "BeltAccRangeBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccAutoHeal",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccReduceOpportunityAttack",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccCritBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccWillpowerBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccMovementBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccMovementMalusDmgBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccDmgCritBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccBarbs",
							"min": 1
						},
						{
							"proba": 1,
							"item": "BeltAccGuardEngaged",
							"min": 1
						},
						{
							"proba": 1,
							"item": "AnimAccNoAllyMelee",
							"min": 1
						},
						{
							"proba": 1,
							"item": "AnimAccAllyMelee",
							"min": 1
						}
					]
				},
				{
					"id": "BackAccWorld",
					"content": [
						{
							"proba": 1,
							"item": "BackAccProfessionXp"
						},
						{
							"proba": 1,
							"item": "BackAccProfessionKnowledge"
						},
						{
							"proba": 1,
							"item": "BackAccFishingNumber"
						},
						{
							"proba": 1,
							"item": "BackAccMedicDoubleInjury"
						}
					]
				},
				{
					"id": "PurifiersItems",
					"content": [
						{
							"proba": 1,
							"item": "RecipeOilProcBurning1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "RecipeOilPlagueDmg1",
							"min": 1
						},
						{
							"proba": 1,
							"item": "PestTreatise",
							"min": 1
						}
					]
				},
				{
					"id": "BlackMarketItems",
					"content": [
						{
							"proba": 0,
							"item": "RecipeBeltAccPoisonDmgBonus"
						},
						{
							"proba": 0,
							"item": "RecipeBeltAccPoisonExtra"
						}
					]
				},
				{
					"id": "BlackMarketAgent",
					"content": [
						{
							"proba": 1,
							"type": "Food",
							"min": 2,
							"max": 4,
							"rarity": 3
						},
						{
							"proba": 1,
							"type": "Component",
							"max": 4,
							"min": 2,
							"rarity": 3
						},
						{
							"proba": 1,
							"type": "Gear",
							"rarity": 2
						},
						{
							"proba": 1,
							"type": "Miscellaneous",
							"rarity": 3,
							"min": 2,
							"max": 4
						}
					]
				},
				{
					"id": "Wheat",
					"content": [
						{
							"proba": 10,
							"min": 4,
							"max": 6,
							"item": "Wheat"
						}
					]
				},
				{
					"id": "FreshMint",
					"content": [
						{
							"proba": 10,
							"item": "FreshMint",
							"min": 2,
							"max": 3
						}
					]
				},
				{
					"id": "Hemp",
					"content": [
						{
							"proba": 10,
							"item": "Hemp",
							"min": 2,
							"max": 4
						}
					]
				},
				{
					"id": "Food",
					"content": [
						{
							"proba": 1,
							"type": "Food",
							"rarity": 0,
							"min": 2,
							"max": 3
						}
					]
				},
				{
					"id": "Cheese",
					"content": [
						{
							"proba": 1,
							"rarity": 0,
							"min": 2,
							"max": 3,
							"item": "Cheese"
						}
					]
				},
				{
					"id": "Meat",
					"content": [
						{
							"proba": 1,
							"type": "Meat",
							"rarity": 0,
							"min": 2,
							"max": 3
						}
					]
				},
				{
					"id": "Fish",
					"content": [
						{
							"proba": 1,
							"min": 2,
							"max": 3,
							"loot": "FishingActivity"
						},
						{
							"proba": 1,
							"loot": "FreshwaterFishingActivity",
							"min": 2,
							"max": 3
						}
					]
				},
				{
					"id": "Vegetables",
					"content": [
						{
							"proba": 1,
							"type": "Vegetables",
							"rarity": 0,
							"min": 2,
							"max": 3
						}
					]
				},
				{
					"id": "Alcohol",
					"content": [
						{
							"proba": 1,
							"type": "Alcohol",
							"rarity": 0,
							"min": 2,
							"max": 3
						}
					]
				},
				{
					"id": "Meal",
					"content": [
						{
							"proba": 1,
							"type": "CookedMeal",
							"min": 1,
							"max": 1,
							"rarity": 3
						}
					]
				},
				{
					"id": "TradeGoods",
					"content": [
						{
							"proba": 1,
							"min": 1,
							"max": 2,
							"type": "TradeGoods",
							"rarity": 1
						}
					]
				},
				{
					"id": "Component",
					"content": [
						{
							"proba": 1,
							"min": 2,
							"max": 3,
							"type": "Component",
							"rarity": 0
						}
					]
				},
				{
					"id": "Miscellaneous",
					"content": [
						{
							"proba": 1,
							"min": 2,
							"max": 3,
							"type": "Miscellaneous",
							"rarity": 0
						}
					]
				},
				{
					"id": "Gear",
					"content": [
						{
							"proba": 1,
							"type": "Gear",
							"min": 1,
							"rarity": 1
						}
					]
				},
				{
					"id": "Rimesteel",
					"content": [
						{
							"proba": 80,
							"min": 0,
							"max": 0
						},
						{
							"proba": 20,
							"item": "Rimesteel",
							"min": 1,
							"max": 1
						}
					]
				},
				{
					"id": "SnowIris",
					"content": [
						{
							"proba": 1,
							"item": "SnowIris",
							"min": 3,
							"max": 5
						}
					]
				},
				{
					"id": "Comfrey",
					"content": [
						{
							"proba": 1,
							"item": "Comfrey",
							"min": 1,
							"max": 4
						}
					]
				},
				{
					"id": "StrangeRoot",
					"content": [
						{
							"proba": 1,
							"item": "StrangeRoot",
							"min": 1
						}
					]
				},
				{
					"id": "Cowbane",
					"content": [
						{
							"proba": 1,
							"item": "Cowbane",
							"min": 3,
							"max": 4
						}
					]
				},
				{
					"id": "StarFlower",
					"content": [
						{
							"proba": 1,
							"item": "Starflower",
							"min": 2,
							"max": 3
						}
					]
				},
				{
					"id": "IronOre",
					"content": [
						{
							"proba": 1,
							"item": "IronOre",
							"min": 1,
							"max": 4
						}
					]
				},
				{
					"id": "GreyMass",
					"content": [
						{
							"proba": 1,
							"item": "GreyMass",
							"min": 1,
							"max": 2
						}
					]
				},
				{
					"id": "Wood",
					"content": [
						{
							"proba": 1,
							"item": "Wood",
							"min": 1,
							"max": 4
						}
					]
				},
				{
					"id": "SnowWillow",
					"content": [
						{
							"proba": 1,
							"item": "SnowWillow",
							"min": 1,
							"max": 3
						}
					]
				},
				{
					"id": "Mushrooms",
					"content": [
						{
							"proba": 1,
							"item": "Mushrooms",
							"min": 1,
							"max": 3
						}
					]
				},
				{
					"id": "Blueberries",
					"content": [
						{
							"proba": 1,
							"item": "Blueberries",
							"min": 1,
							"max": 3
						}
					]
				},
				{
					"id": "Gems",
					"content": [
						{
							"proba": 1,
							"item": "Ruby",
							"min": 1
						},
						{
							"proba": 1,
							"item": "Sapphire",
							"min": 1
						}
					]
				},
				{
					"id": "IronOreMining",
					"content": [
						{
							"proba": 100,
							"item": "IronOre",
							"max": 1,
							"min": 0,
							"level": 1
						},
						{
							"proba": 60,
							"item": "IronOre",
							"min": 1,
							"max": 1,
							"level": 1
						},
						{
							"proba": 10,
							"loot": "Gems",
							"level": 2
						},
						{
							"proba": 40,
							"item": "GreyMass",
							"min": 0,
							"max": 1,
							"level": 3
						},
						{
							"proba": 20,
							"item": "Etherit",
							"min": 0,
							"max": 1,
							"level": 4
						},
						{
							"proba": 20,
							"loot": "Gems",
							"level": 5
						},
						{
							"proba": 60,
							"level": 5,
							"item": "IronOre",
							"min": 0,
							"max": 1
						},
						{
							"proba": 40,
							"item": "GreyMass",
							"min": 0,
							"max": 1,
							"level": 5
						},
						{
							"proba": 40,
							"item": "Etherit",
							"min": 0,
							"max": 1,
							"level": 5
						}
					]
				},
				{
					"id": "FishingActivity",
					"content": [
						{
							"proba": 1,
							"min": 1,
							"type": "Fish",
							"rarity": 0,
							"flags": 1
						}
					]
				},
				{
					"id": "FreshwaterFishingActivity",
					"content": [
						{
							"proba": 1,
							"type": "FreshwaterFish",
							"min": 1,
							"rarity": 0,
							"flags": 1
						}
					]
				},
				{
					"id": "Tomb",
					"content": [
						{
							"proba": 6,
							"item": "Sandstone",
							"min": 1,
							"max": 2
						},
						{
							"proba": 80,
							"item": "Sandstone",
							"min": 2,
							"max": 3
						},
						{
							"proba": 5,
							"item": "GreyMass",
							"max": 1,
							"min": 0
						}
					]
				},
				{
					"id": "RuinStone",
					"content": [
						{
							"proba": 5,
							"item": "IronOre",
							"min": 1,
							"max": 3
						},
						{
							"proba": 15,
							"item": "Sandstone",
							"min": 1,
							"max": 2
						},
						{
							"proba": 5,
							"min": 1,
							"max": 2,
							"item": "Sandstone"
						},
						{
							"proba": 1,
							"item": "GreyMass",
							"max": 1,
							"min": 0
						},
						{
							"proba": 5
						}
					]
				},
				{
					"id": "WoodMining",
					"content": [
						{
							"proba": 4,
							"item": "Wood",
							"min": 1,
							"max": 2
						},
						{
							"proba": 80,
							"item": "Sandstone",
							"min": 1,
							"max": 2
						}
					]
				},
				{
					"id": "WoodCutting",
					"content": [
						{
							"proba": 100,
							"item": "Wood",
							"max": 1,
							"min": 0
						},
						{
							"proba": 60,
							"item": "Wood",
							"min": 1,
							"max": 1
						}
					]
				},
				{
					"id": "RimesteelCraftBonusLoot",
					"content": [
						{
							"proba": 1,
							"item": "Ruby",
							"min": 1,
							"max": 1
						},
						{
							"proba": 1,
							"item": "Sapphire",
							"min": 1,
							"max": 1
						},
						{
							"proba": 3,
							"item": "Charcoal",
							"min": 1,
							"max": 1
						},
						{
							"proba": 2,
							"item": "Sandstone",
							"min": 1,
							"max": 1
						},
						{
							"proba": 5,
							"item": "IronOre",
							"min": 1,
							"max": 1
						},
						{
							"proba": 5
						}
					]
				},
				{
					"id": "AlchemyCraftBonusLootConfirme",
					"content": [
						{
							"proba": 1,
							"item": "AlazarPowder",
							"min": 1,
							"max": 1
						}
					]
				},
				{
					"id": "AlchemyCraftBonusLootCompanion",
					"content": [
						{
							"proba": 1,
							"item": "AlchemicResidue",
							"min": 1,
							"max": 1
						}
					]
				},
				{
					"id": "FishingBonusLoot",
					"content": [
						{
							"proba": 5,
							"item": "Rope",
							"min": 1,
							"max": 1
						},
						{
							"proba": 5,
							"item": "Leather",
							"min": 1,
							"max": 1
						},
						{
							"proba": 10,
							"item": "Cloth",
							"min": 1,
							"max": 1
						},
						{
							"proba": 5,
							"item": "Flask",
							"min": 1,
							"max": 1
						},
						{
							"proba": 1,
							"item": "PlaguedLeather",
							"min": 1,
							"max": 1
						},
						{
							"proba": 50,
							"item": "Wood",
							"min": 1,
							"max": 1
						},
						{
							"proba": 50,
							"item": "Hemp",
							"min": 1,
							"max": 1
						}
					]
				},
				{
					"id": "WoodcuttingBonusLoot",
					"content": [
						{
							"proba": 2,
							"item": "Mushrooms",
							"min": 1,
							"max": 1
						},
						{
							"proba": 2,
							"item": "Hemp",
							"min": 1,
							"max": 2
						},
						{
							"proba": 8
						}
					]
				},
				{
					"id": "Codex",
					"content": [
						{
							"proba": 1,
							"type": "Codex",
							"min": 1,
							"rarity": 3
						}
					]
				},
				{
					"id": "Trinket",
					"content": [
						{
							"proba": 1,
							"type": "Trinket",
							"min": 1,
							"rarity": 0
						}
					]
				},
				{
					"id": "ForsakenVillageSmall",
					"content": [
						{
							"proba": 5,
							"min": 1,
							"type": "Alcohol",
							"max": 2
						},
						{
							"proba": 1,
							"min": 2,
							"max": 5,
							"item": "LockPick"
						},
						{
							"proba": 1,
							"item": "Piton",
							"min": 2,
							"max": 5
						},
						{
							"proba": 1,
							"item": "Fishhook",
							"max": 5,
							"min": 2
						},
						{
							"proba": 1,
							"item": "Bait",
							"min": 3,
							"max": 5
						}
					]
				},
				{
					"id": "ForsakenVillageBig",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 130,
							"max": 190
						}
					]
				},
				{
					"id": "DismantleShield",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 0,
							"max": 3
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 0,
							"max": 3
						},
						{
							"proba": 0,
							"min": 0,
							"max": 3,
							"item": "Leather"
						}
					]
				},
				{
					"id": "DismantleSword",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 0,
							"max": 1
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 1,
							"max": 3
						}
					]
				},
				{
					"id": "DismantleSword2H",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 0,
							"max": 1
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 2,
							"max": 4
						}
					]
				},
				{
					"id": "DismantleMace",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 1,
							"max": 2
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 1,
							"max": 2
						}
					]
				},
				{
					"id": "DismantleMace2H",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 2,
							"max": 4
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 2,
							"max": 4
						}
					]
				},
				{
					"id": "DismantleAxe",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 1,
							"max": 2
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 1,
							"max": 2
						}
					]
				},
				{
					"id": "DismantleAxe2H",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 2,
							"max": 4
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 2,
							"max": 4
						}
					]
				},
				{
					"id": "DismantleBow",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 1,
							"max": 2
						}
					]
				},
				{
					"id": "DismantleDagger",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 0,
							"max": 1
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 0,
							"max": 1
						}
					]
				},
				{
					"id": "DismantlePolearm",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 2,
							"max": 4
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 2,
							"max": 4
						}
					]
				},
				{
					"id": "DismantleWand",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 1,
							"max": 2
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 1,
							"max": 2
						}
					]
				},
				{
					"id": "DismantleLightArmor",
					"content": [
						{
							"proba": 0,
							"item": "IronOre",
							"min": 1,
							"max": 2
						},
						{
							"proba": 0,
							"min": 1,
							"max": 4,
							"item": "Leather"
						}
					]
				},
				{
					"id": "DismantleMediumArmor",
					"content": [
						{
							"proba": 0,
							"item": "IronOre",
							"min": 2,
							"max": 4
						},
						{
							"proba": 0,
							"min": 1,
							"max": 3,
							"item": "Leather"
						}
					]
				},
				{
					"id": "DismantleHeavyArmor",
					"content": [
						{
							"proba": 0,
							"item": "IronOre",
							"min": 3,
							"max": 5
						},
						{
							"proba": 0,
							"min": 1,
							"max": 2,
							"item": "Leather"
						}
					]
				},
				{
					"id": "DismantleAccessoryBelt",
					"content": [
						{
							"proba": 0,
							"item": "Leather",
							"min": 0,
							"max": 2
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 0,
							"max": 1
						}
					]
				},
				{
					"id": "DismantleAccessoryBackpack",
					"content": [
						{
							"proba": 0,
							"item": "IronOre",
							"min": 0,
							"max": 1
						},
						{
							"proba": 0,
							"item": "Rope",
							"min": 0,
							"max": 1
						}
					]
				},
				{
					"id": "DismantleAccessoryAnimal",
					"content": [
						{
							"proba": 0,
							"item": "IronOre",
							"min": 1,
							"max": 3
						}
					]
				},
				{
					"id": "DismantleLeftHand",
					"content": [
						{
							"proba": 0,
							"item": "Wood",
							"min": 0,
							"max": 1
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 0,
							"max": 1
						}
					]
				},
				{
					"id": "DismantleLayer",
					"content": [
						{
							"proba": 0,
							"item": "Leather",
							"min": 0,
							"max": 1
						},
						{
							"proba": 0,
							"item": "IronOre",
							"min": 0,
							"max": 1
						}
					]
				},
				{
					"id": "S1RewardKillCaptainGuard",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 25
						},
						{
							"proba": 1,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "S1RewardKillCaptainThief",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 25
						},
						{
							"proba": 1,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "S1RewardBlacksmith",
					"content": [
						{
							"proba": 1,
							"item": "RawMaterials",
							"min": 20
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 15
						},
						{
							"proba": 1,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "S1RewardKillLumbermill",
					"content": [
						{
							"proba": 1,
							"item": "Beans",
							"min": 15
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 1,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "S1RewardDefendLumbermill",
					"content": [
						{
							"proba": 1,
							"item": "Wood",
							"min": 20
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 1,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "S1SheepfoldHelpMan",
					"content": [
						{
							"proba": 1,
							"item": "BackAccFishingNumber",
							"min": 1
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 1,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "S1SheepfoldHelpWoman",
					"content": [
						{
							"proba": 1,
							"item": "BeltAccWillpowerBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 1,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "S1HangHelpBandit",
					"content": [
						{
							"proba": 1,
							"item": "BackAccThiefStealReduction",
							"min": 1
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 1,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "S1HangHelpGuard",
					"content": [
						{
							"proba": 1,
							"item": "BeltAccMovementBonus",
							"min": 1
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 1,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "S1RewardEndRefugees",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 200
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 50
						},
						{
							"proba": 1,
							"item": "Pass",
							"min": 1
						}
					]
				},
				{
					"id": "S1RewardEndBourgomaster",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 200
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 50
						},
						{
							"proba": 1,
							"item": "Pass",
							"min": 1
						}
					]
				},
				{
					"id": "E1LegionWins",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 200
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 50
						}
					]
				},
				{
					"id": "E1DesertersForLegion",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 25
						},
						{
							"proba": 1,
							"min": 25,
							"item": "Setting"
						}
					]
				},
				{
					"id": "E1WellsForVernalis",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 25
						},
						{
							"proba": 1,
							"min": 25,
							"item": "Setting"
						}
					]
				},
				{
					"id": "E1WellsPig",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 25
						},
						{
							"proba": 1,
							"min": 25,
							"item": "Setting"
						}
					]
				},
				{
					"id": "E1HelpHostes",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 25
						},
						{
							"proba": 1,
							"min": 25,
							"item": "Setting"
						}
					]
				},
				{
					"id": "E1KillHostes",
					"content": [
						{
							"proba": 1,
							"min": 25,
							"item": "Setting"
						}
					]
				},
				{
					"id": "E1AbbeyHelp",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 25
						},
						{
							"proba": 1,
							"min": 25,
							"item": "Setting"
						}
					]
				},
				{
					"id": "E1EndLaheartWin",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 300
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 50
						}
					]
				},
				{
					"id": "E1EndVernalisWin",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 300
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 50
						}
					]
				},
				{
					"id": "G1LenaideAbbeyConvincedFarmers",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						}
					]
				},
				{
					"id": "G1LenaideAbbeyKillPlagueMen",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 200
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "G1LenaideAbbeySpare",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "BackAccSecondProfession",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "G1LenaideAbbeyFight",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "BackAccSecondProfession",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "G1VineyardHelp",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "G1VineyardHelpBis",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 200
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "G1VineyardSolve",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "G1ApothecarySolve",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 50
						},
						{
							"proba": 0,
							"item": "RecipeApprenticeRemedy",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "G1BrunehildeHelp",
					"content": [
						{
							"proba": 0,
							"item": "VirginEssence",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "G1StrikeMineBoss",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 15
						}
					]
				},
				{
					"id": "G1StrikeMineStrikers",
					"content": [
						{
							"proba": 0,
							"item": "BackAccMiningGemsChance",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 30
						}
					]
				},
				{
					"id": "G1SettingClemensEnd",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 250
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						},
						{
							"proba": 0,
							"item": "Pass",
							"min": 1
						}
					]
				},
				{
					"id": "G1SettingBrunhildeEnd",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 250
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						},
						{
							"proba": 0,
							"item": "Pass",
							"min": 1
						}
					]
				},
				{
					"id": "G1CornacConvinced",
					"content": [
						{
							"proba": 0,
							"item": "AnimAccCarriage",
							"min": 1
						}
					]
				},
				{
					"id": "G1CornacAttack",
					"content": [
						{
							"proba": 0,
							"item": "AnimAccCarriage",
							"min": 1
						}
					]
				},
				{
					"id": "H1DesignedMission2Convinced",
					"content": [
						{
							"proba": 0,
							"item": "BackAccBlacksmithQuality",
							"min": 1
						}
					]
				},
				{
					"id": "H1DesignedMission2Pay",
					"content": [
						{
							"proba": 0,
							"item": "BackAccBlacksmithQuality",
							"min": 1
						}
					]
				},
				{
					"id": "H1DesignedMission3GiveMeat",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						}
					]
				},
				{
					"id": "H1DesignedMission3GivePotion",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 200
						}
					]
				},
				{
					"id": "H1DeadCityTracker",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"min": 8,
							"item": "WhiteLeather"
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1DeadCityScholar",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"min": 2,
							"item": "PestiferousGrowthSample"
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1DeadCityFailure",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 50
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1DeadCityScholarSucces",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"min": 4,
							"item": "PestiferousGrowthSample"
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1DeadCityTrackerSuccess",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"min": 16,
							"item": "WhiteLeather"
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1BoarVillageAccuse",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1BoarVillageSpare",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1LostSoldierScholar",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "AlazarPowder",
							"min": 10
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1LostSoldierDruid",
					"content": [
						{
							"proba": 0,
							"item": "Fangs",
							"min": 200
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1ScholarBeast",
					"content": [
						{
							"proba": 0,
							"item": "RecipeAnimAccBerserkProc",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 20
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1BeastTrackersWin",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "SPSetback"
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 25
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1BeastScholarWin",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 100
						},
						{
							"proba": 0,
							"item": "SPSetback"
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 25
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "H1ConclusionScholars",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 300
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 50
						}
					]
				},
				{
					"id": "H1ConclusionTrackers",
					"content": [
						{
							"proba": 1,
							"item": "Gold",
							"min": 300
						},
						{
							"proba": 1,
							"item": "Influence",
							"min": 50
						}
					]
				},
				{
					"id": "H1BelerionSmugglers",
					"content": [
						{
							"proba": 0,
							"item": "PlagueRemedy",
							"min": 2
						}
					]
				},
				{
					"id": "H1BelerionSmugglersHunter",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 120
						}
					]
				},
				{
					"id": "G2SettingReward",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 350
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 100
						}
					]
				},
				{
					"id": "G2SettingPoor",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 115
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						}
					]
				},
				{
					"id": "G2SettingPoorPreview",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 115
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 10
						}
					]
				},
				{
					"id": "G2SettingSon",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 125
						},
						{
							"proba": 0,
							"item": "Sapphire",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 40
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 10
						}
					]
				},
				{
					"id": "G2SettingSonPreview",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 125
						},
						{
							"proba": 0,
							"item": "Sapphire",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 40
						}
					]
				},
				{
					"id": "G2SettingBernnaPreview",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 120
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 10
						}
					]
				},
				{
					"id": "G2SettingBernna",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 120
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						}
					]
				},
				{
					"id": "G2SettingRookPreview",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 110
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 10
						}
					]
				},
				{
					"id": "G2SettingRook",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 110
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						}
					]
				},
				{
					"id": "G2CathedralInquisition",
					"content": [
						{
							"proba": 0,
							"item": "BackAccThiefLockpickEasy",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 3
						}
					]
				},
				{
					"id": "G2CathedralAlazar",
					"content": [
						{
							"proba": 0,
							"item": "BackAccMedicDoubleInjury",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 3
						}
					]
				},
				{
					"id": "G2AmbassyPreview",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 110
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 10
						}
					]
				},
				{
					"id": "G2Ambassy",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 110
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						}
					]
				},
				{
					"id": "G2TowerSlave",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 60
						}
					]
				},
				{
					"id": "G2TowerGuard",
					"content": [
						{
							"proba": 0,
							"item": "Influence",
							"min": 30
						}
					]
				},
				{
					"id": "G2BernnaArenaPreview",
					"content": [
						{
							"proba": 0,
							"item": "SwordLegendaryArena1G2",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Sword2HLegendaryArena1G2",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 3
						}
					]
				},
				{
					"id": "G2BernnaArena",
					"content": [
						{
							"proba": 0,
							"item": "SwordLegendaryArena1G2",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Sword2HLegendaryArena1G2",
							"min": 1
						}
					]
				},
				{
					"id": "G2HoevendorpArenaPreview",
					"content": [
						{
							"proba": 0,
							"item": "SwordLegendaryArena1G2",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Sword2HLegendaryArena1G2"
						}
					]
				},
				{
					"id": "G2HoevendorpArena",
					"content": [
						{
							"proba": 0,
							"item": "AxeLegendaryArena2G2",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						}
					]
				},
				{
					"id": "A1SettingStablesScholars",
					"content": [
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "A1SettingStablesInquisitors",
					"content": [
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "A1SettingForsakenVillage",
					"content": [
						{
							"proba": 0,
							"item": "RecipePlagueRemedy",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 15
						}
					]
				},
				{
					"id": "A1SettingLabInquisition",
					"content": [
						{
							"proba": 0,
							"item": "SwordRareInquisition",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 5
						}
					]
				},
				{
					"id": "A1SettingLabScholar",
					"content": [
						{
							"proba": 0,
							"item": "BackAccScholarTime",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 5
						}
					]
				},
				{
					"id": "A1SettingTavernScholar",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "A1SettingTavernInquisition",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "A1SettingInvestigation",
					"content": [
						{
							"proba": 0,
							"item": "BowRareInquisition",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "A1SettingInvestigationSoldiers",
					"content": [
						{
							"proba": 0,
							"item": "SwordUncoCraftT3",
							"min": 1
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 50
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "A1SettingRuinsAlazar",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "A1SettingRuinsInquisition",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						},
						{
							"proba": 0,
							"item": "Setting",
							"min": 20
						}
					]
				},
				{
					"id": "A1SettingPrinceEnd",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 500
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 150
						}
					]
				},
				{
					"id": "A1SettingInquisitionEnd",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 500
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 150
						}
					]
				},
				{
					"id": "A1Paleontologist",
					"content": [
						{
							"proba": 0,
							"item": "BackAccMiningGreyMass"
						},
						{
							"proba": 0,
							"item": "Gold",
							"min": 150
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 75
						}
					]
				},
				{
					"id": "A1Astronomer",
					"content": [
						{
							"proba": 0,
							"item": "RecipeBeltAccPlague",
							"min": 1
						}
					]
				},
				{
					"id": "PathCrimeM1",
					"content": [
						{
							"proba": 1,
							"item": "RecipeOilProcPoison1",
							"min": 1
						}
					]
				},
				{
					"id": "PathMightM1",
					"content": [
						{
							"proba": 1,
							"item": "RecipeLayerUncoStrengthCrit",
							"min": 1
						}
					]
				},
				{
					"id": "PathTradeM1",
					"content": [
						{
							"proba": 1,
							"item": "LayerUncoMovementRecipe",
							"min": 1
						}
					]
				},
				{
					"id": "PathMysteryM1",
					"content": [
						{
							"proba": 1,
							"item": "RecipeOilSelfHeal1",
							"min": 1
						}
					]
				},
				{
					"id": "TrinketBelerion",
					"content": [
						{
							"proba": 10,
							"item": "SilverPin",
							"max": 1,
							"min": 1
						},
						{
							"proba": 10,
							"item": "Logbook",
							"max": 1,
							"min": 1
						},
						{
							"proba": 10,
							"item": "BoatModel",
							"max": 1,
							"min": 1
						},
						{
							"proba": 8,
							"item": "PlayingCard",
							"min": 1,
							"max": 1
						},
						{
							"proba": 5,
							"item": "SmallTapestry",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "HuntTrophy",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "LapisLazuliBracelet",
							"min": 1,
							"max": 1
						},
						{
							"proba": 5,
							"item": "IronTorque",
							"min": 1,
							"max": 1
						},
						{
							"proba": 1,
							"item": "MasterPiece",
							"max": 1,
							"min": 1
						}
					]
				},
				{
					"id": "TrinketAlazar",
					"content": [
						{
							"proba": 10,
							"item": "Lorgnon",
							"max": 1,
							"min": 1
						},
						{
							"proba": 8,
							"item": "TeacherHourglass",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "PreservationBowl",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "AnatomyBook",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "Lancet",
							"max": 1,
							"min": 1
						},
						{
							"proba": 1,
							"item": "LapisLazuliBracelet",
							"max": 1,
							"min": 1
						}
					]
				},
				{
					"id": "TrinketEdoran",
					"content": [
						{
							"proba": 10,
							"item": "RousteBall",
							"max": 1,
							"min": 1
						},
						{
							"proba": 10,
							"item": "OokStatuette",
							"max": 1,
							"min": 1
						},
						{
							"proba": 8,
							"item": "PrayerCollection",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "EyeNecklace",
							"max": 1,
							"min": 1
						},
						{
							"proba": 1,
							"item": "IronTorque",
							"max": 1,
							"min": 1
						}
					]
				},
				{
					"id": "TrinketBandit",
					"content": [
						{
							"proba": 10,
							"item": "Logbook",
							"min": 1,
							"max": 1
						},
						{
							"proba": 10,
							"item": "PlayingCard",
							"max": 1,
							"min": 1
						},
						{
							"proba": 10,
							"item": "RousteBall",
							"max": 1,
							"min": 1
						},
						{
							"proba": 8,
							"item": "ExcellentHairbrush",
							"min": 1,
							"max": 1
						},
						{
							"proba": 5,
							"item": "ChampionStatuette",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "Daub",
							"min": 1,
							"max": 1
						},
						{
							"proba": 1,
							"item": "IronTorque",
							"min": 1,
							"max": 1
						},
						{
							"proba": 1,
							"item": "BoneLuckyCharm",
							"min": 1,
							"max": 1
						}
					]
				},
				{
					"id": "TrinketHarag",
					"content": [
						{
							"proba": 10,
							"item": "HuntressDoll",
							"max": 1,
							"min": 1
						},
						{
							"proba": 10,
							"item": "BirdCall",
							"max": 1,
							"min": 1
						},
						{
							"proba": 8,
							"item": "ExcellentHairbrush",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "HuntTrophy",
							"max": 1,
							"min": 1
						},
						{
							"proba": 1,
							"item": "BoneLuckyCharm",
							"max": 1,
							"min": 1
						}
					]
				},
				{
					"id": "TrinketGosenberg",
					"content": [
						{
							"proba": 10,
							"item": "SilverPin",
							"max": 1,
							"min": 1
						},
						{
							"proba": 10,
							"item": "SilkGlove",
							"max": 1,
							"min": 1
						},
						{
							"proba": 10,
							"item": "PlayingCard",
							"min": 1,
							"max": 1
						},
						{
							"proba": 10,
							"item": "PoetryCollection",
							"max": 1,
							"min": 1
						},
						{
							"proba": 8,
							"item": "Daub",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "LaceRibbon",
							"max": 1,
							"min": 1
						},
						{
							"proba": 5,
							"item": "Lyre",
							"min": 1,
							"max": 1
						},
						{
							"proba": 5,
							"item": "ChampionStatuette",
							"max": 1,
							"min": 1
						},
						{
							"proba": 1,
							"item": "MasterPiece",
							"max": 1,
							"min": 1
						}
					]
				},
				{
					"id": "G2CityCorpse",
					"content": [
						{
							"proba": 3,
							"item": "LockPick",
							"max": 2,
							"min": 1
						},
						{
							"proba": 3,
							"item": "Cloth",
							"max": 1,
							"min": 1
						},
						{
							"proba": 2,
							"item": "Rat",
							"max": 2,
							"min": 1
						},
						{
							"proba": 3,
							"item": "Piton",
							"max": 1,
							"min": 1
						},
						{
							"proba": 2,
							"item": "Corpse",
							"max": 1,
							"min": 1
						},
						{
							"proba": 1,
							"item": "Remedy",
							"max": 1,
							"min": 1
						}
					]
				},
				{
					"id": "G2CityChests",
					"content": [
						{
							"proba": 1,
							"item": "Rope",
							"min": 1
						},
						{
							"proba": 2,
							"type": "Alcohol",
							"max": 2,
							"min": 1
						},
						{
							"proba": 1,
							"item": "Cloth",
							"min": 1
						},
						{
							"proba": 1,
							"item": "ToothPaste",
							"min": 1
						},
						{
							"proba": 2,
							"type": "Trinket",
							"max": 1,
							"min": 1
						},
						{
							"proba": 2,
							"type": "Fish",
							"max": 2,
							"min": 1
						},
						{
							"proba": 2,
							"type": "Vegetables",
							"max": 2,
							"min": 1
						},
						{
							"proba": 1,
							"item": "Gold",
							"min": 10,
							"max": 25
						},
						{
							"proba": 1,
							"type": "Plants",
							"max": 2,
							"min": 1
						}
					]
				},
				{
					"id": "BardRankSing",
					"content": [
						{
							"proba": 50,
							"loot": "Trinket",
							"level": 1
						},
						{
							"proba": 20,
							"loot": "Trinket",
							"level": 2
						},
						{
							"proba": 50,
							"level": 3,
							"loot": "Gems"
						},
						{
							"proba": 50,
							"loot": "Gems",
							"level": 4
						}
					]
				},
				{
					"id": "SongFailed",
					"content": [
						{
							"proba": 7,
							"item": "Cabbage",
							"min": 1
						},
						{
							"proba": 2,
							"item": "Cabbage",
							"min": 2
						}
					]
				},
				{
					"id": "BaseSong",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 25,
							"max": 60
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 10,
							"max": 25
						}
					]
				},
				{
					"id": "JeanBon",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 35,
							"max": 80
						},
						{
							"proba": 0,
							"item": "Influence",
							"min": 5,
							"max": 15
						}
					]
				},
				{
					"id": "NakedPeople",
					"content": [
						{
							"proba": 0,
							"item": "Gold",
							"min": 45,
							"max": 100
						}
					]
				},
				{
					"id": "Nek",
					"content": [
						{
							"proba": 0,
							"item": "Influence",
							"min": 20,
							"max": 45
						}
					]
				}
			],
			"props": {},
			"separators": [
				{
					"title": "Humans",
					"id": "Default"
				},
				{
					"title": "Animals",
					"id": "AnimalBase"
				},
				{
					"title": "Ruins",
					"id": "RuinsBase"
				},
				{
					"title": "Ghostpack",
					"id": "GhostPackBase"
				},
				{
					"title": "Plague",
					"id": "Plagueridden"
				},
				{
					"title": "Merchants",
					"id": "FoodMerchant"
				},
				{
					"title": "Elements",
					"id": "Wheat"
				},
				{
					"title": "Dismantle",
					"id": "DismantleShield"
				},
				{
					"title": "Setting",
					"id": "S1RewardKillCaptainGuard"
				},
				{
					"title": "Paths",
					"id": "PathCrimeM1"
				},
				{
					"level": 1,
					"id": "TrinketBelerion"
				},
				{
					"level": 2,
					"id": "TrinketAlazar"
				},
				{
					"level": 3,
					"id": "TrinketEdoran"
				},
				{
					"title": "HaragLoot",
					"id": "TrinketHarag"
				},
				{
					"title": "GosenbergLoot",
					"id": "TrinketGosenberg"
				},
				{
					"title": "Songs",
					"id": "BardRankSing"
				}
			]
		},
		{
			"name": "loot@content",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "proba"
				},
				{
					"typeStr": "6:item",
					"name": "item",
					"opt": true
				},
				{
					"typeStr": "6:itemType",
					"name": "type",
					"opt": true
				},
				{
					"typeStr": "6:loot",
					"name": "loot",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "min",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "max",
					"opt": true
				},
				{
					"typeStr": "5:Bad,Normal,Good,Excellent",
					"name": "rarity",
					"opt": true
				},
				{
					"typeStr": "10:exactType",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "level",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "unitClass",
			"columns": [
				{
					"typeStr": "14",
					"name": "icon",
					"opt": true
				},
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "weaponTypes"
				},
				{
					"typeStr": "8",
					"name": "equipment"
				},
				{
					"typeStr": "8",
					"name": "baseSkills"
				},
				{
					"typeStr": "3",
					"name": "tier"
				},
				{
					"typeStr": "4",
					"name": "timelinePriority",
					"documentation": "0 : non prioritaire\n1-X : ordre de priorité  "
				},
				{
					"typeStr": "5:Common,Uncommon,Rare,Special",
					"name": "rarity"
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "8",
					"name": "stats"
				},
				{
					"typeStr": "13",
					"name": "model"
				},
				{
					"typeStr": "2",
					"name": "iconeDone",
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "notes"
				}
			],
			"lines": [
				{
					"id": "Civil",
					"weaponTypes": [
						{
							"wp": "Weapon"
						}
					],
					"equipment": [
						{
							"armor": "BaseArmorMerchant",
							"weapon": "DaggerCommonCivilian",
							"group": "Merchants"
						},
						{
							"group": "Civilians",
							"weapon": "PolearmCommonCivilian",
							"armor": "BaseArmorFarmer"
						},
						{
							"armor": "BaseArmorFarmer",
							"group": "Civilians",
							"weapon": "MaceCommonCivilian",
							"leftHand": "Torch"
						},
						{
							"weapon": "DaggerCommonCivilian",
							"armor": "NobleClothes",
							"group": "Nobles"
						},
						{
							"weapon": "MaceCommonCivilian",
							"armor": "PriestClothes",
							"group": "Clerics"
						},
						{
							"weapon": "PolearmCommonCivilian",
							"armor": "Townspeople",
							"group": "GosenbergCitizens"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"powerScale": 1
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 23
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Civil",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "CivilFarmer",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [
						{
							"weapon": "PolearmCommonCivilian",
							"armor": "BaseArmorFarmer"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"powerScale": 0.7
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 26
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 26
						},
						{
							"value": 7,
							"attribute": "Constitution",
							"upValue": 45
						},
						{
							"value": 5,
							"attribute": "CritHitPercent",
							"upValue": 15
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Civil",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "SportPlayer",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "Sportswear"
						},
						{
							"armor": "SportswearGosenberg",
							"group": "SportTeamGosenberg"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"powerScale": 0.7
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 7,
							"attribute": "Constitution",
							"upValue": 45
						},
						{
							"value": 5,
							"attribute": "CritHitPercent",
							"upValue": 15
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "A supprimer apres la beta G2",
					"name": "Joueur",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "SportPlayerStrength",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "Sportswear"
						},
						{
							"armor": "SportswearGosenberg",
							"group": "SportTeamGosenberg"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"powerScale": 0.7
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 7,
							"attribute": "Constitution",
							"upValue": 45
						},
						{
							"value": 5,
							"attribute": "CritHitPercent",
							"upValue": 15
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Joueur",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "SportPlayerDexterity",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "Sportswear"
						},
						{
							"armor": "SportswearGosenberg",
							"group": "SportTeamGosenberg"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"powerScale": 0.7
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 23
						},
						{
							"value": 7,
							"attribute": "Constitution",
							"upValue": 45
						},
						{
							"value": 5,
							"attribute": "CritHitPercent",
							"upValue": 15
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Joueur",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Swordman",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"baseSkills": [
						{
							"skill": "Taunt",
							"minLevel": 0
						},
						{
							"skill": "Wrath",
							"minLevel": 0
						},
						{
							"skill": "FirstAid",
							"minLevel": 0
						},
						{
							"skill": "DefensivePosture",
							"minLevel": 2
						},
						{
							"skill": "BraveCleave",
							"minLevel": 2
						},
						{
							"skill": "BraveDuel",
							"minLevel": 2
						},
						{
							"skill": "Bulwark",
							"minLevel": 5
						},
						{
							"skill": "Counterattack",
							"minLevel": 5
						},
						{
							"skill": "Boldness",
							"minLevel": 5
						},
						{
							"skill": "LastStand",
							"minLevel": 8
						},
						{
							"skill": "CombatGrip",
							"minLevel": 8
						},
						{
							"skill": "HardTraining",
							"minLevel": 8
						},
						{
							"skill": "WeaponSwapSword",
							"minLevel": 10
						},
						{
							"skill": "DefensiveRiposte",
							"minLevel": 10
						},
						{
							"skill": "Intervention",
							"minLevel": 10
						},
						{
							"skill": "Exhorted",
							"minLevel": 12
						},
						{
							"skill": "ClassSpecialization",
							"minLevel": 12
						}
					],
					"props": {
						"flags": 2
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Épéiste",
					"tier": 0,
					"equipment": [
						{
							"weapon": "SwordStart",
							"armor": "BaseArmorStart2",
							"leftHand": "ShieldStart"
						},
						{
							"weapon": "Sword2HStart",
							"armor": "BaseArmorStart1"
						}
					],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Protector",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"baseSkills": [
						{
							"skill": "Encouragement"
						}
					],
					"props": {
						"armorKind": "ArmorHeavy",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Protecteur",
					"tier": 1,
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Fighter",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"baseSkills": [
						{
							"skill": "DestabilisingStrike"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorHeavy",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Combattant",
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Swordmaster",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"baseSkills": [
						{
							"skill": "Slashes"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 32
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Maître d'armes",
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Duellist",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "Estocade"
						},
						{
							"skill": "DuellistInstinct",
							"minLevel": 5
						},
						{
							"skill": "GreatOpportunist",
							"minLevel": 8
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 2080
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Duelliste",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Bowman",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"baseSkills": [
						{
							"skill": "Aim",
							"minLevel": 0
						},
						{
							"skill": "Dash",
							"minLevel": 0
						},
						{
							"skill": "FirstAid",
							"minLevel": 0
						},
						{
							"skill": "BraveBoldness",
							"minLevel": 2
						},
						{
							"skill": "BraveVictory",
							"minLevel": 2
						},
						{
							"skill": "BraveSupport",
							"minLevel": 2
						},
						{
							"skill": "ReinforcedArrows",
							"minLevel": 5
						},
						{
							"skill": "Precision",
							"minLevel": 5
						},
						{
							"skill": "BeastMaster",
							"minLevel": 5
						},
						{
							"skill": "TrainingArrow",
							"minLevel": 8
						},
						{
							"skill": "ThrillOfTheHunt",
							"minLevel": 8
						},
						{
							"skill": "AnimalConnection",
							"minLevel": 8
						},
						{
							"skill": "WeaponSwapBow",
							"minLevel": 10
						},
						{
							"skill": "Anticipation",
							"minLevel": 10
						},
						{
							"skill": "LoneWolf",
							"minLevel": 10
						},
						{
							"skill": "SuppressFire",
							"minLevel": 12
						},
						{
							"skill": "ClassSpecialization",
							"minLevel": 12
						}
					],
					"props": {
						"flags": 2
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 6,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "",
					"name": "Archer",
					"tier": 0,
					"equipment": [
						{
							"armor": "BaseArmorStart1",
							"weapon": "BowStart"
						}
					],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Hunter",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"baseSkills": [
						{
							"skill": "RecoilShot"
						}
					],
					"props": {
						"armorKind": "ArmorLight",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 6,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"name": "Chasseur",
					"notes": "VL",
					"tier": 1,
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "BeastMaster",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"baseSkills": [
						{
							"skill": "ATTACK"
						}
					],
					"props": {
						"armorKind": "ArmorLight",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 6,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"name": "Dresseur",
					"notes": "L",
					"tier": 1,
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Skirmisher",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"baseSkills": [
						{
							"skill": "Barrage"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorLight",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 6,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "VL",
					"name": "Tirailleur",
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Marksman",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "AimedShot"
						},
						{
							"skill": "Subtlety",
							"minLevel": 5
						},
						{
							"skill": "HuntingDownEasyprey",
							"minLevel": 8
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorLight",
						"flags": 2080
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 6,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "VL",
					"name": "Tireur",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Rogue",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"baseSkills": [
						{
							"skill": "Dash",
							"minLevel": 0
						},
						{
							"skill": "Wrath",
							"minLevel": 0
						},
						{
							"skill": "FirstAid",
							"minLevel": 0
						},
						{
							"skill": "BraveBoldness",
							"minLevel": 2
						},
						{
							"skill": "BraveVictory",
							"minLevel": 2
						},
						{
							"skill": "BraveSupport",
							"minLevel": 2
						},
						{
							"skill": "PoisonedWeapon",
							"minLevel": 5
						},
						{
							"skill": "KnifeThrow",
							"minLevel": 5
						},
						{
							"skill": "DeadlyContract",
							"minLevel": 5
						},
						{
							"skill": "ExplosiveGaz",
							"minLevel": 8
						},
						{
							"skill": "CheapShot",
							"minLevel": 8
						},
						{
							"skill": "CoolBlood",
							"minLevel": 8
						},
						{
							"skill": "WeaponSwapDagger",
							"minLevel": 10
						},
						{
							"skill": "Anticipation",
							"minLevel": 10
						},
						{
							"skill": "Unstoppable",
							"minLevel": 10
						},
						{
							"skill": "LongTermePlan",
							"minLevel": 12
						},
						{
							"skill": "ClassSpecialization",
							"minLevel": 12
						}
					],
					"props": {
						"flags": 2
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Rôdeur",
					"tier": 0,
					"equipment": [
						{
							"armor": "BaseArmorStart1",
							"weapon": "DaggerStart"
						}
					],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Cutthroat",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"baseSkills": [
						{
							"skill": "Frenzy"
						}
					],
					"props": {
						"armorKind": "ArmorLight",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Égorgeur",
					"tier": 1,
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Strategist",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"baseSkills": [
						{
							"skill": "SmokeScreen"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorLight",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Stratège",
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Poisoner",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"baseSkills": [
						{
							"skill": "PoisonFlask"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorLight",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Empoisonneur",
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Assassin",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "BetweenTheEyes"
						},
						{
							"skill": "Ordeal",
							"minLevel": 5
						},
						{
							"skill": "Withdrawal",
							"minLevel": 8
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorLight",
						"flags": 2080
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Assassin",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Spearman",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"baseSkills": [
						{
							"skill": "Wrath",
							"minLevel": 0
						},
						{
							"skill": "FirstAid",
							"minLevel": 0
						},
						{
							"skill": "Dash",
							"minLevel": 0
						},
						{
							"skill": "BraveBoldness",
							"minLevel": 2
						},
						{
							"skill": "BraveVictory",
							"minLevel": 2
						},
						{
							"skill": "BraveSupport",
							"minLevel": 2
						},
						{
							"skill": "TeamSpirit",
							"minLevel": 5
						},
						{
							"skill": "SharpSupport",
							"minLevel": 5
						},
						{
							"skill": "SweetSpot",
							"minLevel": 5
						},
						{
							"skill": "Preparation",
							"minLevel": 8
						},
						{
							"skill": "ExploitationOfStrength",
							"minLevel": 8
						},
						{
							"skill": "LastEffort",
							"minLevel": 8
						},
						{
							"skill": "WeaponSwapPolearm",
							"minLevel": 10
						},
						{
							"skill": "Swiftness",
							"minLevel": 10
						},
						{
							"skill": "Unstoppable",
							"minLevel": 10
						},
						{
							"skill": "nake",
							"minLevel": 12
						},
						{
							"skill": "ClassSpecialization",
							"minLevel": 12
						}
					],
					"props": {
						"flags": 2
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "",
					"name": "Lancier",
					"tier": 0,
					"equipment": [
						{
							"armor": "BaseArmorStart2",
							"weapon": "PolearmStart"
						}
					],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Harpooner",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"baseSkills": [
						{
							"skill": "SpearThrow"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 32
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "",
					"name": "Harponneur",
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Herald",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"baseSkills": [
						{
							"skill": "RallyingShout"
						}
					],
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 32
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"name": "Hérault",
					"notes": "",
					"tier": 1,
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Pikeman",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"baseSkills": [
						{
							"skill": "SpearsWall"
						}
					],
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 32
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"name": "Piquier",
					"notes": "",
					"tier": 1,
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Halberdier",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "MasteredWhirlwind"
						},
						{
							"skill": "InspiringPresence",
							"minLevel": 5
						},
						{
							"skill": "ChangeOfPace",
							"minLevel": 8
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 2080
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "",
					"name": "Hallebardier",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Axeman",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"baseSkills": [
						{
							"skill": "Taunt",
							"minLevel": 0
						},
						{
							"skill": "Wrath",
							"minLevel": 0
						},
						{
							"skill": "FirstAid",
							"minLevel": 0
						},
						{
							"skill": "DefensivePosture",
							"minLevel": 2
						},
						{
							"skill": "BraveCleave",
							"minLevel": 2
						},
						{
							"skill": "BraveDuel",
							"minLevel": 2
						},
						{
							"skill": "Madness",
							"minLevel": 5
						},
						{
							"skill": "Recklessness",
							"minLevel": 5
						},
						{
							"skill": "Fanatism",
							"minLevel": 5
						},
						{
							"skill": "WarCry",
							"minLevel": 8
						},
						{
							"skill": "ChallengeCry",
							"minLevel": 8
						},
						{
							"skill": "Ecstasy",
							"minLevel": 8
						},
						{
							"skill": "WeaponSwapAxe",
							"minLevel": 10
						},
						{
							"skill": "Swiftness",
							"minLevel": 10
						},
						{
							"skill": "LoneWolf",
							"minLevel": 10
						},
						{
							"skill": "DeathLure",
							"minLevel": 12
						},
						{
							"skill": "ClassSpecialization",
							"minLevel": 12
						}
					],
					"props": {
						"flags": 2
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Guerrier",
					"tier": 0,
					"equipment": [
						{
							"armor": "BaseArmorStart2",
							"weapon": "AxeStart",
							"leftHand": "ShieldStart"
						},
						{
							"weapon": "Axe2HStart",
							"armor": "BaseArmorStart1"
						}
					],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Berserker",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "Outburst"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 32
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Berserker",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Executioner",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "SharpWhirlwind"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 32
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Bourreau",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Sentinel",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "Ovation"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorHeavy",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Sentinelle",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Barbarian",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "PridefulStrike"
						},
						{
							"skill": "FirstBlood",
							"minLevel": 5
						},
						{
							"skill": "ExceedingLimits",
							"minLevel": 8
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 2080
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Barbare",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Brute",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"baseSkills": [
						{
							"skill": "Taunt",
							"minLevel": 0
						},
						{
							"skill": "Wrath",
							"minLevel": 0
						},
						{
							"skill": "FirstAid",
							"minLevel": 0
						},
						{
							"skill": "DefensivePosture",
							"minLevel": 2
						},
						{
							"skill": "BraveCleave",
							"minLevel": 2
						},
						{
							"skill": "BraveDuel",
							"minLevel": 2
						},
						{
							"skill": "ArmorBreaker",
							"minLevel": 5
						},
						{
							"skill": "Opportunism",
							"minLevel": 5
						},
						{
							"skill": "Cruelty",
							"minLevel": 5
						},
						{
							"skill": "GuardBreaker",
							"minLevel": 8
						},
						{
							"skill": "Temperance",
							"minLevel": 8
						},
						{
							"skill": "OneOnOne",
							"minLevel": 8
						},
						{
							"skill": "WeaponSwapMace",
							"minLevel": 10
						},
						{
							"skill": "DefensiveRiposte",
							"minLevel": 10
						},
						{
							"skill": "Intervention",
							"minLevel": 10
						},
						{
							"skill": "TitanicRoar",
							"minLevel": 12
						},
						{
							"skill": "ClassSpecialization",
							"minLevel": 12
						}
					],
					"props": {
						"flags": 2
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Brute",
					"tier": 0,
					"equipment": [
						{
							"armor": "BaseArmorStart2",
							"weapon": "MaceStart",
							"leftHand": "ShieldStart"
						},
						{
							"weapon": "Mace2HStart",
							"armor": "BaseArmorStart1"
						}
					],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Vanguard",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "RelentlessCharge"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 32
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Briseur",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Smasher",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "PoisonedImpact"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorMedium",
						"flags": 32
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Massacreur ",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Destroyer",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "WeakeningShock"
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorHeavy",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Destructeur",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Brawler",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "ThunderousBlow"
						},
						{
							"skill": "Bash",
							"minLevel": 5
						},
						{
							"skill": "OverwhelmingPresence",
							"minLevel": 8
						}
					],
					"tier": 1,
					"props": {
						"armorKind": "ArmorHeavy",
						"flags": 2080,
						"ai": [
							{
								"skill": "ShieldSlam"
							},
							{
								"skill": "ThunderousBlow"
							}
						]
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Bastonneur",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Mage",
					"weaponTypes": [
						{
							"wp": "Wand"
						}
					],
					"baseSkills": [
						{
							"skill": "Wrath",
							"minLevel": 0
						},
						{
							"skill": "Dash",
							"minLevel": 0
						},
						{
							"skill": "FirstAid",
							"minLevel": 0
						},
						{
							"skill": "BraveBoldness",
							"minLevel": 2
						},
						{
							"skill": "BraveDuel",
							"minLevel": 2
						},
						{
							"skill": "BraveSupport",
							"minLevel": 2
						}
					],
					"props": {
						"flags": 2
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 6,
							"attribute": "Constitution",
							"upValue": 32
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 6,
							"attribute": "Movement"
						},
						{
							"value": 12,
							"attribute": "Willpower",
							"upValue": 30
						}
					],
					"model": "chars/Prefabs/Prefab_WP.prefab",
					"notes": "",
					"name": "Wizard",
					"tier": 0,
					"equipment": [
						{
							"armor": "BaseArmorStart1",
							"weapon": "WandStart"
						}
					],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Priest",
					"weaponTypes": [
						{
							"wp": "Wand"
						}
					],
					"baseSkills": [
						{
							"skill": "TargetHeal"
						},
						{
							"skill": "RangeHeal",
							"minLevel": 5
						},
						{
							"skill": "GroupHeal",
							"minLevel": 10
						}
					],
					"props": {
						"armorKind": "ArmorLight",
						"flags": 32
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 6,
							"attribute": "Constitution",
							"upValue": 32
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 6,
							"attribute": "Movement"
						},
						{
							"value": 12,
							"attribute": "Willpower",
							"upValue": 30
						}
					],
					"model": "chars/Prefabs/Prefab_WP.prefab",
					"notes": "",
					"name": "Priest",
					"tier": 1,
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Mobster",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"equipment": [
						{
							"armor": "LightArmorCommonOutlaws",
							"weapon": "DaggerCommonOutlaws",
							"group": "Bandits",
							"leftHand": "PoisonedThrowingKnife"
						},
						{
							"weapon": "DaggerCommonOutlaws",
							"armor": "LightArmorCommonOutlaws",
							"group": "BelerionSmugglers",
							"leftHand": "PoisonedThrowingKnife"
						},
						{
							"weapon": "DaggerCommonOutlaws",
							"armor": "RagsClothes",
							"group": "EscapedPrisoners",
							"leftHand": "PoisonedThrowingKnife"
						},
						{
							"weapon": "DaggerCommonOutlaws",
							"armor": "LightArmorCommonGeneric",
							"leftHand": "PoisonedThrowingKnife"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Truand",
					"rarity": 0,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Poacher",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [
						{
							"armor": "LightArmorCommonOutlaws",
							"weapon": "BowCommonOutlaws",
							"group": "Bandits"
						},
						{
							"weapon": "BowCommonOutlaws",
							"armor": "LightArmorCommonOutlaws",
							"group": "BelerionSmugglers"
						},
						{
							"weapon": "BowCommonOutlaws",
							"armor": "RagsClothes",
							"group": "EscapedPrisoners"
						},
						{
							"weapon": "BowCommonOutlaws",
							"armor": "LightArmorCommonGeneric"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "",
					"name": "Braconnier",
					"rarity": 0,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Marauder",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "Axe2HUncoOutlaws",
							"armor": "MediumArmorUncoOutlaws",
							"group": "Bandits"
						},
						{
							"weapon": "Axe2HUncoOutlaws",
							"armor": "MediumArmorUncoOutlaws",
							"group": "BelerionSmugglers"
						},
						{
							"weapon": "Axe2HUncoOutlaws",
							"armor": "RagsClothes",
							"group": "EscapedPrisoners"
						},
						{
							"armor": "MediumArmorUncoGeneric",
							"weapon": "Axe2HUncoOutlaws"
						}
					],
					"baseSkills": [],
					"tier": 1,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Maraudeur",
					"rarity": 1,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "MischiefMaker",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"weapon": "MaceUncoBandits",
							"armor": "HeavyArmorUncoOutlaws",
							"leftHand": "ShieldUncoBandits",
							"group": "Bandits"
						},
						{
							"weapon": "MaceUncoBandits",
							"armor": "HeavyArmorUncoOutlaws",
							"leftHand": "ShieldUncoSmugglers",
							"group": "BelerionSmugglers"
						},
						{
							"weapon": "MaceUncoBandits",
							"armor": "RagsClothes",
							"group": "EscapedPrisoners"
						},
						{
							"weapon": "MaceUncoBandits",
							"armor": "HeavyArmorUncoGeneric",
							"leftHand": "ShieldUncoBandits"
						}
					],
					"baseSkills": [
						{
							"skill": "RaidExperience"
						}
					],
					"tier": 2,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Malfaiteur",
					"rarity": 1,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Criminal",
					"weaponTypes": [
						{
							"wp": "Sword2H"
						}
					],
					"equipment": [
						{
							"weapon": "Sword2HRareOutlaws",
							"armor": "MediumArmorRareOutlaws",
							"group": "Bandits"
						},
						{
							"group": "BelerionSmugglers",
							"weapon": "Sword2HRareOutlaws",
							"armor": "MediumArmorRareOutlaws"
						},
						{
							"weapon": "Sword2HRareOutlaws",
							"armor": "RagsClothes",
							"group": "EscapedPrisoners"
						},
						{
							"weapon": "Sword2HRareOutlaws",
							"armor": "MediumArmorRareGeneric"
						}
					],
					"baseSkills": [
						{
							"skill": "DisgustForTheWeak"
						}
					],
					"tier": 3,
					"props": {
						"feature": "Difficulty_Update"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Criminel",
					"rarity": 2,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "Ringleader",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"equipment": [
						{
							"armor": "LightArmorRareOutlaws",
							"weapon": "DaggerRareOutlaws",
							"group": "Bandits",
							"leftHand": "PoisonedThrowingKnifeT2"
						},
						{
							"weapon": "DaggerRareOutlaws",
							"armor": "LightArmorRareOutlaws",
							"group": "BelerionSmugglers",
							"leftHand": "PoisonedThrowingKnifeT2"
						},
						{
							"weapon": "DaggerRareOutlaws",
							"armor": "RagsClothes",
							"group": "EscapedPrisoners",
							"leftHand": "PoisonedThrowingKnifeT2"
						},
						{
							"weapon": "DaggerRareOutlaws",
							"armor": "LightArmorRareGeneric",
							"leftHand": "PoisonedThrowingKnifeT2"
						}
					],
					"baseSkills": [
						{
							"skill": "RingleaderThreat"
						}
					],
					"tier": 0,
					"props": {
						"importantStatus": "CriticalLeader"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Meneur",
					"rarity": 2,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "RoughneckSoldier",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "AxeCommonDeserters",
							"armor": "MediumArmorCommonDeserters",
							"leftHand": "ThrowingAxe"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Soudard",
					"rarity": 0,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "Raider",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"weapon": "Mace2HCommonDeserters",
							"armor": "MediumArmorCommonDeserters"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Pillard",
					"rarity": 0,
					"timelinePriority": 4,
					"iconeDone": true
				},
				{
					"id": "Fireworks",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [
						{
							"weapon": "BowUncoDeserters",
							"armor": "LightArmorUncoOutlaws"
						}
					],
					"baseSkills": [],
					"tier": 1,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "",
					"name": "Artificier",
					"rarity": 1,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Renegade",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [
						{
							"weapon": "PolearmUncoDeserters",
							"armor": "MediumArmorUncoDeserters"
						}
					],
					"baseSkills": [
						{
							"skill": "TacticalIntelligence"
						}
					],
					"tier": 2,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "",
					"name": "Renégat",
					"rarity": 1,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Looter",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"equipment": [
						{
							"weapon": "DaggerRareDeserters",
							"armor": "LightArmorRareDeserters",
							"leftHand": "ThrowingSickleT2"
						}
					],
					"baseSkills": [
						{
							"skill": "CarefulStance"
						}
					],
					"tier": 3,
					"props": {
						"feature": "Difficulty_Update"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Pilleur",
					"rarity": 2,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Corporal",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"armor": "HeavyArmorRareDeserters",
							"weapon": "MaceRareDeserters",
							"leftHand": "ShieldRareDeserter"
						}
					],
					"baseSkills": [
						{
							"skill": "SurvivalStrategy"
						}
					],
					"tier": 0,
					"props": {
						"importantStatus": "ProtectionLeader"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Caporal",
					"rarity": 2,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "Infantryman",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"weapon": "MaceCommonGuard",
							"armor": "HeavyArmorCommonGuard",
							"leftHand": "ShieldCommonGuard",
							"group": "Guard"
						},
						{
							"weapon": "MaceCommonGuard",
							"leftHand": "ShieldCommonGuard",
							"armor": "HeavyArmorCommonGeneric"
						},
						{
							"weapon": "MaceCommonGuard",
							"armor": "HeavyArmorCommonAlazar",
							"leftHand": "ShieldCommonGuard",
							"group": "AlazarSoldiers"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Fantassin",
					"rarity": 0,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Phalange",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [
						{
							"weapon": "PolearmCommonGuard",
							"armor": "MediumArmorCommonGuard",
							"group": "Guard"
						},
						{
							"weapon": "PolearmCommonGuard",
							"armor": "MediumArmorCommonGeneric"
						},
						{
							"weapon": "PolearmCommonGuard",
							"armor": "MediumArmorCommonAlazar",
							"group": "AlazarSoldiers"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "",
					"name": "Phalange",
					"rarity": 0,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Lieutenant",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"weapon": "Mace2HUncoGuard",
							"armor": "MediumArmorUncoGuard",
							"group": "Guard"
						},
						{
							"armor": "MediumArmorUncoGeneric",
							"weapon": "Mace2HUncoGuard"
						},
						{
							"weapon": "Mace2HUncoGuard",
							"armor": "MediumArmorUncoAlazar",
							"group": "AlazarSoldiers"
						}
					],
					"baseSkills": [],
					"tier": 1,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Lieutenant",
					"rarity": 1,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Tactician",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"equipment": [
						{
							"weapon": "DaggerUncoGuard",
							"armor": "LightArmorUncoGuard",
							"group": "Guard",
							"leftHand": "ThrowingKnifeT2"
						},
						{
							"weapon": "DaggerUncoGuard",
							"armor": "LightArmorUncoGeneric",
							"leftHand": "ThrowingKnifeT2"
						},
						{
							"weapon": "DaggerUncoGuard",
							"armor": "LightArmorUncoAlazar",
							"group": "AlazarSoldiers",
							"leftHand": "ThrowingKnifeT2"
						}
					],
					"baseSkills": [
						{
							"skill": "SkilledClearance"
						}
					],
					"tier": 2,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Tacticien",
					"rarity": 1,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Defender",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [
						{
							"weapon": "SwordRareGuard",
							"armor": "HeavyArmorRareGuard",
							"leftHand": "ShieldRareGuard",
							"group": "Guard"
						},
						{
							"weapon": "SwordRareGuard",
							"armor": "HeavyArmorRareGeneric",
							"leftHand": "ShieldRareGuard"
						},
						{
							"weapon": "SwordRareGuard",
							"group": "AlazarSoldiers",
							"leftHand": "ShieldRareGuard",
							"armor": "HeavyArmorCommonAlazar"
						}
					],
					"baseSkills": [
						{
							"skill": "MeasuredResponse"
						}
					],
					"tier": 3,
					"props": {
						"feature": "Difficulty_Update"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Défenseur",
					"rarity": 2,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Captain",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [
						{
							"weapon": "BowRareGuard",
							"armor": "LightArmorRareGuard",
							"group": "Guard"
						},
						{
							"weapon": "BowRareGuard",
							"armor": "LightArmorRareGeneric"
						},
						{
							"weapon": "BowRareGuard",
							"armor": "LightArmorRareAlazar",
							"group": "AlazarSoldiers"
						}
					],
					"baseSkills": [
						{
							"skill": "Exaltation"
						}
					],
					"tier": 0,
					"props": {
						"importantStatus": "InspirationLeader"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "",
					"name": "Capitaine",
					"rarity": 2,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Legionary",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [
						{
							"weapon": "SwordCommonLegion",
							"armor": "HeavyArmorCommonLegion",
							"leftHand": "ShieldCommonLegionary",
							"group": "Legion"
						},
						{
							"weapon": "SwordCommonLegion",
							"armor": "HeavyArmorCommonGeneric",
							"leftHand": "ShieldCommonLegionary"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Légionnaire",
					"rarity": 0,
					"timelinePriority": 4,
					"iconeDone": true
				},
				{
					"id": "Sapper",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [
						{
							"armor": "LightArmorCommonLegion",
							"weapon": "BowCommonLegion",
							"group": "Legion"
						},
						{
							"weapon": "BowCommonLegion",
							"armor": "LightArmorCommonGeneric"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "",
					"name": "Sapeur",
					"rarity": 0,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Spadassin",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [
						{
							"weapon": "Sword2HUncoLegion",
							"armor": "MediumArmorUncoLegion",
							"group": "Legion"
						},
						{
							"weapon": "Sword2HUncoLegion",
							"armor": "MediumArmorUncoGeneric"
						}
					],
					"baseSkills": [],
					"tier": 1,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Spadassin",
					"rarity": 1,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Emissary",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [
						{
							"weapon": "PolearmUncoLegion",
							"armor": "HeavyArmorUncoLegion",
							"group": "Legion"
						},
						{
							"weapon": "PolearmUncoLegion",
							"armor": "HeavyArmorUncoGeneric"
						}
					],
					"baseSkills": [
						{
							"skill": "MedicalAssistance"
						}
					],
					"tier": 2,
					"props": {
						"status": [
							{
								"kind": "PreventEngage"
							}
						]
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "",
					"name": "Ambassadeur",
					"rarity": 1,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "Hothead",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"weapon": "MaceRareLegion",
							"armor": "HeavyArmorRareLegion",
							"leftHand": "ShieldRareLegion",
							"group": "Legion"
						},
						{
							"weapon": "MaceRareLegion",
							"armor": "HeavyArmorUncoGeneric",
							"leftHand": "ShieldRareLegion"
						}
					],
					"baseSkills": [
						{
							"skill": "MilitaryChoreography"
						}
					],
					"tier": 3,
					"props": {
						"feature": "Difficulty_Update"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Tête brûlée",
					"rarity": 2,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Commander",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [
						{
							"weapon": "PolearmRareLegion",
							"armor": "MediumArmorRareLegion",
							"group": "Legion"
						},
						{
							"weapon": "PolearmRareLegion",
							"armor": "MediumArmorRareGeneric"
						}
					],
					"baseSkills": [
						{
							"skill": "TrainedToKill"
						}
					],
					"tier": 0,
					"props": {
						"importantStatus": "TrueDamageLeader"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "",
					"name": "Commandant",
					"rarity": 2,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Hitman",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [
						{
							"weapon": "Sword2HCommonCompanions",
							"armor": "MediumArmorCommonCompanions"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Tueur à gages",
					"rarity": 0,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "Ravager",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "Axe2HCommonCompanions",
							"armor": "MediumArmorCommonCompanions"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Ravageur",
					"rarity": 0,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "Crewman",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [
						{
							"weapon": "SwordUncoCompanion",
							"armor": "HeavyArmorUncoCompanions",
							"leftHand": "ShieldUncoCompanions"
						}
					],
					"baseSkills": [],
					"tier": 1,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 5,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Équipier",
					"rarity": 1,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Arrow",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [
						{
							"weapon": "BowUncoCompanions",
							"armor": "LightArmorUncoCompanions"
						}
					],
					"baseSkills": [
						{
							"skill": "EagleEye"
						}
					],
					"tier": 2,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "",
					"name": "Flèche",
					"rarity": 1,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "Peacekeeper",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "AxeRareCompanion",
							"armor": "HeavyArmorRareCompanion",
							"leftHand": "ShieldRareCompanion"
						}
					],
					"baseSkills": [
						{
							"skill": "UnwaveringWill"
						}
					],
					"tier": 3,
					"props": {
						"feature": "Difficulty_Update"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 5,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Porte-paix",
					"rarity": 2,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Stipendiary",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"weapon": "Mace2HRareCompanions",
							"armor": "MediumArmorRareCompanions"
						}
					],
					"baseSkills": [
						{
							"skill": "AttackStrategy"
						}
					],
					"tier": 0,
					"props": {
						"importantStatus": "BrutalityLeader"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Stipendié",
					"rarity": 2,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Zealot",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"weapon": "MaceCommonInquisition",
							"armor": "MediumArmorCommonInquisition",
							"leftHand": "Torch"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Zélote",
					"rarity": 0,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Fanatic",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [
						{
							"weapon": "Sword2HCommonInquisition",
							"armor": "HeavyArmorCommonInquisition"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Fanatique",
					"rarity": 0,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Purgater",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "Axe2HUncoInquisition",
							"armor": "MediumArmorUncoInquisition"
						}
					],
					"baseSkills": [],
					"tier": 1,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Purgateur",
					"rarity": 1,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Worshipper",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"equipment": [
						{
							"weapon": "DaggerUncoInquisition",
							"armor": "LightArmorUncoInquisition",
							"leftHand": "ThrowingKnifeT2"
						}
					],
					"baseSkills": [
						{
							"skill": "FanaticAura"
						}
					],
					"tier": 2,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Adorateur",
					"rarity": 1,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Messenger",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [
						{
							"weapon": "BowRareInquisition",
							"armor": "LightArmorRareInquisition"
						}
					],
					"baseSkills": [
						{
							"skill": "TargetsInSight"
						}
					],
					"tier": 3,
					"props": {
						"feature": "Difficulty_Update"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "",
					"name": "Messager",
					"rarity": 2,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "Paladin",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [
						{
							"weapon": "SwordRareInquisition",
							"armor": "HeavyArmorRareInquisition",
							"leftHand": "ShieldRareInquisition"
						}
					],
					"baseSkills": [
						{
							"skill": "IronWill"
						}
					],
					"tier": 0,
					"props": {
						"importantStatus": "DmgPerBonusLeader"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_MS.prefab",
					"notes": "",
					"name": "Paladin",
					"rarity": 2,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Runner",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "AxeCommonTrackers",
							"armor": "LightArmorCommonTrackers",
							"leftHand": "ThrowingSickle"
						},
						{
							"weapon": "AxeCommonTrackers",
							"armor": "TumblerClothes",
							"group": "Tumblers",
							"leftHand": "ThrowingSickle"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"hasWarpaint": true
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Coureur",
					"rarity": 0,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Slaughterer",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "Axe2HCommonTrackers",
							"armor": "MediumArmorCommonTrackers"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"hasWarpaint": true
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "",
					"name": "Abatteur",
					"rarity": 0,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Blocker",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "AxeUncoTrackers",
							"armor": "HeavyArmorUncoTrackers",
							"leftHand": "ShieldUncoTrackers",
							"oilItem": "OilStrengthProc1"
						}
					],
					"baseSkills": [],
					"tier": 1,
					"props": {
						"hasWarpaint": true
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Bloqueur",
					"rarity": 1,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Savage",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"equipment": [
						{
							"weapon": "DaggerUncoTrackers",
							"armor": "LightArmorUncoTrackers",
							"leftHand": "ThrowingSickleT2"
						},
						{
							"weapon": "DaggerUncoTrackers",
							"armor": "TumblerClothes",
							"group": "Tumblers",
							"leftHand": "ThrowingSickleT2"
						}
					],
					"baseSkills": [
						{
							"skill": "FeralSoul"
						}
					],
					"tier": 2,
					"props": {
						"status": [
							{
								"kind": "Berserk"
							}
						],
						"hasWarpaint": true
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Sauvage",
					"rarity": 1,
					"timelinePriority": 1,
					"iconeDone": true
				},
				{
					"id": "Pursuer",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [
						{
							"weapon": "PolearmRareTrackers",
							"armor": "MediumArmorRareTrackers"
						}
					],
					"baseSkills": [
						{
							"skill": "WildComplaint"
						}
					],
					"tier": 3,
					"props": {
						"feature": "Difficulty_Update"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "",
					"name": "Pourchasseur",
					"rarity": 2,
					"timelinePriority": 3,
					"iconeDone": true
				},
				{
					"id": "Trapper",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [
						{
							"weapon": "BowRareTrackers",
							"armor": "LightArmorRareTrackers"
						},
						{
							"weapon": "BowRareTrackers",
							"armor": "TumblerClothes",
							"group": "Tumblers"
						}
					],
					"baseSkills": [
						{
							"skill": "AlphaAura"
						}
					],
					"tier": 0,
					"props": {
						"feature": "Harag_Update",
						"hasWarpaint": true
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "",
					"name": "Trappeur",
					"rarity": 2,
					"timelinePriority": 2,
					"iconeDone": true
				},
				{
					"id": "Sentry",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [
						{
							"weapon": "SwordCommonAlazar",
							"leftHand": "ShieldCommonAlazar",
							"armor": "HeavyArmorCommonAlazar",
							"group": "AlazarSoldiers"
						},
						{
							"weapon": "SwordCommonAlazar",
							"armor": "HeavyArmorCommonAlazar",
							"leftHand": "ShieldCommonAlazar",
							"group": "PurifiersGuild"
						},
						{
							"weapon": "SwordCommonAlazar",
							"armor": "HeavyArmorCommonGeneric",
							"leftHand": "ShieldCommonAlazar",
							"group": "UnknownSoldiers"
						},
						{
							"weapon": "SwordCommonAlazar",
							"armor": "HeavyArmorCommonGeneric",
							"leftHand": "ShieldCommonAlazar"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"rarity": 0,
					"props": {
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "wrong model",
					"name": "Factionnaire",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Sagittarius",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [
						{
							"weapon": "BowCommonAlazar",
							"armor": "LightArmorCommonAlazar",
							"group": "AlazarSoldiers"
						},
						{
							"weapon": "BowCommonAlazar",
							"armor": "LightArmorCommonAlazar",
							"group": "PurifiersGuild"
						},
						{
							"weapon": "BowCommonAlazar",
							"armor": "LightArmorCommonGeneric",
							"group": "UnknownSoldiers"
						},
						{
							"weapon": "BowCommonAlazar",
							"armor": "LightArmorCommonGeneric"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"rarity": 0,
					"props": {
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_S2.prefab",
					"notes": "wrong model",
					"name": "Sagittaire",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Henchman",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"armor": "HeavyArmorUncoAlazar",
							"weapon": "MaceUncoAlazar",
							"leftHand": "ShieldUncoAlazar",
							"group": "AlazarSoldiers"
						},
						{
							"weapon": "MaceUncoAlazar",
							"armor": "HeavyArmorUncoAlazar",
							"leftHand": "ShieldUncoAlazar",
							"group": "PurifiersGuild"
						},
						{
							"weapon": "MaceUncoAlazar",
							"armor": "HeavyArmorUncoGeneric",
							"group": "UnknownSoldiers",
							"leftHand": "ShieldUncoAlazar"
						},
						{
							"weapon": "MaceUncoAlazar",
							"armor": "HeavyArmorUncoGeneric",
							"leftHand": "ShieldUncoAlazar"
						}
					],
					"baseSkills": [],
					"tier": 1,
					"rarity": 1,
					"props": {
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "wrong model",
					"name": "Séide",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Recruit",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [
						{
							"weapon": "PolearmUncoAlazar",
							"armor": "MediumArmorUncoAlazar",
							"group": "AlazarSoldiers"
						},
						{
							"weapon": "PolearmUncoAlazar",
							"armor": "MediumArmorUncoAlazar",
							"group": "PurifiersGuild"
						},
						{
							"weapon": "PolearmUncoAlazar",
							"armor": "MediumArmorUncoGeneric",
							"group": "UnknownSoldiers"
						},
						{
							"weapon": "PolearmUncoAlazar",
							"armor": "MediumArmorUncoGeneric"
						}
					],
					"baseSkills": [
						{
							"skill": "BackEyed"
						}
					],
					"tier": 2,
					"rarity": 1,
					"props": {
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "wrong model",
					"name": "Recrue",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Colosse",
					"weaponTypes": [
						{
							"wp": "Mace2H"
						}
					],
					"equipment": [
						{
							"weapon": "Mace2HRareAlazar",
							"armor": "MediumArmorRareAlazar",
							"group": "AlazarSoldiers"
						},
						{
							"weapon": "Mace2HRareAlazar",
							"armor": "MediumArmorRareAlazar",
							"group": "PurifiersGuild"
						},
						{
							"weapon": "Mace2HRareAlazar",
							"armor": "MediumArmorRareGeneric",
							"group": "UnknownSoldiers"
						},
						{
							"weapon": "Mace2HRareAlazar",
							"armor": "MediumArmorRareGeneric"
						}
					],
					"baseSkills": [
						{
							"skill": "Unwavering"
						}
					],
					"tier": 3,
					"rarity": 2,
					"props": {
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "wrong model",
					"name": "Colosse",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Brigadier",
					"weaponTypes": [
						{
							"wp": "Sword2H"
						}
					],
					"equipment": [
						{
							"weapon": "Sword2HRareAlazar",
							"armor": "MediumArmorRareAlazar",
							"group": "AlazarSoldiers"
						},
						{
							"weapon": "Sword2HRareAlazar",
							"armor": "MediumArmorRareAlazar",
							"group": "PurifiersGuild"
						},
						{
							"weapon": "Sword2HRareAlazar",
							"armor": "MediumArmorRareGeneric",
							"group": "UnknownSoldiers"
						},
						{
							"weapon": "Sword2HRareAlazar",
							"armor": "MediumArmorRareGeneric"
						}
					],
					"baseSkills": [
						{
							"skill": "SupportLeader"
						}
					],
					"tier": 0,
					"rarity": 2,
					"props": {
						"feature": "Alazar1_Update",
						"importantStatus": "SupportLeader"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "wrong model",
					"name": "Brigadier",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Thief",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "LightArmorCommonOutlaws",
							"leftHand": "BlindingPowder"
						}
					],
					"baseSkills": [
						{
							"skill": "DodgeEndTurn"
						}
					],
					"tier": 0,
					"props": {
						"status": [
							{
								"kind": "FleeWithBackpack"
							},
							{
								"kind": "Dodge"
							}
						],
						"flags": 131076
					},
					"stats": [
						{
							"value": 3,
							"attribute": "Constitution",
							"upValue": 18
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Voleur",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Merchant",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "TraderTunic2",
							"leftHand": "BlindingPowder"
						}
					],
					"baseSkills": [
						{
							"skill": "DodgeEndTurn"
						}
					],
					"tier": 0,
					"props": {
						"status": [
							{
								"kind": "FleeWithBackpack"
							},
							{
								"kind": "Dodge"
							}
						],
						"flags": 1441796
					},
					"stats": [
						{
							"value": 3,
							"attribute": "Constitution",
							"upValue": 18
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Marchand",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Purifier",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "PurifierClothes",
							"leftHand": "BlindingPowder"
						}
					],
					"baseSkills": [
						{
							"skill": "DodgeEndTurn"
						}
					],
					"tier": 0,
					"rarity": 0,
					"props": {
						"status": [
							{
								"kind": "FleeWithoutBackpack"
							},
							{
								"kind": "Dodge"
							}
						],
						"flags": 131076
					},
					"stats": [
						{
							"value": 3,
							"attribute": "Constitution",
							"upValue": 18
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Purificateur",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Erudit",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "TraderTunic2",
							"leftHand": "BlindingPowder"
						}
					],
					"baseSkills": [
						{
							"skill": "DodgeEndTurn"
						}
					],
					"tier": 0,
					"rarity": 0,
					"props": {
						"status": [
							{
								"kind": "Dodge"
							}
						],
						"flags": 393216
					},
					"stats": [
						{
							"value": 3,
							"attribute": "Constitution",
							"upValue": 18
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Érudit",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "CelestiumConsole",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [],
					"tier": 0,
					"timelinePriority": 0,
					"rarity": 0,
					"props": {},
					"stats": [
						{
							"value": 70,
							"attribute": "Constitution",
							"upValue": 800
						}
					],
					"model": "",
					"iconeDone": true,
					"notes": "",
					"name": "Console de la relique"
				},
				{
					"id": "Wolf",
					"weaponTypes": [],
					"baseSkills": [
						{
							"skill": "Bite"
						},
						{
							"skill": "SharpFangs"
						},
						{
							"skill": "Evasion",
							"learnLevel": 5
						},
						{
							"skill": "Pack",
							"minLevel": 3
						},
						{
							"skill": "SenseOfSacrifice",
							"minLevel": 3
						},
						{
							"skill": "CarnivorousDiet",
							"minLevel": 5
						},
						{
							"skill": "LockingHisWounds",
							"minLevel": 5
						},
						{
							"skill": "Watchwolf",
							"minLevel": 8
						},
						{
							"skill": "BornHunter",
							"minLevel": 8
						},
						{
							"skill": "PrimalReflexes",
							"minLevel": 12
						},
						{
							"skill": "MoonHowl",
							"minLevel": 12
						}
					],
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"flags": 1,
						"engagedDistance": 0.3,
						"socleSize": 4,
						"trait": "Carnivorous",
						"prisonerProbability": 15,
						"hitRadius": 0.5,
						"captureCost": {
							"item": "Rope",
							"qty": 1
						},
						"cameraGroup": 1
					},
					"model": "chars/Wolf/Wolf.prefab",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 4
					},
					"name": "Loup",
					"stats": [
						{
							"value": 6,
							"attribute": "Strength",
							"upValue": 58
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 77
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"notes": "",
					"tier": 0,
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "SnowWolf",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "FrostenBite"
						},
						{
							"skill": "SnowTrackers"
						},
						{
							"skill": "Evasion",
							"learnLevel": 5
						},
						{
							"skill": "Pack",
							"minLevel": 3
						},
						{
							"skill": "SenseOfSacrifice",
							"minLevel": 3
						},
						{
							"skill": "CarnivorousDiet",
							"minLevel": 5
						},
						{
							"skill": "LockingHisWounds",
							"minLevel": 5
						},
						{
							"skill": "Watchwolf",
							"minLevel": 8
						},
						{
							"skill": "BornHunter",
							"minLevel": 8
						},
						{
							"skill": "PrimalReflexes",
							"minLevel": 12
						},
						{
							"skill": "MoonHowl",
							"minLevel": 12
						}
					],
					"tier": 0,
					"rarity": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"flags": 1,
						"engagedDistance": 0.3,
						"socleSize": 4,
						"trait": "Carnivorous",
						"prisonerProbability": 15,
						"hitRadius": 0.5,
						"captureCost": {
							"item": "Rope",
							"qty": 1
						},
						"cameraGroup": 1,
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 6,
							"attribute": "Strength",
							"upValue": 58
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 77
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Wolf/SnowWolf.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 9
					},
					"name": "Loup polaire",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Alpha",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "FerociousBite"
						},
						{
							"skill": "SharpFangs"
						},
						{
							"skill": "Evasion",
							"learnLevel": 5
						},
						{
							"skill": "Pack",
							"minLevel": 3
						},
						{
							"skill": "SenseOfSacrifice",
							"minLevel": 3
						},
						{
							"skill": "CarnivorousDiet",
							"minLevel": 5
						},
						{
							"skill": "LockingHisWounds",
							"minLevel": 5
						},
						{
							"skill": "Watchwolf",
							"minLevel": 8
						},
						{
							"skill": "BornHunter",
							"minLevel": 8
						},
						{
							"skill": "PrimalReflexes",
							"minLevel": 12
						},
						{
							"skill": "MoonHowl",
							"minLevel": 12
						}
					],
					"tier": 1,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"socleSize": 4,
						"engagedDistance": 0.5,
						"trait": "Carnivorous",
						"hitRadius": 0.5,
						"animalCategory": "Wolf",
						"flags": 1,
						"dailyFood": 8,
						"captureCost": {
							"item": "Rope",
							"qty": 3
						},
						"cameraGroup": 1
					},
					"stats": [
						{
							"value": 8,
							"attribute": "Strength",
							"upValue": 83
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 13,
							"attribute": "Constitution",
							"upValue": 110
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Wolf/WolfAlpha.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 7
					},
					"name": "Alpha",
					"rarity": 2,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "SnowAlpha",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "FerociousFrostenBite"
						},
						{
							"skill": "SnowTrackers"
						},
						{
							"skill": "Evasion",
							"learnLevel": 5
						},
						{
							"skill": "Pack",
							"minLevel": 3
						},
						{
							"skill": "SenseOfSacrifice",
							"minLevel": 3
						},
						{
							"skill": "CarnivorousDiet",
							"minLevel": 5
						},
						{
							"skill": "LockingHisWounds",
							"minLevel": 5
						},
						{
							"skill": "Watchwolf",
							"minLevel": 8
						},
						{
							"skill": "BornHunter",
							"minLevel": 8
						},
						{
							"skill": "PrimalReflexes",
							"minLevel": 12
						},
						{
							"skill": "MoonHowl",
							"minLevel": 12
						}
					],
					"tier": 1,
					"rarity": 2,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"socleSize": 4,
						"engagedDistance": 0.5,
						"trait": "Carnivorous",
						"hitRadius": 0.5,
						"animalCategory": "Wolf",
						"flags": 1,
						"dailyFood": 8,
						"captureCost": {
							"item": "Rope",
							"qty": 3
						},
						"cameraGroup": 1,
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 8,
							"attribute": "Strength",
							"upValue": 83
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 13,
							"attribute": "Constitution",
							"upValue": 110
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Wolf/SnowWolf_Alpha.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 10
					},
					"name": "Alpha polaire",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Boar",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "TuskBlow"
						},
						{
							"skill": "ForestGuardian"
						},
						{
							"skill": "NonStopableCharge",
							"learnLevel": 5
						},
						{
							"skill": "FarmedBoar",
							"minLevel": 3
						},
						{
							"skill": "ThickSkin",
							"minLevel": 3
						},
						{
							"skill": "GoodCompanion",
							"minLevel": 5
						},
						{
							"skill": "DraughtBoar",
							"minLevel": 5
						},
						{
							"skill": "ShaggyCreature",
							"minLevel": 8
						},
						{
							"skill": "TruffleBoar",
							"minLevel": 8
						},
						{
							"skill": "Jostling",
							"minLevel": 12
						},
						{
							"skill": "InjuredAndDangerous",
							"minLevel": 12
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"flags": 1,
						"socleSize": 4,
						"engagedDistance": 0.3,
						"prisonerProbability": 15,
						"hitRadius": 0.5,
						"killLoot": {
							"loot": "KillBoar",
							"min": 1,
							"max": 7
						},
						"captureCost": {
							"item": "Rope",
							"qty": 1
						},
						"cameraGroup": 1
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 41
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 113
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 8,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Boar/Model.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 11
					},
					"name": "Sanglier",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Pig",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"flags": 65,
						"socleSize": 4,
						"engagedDistance": 0.3,
						"prisonerProbability": 0,
						"hitRadius": 0.5,
						"killLoot": {
							"loot": "KillBoar",
							"min": 1,
							"max": 7
						},
						"captureCost": {
							"item": "Rope",
							"qty": 1
						},
						"cameraGroup": 1,
						"height": 1.25
					},
					"stats": [
						{
							"value": 6,
							"attribute": "Strength",
							"upValue": 46
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 15,
							"attribute": "Constitution",
							"upValue": 161
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 8,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Pig/Model.fbx",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 15
					},
					"name": "Porc",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "DominantSow",
					"name": "Laie dominante",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 7
					},
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"socleSize": 4,
						"engagedDistance": 0.4,
						"hitRadius": 0.8,
						"animalCategory": "Boar",
						"flags": 1,
						"dailyFood": 8,
						"killLoot": {
							"loot": "KillSow",
							"min": 1,
							"max": 7
						},
						"captureCost": {
							"item": "Rope",
							"qty": 3
						},
						"cameraGroup": 1
					},
					"baseSkills": [
						{
							"skill": "WildImpalement"
						},
						{
							"skill": "ForestGuardian"
						},
						{
							"skill": "NonStopableCharge",
							"learnLevel": 5
						},
						{
							"skill": "FarmedBoar",
							"minLevel": 3
						},
						{
							"skill": "ThickSkin",
							"minLevel": 3
						},
						{
							"skill": "GoodCompanion",
							"minLevel": 5
						},
						{
							"skill": "DraughtBoar",
							"minLevel": 5
						},
						{
							"skill": "ShaggyCreature",
							"minLevel": 8
						},
						{
							"skill": "TruffleBoar",
							"minLevel": 8
						},
						{
							"skill": "Jostling",
							"minLevel": 12
						},
						{
							"skill": "InjuredAndDangerous",
							"minLevel": 12
						}
					],
					"model": "chars/Boar/DominantSow.prefab",
					"weaponTypes": [],
					"stats": [
						{
							"value": 6,
							"attribute": "Strength",
							"upValue": 46
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 15,
							"attribute": "Constitution",
							"upValue": 161
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 8,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"notes": "",
					"tier": 1,
					"equipment": [],
					"rarity": 2,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Mosquito",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "DreadfulSting"
						},
						{
							"skill": "BloodDrinker"
						},
						{
							"skill": "Lifesucker",
							"minLevel": 3
						},
						{
							"skill": "BloodExcitation",
							"minLevel": 3
						},
						{
							"skill": "PowerReserve",
							"minLevel": 5
						},
						{
							"skill": "VenimousTrumpet",
							"minLevel": 5
						},
						{
							"skill": "DopingTransfusion",
							"minLevel": 8
						},
						{
							"skill": "BloodCollection",
							"minLevel": 8
						},
						{
							"skill": "DopingSshot",
							"minLevel": 12
						},
						{
							"skill": "Browser",
							"minLevel": 12
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"flags": 1,
						"engagedDistance": 0.3,
						"socleSize": 3,
						"trait": "Carnivorous",
						"hitRadius": 0.5,
						"height": 1.5,
						"dailyFood": 3,
						"modelScale": 0.1,
						"captureCost": {
							"item": "Unknown",
							"qty": 0
						},
						"moveSpeed": 8,
						"cameraGroup": 3,
						"isMudImmune": true
					},
					"stats": [
						{
							"value": 6,
							"attribute": "Strength",
							"upValue": 58
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 77
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Mosquito/Model.prefab",
					"notes": "",
					"name": "Moustique cardinal",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 5
					},
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Swamoar",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "PathogenicBite"
						},
						{
							"skill": "SwampGuardian"
						},
						{
							"skill": "NonStopableCharge",
							"learnLevel": 5
						},
						{
							"skill": "FarmedBoar",
							"minLevel": 3
						},
						{
							"skill": "ThickSkin",
							"minLevel": 3
						},
						{
							"skill": "GoodCompanion",
							"minLevel": 5
						},
						{
							"skill": "DraughtBoar",
							"minLevel": 5
						},
						{
							"skill": "ShaggyCreature",
							"minLevel": 8
						},
						{
							"skill": "TruffleBoar",
							"minLevel": 8
						},
						{
							"skill": "UnsettlingStrike",
							"minLevel": 12
						},
						{
							"skill": "InjuredAndDangerous",
							"minLevel": 12
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"flags": 1,
						"socleSize": 4,
						"engagedDistance": 0.3,
						"hitRadius": 0.5,
						"dailyFood": 6,
						"killLoot": {
							"loot": "KillSwamoar",
							"min": 1,
							"max": 7
						},
						"captureCost": {
							"item": "Rope",
							"qty": 1
						},
						"cameraGroup": 1
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 41
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 113
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 8,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Boar/Model_Swamp.prefab",
					"notes": "",
					"name": "Crocopork",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 5
					},
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Bear",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "MonstrousPawStrike"
						},
						{
							"skill": "WildTenacity"
						},
						{
							"skill": "NaturalSprinter",
							"learnLevel": 5
						},
						{
							"skill": "ComfortableFur",
							"minLevel": 3
						},
						{
							"skill": "IntimidatingGrowl",
							"minLevel": 3
						},
						{
							"skill": "KingOfTheForest",
							"minLevel": 5
						},
						{
							"skill": "MasterAngler",
							"minLevel": 5
						},
						{
							"skill": "Indomitability",
							"minLevel": 8
						},
						{
							"skill": "FeralVividness",
							"minLevel": 8
						},
						{
							"skill": "Enraged",
							"minLevel": 12
						},
						{
							"skill": "Tamed",
							"minLevel": 12
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"flags": 1,
						"powerScale": 2.5,
						"engagedDistance": 0.3,
						"socleSize": 4,
						"prisonerProbability": 5,
						"hitRadius": 0.5,
						"dailyFood": 12,
						"campHeight": 2,
						"campWidth": 4,
						"captureCost": {
							"item": "Rope",
							"qty": 5
						},
						"cameraGroup": 2,
						"trait": "GreatVitality",
						"playerPowerScaleFactor": 0.7
					},
					"stats": [
						{
							"value": 12,
							"attribute": "Strength",
							"upValue": 116
						},
						{
							"value": 8,
							"attribute": "Dexterity",
							"upValue": 40
						},
						{
							"value": 35,
							"attribute": "Constitution",
							"upValue": 466
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Bear/Bear.prefab",
					"notes": "",
					"name": "Ours",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 5
					},
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "WhiteBear",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "RagingPawStrike"
						},
						{
							"skill": "HotBlood"
						},
						{
							"skill": "NaturalSprinter",
							"learnLevel": 5
						},
						{
							"skill": "ComfortableFur",
							"minLevel": 3
						},
						{
							"skill": "IntimidatingGrowl",
							"minLevel": 3
						},
						{
							"skill": "KingOfTheMountain",
							"minLevel": 5
						},
						{
							"skill": "MasterAngler",
							"minLevel": 5
						},
						{
							"skill": "Indomitability",
							"minLevel": 8
						},
						{
							"skill": "FeralVividness",
							"minLevel": 8
						},
						{
							"skill": "Enraged",
							"minLevel": 12
						},
						{
							"skill": "Tamed",
							"minLevel": 12
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"flags": 1,
						"powerScale": 2.5,
						"engagedDistance": 0.3,
						"socleSize": 4,
						"prisonerProbability": 5,
						"hitRadius": 0.5,
						"feature": "Alazar1_Update",
						"dailyFood": 12,
						"campHeight": 2,
						"campWidth": 4,
						"captureCost": {
							"item": "Rope",
							"qty": 5
						},
						"cameraGroup": 2,
						"trait": "GreatVitality"
					},
					"stats": [
						{
							"value": 12,
							"attribute": "Strength",
							"upValue": 116
						},
						{
							"value": 8,
							"attribute": "Dexterity",
							"upValue": 40
						},
						{
							"value": 35,
							"attribute": "Constitution",
							"upValue": 466
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Bear/WhiteBear.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 7
					},
					"name": "Ours blanc",
					"rarity": 1,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "TrackerBears",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "MonstrousPawStrike"
						},
						{
							"skill": "WildTenacity"
						},
						{
							"skill": "Wrath"
						},
						{
							"skill": "ComfortableFur",
							"minLevel": 3
						},
						{
							"skill": "IntimidatingGrowl",
							"minLevel": 3
						},
						{
							"skill": "KingOfTheForest",
							"minLevel": 5
						},
						{
							"skill": "MasterAngler",
							"minLevel": 5
						},
						{
							"skill": "Indomitability",
							"minLevel": 8
						},
						{
							"skill": "FeralVividness",
							"minLevel": 8
						},
						{
							"skill": "Enraged",
							"minLevel": 12
						},
						{
							"skill": "Tamed",
							"minLevel": 12
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"flags": 1,
						"socleSize": 4,
						"campWidth": 4,
						"campHeight": 2,
						"corpseItem": "AnimalCorpse",
						"dailyFood": 12,
						"powerScale": 2.5,
						"engagedDistance": 0.3,
						"hitRadius": 0.5,
						"trait": "GreatVitality",
						"prisonerProbability": 5,
						"captureCost": {
							"item": "Rope",
							"qty": 5
						},
						"cameraGroup": 2
					},
					"stats": [
						{
							"value": 12,
							"attribute": "Strength",
							"upValue": 116
						},
						{
							"value": 8,
							"attribute": "Dexterity",
							"upValue": 40
						},
						{
							"value": 35,
							"attribute": "Constitution",
							"upValue": 466
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Bear/Bear.prefab",
					"notes": "",
					"name": "Ours",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 5
					},
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "GhostWolf",
					"weaponTypes": [],
					"baseSkills": [
						{
							"skill": "Bite"
						},
						{
							"skill": "SharpFangs"
						},
						{
							"skill": "TerrifyingAppearance"
						}
					],
					"props": {
						"isAnimal": true,
						"flags": 8193,
						"powerScale": 0.7,
						"engagedDistance": 0.3,
						"socleSize": 4,
						"trait": "Carnivorous",
						"loot": "Wolves",
						"hitRadius": 0.5,
						"animalCategory": "Wolf",
						"cameraGroup": 1,
						"isMudImmune": true,
						"corpseItem": "SpectralAnimalCorpse"
					},
					"stats": [
						{
							"value": 8,
							"attribute": "Strength",
							"upValue": 83
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 13,
							"attribute": "Constitution",
							"upValue": 110
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Wolf/WhitePack.prefab",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 12
					},
					"name": "Loup fantôme",
					"notes": "",
					"tier": 0,
					"equipment": [],
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "GhostBoar",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "TuskBlow"
						},
						{
							"skill": "ForestGuardian"
						},
						{
							"skill": "TerrifyingAppearance"
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"flags": 8193,
						"powerScale": 0.7,
						"engagedDistance": 0.3,
						"socleSize": 4,
						"loot": "Boars",
						"hitRadius": 0.5,
						"animalCategory": "Boar",
						"cameraGroup": 1,
						"isMudImmune": true,
						"corpseItem": "SpectralAnimalCorpse"
					},
					"stats": [
						{
							"value": 6,
							"attribute": "Strength",
							"upValue": 46
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 15,
							"attribute": "Constitution",
							"upValue": 161
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 8,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Boar/WhitePack.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 12
					},
					"name": "Sanglier fantôme",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Nightmare",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "TerrorLink"
						},
						{
							"skill": "TerrifyingAppearance"
						},
						{
							"skill": "NightmarishApperance"
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"socleSize": 5,
						"flags": 8208,
						"hitRadius": 1,
						"loot": "Nightmare",
						"animalCategory": "Pony",
						"engagedDistance": 0.5,
						"cameraGroup": 0,
						"isMudImmune": true,
						"corpseItem": "SpectralAnimalCorpse"
					},
					"stats": [
						{
							"value": 8,
							"attribute": "Strength",
							"upValue": 99
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 18,
							"attribute": "Constitution",
							"upValue": 233
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Nightmare/Nightmare.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 11
					},
					"name": "Cauchemar",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "TheBeast",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "BeastRoar"
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"socleSize": 5,
						"flags": 8208,
						"hitRadius": 0,
						"engagedDistance": 0,
						"skillOrder": [
							{
								"skill": "BeastRoar"
							}
						]
					},
					"stats": [],
					"model": "chars/TheBeast/TheBeast.prefab",
					"notes": "",
					"name": "La Bête",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 11
					},
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "PlaguedRat",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "InfectiousBite"
						},
						{
							"skill": "PlagueOrganism"
						},
						{
							"skill": "Snooper",
							"minLevel": 3
						},
						{
							"skill": "Necrophagy",
							"minLevel": 3
						},
						{
							"skill": "CallOfTheSwarm",
							"minLevel": 5
						},
						{
							"skill": "SpeciesSurvival",
							"minLevel": 5
						},
						{
							"skill": "NocturnalSnarls",
							"minLevel": 8
						},
						{
							"skill": "RemarkableOrganism",
							"minLevel": 8
						},
						{
							"skill": "Poisoned",
							"minLevel": 12
						},
						{
							"skill": "Immortal",
							"minLevel": 12
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"status": [
							{
								"kind": "Pyrophobia"
							}
						],
						"powerScale": 0.3,
						"engagedDistance": 0.15,
						"flags": 17,
						"trait": "Infected",
						"loot": "RatInvasionRat",
						"dailyFood": 2,
						"captureCost": {
							"item": "Rope",
							"qty": 1
						},
						"moveSpeed": 7,
						"cameraGroup": 4
					},
					"stats": [
						{
							"value": 2,
							"attribute": "Strength",
							"upValue": 34
						},
						{
							"value": 1,
							"attribute": "Dexterity",
							"upValue": 6
						},
						{
							"value": 4,
							"attribute": "Constitution",
							"upValue": 66
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 3,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Rats/Rat.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 6
					},
					"name": "Rat pestiféré",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "RatNest",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "SoilTaint"
						},
						{
							"skill": "PlagueOrganism"
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"status": [
							{
								"kind": "PreventEngage"
							},
							{
								"kind": "Unpushable"
							}
						],
						"flags": 1808,
						"loot": "RatInvasionNest"
					},
					"stats": [
						{
							"value": 0,
							"attribute": "Strength"
						},
						{
							"value": 0,
							"attribute": "Dexterity"
						},
						{
							"value": 15,
							"attribute": "Constitution",
							"upValue": 161
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 0,
							"attribute": "Movement"
						},
						{
							"value": 0,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Rats/Nest.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 2,
						"y": 7
					},
					"name": "Excroissance pestiférée",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Matriarch",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "ThroatyHowl"
						},
						{
							"skill": "PlagueOrganism"
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"status": [
							{
								"kind": "PreventEngage"
							},
							{
								"kind": "Unpushable"
							}
						],
						"skillOrder": [
							{
								"skill": "ThroatyHowl"
							}
						],
						"socleSize": 6,
						"flags": 1552,
						"hitRadius": 1.1,
						"loot": "RatInvasionMatriarch",
						"animalCategory": "PlaguedRat"
					},
					"stats": [
						{
							"value": 0,
							"attribute": "Strength"
						},
						{
							"value": 0,
							"attribute": "Dexterity"
						},
						{
							"value": 18,
							"attribute": "Constitution",
							"upValue": 233
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 0,
							"attribute": "Movement"
						},
						{
							"value": 1,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Rat_Matriarch/Matriarch.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 6
					},
					"name": "Matriarche",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Plagueridden",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "InfectedScratch"
						},
						{
							"skill": "Vomiting"
						},
						{
							"skill": "PlagueOrganism"
						},
						{
							"skill": "PutrefiedBrain"
						}
					],
					"tier": 0,
					"props": {
						"flags": 49152,
						"trait": "Infected"
					},
					"stats": [
						{
							"value": 8,
							"attribute": "Strength",
							"upValue": 83
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 13,
							"attribute": "Constitution",
							"upValue": 110
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Plagued/Model.prefab",
					"notes": "",
					"name": "Pestiféré",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 11
					},
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Crawler",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "DeepBite"
						},
						{
							"skill": "Cannibalism"
						},
						{
							"skill": "AllyOfDarkness"
						}
					],
					"tier": 0,
					"props": {
						"flags": 278528,
						"loot": "Crawlers"
					},
					"stats": [
						{
							"value": 8,
							"attribute": "Strength",
							"upValue": 83
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 13,
							"attribute": "Constitution",
							"upValue": 110
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Plagued/Crawler.prefab",
					"notes": "",
					"name": "Rampant",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 11
					},
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "SnowCrawler",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "FrozenClawStrike"
						},
						{
							"skill": "FrozenBreath"
						},
						{
							"skill": "AllyOfFog"
						}
					],
					"tier": 0,
					"rarity": 0,
					"props": {
						"flags": 278528,
						"loot": "Crawlers",
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 8,
							"attribute": "Strength",
							"upValue": 83
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 13,
							"attribute": "Constitution",
							"upValue": 110
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Plagued/SnowCrawler.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 10
					},
					"name": "Rampant des neiges",
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Molerat",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "Nibbling"
						},
						{
							"skill": "NumericalStrength"
						},
						{
							"skill": "AllyOfDarkness"
						},
						{
							"skill": "Snooper",
							"minLevel": 3
						},
						{
							"skill": "Necrophagy",
							"minLevel": 3
						},
						{
							"skill": "CallOfTheSwarm",
							"minLevel": 5
						},
						{
							"skill": "SpeciesSurvival",
							"minLevel": 5
						},
						{
							"skill": "NocturnalSnarls",
							"minLevel": 8
						},
						{
							"skill": "RemarkableOrganism",
							"minLevel": 8
						},
						{
							"skill": "Poisoned",
							"minLevel": 12
						},
						{
							"skill": "Immortal",
							"minLevel": 12
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"engagedDistance": 0.15,
						"flags": 17,
						"loot": "Rats",
						"dailyFood": 2,
						"captureCost": {
							"item": "Rope",
							"qty": 1
						},
						"moveSpeed": 7,
						"cameraGroup": 4
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 52
						},
						{
							"value": 2,
							"attribute": "Dexterity",
							"upValue": 10
						},
						{
							"value": 12,
							"attribute": "Constitution",
							"upValue": 99
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 5,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Rats/Molerat.prefab",
					"notes": "",
					"name": "Rat-taupe",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 11
					},
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Pony",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "ArmorPlatePonyT2"
						},
						{
							"armor": "ArmorPlatePonyT3"
						},
						{
							"armor": "ArmorPlatePonyT4"
						}
					],
					"baseSkills": [
						{
							"skill": "Crush"
						},
						{
							"skill": "DraughtHorse",
							"minLevel": 3
						},
						{
							"skill": "WarHorse",
							"minLevel": 3
						},
						{
							"skill": "Tireless",
							"minLevel": 5,
							"requires": "DraughtHorse"
						},
						{
							"skill": "Vigour",
							"minLevel": 5,
							"requires": "WarHorse"
						},
						{
							"skill": "Racking",
							"minLevel": 5,
							"requires": "WarHorse"
						},
						{
							"skill": "PlainsRunner",
							"minLevel": 8,
							"requires": "DraughtHorse"
						},
						{
							"skill": "KingOfGallop",
							"minLevel": 8,
							"requires": "WarHorse"
						},
						{
							"skill": "PonyCharge",
							"minLevel": 8,
							"requires": "WarHorse"
						},
						{
							"skill": "Adventurer",
							"minLevel": 12,
							"requires": "WarHorse"
						},
						{
							"skill": "Traveler",
							"minLevel": 12
						},
						{
							"skill": "Rampart",
							"minLevel": 12,
							"requires": "WarHorse"
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"campWidth": 4,
						"campHeight": 2,
						"corpseItem": "AnimalCorpse",
						"flags": 65601,
						"powerScale": 0.7,
						"socleSize": 4,
						"prisonerProbability": 5,
						"engagedDistance": 0.7,
						"armorKind": "HorseArmor",
						"captureCost": {
							"item": "Rope",
							"qty": 3
						},
						"cameraGroup": 0,
						"dailyFood": 6
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 41
						},
						{
							"value": 2,
							"attribute": "Dexterity",
							"upValue": 10
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 113
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						},
						{
							"value": 50,
							"attribute": "Transport"
						}
					],
					"model": "chars/Horse/Pony.prefab",
					"notes": "",
					"name": "Poney",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Sheep",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"campWidth": 4,
						"campHeight": 2,
						"corpseItem": "AnimalCorpse",
						"powerScale": 0.1,
						"socleSize": 4,
						"xpScale": 4
					},
					"stats": [],
					"model": "chars/Sheep/Model.prefab",
					"notes": "",
					"name": "Sheep",
					"rarity": 0,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "CrawlerChampion",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "CrawlerChaosClaws"
						},
						{
							"skill": "CrawlerSerratedTalons"
						},
						{
							"skill": "CrawlerSurvival"
						},
						{
							"skill": "CrawlerMassiveAttack"
						},
						{
							"skill": "Cannibalism"
						},
						{
							"skill": "AllyOfDarkness"
						}
					],
					"tier": 1,
					"rarity": 3,
					"props": {
						"powerScale": 6,
						"flags": 131228,
						"status": [
							{
								"kind": "Unpushable"
							}
						],
						"skillOrder": [
							{
								"skill": "CrawlerSurvival"
							},
							{
								"skill": "CrawlerChaosClaws"
							},
							{
								"skill": "CrawlerChaosClaws"
							},
							{
								"skill": "CrawlerSerratedTalons"
							},
							{
								"skill": "CrawlerChaosClaws"
							},
							{
								"skill": "CrawlerChaosClaws",
								"loop": 0
							}
						],
						"feature": "Alazar1_Update",
						"skillOrderMinNbPlayersUnit": 8,
						"skillOrderLoopNbPlayerUnits": 2,
						"trait": "GreatVitality"
					},
					"stats": [
						{
							"value": 30,
							"attribute": "Strength",
							"upValue": 300
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 27,
							"attribute": "Constitution",
							"upValue": 1200
						},
						{
							"value": 10,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 50,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Plagued/ChampionCrawler.prefab",
					"notes": "",
					"name": "Roi des Rampants",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 12
					},
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "MatthiasLund",
					"weaponTypes": [
						{
							"wp": "Mace2H"
						}
					],
					"equipment": [
						{
							"weapon": "Lucilla",
							"armor": "MediumArmorLegendaryChampion"
						}
					],
					"baseSkills": [
						{
							"skill": "LucillaJudgment"
						},
						{
							"skill": "LucillaVengeance"
						},
						{
							"skill": "Uncontrollable"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "LucillaJudgment"
							},
							{
								"skill": "LucillaVengeance",
								"preventPlayAfter": true
							},
							{
								"skill": "LucillaJudgment"
							},
							{
								"skill": "LucillaVengeance",
								"preventPlayAfter": true
							},
							{
								"skill": "LucillaJudgment",
								"loop": 0
							},
							{
								"skill": "LucillaVengeance",
								"loop": 1,
								"preventPlayAfter": true
							}
						],
						"powerScale": 6,
						"flags": 156,
						"status": [
							{
								"kind": "PreventEngage"
							},
							{
								"kind": "Unpushable"
							}
						],
						"skillOrderLoopNbPlayerUnits": 2,
						"skillOrderMinNbPlayersUnit": 6
					},
					"stats": [
						{
							"value": 30,
							"attribute": "Strength",
							"upValue": 300
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 30,
							"attribute": "Constitution",
							"upValue": 220
						},
						{
							"value": 100,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Matthias Lund",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Smot",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"equipment": [
						{
							"weapon": "Viper",
							"armor": "LightArmorLegendaryChampion1"
						}
					],
					"baseSkills": [
						{
							"skill": "ToxicBlade"
						},
						{
							"skill": "RatMaster"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "ToxicBlade"
							},
							{
								"skill": "ToxicBlade"
							}
						],
						"powerScale": 4,
						"flags": 524444
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 45,
							"attribute": "Constitution",
							"upValue": 330
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 15,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Smot",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Alexa",
					"weaponTypes": [
						{
							"wp": "Axe2H"
						}
					],
					"equipment": [
						{
							"weapon": "Splitter",
							"armor": "MediumArmorLegendaryChampion2"
						}
					],
					"baseSkills": [
						{
							"skill": "SliceAndDice"
						},
						{
							"skill": "LossOfControl"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "SliceAndDice"
							},
							{
								"skill": "SliceAndDice"
							},
							{
								"skill": "SliceAndDice",
								"loop": 0
							}
						],
						"powerScale": 6,
						"flags": 156,
						"skillOrderLoopNbPlayerUnits": 2,
						"skillOrderMinNbPlayersUnit": 4
					},
					"stats": [
						{
							"value": 6,
							"attribute": "Strength",
							"upValue": 90
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 58,
							"attribute": "Constitution",
							"upValue": 416
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_P.prefab",
					"notes": "",
					"name": "Alexa Grathan",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Kaghal",
					"weaponTypes": [
						{
							"wp": "Bow"
						}
					],
					"equipment": [
						{
							"weapon": "BowLegendaryEliteWorld",
							"armor": "LightArmorLegendaryChampion2"
						}
					],
					"baseSkills": [
						{
							"skill": "Training"
						},
						{
							"skill": "PackLeader"
						},
						{
							"skill": "BattleBrothers"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "PiercingArrow",
								"preventPlayAfter": true
							},
							{
								"skill": "PiercingArrow",
								"preventPlayAfter": true
							},
							{
								"skill": "PiercingArrow",
								"preventPlayAfter": true,
								"loop": 0
							},
							{
								"skill": "Training"
							}
						],
						"powerScale": 6,
						"flags": 156,
						"skillOrderLoopNbPlayerUnits": 2,
						"skillOrderMinNbPlayersUnit": 6
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 6,
							"attribute": "Dexterity",
							"upValue": 50
						},
						{
							"value": 18,
							"attribute": "Constitution",
							"upValue": 132
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 15,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_B.prefab",
					"notes": "",
					"name": "Kaghal",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "KaghalBoar",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "FeralCharge"
						},
						{
							"skill": "BattleBrothers"
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"socleSize": 4,
						"engagedDistance": 0.3,
						"hitRadius": 0.5,
						"animalCategory": "Boar"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 46
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 18,
							"attribute": "Constitution",
							"upValue": 233
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 8,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Boar/Model.prefab",
					"notes": "",
					"name": "Frère d'arme de Kaghal",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 11
					},
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "KaghalWolf",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "DefenseOfTheOwner"
						},
						{
							"skill": "BattleBrothers"
						}
					],
					"tier": 0,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"socleSize": 4,
						"engagedDistance": 0.3
					},
					"stats": [
						{
							"value": 8,
							"attribute": "Strength",
							"upValue": 83
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 15,
							"attribute": "Constitution",
							"upValue": 161
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 12,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Wolf/Wolf.prefab",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 4
					},
					"name": "Frère d'arme de Kaghal",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Bionn",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "AxeLegendaryHarag",
							"armor": "MediumArmorLegendaryChampionHarag"
						}
					],
					"baseSkills": [
						{
							"skill": "BionnAttack"
						},
						{
							"skill": "IrrationalScreaming"
						},
						{
							"skill": "PlagueOrganism"
						},
						{
							"skill": "DisturbedMind"
						},
						{
							"skill": "GlimmersOfMortality"
						},
						{
							"skill": "Transformation"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "BionnAttack"
							},
							{
								"skill": "BionnAttack"
							},
							{
								"skill": "IrrationalScreaming"
							},
							{
								"skill": "BionnAttack"
							},
							{
								"skill": "BionnAttack",
								"loop": 0
							},
							{
								"skill": "IrrationalScreaming"
							}
						],
						"powerScale": 8,
						"flags": 156,
						"skillOrderLoopNbPlayerUnits": 2,
						"skillOrderMinNbPlayersUnit": 8
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 58,
							"attribute": "Constitution",
							"upValue": 416
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Bionn",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "BionnZombie",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "MediumArmorLegendaryChampionHarag"
						}
					],
					"baseSkills": [
						{
							"skill": "TransformedBionnAttack"
						},
						{
							"skill": "IrrationalScreaming"
						},
						{
							"skill": "PlagueOrganism"
						},
						{
							"skill": "GlimmersOfMortality"
						},
						{
							"skill": "Vomiting"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "TransformedBionnAttack"
							},
							{
								"skill": "TransformedBionnAttack"
							},
							{
								"skill": "IrrationalScreaming"
							},
							{
								"skill": "TransformedBionnAttack"
							},
							{
								"skill": "TransformedBionnAttack",
								"loop": 0
							},
							{
								"skill": "IrrationalScreaming"
							}
						],
						"powerScale": 8,
						"flags": 163996,
						"skillOrderLoopNbPlayerUnits": 2,
						"skillOrderMinNbPlayersUnit": 8
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 58,
							"attribute": "Constitution",
							"upValue": 416
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Plagued/Model.prefab",
					"notes": "",
					"name": "Bionn",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Fenris",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [
						{
							"weapon": "PolearmLegendaryGrinmeer",
							"armor": "MediumArmorLegendaryChampion6"
						}
					],
					"baseSkills": [
						{
							"skill": "FenrisSeek"
						},
						{
							"skill": "FenrisElimination"
						},
						{
							"skill": "FenrisFreedom"
						},
						{
							"skill": "FenrisCourage"
						},
						{
							"skill": "FenrisCourageTrigger"
						}
					],
					"tier": 1,
					"props": {
						"powerScale": 10,
						"flags": 156,
						"skillOrder": [
							{
								"skill": "FenrisElimination"
							},
							{
								"skill": "FenrisElimination"
							},
							{
								"skill": "FenrisElimination"
							},
							{
								"skill": "FenrisElimination",
								"loop": 0
							},
							{
								"skill": "FenrisElimination",
								"loop": 1
							},
							{
								"skill": "FenrisFreedom"
							}
						],
						"skillOrderLoopNbPlayerUnits": 2,
						"skillOrderMinNbPlayersUnit": 8
					},
					"stats": [
						{
							"value": 6,
							"attribute": "Strength",
							"upValue": 90
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 58,
							"attribute": "Constitution",
							"upValue": 416
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Fenris Dredd",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "FenrisFleeing",
					"weaponTypes": [
						{
							"wp": "Polearm"
						}
					],
					"equipment": [
						{
							"weapon": "PolearmLegendaryGrinmeer",
							"armor": "MediumArmorLegendaryChampion6"
						}
					],
					"baseSkills": [
						{
							"skill": "FenrisCharge"
						},
						{
							"skill": "FenrisFlee"
						}
					],
					"tier": 1,
					"props": {
						"powerScale": 10,
						"flags": 156,
						"skillOrder": [
							{
								"skill": "FenrisCharge"
							},
							{
								"skill": "FenrisFlee"
							},
							{
								"skill": "FenrisCharge"
							},
							{
								"skill": "FenrisFlee"
							},
							{
								"skill": "FenrisCharge",
								"loop": 0
							},
							{
								"skill": "FenrisFlee",
								"loop": 1
							}
						],
						"skillOrderLoopNbPlayerUnits": 2,
						"skillOrderMinNbPlayersUnit": 8
					},
					"stats": [
						{
							"value": 6,
							"attribute": "Strength",
							"upValue": 90
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 58,
							"attribute": "Constitution",
							"upValue": 416
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Fenris Dredd",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "PuzzleMan",
					"weaponTypes": [],
					"equipment": [
						{
							"armor": "PuzzleManClothes"
						}
					],
					"baseSkills": [],
					"tier": 0,
					"props": {
						"flags": 4
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 22,
							"attribute": "Constitution",
							"upValue": 154
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Solvius, le Grand Résolutionneur",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Kogo",
					"weaponTypes": [
						{
							"wp": "Sword2H"
						}
					],
					"equipment": [
						{
							"weapon": "Sword2HLegendaryArena1G2",
							"armor": "MediumArmorLegendaryChampion8"
						}
					],
					"baseSkills": [
						{
							"skill": "LightningSpin"
						},
						{
							"skill": "BrotherUnion"
						},
						{
							"skill": "KogoPassive"
						},
						{
							"skill": "KogoTargetPassive"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "LightningSpin"
							},
							{
								"skill": "LightningSpin"
							}
						],
						"powerScale": 6,
						"flags": 524444
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 30,
							"attribute": "Constitution",
							"upValue": 220
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Kogo",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Toro",
					"weaponTypes": [
						{
							"wp": "Sword"
						}
					],
					"equipment": [
						{
							"weapon": "SwordLegendaryArena1G2",
							"armor": "MediumArmorLegendaryChampion9"
						}
					],
					"baseSkills": [
						{
							"skill": "ValiantAssault"
						},
						{
							"skill": "ForGlory"
						},
						{
							"skill": "BrotherUnion"
						},
						{
							"skill": "ToroPassive"
						},
						{
							"skill": "ToroTargetPassive"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "ForGlory"
							},
							{
								"skill": "ValiantAssault"
							},
							{
								"skill": "ValiantAssault"
							}
						],
						"powerScale": 6,
						"flags": 524444
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 30,
							"attribute": "Constitution",
							"upValue": 220
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_F.prefab",
					"notes": "",
					"name": "Toro",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "TrivetteRagnol",
					"weaponTypes": [
						{
							"wp": "Axe"
						}
					],
					"equipment": [
						{
							"weapon": "AxeLegendaryArena2G2",
							"armor": "MediumArmorLegendaryChampion7"
						}
					],
					"baseSkills": [
						{
							"skill": "SoakedAxe"
						},
						{
							"skill": "IncendiaryFlaskThrowing"
						},
						{
							"skill": "FireResistant"
						},
						{
							"skill": "EquipedWithIncendiaryFlask"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "IncendiaryFlaskThrowing"
							},
							{
								"skill": "SoakedAxe"
							}
						],
						"powerScale": 8,
						"flags": 524444,
						"status": [
							{
								"kind": "ResistFire"
							}
						]
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 38
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 58,
							"attribute": "Constitution",
							"upValue": 430
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 15,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_A.prefab",
					"notes": "",
					"name": "Trivette Ragnol",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "ChristophGluck",
					"weaponTypes": [
						{
							"wp": "Dagger"
						}
					],
					"equipment": [
						{
							"weapon": "DaggerCrook",
							"armor": "LightArmorLegendaryChampion10"
						}
					],
					"baseSkills": [
						{
							"skill": "GluckStiffingAttack"
						},
						{
							"skill": "GluckTraitorSwap"
						},
						{
							"skill": "GluckUnlimitedDodge"
						},
						{
							"skill": "GluckRenfort"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "GluckStiffingAttack"
							},
							{
								"skill": "GluckStiffingAttack"
							},
							{
								"skill": "GluckStiffingAttack",
								"loop": 0
							},
							{
								"skill": "GluckRenfort"
							}
						],
						"powerScale": 12,
						"flags": 156,
						"feature": "Alazar1_Update",
						"skillOrderLoopNbPlayerUnits": 2,
						"skillOrderMinNbPlayersUnit": 6
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 6,
							"attribute": "Dexterity",
							"upValue": 90
						},
						{
							"value": 58,
							"attribute": "Constitution",
							"upValue": 430
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_A.prefab",
					"notes": "",
					"name": "Kristoff Kruppe",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Kriskhed",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"weapon": "MaceLegendaryArena1E1",
							"armor": "HeavyArmorLegendaryChampionArenaE1",
							"leftHand": "ShieldLegendaryArenaE1"
						}
					],
					"baseSkills": [
						{
							"skill": "TacticalSlam"
						},
						{
							"skill": "Duel"
						},
						{
							"skill": "StanceDancing"
						},
						{
							"skill": "CombatFlow"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "Duel"
							},
							{
								"skill": "TacticalSlam"
							},
							{
								"skill": "Duel"
							},
							{
								"skill": "TacticalSlam"
							}
						],
						"powerScale": 8,
						"flags": 524444,
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 65,
							"attribute": "Constitution",
							"upValue": 495
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Kriskhed",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Lisbeth",
					"weaponTypes": [
						{
							"wp": "Mace2H"
						}
					],
					"equipment": [
						{
							"weapon": "MaceLegendaryArena1A1",
							"armor": "MediumArmorLegendaryChampionArenaA1",
							"leftHand": "ThrowingLegendaryArenaA1"
						}
					],
					"baseSkills": [
						{
							"skill": "ImpalingStrike"
						},
						{
							"skill": "EuphoricAddiction"
						},
						{
							"skill": "ThrowingAlazarianAxes"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "ImpalingStrike"
							},
							{
								"skill": "ImpalingStrike"
							},
							{
								"skill": "ImpalingStrike"
							},
							{
								"skill": "ImpalingStrike"
							}
						],
						"powerScale": 12,
						"flags": 524444,
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 38
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 58,
							"attribute": "Constitution",
							"upValue": 430
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_AS.prefab",
					"notes": "",
					"name": "Lisbeth ",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Nairolf",
					"weaponTypes": [
						{
							"wp": "Mace"
						}
					],
					"equipment": [
						{
							"weapon": "BowLegendaryArenaH1",
							"armor": "LightArmorLegendaryChampionArenaH1"
						}
					],
					"baseSkills": [
						{
							"skill": "PheromoneShooting"
						},
						{
							"skill": "BestialShooting"
						},
						{
							"skill": "UnbreakableBond2"
						},
						{
							"skill": "ThrillOfTheTrack"
						}
					],
					"tier": 1,
					"props": {
						"skillOrder": [
							{
								"skill": "PheromoneShooting"
							},
							{
								"skill": "BestialShooting"
							},
							{
								"skill": "BestialShooting"
							}
						],
						"powerScale": 10,
						"flags": 524444,
						"feature": "Alazar1_Update"
					},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 6,
							"attribute": "Dexterity",
							"upValue": 50
						},
						{
							"value": 30,
							"attribute": "Constitution",
							"upValue": 220
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 15,
							"attribute": "Movement"
						},
						{
							"value": 40,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_A.prefab",
					"notes": "",
					"name": "Nairolf",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "Ecila",
					"weaponTypes": [],
					"equipment": [],
					"baseSkills": [
						{
							"skill": "EcilaWrath"
						},
						{
							"skill": "UnbreakableBond1"
						},
						{
							"skill": "ThrillOfTheTrack"
						}
					],
					"tier": 1,
					"props": {
						"isAnimal": true,
						"corpseItem": "AnimalCorpse",
						"socleSize": 4,
						"engagedDistance": 0.3,
						"hitRadius": 0.5,
						"animalCategory": "Bear",
						"flags": 28
					},
					"stats": [
						{
							"value": 12,
							"attribute": "Strength",
							"upValue": 200
						},
						{
							"value": 8,
							"attribute": "Dexterity",
							"upValue": 40
						},
						{
							"value": 70,
							"attribute": "Constitution",
							"upValue": 1000
						},
						{
							"value": 0,
							"attribute": "CritHitPercent"
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Bear/Bear.prefab",
					"notes": "",
					"name": "Ecila",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 5
					}
				},
				{
					"id": "WeeklyBountyLight",
					"weaponTypes": [
						{
							"wp": "Dagger"
						},
						{
							"wp": "Bow"
						}
					],
					"equipment": [],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 20
						},
						{
							"value": 5,
							"attribute": "Dexterity",
							"upValue": 38
						},
						{
							"value": 8,
							"attribute": "Constitution",
							"upValue": 44
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 6,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_D.prefab",
					"notes": "",
					"name": "Fugitif",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "WeeklyBountyMedium",
					"weaponTypes": [
						{
							"wp": "Sword"
						},
						{
							"wp": "Axe"
						},
						{
							"wp": "Mace"
						},
						{
							"wp": "Polearm"
						}
					],
					"equipment": [],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 5,
							"attribute": "Strength",
							"upValue": 33
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 9,
							"attribute": "Constitution",
							"upValue": 64
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Fugitif",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				},
				{
					"id": "WeeklyBountyHeavy",
					"weaponTypes": [
						{
							"wp": "Sword"
						},
						{
							"wp": "Axe"
						},
						{
							"wp": "Mace"
						},
						{
							"wp": "Shield"
						}
					],
					"equipment": [],
					"baseSkills": [],
					"tier": 0,
					"props": {},
					"stats": [
						{
							"value": 4,
							"attribute": "Strength",
							"upValue": 23
						},
						{
							"value": 4,
							"attribute": "Dexterity",
							"upValue": 20
						},
						{
							"value": 11,
							"attribute": "Constitution",
							"upValue": 93
						},
						{
							"value": 0,
							"attribute": "CritHitPercent",
							"upValue": 10
						},
						{
							"value": 10,
							"attribute": "Movement"
						},
						{
							"value": 10,
							"attribute": "Willpower"
						}
					],
					"model": "chars/Prefabs/Prefab_SS.prefab",
					"notes": "",
					"name": "Fugitif",
					"rarity": 3,
					"timelinePriority": 0,
					"iconeDone": true
				}
			],
			"props": {},
			"separators": [
				{
					"title": "Characters",
					"id": "Civil"
				},
				{
					"title": "Classes",
					"id": "Swordman"
				},
				{
					"level": 1,
					"title": "Sword",
					"id": "Swordman"
				},
				{
					"title": "Bow",
					"level": 1,
					"id": "Bowman"
				},
				{
					"title": "Dagger",
					"level": 1,
					"id": "Rogue"
				},
				{
					"title": "Polearm",
					"level": 1,
					"id": "Spearman"
				},
				{
					"title": "Axe",
					"level": 1,
					"id": "Axeman"
				},
				{
					"title": "Mace",
					"level": 1,
					"id": "Brute"
				},
				{
					"title": "Wand",
					"level": 1,
					"id": "Mage"
				},
				{
					"title": "Enemies",
					"id": "Mobster"
				},
				{
					"level": 1,
					"title": "Bandits",
					"id": "Mobster"
				},
				{
					"title": "Deserters",
					"level": 1,
					"id": "RoughneckSoldier"
				},
				{
					"title": "Guard",
					"level": 1,
					"id": "Infantryman"
				},
				{
					"title": "Legion",
					"level": 1,
					"id": "Legionary"
				},
				{
					"title": "Companions",
					"level": 1,
					"id": "Hitman"
				},
				{
					"title": "Inquisition",
					"level": 1,
					"id": "Zealot"
				},
				{
					"level": 1,
					"title": "Trackers",
					"id": "Runner"
				},
				{
					"level": 1,
					"title": "Alazar",
					"id": "Sentry"
				},
				{
					"level": 1,
					"title": "Backpack",
					"id": "Thief"
				},
				{
					"level": 1,
					"title": "Misc",
					"id": "Erudit"
				},
				{
					"title": "Animals",
					"id": "Wolf"
				},
				{
					"title": "Tracker Beasts",
					"id": "TrackerBears"
				},
				{
					"title": "GhostPack",
					"id": "GhostWolf"
				},
				{
					"title": "Plague",
					"id": "PlaguedRat"
				},
				{
					"title": "Ruins",
					"id": "Crawler"
				},
				{
					"title": "Livestock",
					"id": "Pony"
				},
				{
					"title": "Champions",
					"id": "CrawlerChampion"
				},
				{
					"title": "Special",
					"id": "WeeklyBountyLight"
				}
			]
		},
		{
			"name": "unitPattern",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"opt": true,
					"scope": null
				},
				{
					"typeStr": "8",
					"name": "types"
				},
				{
					"typeStr": "8",
					"name": "passiveSkills",
					"opt": true
				}
			],
			"lines": [
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Swordman"
						},
						{
							"slot": 1,
							"unitClass": "Bowman"
						},
						{
							"slot": 2,
							"unitClass": "Rogue"
						},
						{
							"slot": 3,
							"unitClass": "Brute"
						}
					],
					"id": "PlayerStart"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Swordman"
						},
						{
							"slot": 1,
							"unitClass": "Bowman"
						},
						{
							"slot": 2,
							"unitClass": "Rogue"
						},
						{
							"slot": 3,
							"unitClass": "Mage"
						}
					],
					"id": "PlayerStartAdventurer"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Swordman"
						},
						{
							"slot": 1,
							"unitClass": "Axeman"
						},
						{
							"slot": 2,
							"unitClass": "Spearman"
						},
						{
							"slot": 3,
							"unitClass": "Brute"
						}
					],
					"id": "PlayerStartMerchant"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Swordman"
						},
						{
							"slot": 3,
							"unitClass": "Axeman"
						},
						{
							"slot": 1,
							"unitClass": "Bowman"
						},
						{
							"slot": 2,
							"unitClass": "Rogue"
						}
					],
					"id": "PlayerStartDeserter"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Brute"
						},
						{
							"slot": 1,
							"unitClass": "Spearman"
						},
						{
							"slot": 2,
							"unitClass": "Spearman"
						},
						{
							"slot": 3,
							"unitClass": "Bowman"
						}
					],
					"id": "PlayerStartFarmer"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Brute"
						},
						{
							"slot": 1,
							"unitClass": "Rogue"
						},
						{
							"slot": 2,
							"unitClass": "Rogue"
						},
						{
							"slot": 3,
							"unitClass": "Bowman"
						}
					],
					"id": "PlayerStartBandit"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Bionn",
							"proba": 1
						}
					],
					"id": "TestFight"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "SportPlayerStrength"
						},
						{
							"slot": 1,
							"unitClass": "SportPlayerDexterity"
						}
					],
					"id": "SportTeam"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "SportPlayerStrength"
						},
						{
							"slot": 1,
							"unitClass": "SportPlayerDexterity"
						},
						{
							"slot": 2,
							"maxCount": 1,
							"unitClass": "Swamoar"
						}
					],
					"id": "SportTeamLudern"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Swordman"
						},
						{
							"slot": 0,
							"unitClass": "Axeman"
						},
						{
							"slot": 0,
							"unitClass": "Brute"
						},
						{
							"slot": 1,
							"unitClass": "Swordman"
						},
						{
							"slot": 1,
							"unitClass": "Bowman"
						},
						{
							"slot": 1,
							"unitClass": "Rogue"
						},
						{
							"slot": 1,
							"unitClass": "Spearman"
						},
						{
							"slot": 1,
							"unitClass": "Axeman"
						},
						{
							"slot": 1,
							"unitClass": "Brute"
						},
						{
							"slot": 2,
							"unitClass": "Bowman"
						},
						{
							"slot": 2,
							"unitClass": "Rogue"
						},
						{
							"slot": 2,
							"unitClass": "Spearman"
						}
					],
					"id": "Base"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Boar",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Boar",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Boar",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "DominantSow",
							"proba": 1
						}
					],
					"id": "Boars",
					"passiveSkills": [
						{
							"skill": "Mistrust"
						}
					]
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Wolf",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Wolf",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Wolf",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Alpha",
							"proba": 1
						}
					],
					"id": "Wolves",
					"passiveSkills": [
						{
							"skill": "WildPack"
						}
					]
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "SnowWolf",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "SnowWolf",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "SnowWolf",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "SnowAlpha",
							"proba": 1
						}
					],
					"id": "SnowWolves",
					"passiveSkills": [
						{
							"skill": "WildPack"
						}
					]
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Mosquito",
							"proba": 1
						}
					],
					"id": "Mosquitos"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Swamoar",
							"proba": 1
						}
					],
					"id": "Crocoporks",
					"passiveSkills": [
						{
							"skill": "Mistrust"
						}
					]
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Bear",
							"proba": 1
						}
					],
					"id": "Bears",
					"passiveSkills": [
						{
							"skill": "PrimalWrath"
						}
					]
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "WhiteBear",
							"proba": 1
						}
					],
					"id": "SnowBears",
					"passiveSkills": [
						{
							"skill": "PrimalWrath"
						}
					]
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "WhiteBear",
							"proba": 1
						}
					],
					"id": "WhiteBears",
					"passiveSkills": [
						{
							"skill": "PrimalWrath"
						}
					]
				},
				{
					"types": [],
					"id": "Champion"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Pony",
							"proba": 1
						}
					],
					"id": "Stables"
				},
				{
					"types": [],
					"id": "Alone"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Civil",
							"proba": 1
						}
					],
					"id": "Civilians"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Mobster",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Poacher",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Marauder",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "MischiefMaker",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Criminal",
							"proba": 1
						}
					],
					"id": "Outlaws",
					"passiveSkills": [
						{
							"skill": "OathOfTheCowards"
						},
						{
							"skill": "DishonorableTechnics"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "RoughneckSoldier",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Raider",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Fireworks",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Renegade",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Looter",
							"proba": 1
						}
					],
					"id": "Deserters",
					"passiveSkills": [
						{
							"skill": "ThirstForFreedom"
						},
						{
							"skill": "Independence"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Infantryman",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Phalange",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Lieutenant",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Tactician",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Defender",
							"proba": 1
						}
					],
					"id": "Guard",
					"passiveSkills": [
						{
							"skill": "ForcefulRelease"
						},
						{
							"skill": "FervorOfTheLaw"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Purifier",
							"proba": 1,
							"maxCount": 1
						},
						{
							"slot": 1,
							"unitClass": "Infantryman",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Phalange",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Lieutenant",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Tactician",
							"proba": 1
						},
						{
							"slot": 5,
							"unitClass": "Defender",
							"proba": 1
						}
					],
					"id": "Purifier",
					"passiveSkills": [
						{
							"skill": "CloseRanks"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Legionary",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Sapper",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Spadassin",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Emissary",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Hothead",
							"proba": 1
						}
					],
					"id": "Legion",
					"passiveSkills": [
						{
							"skill": "MilitaryFormation"
						},
						{
							"skill": "AloneAgainstAll"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Hitman",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Ravager",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Crewman",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Arrow",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Peacekeeper",
							"proba": 1
						}
					],
					"id": "Companions",
					"passiveSkills": [
						{
							"skill": "EliteMercenaries"
						},
						{
							"skill": "DuelScience"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Zealot",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Fanatic",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Purgater",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Worshipper",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Messenger",
							"proba": 1
						}
					],
					"id": "Inquisition",
					"passiveSkills": [
						{
							"skill": "ExhilaratingFervour"
						},
						{
							"skill": "Penance"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Runner",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Boar",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Slaughterer",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Wolf",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Blocker",
							"proba": 1
						},
						{
							"slot": 5,
							"unitClass": "Bear",
							"proba": 1
						},
						{
							"slot": 6,
							"unitClass": "Savage",
							"proba": 1
						},
						{
							"slot": 7,
							"unitClass": "Pursuer",
							"proba": 1
						}
					],
					"id": "Trackers",
					"passiveSkills": [
						{
							"skill": "AnimalUnity"
						},
						{
							"skill": "WildOpportunism"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Sentry"
						},
						{
							"slot": 1,
							"unitClass": "Sagittarius"
						},
						{
							"slot": 2,
							"unitClass": "Henchman"
						},
						{
							"slot": 3,
							"unitClass": "Recruit"
						},
						{
							"slot": 4,
							"unitClass": "Colosse"
						}
					],
					"id": "Alazar",
					"passiveSkills": [
						{
							"skill": "CritOnEngaged"
						},
						{
							"skill": "ExtremeResilience"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Merchant",
							"proba": 1,
							"maxCount": 5
						},
						{
							"slot": 1,
							"unitClass": "Hitman",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Ravager",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Crewman",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Arrow",
							"proba": 1
						},
						{
							"slot": 6,
							"unitClass": "Pony",
							"proba": 1,
							"maxCount": 3,
							"minTier": 1
						},
						{
							"slot": 7,
							"unitClass": "Peacekeeper",
							"proba": 1
						}
					],
					"id": "Merchants",
					"passiveSkills": [
						{
							"skill": "EliteMercenaries"
						},
						{
							"skill": "DuelScience"
						}
					]
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Matriarch",
							"maxCount": 1
						}
					],
					"id": "RatInvasion"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Plagueridden",
							"proba": 1
						}
					],
					"id": "Plagueriddens"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Plagueridden",
							"proba": 1
						}
					],
					"id": "Horde"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Plagueridden",
							"proba": 1
						}
					],
					"id": "HordeReach"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "GhostWolf",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "GhostBoar",
							"proba": 1
						}
					],
					"id": "GhostPack"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Crawler"
						},
						{
							"slot": 2,
							"unitClass": "Molerat"
						},
						{
							"slot": 3,
							"unitClass": "Molerat"
						},
						{
							"slot": 4,
							"unitClass": "Molerat"
						}
					],
					"id": "Ruins"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "Molerat"
						}
					],
					"id": "MoleRats"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Runner",
							"proba": 1
						},
						{
							"slot": 0,
							"unitClass": "Savage",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Trapper",
							"proba": 1
						},
						{
							"slot": 5,
							"unitClass": "Bear",
							"proba": 1
						}
					],
					"id": "Tumblers",
					"passiveSkills": [
						{
							"skill": "AnimalUnity"
						},
						{
							"skill": "WildOpportunism"
						}
					]
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Thief",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Mobster",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Poacher",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Marauder",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Criminal",
							"proba": 1
						}
					],
					"id": "Brigands"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Mobster",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Poacher",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Marauder",
							"proba": 1
						}
					],
					"id": "BrigandsMain"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Pony"
						}
					],
					"id": "Ponies"
				},
				{
					"types": [
						{
							"slot": 0,
							"unitClass": "Purifier",
							"proba": 1
						},
						{
							"slot": 1,
							"unitClass": "Sentry",
							"proba": 1
						},
						{
							"slot": 2,
							"unitClass": "Henchman",
							"proba": 1
						},
						{
							"slot": 3,
							"unitClass": "Recruit",
							"proba": 1
						},
						{
							"slot": 4,
							"unitClass": "Colosse",
							"proba": 1
						},
						{
							"slot": 5,
							"unitClass": "Brigadier",
							"proba": 1
						}
					],
					"id": "Purifiers"
				},
				{
					"types": [
						{
							"slot": 1,
							"unitClass": "SnowCrawler",
							"proba": 1
						}
					],
					"id": "SnowCrawlers"
				}
			],
			"props": {
				"hasIndex": true
			},
			"separators": [
				{
					"id": "TestFight"
				},
				{
					"id": "Base"
				}
			]
		},
		{
			"name": "unitPattern@types",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "slot"
				},
				{
					"typeStr": "6:unitClass",
					"name": "unitClass",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "minTier",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "proba",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "maxCount",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "unitPattern@passiveSkills",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:skill",
					"name": "skill",
					"kind": null
				}
			]
		},
		{
			"name": "unitClass@baseSkills",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "minLevel",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "learnLevel",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:skill",
					"name": "skill",
					"display": null
				},
				{
					"typeStr": "6:skill",
					"name": "requires",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "unitClass@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "attribPoints",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "isAnimal",
					"opt": true
				},
				{
					"typeStr": "10:CanCapture,CanRecruit,CantMakePrisoner,IsChampion,NoEquipDrop,IsSpecialized,IsReserve,ForceDropWeapon,BattleNotCount,CantSurround,LockRotation,IsLocked,HasVisualVariants,GhostUnit,NoWeapon,Plagued,CanTransport,NoPunch,PreventSkilled,ArenaChampion,PreventRenfort",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "socleSize",
					"opt": true
				},
				{
					"typeStr": "6:itemType",
					"name": "armorKind",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "campWidth",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "campHeight",
					"opt": true
				},
				{
					"typeStr": "6:item",
					"name": "corpseItem",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "dailyFood",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "skillOrder",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "powerScale",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "engagedDistance",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "xpScale",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "status",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "ai",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "hitRadius",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:trait",
					"name": "trait",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:loot",
					"name": "loot",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "prisonerProbability",
					"opt": true
				},
				{
					"typeStr": "6:status",
					"name": "importantStatus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:unitClass",
					"name": "animalCategory",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:constant",
					"name": "feature",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "hasTattoo",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "hasWarpaint",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "height",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "modelScale",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "killLoot",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "captureCost",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "moveSpeed",
					"opt": true
				},
				{
					"typeStr": "5:Pony,Boar_Wolf,Bear,Mosquito,Rat",
					"name": "cameraGroup",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isMudImmune",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "skillOrderLoopNbPlayerUnits",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "skillOrderMinNbPlayersUnit",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "playerPowerScaleFactor",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "unitClass@props@skillOrder",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:skill",
					"name": "skill"
				},
				{
					"typeStr": "2",
					"name": "preventPlayAfter",
					"opt": true
				},
				{
					"typeStr": "5:Start,End",
					"name": "loop",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "unitClass@props@status",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:status",
					"name": "kind"
				}
			]
		},
		{
			"name": "unitClass@props@ai",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:skill",
					"name": "skill",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "engaged",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "minDistanceTarget",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "minTargets",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "maxTargets",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "unitClass@props@killLoot",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:loot",
					"name": "loot",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "min",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "max",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "unitClass@props@captureCost",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "3",
					"name": "qty"
				}
			]
		},
		{
			"name": "unitClass@weaponTypes",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:itemType",
					"name": "wp"
				}
			]
		},
		{
			"name": "unitClass@equipment",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "weapon",
					"opt": true
				},
				{
					"typeStr": "6:item",
					"name": "armor",
					"opt": true
				},
				{
					"typeStr": "6:item",
					"name": "leftHand",
					"opt": true
				},
				{
					"typeStr": "6:item",
					"name": "oilItem",
					"opt": true
				},
				{
					"typeStr": "6:groupType",
					"name": "group",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "unitClass@stats",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "value"
				},
				{
					"typeStr": "3",
					"name": "upValue",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "apBonus",
					"opt": true
				},
				{
					"typeStr": "6:attribute",
					"name": "attribute"
				}
			]
		},
		{
			"name": "skill",
			"columns": [
				{
					"typeStr": "14",
					"name": "icon"
				},
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "1",
					"name": "name",
					"display": null,
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "desc",
					"kind": "localizable"
				},
				{
					"typeStr": "5:TargetUnit,Precision,Passive,Move,Immediate,Zone,WorldPassive",
					"name": "mode"
				},
				{
					"typeStr": "17",
					"name": "range"
				},
				{
					"typeStr": "4",
					"name": "minDmg",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "maxDmg",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "1",
					"name": "script",
					"kind": "script"
				},
				{
					"typeStr": "8",
					"name": "levels",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "notes",
					"editor": {
						"categories": [
							"todoInfo"
						]
					}
				},
				{
					"typeStr": "5:TODO,Coded,Ok,Wait",
					"name": "done"
				},
				{
					"typeStr": "2",
					"name": "iconeDone",
					"editor": {
						"categories": [
							"todoInfo"
						]
					}
				}
			],
			"lines": [
				{
					"id": "AA_DefaultSkill",
					"name": "Skill par defaut",
					"desc": "DOIT ETRE REMPLACE",
					"mode": 0,
					"range": {},
					"props": {},
					"script": "",
					"notes": "Ne doit jamais etre référencé avant une release",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 19,
						"y": 4
					},
					"group": 0,
					"done": 2,
					"__ignoreLoc__": true
				},
				{
					"id": "Move",
					"name": "Déplacement",
					"mode": 3,
					"props": {
						"defaultAction": false,
						"usableWhenDying": true
					},
					"desc": "Se déplace jusqu'au point ciblé.",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 0
					},
					"script": "",
					"range": {},
					"notes": "",
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "Disengage",
					"name": "Désengagement",
					"desc": "Se désengage. Déclenche une attaque d'opportunité de l'adversaire.",
					"mode": 4,
					"range": {},
					"props": {
						"vars": {
							"allowed": true
						},
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						],
						"defaultAction": false
					},
					"script": "function onSkill() {\n\tskill.unit.disengage(true);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 2
					},
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "OpportunityAttack",
					"name": "Attaque d'opportunité",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {
						"baseDistance": 99
					},
					"props": {
						"dmgAttribute": 2,
						"defaultAction": false
					},
					"script": "",
					"minDmg": 10,
					"notes": "",
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "PunchOpportunityAttack",
					"name": "",
					"desc": "",
					"mode": 0,
					"range": {
						"baseDistance": 99
					},
					"props": {
						"useWithoutWeapon": true,
						"specialAnim": "Punch",
						"dmgAttribute": 2,
						"isAttack": true,
						"defaultAction": true
					},
					"script": "",
					"notes": "Disarmed Opportunity Attack",
					"minDmg": 3,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 0,
					"levels": [],
					"done": 2
				},
				{
					"id": "Recover",
					"name": "Récupération",
					"desc": "Retire [Stun].",
					"mode": 4,
					"range": {},
					"props": {
						"needDisengaged": true,
						"defaultAction": false,
						"tooltipStatus": [
							{
								"st": "Stun"
							}
						]
					},
					"script": "function onSkill() {\n\tskill.unit.consumeStatus(Status.Stun);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 2
					},
					"iconeDone": true,
					"group": 0,
					"levels": [],
					"done": 2
				},
				{
					"id": "KnockOut",
					"name": "Assommer",
					"desc": "Assomme un ennemi engagé avec un allié.\nIl sera fait prisonnier à la fin du combat.",
					"mode": 0,
					"range": {},
					"props": {
						"needDisengaged": true,
						"temporaryUsage": true,
						"defaultAction": true,
						"specialAnim": "KnockoutAttack",
						"vars": {
							"allowed": false
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = false;\n\tfor( u in getFoes(skill.unit) )\n\t\tif( canCaptureTarget(u) ) {\n\t\t\tvars.allowed = true;\n\t\t\tbreak;\n\t\t}\n}\n\nfunction onEval(s) {\n\tif( !canCaptureTarget(s.target) ){\n\t\tdontAllow();\n\t}\n}\n\nfunction onSkill() {\n\tcapture();\n}\n\n@sync function canCaptureTarget(t){\n\tvar canCapture = skill.unit.canCapture(t, true);\n\tvar canUseBelt = t.isAnimal && !t.isGhost && skill.unit.hasSkill(Skill.BeltAccHunt);\n\treturn canCapture && !canUseBelt;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 2
					},
					"levels": [],
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "BraveVictory",
					"name": "Victoire valeureuse",
					"desc": "Chaque fois que cette unité tue un ennemi, obtenez <apt>::value1::</apt>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"globalEvents": true
					},
					"script": "function onDeath(a) {\n\tif( a.target.side != skill.unit.side && a.unit == skill.unit ) {\n\t\tskill.unit.gainsActionPoint(vars.value1);\n\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 7
					},
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "BraveSupport",
					"name": "Soutien valeureux",
					"desc": "Chaque fois que cette unité termine son tour adjacent à un allié sans être engagée, obtenez <apt>::value1::</apt>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"melee": false,
							"value1": 1
						}
					},
					"script": "function onBeginRound() {\n\tvars.melee = false;\n}\n\nfunction onEndTurn() {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) && !skill.unit.isEngaged() ) {\n\t\t\tvars.melee = true;\n\t\t}\n\t}\n\tif( vars.melee ) {\n\t\tskill.unit.gainsActionPoint(vars.value1);\n\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 7
					},
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "BraveDuel",
					"name": "Duel valeureux",
					"desc": "Chaque fois que cette unité s'engage, obtenez <apt>::value1::</apt>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"engaged": false,
							"value1": 1
						},
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tif( !skill.unit.isEngaged() ) {\n\t\tvars.engaged = false;\n\t}\n}\n\nfunction onSkillPlayed(s) {\n\tif( skill.unit.isEngaged() && !vars.engaged ) {\n\t\tvars.engaged = true;\n\t\tskill.unit.gainsActionPoint(vars.value1);\n\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 7
					},
					"levels": [],
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "BraveCleave",
					"name": "Enchaînement valeureux",
					"desc": "Chaque fois qu'une attaque touche plusieurs ennemis, obtenez <apt>::value1::</apt>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						}
					},
					"script": "function onSkillPlayed(s) {\n\tvar arr = [];\n\tfor( t in s.getTargets() ) {\n\t\tif( t.dmg > 0 ) {\n\t\t\tarr.push(t.target);\n\t\t}\n\t}\n\tif( arr.length >= 2 ) {\n\t\tspawnFx();\n\t\tskill.unit.gainsActionPoint(vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 3,
						"y": 16
					},
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "BraveBoldness",
					"name": "Audace valeureuse",
					"desc": "Chaque fois que cette unité termine son tour adjacent à un ennemi sans être engagée, obtenez <apt>::value1::</apt>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"melee": false,
							"value1": 1
						}
					},
					"script": "function onBeginRound() {\n\tvars.melee = false;\n}\n\nfunction onEndTurn() {\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) && !skill.unit.isEngaged() ) {\n\t\t\tvars.melee = true;\n\t\t}\n\t}\n\tif( vars.melee ) {\n\t\tskill.unit.gainsActionPoint(vars.value1);\n\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 17
					},
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "CaptainSkill",
					"name": "Motivation des troupes",
					"desc": "Obtenez <apt>::value1::</apt> pour chaque allié dans la zone.\n\nUtilisable une fois par combat.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 4,
						"allowedTargets": 1,
						"baseDistance": 0
					},
					"props": {
						"vars": {
							"value1": 1
						},
						"apCost": 0,
						"cursor": "CursorHelp",
						"specialAnim": "Taunt",
						"scaledValueAttribute": 0,
						"oncePerFight": true,
						"useWithoutWeapon": true,
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryBlue.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tvar ctr = 0;\n\tfor( t in skill.getTargets() )\n\t\tctr += vars.value1;\n\tskill.unit.gainsActionPoint(ctr);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 14
					},
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "LieutenantSkill",
					"name": "Ordre tactique",
					"desc": "Les alliés présents autour de cette unité gagnent le statut [Ordered].\n\nUtilisable une fois par combat.",
					"mode": 5,
					"range": {
						"allowedTargets": 1,
						"type": 0,
						"baseDistance": 0,
						"radius": 3
					},
					"props": {
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Ordered"
							}
						],
						"oncePerFight": true,
						"useWithoutWeapon": true,
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryRed.fx"
					},
					"script": "function onSkill() {\n\tfor(t in skill.getTargets())\n\t\tt.target.addStatus(Status.Ordered);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 15
					},
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "Wip",
					"name": "????",
					"desc": "Bientôt disponible.",
					"mode": 0,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/TXT_OW_UI_ICONS_48PX.png",
						"size": 48,
						"x": 5,
						"y": 3
					},
					"iconeDone": true,
					"group": 0,
					"done": 2
				},
				{
					"id": "Flee",
					"name": "Fuir",
					"desc": "Fuir le combat.",
					"mode": 4,
					"range": {},
					"props": {
						"needDisengaged": true,
						"vars": {
							"allowed": false
						},
						"usableWhenDying": true
					},
					"script": "function onBeginAction() {\n\tvars.allowed = skill.unit.canFlee();\n}\n\nfunction onEval(s) {\n\tif( !skill.unit.canFlee() ) dontAllow();\n}\n\nfunction onSkill() {\n\tflee();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 15
					},
					"minDmg": 1,
					"levels": [],
					"iconeDone": true,
					"group": 1,
					"done": 2
				},
				{
					"id": "ForsakenBattleSearchIssue",
					"name": "Trouver une issue",
					"desc": "Cette unité essaie de trouver une issue pour quitter le bâtiment.\nChaque utilisation successive lors d'un même round réduit son efficacité.",
					"mode": 4,
					"range": {},
					"props": {
						"needDisengaged": true,
						"specialAnim": "Search",
						"vars": {
							"value1": 20,
							"value2": 0.5
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 7
					},
					"minDmg": 1,
					"iconeDone": true,
					"group": 1,
					"done": 2
				},
				{
					"id": "Wrath",
					"name": "Courroux",
					"desc": "Inflige [DMG] à la cible s'il lui reste moins de la moitié de sa [Health].\n\n[DeadlyBlow] : Cette unité gagne [Fury].",
					"mode": 0,
					"range": {},
					"props": {
						"apCost": 1,
						"vars": {
							"value1": 50,
							"allowed": false
						},
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						],
						"dmgAttribute": 2,
						"specialAnim": "AttackPower"
					},
					"script": "function onBeginAction() {\n\tvars.allowed = false;\n\tfor( u in getFoes(skill.unit) ) {\n\t\tvar p = 100 * (u.health / u.stats.health);\n\t\tif( p <= vars.value1 && u.isMelee(skill.unit) ) {\n\t\t\tvars.allowed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction onEval(a) {\n\tvar p = 100 * (a.target.health / a.target.stats.health);\n\tif( p > vars.value1 ) {\n\t\tdontAllow();\n\t}\n}\n\nfunction onPostSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tif( !t.target.isAlive() ) {\n\t\t\tskill.unit.addStatus(Status.Fury);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 1
					},
					"minDmg": 5.5,
					"levels": [],
					"iconeDone": true,
					"maxDmg": 7,
					"group": 2,
					"done": 2
				},
				{
					"id": "FirstAid",
					"name": "Premiers soins",
					"desc": "Soigne un allié [Dying] et lui fait gagner ::value1::% de sa [Health] maximum.\nLui retire toutes les applications de [Poison], [Bleeding] et [Burning].",
					"mode": 0,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"specialAnim": "Heal",
						"apCost": 1,
						"vars": {
							"value1": 10
						},
						"needDisengaged": true,
						"cursor": "CursorHeal",
						"healPreview": 0.1,
						"useWithoutWeapon": true
					},
					"script": "function onSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.gainsHealth( ceil(t.target.stats.health*vars.value1/100) , null);\n\n\t\tvar cancelStatus = false;\n\t\tfor( st in t.target.getAllStatus() ) {\n\t\t\tif( st.kind == Status.Poison || st.kind == Status.Bleeding || st.kind == Status.Burning ) {\n\t\t\t\tst.cancel();\n\t\t\t\tcancelStatus = true;\n\t\t\t}\n\t\t}\n\t\tt.target.gainsHealth( 0 , cancelStatus ? true : null);\n\t}\n\tplay();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 1
					},
					"iconeDone": true,
					"group": 2,
					"done": 2
				},
				{
					"id": "Dash",
					"name": "Course",
					"desc": "Se désengage et se déplace en ligne droite jusqu'à ::value1:: mètres entre les unités.",
					"mode": 3,
					"range": {
						"flags": 1,
						"baseDistance": 5
					},
					"props": {
						"apCost": 1,
						"vars": {
							"value1": 5
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 1
					},
					"iconeDone": true,
					"group": 2,
					"done": 2
				},
				{
					"id": "Taunt",
					"name": "Provocation",
					"desc": "Force la cible à s'engager et lui applique [Weakening] pendant ::value1:: rounds.",
					"mode": 0,
					"range": {},
					"props": {
						"apCost": 1,
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Weakening"
							}
						],
						"specialAnim": "Taunt",
						"useWithoutWeapon": true,
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryRed.fx"
					},
					"script": "function onSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Weakening, vars.value1, true);\n\t\tif( t.target.engagedUnit != skill.unit && !t.target.hasStatus(Status.Dying)) {\n\t\t\tt.target.disengage(false);\n\t\t\tt.target.engage(skill.unit);\n\t\t}\n\t}\n\tplay();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 1
					},
					"iconeDone": true,
					"group": 2,
					"done": 2
				},
				{
					"id": "Aim",
					"name": "Visée",
					"desc": "Gagne [Deftness].",
					"mode": 4,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Deftness"
							}
						],
						"apCost": 1,
						"useWithoutWeapon": true,
						"needDisengaged": true
					},
					"script": "function onSkill() {\n\tskill.unit.addStatus(Status.Deftness);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 1
					},
					"levels": [],
					"iconeDone": true,
					"group": 2,
					"done": 2
				},
				{
					"id": "Cleave",
					"name": "Enchaînement",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.",
					"mode": 5,
					"range": {
						"radius": 2,
						"angle": 160,
						"type": 1,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"specialAnim": "AttackWide",
						"defaultAction": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 3
					},
					"minDmg": 9,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Slice",
					"name": "Taillade",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 0
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Impalement",
					"name": "Empalement",
					"desc": "Inflige [DMG] à la cible et la repousse de ::value1:: mètres.\nLes dégâts sont doublés si elle est à distance.",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1,
							"value2": 100
						},
						"tooltipStatus": [
							{
								"st": "Pushback"
							}
						],
						"isAttack": true,
						"defaultAction": true,
						"flags": 0
					},
					"script": "function onEval(a) {\n\tfor( t in skill.getTargets() ) {\n\t\tif( !t.target.isMelee(skill.unit) ) {\n\t\t\tt.baseDamageBonus += vars.value2;\n\t\t}\n\t}\n}\n\nfunction onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 0
					},
					"minDmg": 4.5,
					"maxDmg": 5.5,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Grinding",
					"name": "Enfoncement",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nLes dégâts sont augmentés de ::value1::% contre celles ayant encore de l'[Armor].",
					"mode": 5,
					"range": {
						"radius": 2,
						"angle": 160,
						"type": 1,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 50
						},
						"isAttack": true,
						"specialAnim": "AttackWide",
						"defaultAction": true
					},
					"script": "function onEval(a) {\n\tif( a.target.armor > 0 ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 3
					},
					"minDmg": 7,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Crushing",
					"name": "Écrasement",
					"desc": "Inflige [DMG] à la cible.\nLes dégâts sont augmentés de ::value1::% si elle a encore de l'[Armor].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 50
						},
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onEval(a) {\n\tif( a.target.armor > 0 ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 0
					},
					"minDmg": 6,
					"maxDmg": 8,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Mutilation",
					"name": "Mutilation",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 5,
					"range": {
						"radius": 2,
						"angle": 160,
						"type": 1,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"isAttack": true,
						"specialAnim": "AttackWide",
						"defaultAction": true
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 3
					},
					"minDmg": 9,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Gash",
					"name": "Entaille",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 0
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Stab",
					"name": "Coup de poignard",
					"desc": "Inflige [DMG] à la cible.\n\n[Backstab] : ::value1::% de chance de coup critique supplémentaire.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 1,
						"vars": {
							"value1": 30
						},
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onEval(a) {\n\tif( a.backstab ) {\n\t\ta.criticalHitPercent += vars.value1;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 0
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Shot",
					"name": "Tir",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 1,
					"range": {
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"needDisengaged": true,
						"isAttack": true,
						"defaultAction": true,
						"extraFx": "prefabs/fx/fight/Attack/Attack_B.fx"
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 0
					},
					"minDmg": 6,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Punch",
					"name": "Coup de poing",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"useWithoutWeapon": true,
						"specialAnim": "Punch",
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 1
					},
					"minDmg": 3,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "DefensivePosture",
					"name": "Posture défensive",
					"desc": "L'unité gagne [Deflection]. Si elle est engagée, obtenez <apt>::value1::</apt>.",
					"mode": 4,
					"range": {},
					"props": {
						"specialAnim": "Taunt",
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						],
						"vars": {
							"value1": 1
						},
						"useWithoutWeapon": true,
						"defaultAction": true
					},
					"script": "function onSkill() {\n\tskill.unit.addStatus(Status.Deflection);\n\tif( skill.unit.isEngaged() ) {\n\t\tskill.unit.gainsActionPoint(vars.value1);\n\t}\n\tplay();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 7
					},
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "OpportunityStrategy",
					"name": "Opportunisme",
					"desc": "[DamageBonusPercent] des attaques d'opportunité augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						},
						"defaultAction": true,
						"strategyTier": 1,
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onSkillEval(a) {\n\tif( a.kind == Skill.OpportunityAttack) {\n\t\tfor( t in a.getTargets() ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 0
					},
					"iconeDone": true,
					"group": 4,
					"done": 2
				},
				{
					"id": "SupportedStrategy",
					"name": "Support",
					"desc": "Augmente le bonus apporté par [Supported] de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						},
						"tooltipStatus": [
							{
								"st": "Supported"
							}
						],
						"defaultAction": true,
						"strategyTier": 1
					},
					"script": "",
					"notes": "Implemented in code",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 0
					},
					"iconeDone": true,
					"group": 4,
					"done": 2
				},
				{
					"id": "SurroundedStrategy",
					"name": "Encerclement",
					"desc": "Augmente le malus provoqué par [Surrounded] de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						},
						"tooltipStatus": [
							{
								"st": "Surrounded"
							}
						],
						"defaultAction": true,
						"strategyTier": 1
					},
					"script": "",
					"notes": "Implemented in code",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 0
					},
					"iconeDone": true,
					"group": 4,
					"done": 2
				},
				{
					"id": "DomptingStrategy",
					"name": "Dressage",
					"desc": "[DamageBonusPercent] des animaux augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						},
						"strategyTier": 1
					},
					"script": "function onSkillEval(a) {\n\tif( skill.unit.isAnimal ) {\n\t\tfor( t in a.getTargets() ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 0
					},
					"iconeDone": true,
					"group": 4,
					"done": 2
				},
				{
					"id": "PrecisionStrategy",
					"name": "Recul",
					"desc": "[DamageBonusPercent] des compétences de Tir augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"unlockLevel": 1,
						"vars": {
							"value1": 20
						},
						"strategyTier": 1
					},
					"script": "function onSkillEval(a) {\n\tif( a.isPrecisionSkill()) {\n\t\tfor( t in a.getTargets() ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 0
					},
					"iconeDone": true,
					"group": 4,
					"done": 2
				},
				{
					"id": "StrategicRetreat",
					"name": "Retraite stratégique",
					"desc": "Battre en retraite donne -::value1::% de conséquences négatives.",
					"mode": 2,
					"range": {},
					"props": {
						"defaultAction": true,
						"strategyTier": 2,
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "Implemented in code",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 8
					},
					"group": 4,
					"done": 2
				},
				{
					"id": "Deploy",
					"name": "Déploiement",
					"desc": "Ajoute ::value1::% d’emplacements de déploiement supplémentaires au début de la bataille.",
					"mode": 2,
					"range": {},
					"props": {
						"defaultAction": true,
						"strategyTier": 2,
						"vars": {
							"value1": 20
						}
					},
					"script": "",
					"notes": "Implemented in code",
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 9
					},
					"done": 2
				},
				{
					"id": "PreserveTroups",
					"name": "Préserver les troupes",
					"desc": "Les personnages mourants n’ont pas de réduction de mouvement et ont ::value1::% de chance d’esquiver une attaque.",
					"mode": 2,
					"range": {},
					"props": {
						"defaultAction": true,
						"strategyTier": 2,
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "Implemented in code",
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 10
					},
					"done": 2
				},
				{
					"id": "Coordinate",
					"name": "Coordination",
					"desc": "Les attaques qui peuvent affecter les alliés ont ::value1::% de chances de ne pas les affecter.",
					"mode": 2,
					"range": {},
					"props": {
						"defaultAction": true,
						"strategyTier": 3,
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "Implemented in code",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 12
					},
					"group": 4,
					"done": 2
				},
				{
					"id": "Regroup",
					"name": "Regroupement",
					"desc": "Lors de la préparation d’une bataille, les points de placements alliés sont plus proches les uns des autres.",
					"mode": 2,
					"range": {},
					"props": {
						"defaultAction": true,
						"strategyTier": 3
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 11
					},
					"done": 2
				},
				{
					"id": "Repositioning",
					"name": "Repositionnement",
					"desc": "Chaque compagnon gagne la compétence <skill>SkillRepositioning</skill>.",
					"mode": 2,
					"range": {},
					"props": {
						"defaultAction": true,
						"strategyTier": 3,
						"flags": 256
					},
					"script": "",
					"notes": "Implemented in code",
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 13
					},
					"done": 2
				},
				{
					"id": "SkillRepositioning",
					"name": "Se repositionner",
					"desc": "Réinitialise le mouvement.\nCette unité ne peut plus utiliser de compétences ou d’actions de base.",
					"mode": 4,
					"range": {},
					"props": {
						"useWithoutWeapon": true
					},
					"script": "function onSkill() {\n\tskill.unit.addStatus(Status.Repositioning);\n\tskill.unit.reloadMovePoints();\n}\n\nfunction onEndTurn() {\n\tskill.unit.consumeStatus(Status.Repositioning);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 12
					},
					"done": 2
				},
				{
					"id": "Intervention",
					"name": "Intervention",
					"desc": "L'unité peut échanger sa place avec un allié adjacent engagé. L'unité devient engagée et effectue une attaque d’opportunité.",
					"mode": 0,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"apCost": 1,
						"needDisengaged": true,
						"cursor": "CursorHelp",
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onEval(a) {\n\tif( !a.target.isEngaged() || a.target.isAnimal || !a.target.canMove() ) {\n\t\tdontAllow();\n\t}\n}\n\nfunction onSkill() {\n\tvar target = skill.target;\n\tvar prevEngaged = target.engagedUnit;\n\ttarget.disengage(false);\n\n\tvar prevPos = target.getPosition();\n\tvar currentPos = skill.unit.getPosition();\n\tskill.unit.swapPositionWith(target, 0);\n\n\tskill.unit.engage(prevEngaged);\n\tskill.unit.opportunityAttack(prevEngaged, skill);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 18
					},
					"iconeDone": true,
					"group": 5,
					"done": 2
				},
				{
					"id": "Anticipation",
					"name": "Anticipation",
					"desc": "Quand l'unité se fait engager, ::value1::% de chances de ne pas se faire engager et d’effectuer une attaque d’opportunité vers l'attaquant.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "",
					"notes": "hard coded",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 17
					},
					"iconeDone": true,
					"group": 5,
					"done": 2
				},
				{
					"id": "DefensiveRiposte",
					"name": "Riposte défensive",
					"desc": "Lorsque l'unité se désengage, ::value1::% de chances que l’unité effectue une attaque d’opportunité à la place d’en subir une.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "",
					"notes": "hard coded",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 16
					},
					"iconeDone": true,
					"group": 5,
					"done": 2
				},
				{
					"id": "Swiftness",
					"name": "Rapidité",
					"desc": "L'unité a ::value1::% de chance d’esquiver les attaques à distance et les attaques de zone.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 40
						}
					},
					"script": "",
					"notes": "hard coded",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 17
					},
					"iconeDone": true,
					"group": 5,
					"done": 2
				},
				{
					"id": "LoneWolf",
					"name": "Loup Solitaire",
					"desc": "Tant qu'elle n’a pas d’unité alliée à ::value1:: mètres autour d’elle, l'unité gagne le statut [LoneWolf].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 5
						},
						"tooltipStatus": [
							{
								"st": "LoneWolf"
							}
						]
					},
					"script": "function onBeginAction() {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( getDistance(skill.unit, u) <= vars.value1 ) {\n\t\t\tskill.unit.consumeStatus(Status.LoneWolf);\n\t\t\treturn;\n\t\t}\n\t}\n\tskill.unit.addStatus(Status.LoneWolf);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 17
					},
					"iconeDone": true,
					"group": 5,
					"done": 2
				},
				{
					"id": "Unstoppable",
					"name": "Inarrêtable",
					"desc": "L'unité peut passer à travers toutes les unités.",
					"mode": 2,
					"range": {
						"flags": 1
					},
					"props": {},
					"script": "",
					"notes": "hard coded",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 17
					},
					"iconeDone": true,
					"group": 5,
					"done": 2
				},
				{
					"id": "WeaponSwapSword",
					"name": "Changement d'arme",
					"desc": "Permet d'équiper une deuxième épée et d'en changer pendant le combat.",
					"mode": 4,
					"range": {},
					"props": {
						"flags": 8,
						"defaultAction": false,
						"vars": {
							"allowed": false
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = skill.unit.canSwapWeapon();\n}\n\nfunction onEval(s) {\n\tif( !skill.unit.canSwapWeapon() ) dontAllow();\n}\n\nfunction onSkill() {\n\tskill.unit.swapWeapon();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 2,
						"y": 19
					},
					"iconeDone": true,
					"group": 6,
					"done": 2
				},
				{
					"id": "WeaponSwapMace",
					"name": "Changement d'arme",
					"desc": "Permet d'équiper une deuxième masse et d'en changer pendant le combat.",
					"mode": 4,
					"range": {},
					"props": {
						"flags": 8,
						"defaultAction": false,
						"vars": {
							"allowed": false
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = skill.unit.canSwapWeapon();\n}\n\nfunction onEval(s) {\n\tif( !skill.unit.canSwapWeapon() ) dontAllow();\n}\n\nfunction onSkill() {\n\tskill.unit.swapWeapon();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 19
					},
					"iconeDone": true,
					"group": 6,
					"done": 2
				},
				{
					"id": "WeaponSwapAxe",
					"name": "Changement d'arme",
					"desc": "Permet d'équiper une deuxième hache et d'en changer pendant le combat.",
					"mode": 4,
					"range": {},
					"props": {
						"flags": 8,
						"defaultAction": false,
						"vars": {
							"allowed": false
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = skill.unit.canSwapWeapon();\n}\n\nfunction onEval(s) {\n\tif( !skill.unit.canSwapWeapon() ) dontAllow();\n}\n\nfunction onSkill() {\n\tskill.unit.swapWeapon();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 19
					},
					"iconeDone": true,
					"group": 6,
					"done": 2
				},
				{
					"id": "WeaponSwapDagger",
					"name": "Changement d'arme",
					"desc": "Permet d'équiper une deuxième dague et d'en changer pendant le combat.",
					"mode": 4,
					"range": {},
					"props": {
						"flags": 8,
						"defaultAction": false,
						"vars": {
							"allowed": false
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = skill.unit.canSwapWeapon();\n}\n\nfunction onEval(s) {\n\tif( !skill.unit.canSwapWeapon() ) dontAllow();\n}\n\nfunction onSkill() {\n\tskill.unit.swapWeapon();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 19
					},
					"iconeDone": true,
					"group": 6,
					"done": 2
				},
				{
					"id": "WeaponSwapBow",
					"name": "Changement d'arme",
					"desc": "Permet d'équiper un deuxième arc et d'en changer pendant le combat.",
					"mode": 4,
					"range": {},
					"props": {
						"flags": 8,
						"defaultAction": false,
						"vars": {
							"allowed": false
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = skill.unit.canSwapWeapon();\n}\n\nfunction onEval(s) {\n\tif( !skill.unit.canSwapWeapon() ) dontAllow();\n}\n\nfunction onSkill() {\n\tskill.unit.swapWeapon();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 19
					},
					"iconeDone": true,
					"group": 6,
					"done": 2
				},
				{
					"id": "WeaponSwapPolearm",
					"name": "Changement d'arme",
					"desc": "Permet d'équiper une deuxième arme d'hast et d'en changer pendant le combat.",
					"mode": 4,
					"range": {},
					"props": {
						"flags": 8,
						"defaultAction": false,
						"vars": {
							"allowed": false
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = skill.unit.canSwapWeapon();\n}\n\nfunction onEval(s) {\n\tif( !skill.unit.canSwapWeapon() ) dontAllow();\n}\n\nfunction onSkill() {\n\tskill.unit.swapWeapon();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 19
					},
					"iconeDone": true,
					"group": 6,
					"done": 2
				},
				{
					"id": "SuppressFire",
					"name": "Tir de suppression",
					"desc": "Inflige [DMG] et applique [Slowdown] à toutes les unités dans la zone pendant ::value1:: round.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 6,
						"baseDistance": 24,
						"allowedTargets": 4
					},
					"props": {
						"dmgAttribute": 1,
						"tooltipStatus": [
							{
								"st": "Slowdown"
							}
						],
						"specialAnim": "AttackBellshot",
						"needDisengaged": true,
						"flags": 68,
						"vars": {
							"value1": 1
						},
						"apCost": 0,
						"feature": "Alazar1_Update",
						"oncePerFight": true,
						"castFx": "prefabs/fx/fight/UltiSkill/SupressFire.fx",
						"animFx": "prefabs/fx/fight/UltiSkill/UltiSkillAttack_B.fx"
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Slowdown, vars.value1, true);\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 12
					},
					"minDmg": 3,
					"group": 7,
					"done": 2
				},
				{
					"id": "nake",
					"name": "Condamnation",
					"desc": "Inflige [DMG] à la cible et lui applique [Condemn].",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"vars": {
							"value1": 2
						},
						"apCost": 0,
						"tooltipStatus": [
							{
								"st": "Condemn"
							}
						],
						"dmgAttribute": 0,
						"specialAnim": "UltiSkill",
						"feature": "Alazar1_Update",
						"oncePerFight": true,
						"useWithoutWeapon": true
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Condemn);\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 13
					},
					"minDmg": 7,
					"group": 7,
					"done": 2
				},
				{
					"id": "Exhorted",
					"name": "Exhortation",
					"desc": "L'unité et tous les alliés dans la zone gagnent [Zeal] pendant ::value1:: rounds.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 6,
						"allowedTargets": 2,
						"baseDistance": 0
					},
					"props": {
						"vars": {
							"value1": 2
						},
						"apCost": 0,
						"tooltipStatus": [
							{
								"st": "Zeal"
							}
						],
						"specialAnim": "UltiSkill",
						"useWithoutWeapon": true,
						"feature": "Alazar1_Update",
						"oncePerFight": true
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() )\n\t\tt.target.addStatus(Status.Zeal);\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 9
					},
					"group": 7,
					"done": 2
				},
				{
					"id": "TitanicRoar",
					"name": "Rugissement titanesque",
					"desc": "Repousse tous les ennemis dans la zone de ::value1:: mètres.\nTous les ennemis ainsi repoussés contre un allié subissent une attaque d'opportunité de celui-ci.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 4,
						"allowedTargets": 0,
						"baseDistance": 0
					},
					"props": {
						"vars": {
							"value1": 4
						},
						"specialAnim": "UltiSkill",
						"apCost": 0,
						"feature": "Alazar1_Update",
						"oncePerFight": true,
						"useWithoutWeapon": true
					},
					"script": "var arr = [];\n\nfunction onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n\tarr.push(a.target);\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}\n\nfunction onPostSkill() {\n\tfor( u in arr ) {\n\t\tfor( al in getAllies(skill.unit) ) {\n\t\t\tif( u.isMelee(al) ) {\n\t\t\t\tal.opportunityAttack(u, skill);\n\t\t\t}\n\t\t}\n\t}\n\tarr = [];\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 11
					},
					"group": 7,
					"done": 2
				},
				{
					"id": "LongTermePlan",
					"name": "Stratagème décisif",
					"desc": "Si cette unité est la première de son camp à être activée, elle se désengage et pourra être réactivée une nouvelle fois après tous ses autres alliés.",
					"mode": 4,
					"range": {},
					"props": {
						"apCost": 0,
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Replay"
							}
						],
						"oncePerFight": true,
						"useWithoutWeapon": true,
						"specialAnim": "UltiSkill"
					},
					"script": "function onSkill() {\n\tplay();\n}\n\nfunction onPostSkill(){\n\tvar isFirst = true;\n\tfor (u in getAllies(skill.unit, false))\n\t\tif (hasPlayed(u)){\n\t\t\tisFirst = false;\n\t\t\tbreak;\n\t\t}\n\tif (isFirst){\n\t\tskill.unit.disengage(false);\n\t\tskill.unit.addStatus(Status.Replay);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 14
					},
					"group": 7,
					"done": 2
				},
				{
					"id": "DeathLure",
					"name": "Trompe-la-mort",
					"desc": "L'unité gagne [Frenzy] pendant ::value1:: rounds.",
					"mode": 4,
					"range": {},
					"props": {
						"apCost": 0,
						"vars": {
							"value1": 3
						},
						"tooltipStatus": [
							{
								"st": "Frenzy"
							}
						],
						"specialAnim": "UltiSkill",
						"useWithoutWeapon": true,
						"feature": "Alazar1_Update",
						"oncePerFight": true
					},
					"script": "function onSkill() {\n\tplay();\n\tskill.unit.addStatus(Status.Frenzy, vars.value1, true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 7,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 10
					},
					"levels": [],
					"done": 2
				},
				{
					"id": "ClassSpecialization",
					"name": "Spécialisation de classe",
					"desc": "Permet de débloquer une compétence d'un niveau précédent.",
					"mode": 6,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"done": 1,
					"iconeDone": false,
					"group": 7,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 0,
						"y": 3
					}
				},
				{
					"id": "Bulwark",
					"name": "Rempart",
					"desc": "Chaque fois que cette unité s'engage, elle gagne [Deflection].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"engaged": false
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						]
					},
					"script": "function onBeginAction() {\n\tif( skill.level == 2 && vars.engaged && !skill.unit.isEngaged() ) {\n\t\tif( skill.unit.addStatus(Status.Fury) )\n\t\t\tspawnFx();\n\t}\n\tif( !skill.unit.isEngaged() ) {\n\t\tvars.engaged = false;\n\t}\n}\n\nfunction onSkillPlayed(s) {\n\tif( !vars.engaged && skill.unit.isEngaged() ) {\n\t\tvars.engaged = true;\n\t\tif( skill.unit.addStatus(Status.Deflection) )\n\t\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 5
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Fury"
									}
								]
							},
							"desc": "Chaque fois que cette unité s'engage, elle gagne [Deflection].\nChaque fois qu'elle se désengage, elle gagne [Fury]."
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "Counterattack",
					"name": "Contre-attaque",
					"desc": "Chaque fois que cette unité s'engage, elle gagne [Riposte].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"engaged": false,
							"value1": 1
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Riposte"
							}
						]
					},
					"script": "function onBeginAction() {\n\tif( skill.level == 2 && vars.engaged && !skill.unit.isEngaged() ) {\n\t\tif( skill.unit.addStatus(Status.Inspiration, vars.value1, true) )\n\t\t\tspawnFx();\n\t}\n\tif( !skill.unit.isEngaged() ) {\n\t\tvars.engaged = false;\n\t}\n}\n\nfunction onSkillPlayed(s) {\n\tif( !vars.engaged && skill.unit.isEngaged() ) {\n\t\tvars.engaged = true;\n\t\tif( skill.unit.addStatus(Status.Riposte) )\n\t\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 5
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Inspiration"
									}
								]
							},
							"desc": "Chaque fois que cette unité s'engage, elle gagne [Riposte].\nChaque fois qu'elle se désengage, elle gagne [Inspiration] pendant ::value1:: round."
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "Boldness",
					"name": "Hardiesse",
					"desc": "Tant que cette unité est sous l'effet d'un Bonus, ses attaques appliquent [Weakening] pendant ::value1:: round.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Weakening"
							}
						],
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDamageDealt(a) {\n\tfor( st in skill.unit.getAllStatus() ) {\n\t\tif( st.isBonus ) {\n\t\t\tif( !a.target.hasStatus(Status.Weakening) ) {\n\t\t\t\tspawnFx();\n\t\t\t}\n\t\t\tif( skill.level == 1 ) {\n\t\t\t\tif( a.target.addStatus(Status.Weakening, vars.value1, true) ) {\n\t\t\t\t\tspawnFx();\n\t\t\t\t}\n\t\t\t} else if ( skill.level == 2 ) {\n\t\t\t\tif( a.target.addStatusPersist(Status.Weakening, skill) ) {\n\t\t\t\t\tspawnFx();\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 2,
						"y": 8
					},
					"levels": [
						{
							"props": {},
							"desc": "Tant que cette unité est sous l'effet d'un Bonus, ses attaques appliquent [Weakening]."
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "DuellistInstinct",
					"name": "Instinct du duelliste",
					"desc": "Tant que cette unité est engagée, elle a [Brutality].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Brutality"
							}
						],
						"vars": {
							"value1": 30
						}
					},
					"script": "function onEval(a) {\n\tif( skill.level == 2 && skill.unit.isEngaged() ) {\n\t\ta.criticalHitDamageBonus += vars.value1;\n\t}\n}\n\nfunction onBeginAction() {\n\tif ( skill.unit.isEngaged() ) {\n\t\tif( skill.unit.addStatusPersist(Status.Brutality, skill) ) {\n\t\t\tspawnFx();\n\t\t}\n\t} else skill.unit.cancelStatus(Status.Brutality, skill);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 5
					},
					"levels": [
						{
							"props": {},
							"desc": "Tant que cette unité est engagée, elle a [Brutality] et ses [CritHitDamageBonusPercent] sont augmentés de ::value1::%."
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "Encouragement",
					"name": "Encouragement",
					"desc": "L'unité et tous les alliés dans la zone  gagnent [Protection] pendant ::value1:: rounds.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 6,
						"allowedTargets": 2,
						"baseDistance": 0
					},
					"props": {
						"vars": {
							"value1": 2
						},
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Protection"
							}
						],
						"specialAnim": "Taunt",
						"useWithoutWeapon": true,
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryBlue.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Protection, vars.value1, true);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"rangeRadius": 10,
								"vars": {
									"value1": 3
								}
							}
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "DestabilisingStrike",
					"name": "Frappe déstabilisante",
					"desc": "Inflige [DMG] à la cible et lui applique [Destabilization] pendant ::value1:: rounds.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						},
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Destabilization"
							}
						],
						"dmgAttribute": 0,
						"specialAnim": "Kick"
					},
					"script": "function onEval(a) {\n\tif( skill.level == 2 && (a.target.guard == 0 || a.target.armor == 0)) {\n\t\ta.criticalHitPercent = 100;\n\t}\n}\n\nfunction onDamage(a) {\n\ta.target.addStatus(Status.Destabilization, vars.value1, true);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 7
					},
					"minDmg": 7,
					"maxDmg": 9,
					"levels": [
						{
							"props": {},
							"desc": "Inflige [DMG] à la cible et lui applique [Destabilization] pendant ::value1:: rounds.\nCoup critique assuré contre les ennemis sans [Guard]."
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "Slashes",
					"name": "Lacérations",
					"desc": "Inflige ::value1:: fois [DMG] à toutes les unités dans la zone.\nUtilisable après ::value2:: attaques.\n\nAttaques effectuées : ::value3::/::value2::",
					"mode": 5,
					"range": {
						"radius": 2,
						"angle": 160,
						"type": 1,
						"allowedTargets": 5
					},
					"props": {
						"vars": {
							"allowed": false,
							"value1": 2,
							"value2": 2,
							"value3": 0
						},
						"dmgAttribute": 0,
						"isHeroic": true,
						"apCost": 2,
						"value": 0
					},
					"script": "function onSkillPlayed(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( t.dmg > 0 && s.kind != skill.kind ) {\n\t\t\tif( !vars.allowed ) {\n\t\t\t\tvars.value3++;\n\t\t\t\tif( vars.value3 >= vars.value2 ) {\n\t\t\t\t\tvars.allowed = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction onEval(t) {\n\tt.attackCount = vars.value1;\n}\n\nfunction onSkill() {\n\tfor( i in 0...vars.value1 ) {\n\t\tattack({ anim : \"AttackWide\"+(i%2+1), fast : i < vars.value1-1 });\n\t}\n}\n\nfunction onPostSkill() {\n\tvars.allowed = false;\n\tvars.value3 = 0;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 2
					},
					"minDmg": 7,
					"levels": [
						{
							"props": {
								"vars": {
									"value2": 1
								}
							}
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "Estocade",
					"name": "Estocade",
					"desc": "Inflige [DMG] à la cible et gagne [Riposte].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Riposte"
							}
						],
						"isHeroic": true,
						"apCost": 1,
						"vars": {
							"value1": 50
						},
						"specialAnim": "AttackPower"
					},
					"script": "function onEval(a) {\n\tif( skill.level == 2 && skill.unit.hasStatus(Status.Riposte) ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}\n\nfunction onDamage(a) {\n\tskill.unit.addStatus(Status.Riposte);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 2
					},
					"minDmg": 7,
					"maxDmg": 9,
					"levels": [
						{
							"props": {},
							"desc": "Inflige [DMG] à la cible et gagne [Riposte].\nSi cette unité a déjà [Riposte], les dégâts sont augmentés de ::value1::%."
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "LastStand",
					"name": "Dernier carré",
					"desc": "Tant que cette unité n'a plus d'[Armor], elle a [Brutality].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Brutality"
							}
						],
						"vars": {
							"value1": 50
						}
					},
					"script": "function onBeginAction() {\n\tif( skill.unit.armor == 0 ) {\n\t\tif( skill.unit.addStatusPersist(Status.Brutality, skill) )\n\t\t\tspawnFx();\n\t}\n\tif( skill.level >= 2 && skill.unit.armor <= (skill.unit.stats.armor*vars.value1)/100) {\n\t\tif( skill.unit.addStatusPersist(Status.Brutality, skill) )\n\t\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 2
					},
					"levels": [
						{
							"props": {},
							"desc": "Tant que cette unité a ::value1::% d'[Armor] ou moins, elle a [Brutality]."
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "CombatGrip",
					"name": "Prise de combat",
					"desc": "Applique [Disarm] à la cible pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Disarm"
							}
						],
						"vars": {
							"value1": 1
						},
						"specialAnim": "AttackPower"
					},
					"script": "function onEval(a) {\n\tif( a.target.statusResist(Status.Disarm) ) {\n\t\tdontAllow();\n\t}\n}\n\nfunction onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() ) {\n\t\tif( skill.level >= 2 && t.target.hasStatus(Status.Disarm) ) {\n\t\t\tt.target.addStatus(Status.Vulnerability);\n\t\t}\n\t\tt.target.addStatus(Status.Disarm, vars.value1, true);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 2
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Vulnerability"
									}
								]
							},
							"desc": "Applique [Disarm] à la cible pendant ::value1:: round.\nSi la cible est déjà désarmée, lui applique [Vulnerability]."
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "HardTraining",
					"name": "Entraînement à la dure",
					"desc": "Cette unité ne peut pas subir de [Poison], [Bleeding] ou [Burning].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 2,
							"poison": false,
							"burning": false,
							"bleeding": false
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Poison"
							},
							{
								"st": "Bleeding"
							},
							{
								"st": "Burning"
							}
						]
					},
					"script": "function onBeginRound() {\n\tvars.poison = false;\n\tvars.burning = false;\n\tvars.bleeding = false;\n}\n\nfunction onStatus(s) {\n\tif( s.unit == skill.unit && s.kind == Status.Poison ) {\n\t\tspawnFx();\n\t\ts.cancel();\n\t\tif( skill.level >= 2 && !vars.poison) {\n\t\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n\t\t\tvars.poison = true;\n\t\t}\n\t}\n\tif( s.unit == skill.unit && s.kind == Status.Bleeding ) {\n\t\tspawnFx();\n\t\ts.cancel();\n\t\tif( skill.level >= 2 && !vars.bleeding) {\n\t\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n\t\t\tvars.bleeding = true;\n\t\t}\n\t}\n\tif( s.unit == skill.unit && s.kind == Status.Burning ) {\n\t\tspawnFx();\n\t\ts.cancel();\n\t\tif( skill.level >= 2 && !vars.burning) {\n\t\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n\t\t\tvars.burning = true;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 2
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "AnimalMarkedBonus"
									}
								]
							},
							"desc": "Cette unité ne peut pas subir de [Poison], [Bleeding] ou [Burning].\nQuand elle est censée en subir, elle gagne ::value1:: [AnimalMarkedBonus] à la place (une fois par effet chaque Round)."
						}
					],
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "GreatOpportunist",
					"name": "Grand opportuniste",
					"desc": "Dégâts des attaques d'opportunité infligés augmentés de ::value1::%.\nDégâts des attaques d'opportunité subis réduits de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						},
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						],
						"feature": "Alazar1_Update",
						"globalEvents": true
					},
					"script": "function onSkillEval(a) {\n\tif( a.isOpportunityAttack() ) {\n\t\tif( a.unit == skill.unit ) {\n\t\t\tfor( t in a.getTargets() ) {\n\t\t\t\tt.baseDamageBonus += vars.value1;\n\t\t\t}\n\t\t} else {\n\t\t\tfor( t in a.getTargets() ) {\n\t\t\t\tif( t.target == skill.unit ) {\n\t\t\t\t\tt.baseDamageBonus -= vars.value1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 9,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 15
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 50
								}
							}
						}
					],
					"done": 1
				},
				{
					"id": "EternalGloryStrike",
					"name": "Frappe de la gloire éternelle",
					"desc": "Inflige [DMG] à la cible.\n\n[DeadlyBlow] : obtenez <apt>::value1::</apt>.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						},
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"fxSuffix": 0,
						"specialAnim": "AttackPower"
					},
					"script": "function onPostSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tif( !t.target.isAlive() ) {\n\t\t\tskill.unit.gainsActionPoint(vars.value1);\n\t\t}\n\t}\n}",
					"notes": "",
					"minDmg": 8,
					"maxDmg": 10,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 15
					},
					"iconeDone": true,
					"group": 9,
					"done": 2
				},
				{
					"id": "EvolandStrike",
					"name": "Triple Attaque",
					"desc": "Inflige ::value1:: fois [DMG] à la cible cible.\nLa troisième frappe repousse l'ennemi de ::value2:: mètres.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 3,
							"value2": 3,
							"value3": false,
							"value4": 3
						},
						"defaultAction": true,
						"isAttack": true
					},
					"script": "function onSkill() {\n\tattack({ anim : \"AttackWide2\", fast : true });\n\tattack({ anim : \"AttackWide1\", fast : false });\n\tvars.value3 = true;\n\tattack({ anim : \"AttackPower\", fast : true });\n\tvars.value3 = false;\n}\n\nfunction onHit(a) {\n\tif(vars.value3)\n\t\ta.target.pushback({ unit : a.unit }, getPushback(a));\n}\n\nfunction getPushback( a ) {\n\treturn vars.value2;\n}",
					"notes": "",
					"iconeDone": true,
					"group": 9,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 18
					},
					"minDmg": 2,
					"maxDmg": 4,
					"done": 2
				},
				{
					"id": "ReinforcedArrows",
					"name": "Flèches renforcées",
					"desc": "Chaque fois que cette unité inflige un coup critique, elle applique [Bleeding].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"vars": {
							"value1": 35
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( a.isCritical ) {\n\t\tif( a.target.addStatus(Status.Bleeding) )\n\t\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"levels": [
						{
							"props": {
								"attributes": [
									{
										"kind": "CritHitDamageBonusPercent",
										"value": 35
									}
								]
							},
							"desc": "Chaque fois que cette unité inflige un coup critique, elle applique [Bleeding].\n[CritHitDamageBonusPercent] augmentés de ::value1::%."
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "Precision",
					"name": "Précision",
					"desc": "Toutes les ::value1:: attaques, applique [Vulnerability].\n\nAttaques effectuées : ::value2::",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 2,
							"value2": 0,
							"engaged": false
						},
						"tooltipStatus": [
							{
								"st": "Vulnerability"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif( vars.value2 < vars.value1 ) {\n\t\tvars.value2++;\n\t}\n\tif( vars.value2 >= vars.value1 ) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Vulnerability);\n\t\tvars.value2 = 0;\n\t\tif( skill.level == 2 ) {\n\t\t\tskill.unit.addStatus(Status.Fury);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 5
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Fury"
									}
								]
							},
							"desc": "Toutes les ::value1:: attaques, applique [Vulnerability] et gagne [Fury].\n\nAttaques effectuées : ::value2::"
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "BeastMaster",
					"name": "Maître des bêtes",
					"desc": "Peut contrôler les animaux au combat.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 5
						},
						"learnTrait": "Tamer"
					},
					"script": "function onEndTurn() {\n\tif( skill.level == 2 ) {\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tif ( u.isAnimal ) {\n\t\t\t\tu.gainsHealth(ceil(u.stats.health*vars.value1/100));\n\t\t\t\tspawnFx();\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 5
					},
					"levels": [
						{
							"props": {},
							"desc": "Peut contrôler les animaux au combat.\nSoigne ::value1::% de la [Health] maximum des animaux alliés à la fin de son tour."
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "Subtlety",
					"name": "Finesse",
					"desc": "Si cette unité termine son tour non-engagée, elle gagne [Deflection].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						]
					},
					"script": "function onEndTurn() {\n\tif( !skill.unit.isEngaged() ) {\n\t\tif( skill.unit.addStatus(Status.Deflection) )\n\t\t\tspawnFx();\n\t\tif( skill.level == 2 ) {\n\t\t\tif( skill.unit.addStatus(Status.Deftness) )\n\t\t\t\tspawnFx();\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 7
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Deftness"
									}
								]
							},
							"desc": "Si cette unité termine son tour non-engagée, elle gagne [Deflection] et [Deftness]."
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "Barrage",
					"name": "Barrage",
					"desc": "Cible une zone.\nEffectue une attaque d'opportunité contre les ::value1:: premiers ennemis qui traversent la zone.",
					"mode": 5,
					"range": {
						"type": 1,
						"angle": 60,
						"radius": 9,
						"allowedTargets": 0
					},
					"props": {
						"globalEvents": true,
						"needDisengaged": true,
						"vars": {
							"value1": 3,
							"value2": 0
						},
						"isHeroic": true,
						"apCost": 2,
						"tooltipStatus": [
							{
								"st": "Targeting"
							},
							{
								"st": "OpportunityAttack"
							}
						],
						"reactionSkill": true,
						"castFx": "prefabs/fx/fight/Attack/Attack_B.fx",
						"extraFx": "prefabs/fx/fight/Attack/AttackPower_B.fx"
					},
					"script": "function onSkill() {\n\tif( waitNextTurn() ) {\n\t\tvars.value2 = 0;\n\t\tcreateZone();\n\t\treturn;\n\t}\n\tcancelZone();\n}\n\nfunction onMoveEvent(m) {\n\tskill.unit.cast(Skill.OpportunityAttack, m.unit, skill);\n\tvars.value2++ ;\n\tif( vars.value2 == vars.value1 ) {\n\t\tcancelZone();\n\t}\n}\n\nfunction onMove(m) {\n\tif( m.unit.side == skill.unit.side ) return;\n\tvar z = getZone();\n\tif( z == null ) return;\n\tm.addZoneEvent(z, onMoveEvent);\n}",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 1
					},
					"notes": "",
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 4
								}
							}
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "RecoilShot",
					"name": "Tir de recul",
					"desc": "Inflige [DMG] à la cible, la repousse de ::value1:: mètres et lui applique [Slowdown] pendant ::value2:: rounds.",
					"mode": 1,
					"range": {
						"minDistance": 1,
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Pushback"
							},
							{
								"st": "Slowdown"
							}
						],
						"isHeroic": true,
						"apCost": 1,
						"vars": {
							"value1": 2,
							"value2": 1
						},
						"extraFx": "prefabs/fx/fight/Attack/AttackPower_B.fx"
					},
					"script": "function onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\nfunction onDamage(a) {\n\ta.target.addStatus(Status.Slowdown, vars.value2, true);\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 2
					},
					"minDmg": 7,
					"maxDmg": 10,
					"levels": [
						{
							"props": {
								"minDmg": 8,
								"maxDmg": 12,
								"vars": {
									"value1": 3,
									"value2": 2
								}
							}
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "ATTACK",
					"name": "ATTAQUE !",
					"desc": "Tous les animaux alliés adjacents à la cible l'attaquent avec une attaque d'opportunité.",
					"mode": 0,
					"range": {
						"baseDistance": 12
					},
					"props": {
						"isHeroic": true,
						"apCost": 1,
						"vars": {
							"value1": 2,
							"value2": 1
						},
						"specialAnim": "Taunt",
						"useWithoutWeapon": true,
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() ) {\n\t\tfor(u in getAllies(skill.unit) ) {\n\t\t\tif( t.target.isAlive() && u.isAnimal && u.isMelee(t.target) ) {\n\t\t\t\tif( skill.level == 2 ) {\n\t\t\t\t\tu.addStatus(Status.Fury);\n\t\t\t\t}\n\t\t\t\tu.opportunityAttack(t.target, skill);\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 2
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Fury"
									}
								]
							},
							"desc": "Tous les animaux alliés adjacents à la cible gagnent [Fury] et l'attaquent avec une attaque d'opportunité."
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "AimedShot",
					"name": "Tir visé",
					"desc": "Inflige [DMG] à la cible. Les dégâts sont augmentés de ::value1::% pour chaque mètre de distance entre la cible et cette unité.",
					"mode": 1,
					"range": {
						"baseDistance": 8
					},
					"props": {
						"dmgAttribute": 1,
						"needDisengaged": true,
						"isHeroic": true,
						"apCost": 2,
						"vars": {
							"value1": 5
						},
						"extraFx": "prefabs/fx/fight/Attack/AttackPower_B.fx"
					},
					"script": "function onEval(a) {\n\tvar dist = round(getDistance(a.target, skill.unit) );\n\ta.baseDamageBonus += ceil(vars.value1*dist);\n\tif( skill.level == 2 ) {\n\t\ta.criticalHitPercent += ceil(vars.value1*dist);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 8
					},
					"minDmg": 7,
					"levels": [
						{
							"props": {},
							"desc": "Inflige [DMG] à la cible. Les dégâts et les chances de coup critique sont augmentés de ::value1::% pour chaque mètre de distance entre la cible et cette unité."
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "TrainingArrow",
					"name": "Flèche de dressage",
					"desc": "Applique [Fury] à l'animal ciblé.",
					"mode": 1,
					"range": {
						"baseDistance": 9,
						"allowedTargets": 1
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						],
						"vars": {
							"allowed": false
						},
						"apCost": 0
					},
					"script": "function onBeginAction() {\n\tvars.allowed = false;\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isAnimal ) {\n\t\t\tvars.allowed = true;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction onEval(a) {\n\tif( !a.target.isAnimal ) {\n\t\tdontAllow();\n\t}\n}\n\nfunction onPostSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Fury);\n\t\tif( skill.level >= 2 ) {\n\t\t\tt.target.addStatus(Status.Riposte);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 2
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Riposte"
									}
								]
							},
							"desc": "Applique [Fury] et [Riposte] à l'animal ciblé."
						}
					],
					"minDmg": 0,
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "ThrillOfTheHunt",
					"name": "Frisson de la chasse",
					"desc": "Chaque attaque effectuée à plus de ::value1:: mètres de distance confère ::value2:: [AnimalMarkedBonus].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 8,
							"value2": 1
						},
						"tooltipStatus": [
							{
								"st": "AnimalMarkedBonus"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tvar d = getDistance(skill.unit, a.target);\n\tif( d >= vars.value1 ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value2);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 2
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 6,
									"value2": 2
								}
							}
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "AnimalConnection",
					"name": "Connexion animale",
					"desc": "Au début du combat, acquiert ::value1:: compétence passive des animaux alliés.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1,
							"init": false
						},
						"globalEvents": true
					},
					"script": "function onBeginBattle() {\n\tif (vars.init) return;\n\tif (!vars.init) vars.init = true;\n\tvar allPassive = [];\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif ( u.isAnimal ) {\n\t\t\tvar skills = u.getPassiveSkills();\n\t\t\tfor ( sk in skills ) {\n\t\t\t\tif (!allPassive.contains(sk) && !skill.unit.getPassiveSkills().contains(sk))\n\t\t\t\t\tallPassive.push(sk);\n\t\t\t}\n\t\t}\n\t}\n\tif (allPassive.length == 0) return;\n\tvar nb = 0;\n\tvar i = 0;\n\twhile (i <= allPassive.length && nb < vars.value1 ) {\n\t\tvar sk = allPassive[randInt(0, allPassive.length-1)];\n\t\tif ( skill.unit.addTemporarySkill(sk) ) {\n\t\t\tnb++;\n\t\t}\n\t\tallPassive.remove(sk);\n\t\ti++;\n\t}\n\tif ( nb > 0 ) {\n\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 2
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 2
								}
							}
						}
					],
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "HuntingDownEasyprey",
					"name": "Traque de proies faciles",
					"desc": "Dégâts augmentés de ::value1::% contre les cibles n'étant adjacentes à aucune autre unité.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 15
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onSkillEval(s) {\n\tfor(t in s.getTargets()) {\n\t\tvar hasAdjacent = false;\n\t\tfor(u in getUnits()) {\n\t\t\tif(t.target.isMelee(u)) {\n\t\t\t\thasAdjacent = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!hasAdjacent)\n\t\t\tt.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 10,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 14
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 30
								}
							}
						}
					],
					"done": 2
				},
				{
					"id": "NarsesShot",
					"name": "Tir de Narsès",
					"desc": "Inflige [DMG] à la cible.\nSi [HorounMark] est appliqué sur la cible, consomme le statut.\nSinon, applique [NarsesMark].",
					"mode": 1,
					"range": {
						"baseDistance": 9
					},
					"props": {
						"isAttack": true,
						"defaultAction": true,
						"dmgAttribute": 1,
						"tooltipStatus": [
							{
								"st": "HorounMark"
							},
							{
								"st": "NarsesMark"
							}
						],
						"vars": {
							"value1": 2
						},
						"fxSuffix": 0,
						"needDisengaged": true
					},
					"script": "function onDamage(a) {\n\tif( a.target.hasStatus(Status.HorounMark) ) {\n\t\ta.target.consumeStatus(Status.HorounMark);\n\t\tskill.unit.gainsActionPoint(vars.value1);\n\t}\n\telse\n\t\ta.target.addStatus(Status.NarsesMark);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 6
					},
					"minDmg": 6,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 10,
					"done": 2
				},
				{
					"id": "PoisonedWeapon",
					"name": "Arme empoisonnée",
					"desc": "Chaque fois que cette unité attaque dans le dos, elle applique ::value1:: [Poison]s.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"vars": {
							"value1": 2
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( a.backstab ) {\n\t\ta.target.addStatus(Status.Poison, vars.value1);\n\t\tif( skill.level == 2 ) {\n\t\t\tfor( u in getFoes(skill.unit) ) {\n\t\t\t\tif( u.isMelee(a.target) ) {\n\t\t\t\t\tspawnFx();\n\t\t\t\t\tu.addStatus(Status.Poison, vars.value1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 6
					},
					"levels": [
						{
							"props": {},
							"desc": "Chaque fois que cette unité attaque dans le dos, elle applique ::value1:: [Poison]s.\nLe poison appliqué est propagé aux ennemis adjacents à la cible.\n"
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "KnifeThrow",
					"name": "Lancer réflexe",
					"desc": "Après avoir utilisé une compétence, inflige [DMG] à l'ennemi le plus proche dans un rayon de ::value1:: mètres.",
					"mode": 2,
					"range": {
						"baseDistance": 4
					},
					"props": {
						"dmgAttribute": 1,
						"vars": {
							"value1": 4
						},
						"specialAnim": "Throw",
						"preventEngage": true,
						"flags": 64
					},
					"script": "function onSkillPlayed(s) {\n\tvar minD : Float = vars.value1;\n\tvar minFoe = null;\n\tif(s.kind == Skill.KnockOut)\n\t\treturn;\n\tfor( u in getFoes(skill.unit) ) {\n\t\tvar d = getDistance(skill.unit, u);\n\t\tif( d < minD ) {\n\t\t\tminD = d;\n\t\t\tminFoe = u;\n\t\t}\n\t}\n\tif (minFoe != null) {\n\t\t//play(); // made the animation attack play twice\n\t\tspawnFx();\n\t\tattackTarget(minFoe);\n\t\tif ( skill.level == 2 ) {\n\t\t\tskill.unit.movePoints = skill.unit.getMaxMovePoints();\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 5
					},
					"minDmg": 2,
					"levels": [
						{
							"props": {},
							"desc": "Après avoir utilisé une compétence, inflige [DMG] à l'ennemi le plus proche dans un rayon de ::value1:: mètres puis réinitialise le [Movement]."
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "DeadlyContract",
					"name": "Contrat mortel",
					"desc": "Au début de chaque round, applique [Fragility] à l'ennemi le plus proche pendant ::value1:: round.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Fragility"
							}
						]
					},
					"script": "function onBeginRound() {\n\tvar array = [];\n\tfor( t in getFoes(skill.unit) ) {\n\t\tvar d = getDistance(skill.unit, t);\n\t\tarray.push({ dist : d, target: t });\n\t}\n\tarray.sort(function (u1, u2) {\n\t\tif (u1.dist < u2.dist) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (u2.dist < u1.dist) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\tvar nb = 1;\n\tif( skill.level == 2 ) {\n\t\tnb = 2;\n\t}\n\tnb = min(array.length, nb);\n\tfor( i in 0...nb ) {\n\t\tspawnFx();\n\t\tarray[i].target.addStatus(Status.Fragility, vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 5
					},
					"levels": [
						{
							"props": {},
							"desc": "Au début de chaque round, applique [Fragility] aux deux ennemis les plus proches pendant ::value1:: round."
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "Ordeal",
					"name": "Calvaire",
					"desc": "Chaque fois que cette unité attaque une unité empoisonnée, qui saigne ou qui brûle, elle applique également ::value1:: [Fever].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fever"
							}
						],
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( a.target.hasStatus(Status.Poison) || a.target.hasStatus(Status.Bleeding) || a.target.hasStatus(Status.Burning)) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Fever, vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 8
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 2
								}
							}
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "PoisonFlask",
					"name": "Fiole de poison",
					"desc": "Applique ::value1:: [Poison]s à toutes les unités dans la zone.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 4,
						"baseDistance": 6
					},
					"props": {
						"isHeroic": true,
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"apCost": 1,
						"specialAnim": "ThrowLeftGrenade",
						"vars": {
							"value1": 4
						},
						"useWithoutWeapon": true,
						"castFx": "prefabs/fx/fight/Explosion/PoisonBomb/PoisonBomb.fx",
						"flags": 64,
						"needDisengaged": true,
						"throwModel": "chars/Weapons/LeftHand_IncendiaryFlask.fbx"
					},
					"script": "function onSkill() {\n\tplayAttack();\n\tfor( t in skill.getTargets() ) {\n\t\tif( skill.level == 2 && t.target.hasStatus(Status.Poison) ) {\n\t\t\tt.target.addStatus(Status.Vulnerability);\n\t\t}\n\t\tt.target.addStatus(Status.Poison, vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 1
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Vulnerability"
									}
								]
							},
							"desc": "Applique ::value1:: [Poison]s à toutes les unités dans la zone.\nApplique [Vulnerability] à celles déjà empoisonnées."
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "Frenzy",
					"name": "Frénésie",
					"desc": "Inflige [DMG] à la cible.\n\n[Backstab] : Effectue ::value1:: attaques supplémentaires.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 1,
						"vars": {
							"value1": 2,
							"value2": 1
						},
						"isHeroic": true,
						"apCost": 2,
						"extraFx": "prefabs/fx/fight/Attack/AttackPower_D.fx"
					},
					"script": "function onSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tfor( i in 0...t.attackCount ) {\n\t\t\tattack({ anim : i == t.attackCount - 1 ? null : \"AttackFast\"+(i+1), fast : i < t.attackCount - 1 });\n\t\t}\n\t}\n}\n\nfunction onEval(t) {\n\tvar count = vars.value2;\n\tif( t.backstab ) {\n\t\tcount += vars.value1;\n\t}\n\tt.attackCount = count;\n}\n\nfunction onPostSkill() {\n\tif( skill.level >= 2 && skill.hasTarget() && !skill.target.isAlive() ) {\n\t\tallowReplay();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 2
					},
					"minDmg": 3.5,
					"maxDmg": 4.5,
					"levels": [
						{
							"props": {},
							"desc": "Inflige [DMG] à la cible.\n\n[Backstab] : Effectue ::value1:: attaques supplémentaires.\n\n[DeadlyBlow] : Peut réutiliser cette compétence ce tour."
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "SmokeScreen",
					"name": "Écran de fumée",
					"desc": "Force les ennemis engagés dans la zone à se désengager. Ils subissent une attaque d'opportunité de leur adversaire.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 4,
						"allowedTargets": 0,
						"baseDistance": 6
					},
					"props": {
						"isHeroic": true,
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						],
						"needDisengaged": true,
						"apCost": 1,
						"specialAnim": "ThrowLeftGrenade",
						"vars": {
							"value1": 2
						},
						"useWithoutWeapon": true,
						"castFx": "prefabs/fx/fight/Explosion/SmokeBomb/SmokeBomb.fx",
						"flags": 64,
						"throwModel": "chars/Weapons/LeftHand_BlindingPowder.fbx"
					},
					"script": "function onSkill() {\n\tplayAttack();\n\tfor( t in skill.getTargets() ) {\n\t\tif( checkReinforce(t) ) {\n\t\t\tt.target.disengage(true);\n\t\t} else if( skill.level == 2 ) {\n\t\t\tt.target.pushback({ unit : skill.unit }, getPushback(t));\n\t\t}\n\t}\n}\n\nfunction getPushback( a ) {\n\tif( skill.level == 2 ) {\n\t\treturn vars.value1;\n\t}\n\treturn 0;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 0
					},
					"levels": [
						{
							"props": {
								"pushbackPreview": 2
							},
							"desc": "Force les ennemis engagés dans la zone à se désengager. Ils subissent une attaque d'opportunité de leur adversaire.\nLes ennemis n'étant pas engagés sont repoussés de ::value1:: mètres."
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "BetweenTheEyes",
					"name": "Entre les deux yeux",
					"desc": "Inflige [DMG] et applique [Bleeding]. Si la cible saigne déjà, les dégâts sont doublés.",
					"mode": 1,
					"range": {
						"baseDistance": 6
					},
					"props": {
						"apCost": 1,
						"specialAnim": "Throw",
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"vars": {
							"value1": 100,
							"value2": 30
						},
						"dmgAttribute": 1,
						"needDisengaged": true
					},
					"script": "function onEval(a) {\n\tif( a.target.hasStatus(Status.Bleeding) ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n\tif( skill.level == 2 ) {\n\t\ta.criticalHitDamageBonus += vars.value2;\n\t}\n}\n\nfunction onHit(a) {\n\ta.target.addStatus(Status.Bleeding);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 8
					},
					"minDmg": 4,
					"maxDmg": 6,
					"levels": [
						{
							"props": {},
							"desc": "Inflige [DMG] et applique [Bleeding]. Si la cible saigne déjà, les dégâts sont doublés.\nLes [CritHitDamageBonusPercent] de l'attaque sont augmentés de ::value2::%."
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "ExplosiveGaz",
					"name": "Gaz explosif",
					"desc": "Double les [Poison]s de toutes les unités dans la zone.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 4,
						"baseDistance": 6
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Poison"
							},
							{
								"st": "Targeting"
							}
						],
						"specialAnim": "ThrowLeftGrenade",
						"apCost": 2,
						"useWithoutWeapon": true,
						"castFx": "prefabs/fx/fight/Explosion/ExplosiveGaz/ExplosiveGaz.fx",
						"flags": 64,
						"needDisengaged": true,
						"throwModel": "chars/Weapons/LeftHand_IncendiaryFlask.fbx"
					},
					"script": "function onSkill() {\n\tplayAttack();\n\tfor( t in skill.getTargets() ) {\n\t\tfor( s in t.target.getAllStatus() ) {\n\t\t\tif( s.kind == Status.Poison ) {\n\t\t\t\tt.target.addStatus(Status.Poison, s.count);\n\t\t\t}\n\t\t}\n\t}\n\tif( skill.level >= 2 ) {\n\t\tcreateSkillZone(Skill.PoisonZone);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 2
					},
					"levels": [
						{
							"props": {},
							"desc": "Double les [Poison] de toutes les unités dans la zone.\nPuis, laisse une zone de poison."
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 1
				},
				{
					"id": "Withdrawal",
					"name": "Repli",
					"desc": "À la fin de son tour, se désengage.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"chances": 30
						}
					},
					"script": "function onEndTurn() {\n\tif( skill.unit.isEngaged() ) {\n\t\tif( skill.level >= 2 ) {\n\t\t\tskill.unit.addStatus(Status.Riposte);\n\t\t}\n\t\tspawnFx();\n\t\tskill.unit.disengage(false);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 2
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Riposte"
									}
								]
							},
							"desc": "À la fin de son tour, se désengage. Si cette unité était engagée, elle gagne [Riposte]."
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "CheapShot",
					"name": "Coup bas",
					"desc": "Applique [Blind] à tous les ennemis dans la zone.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 0,
						"baseDistance": 0
					},
					"props": {
						"useWithoutWeapon": true,
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Blind"
							}
						],
						"specialAnim": "ThrowGround",
						"castFx": "prefabs/fx/fight/Explosion/FlashBang.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Blind);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"type": 0,
								"radius": 2,
								"allowedTargets": 0,
								"baseDistance": 0,
								"rangeRadius": 4
							}
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "CoolBlood",
					"name": "Sang-froid",
					"desc": "[DamageBonusPercent] des attaques dans le dos augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 20
						}
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( t.backstab ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 35
								}
							}
						}
					],
					"iconeDone": true,
					"group": 11,
					"done": 2
				},
				{
					"id": "LightningCharge",
					"name": "Électricité statique",
					"desc": "Inflige [DMG] à la cible puis gagne [Electrified].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "Electrified"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif ( a.skillKind != skill.kind || a.unit != skill.unit ) return;\n\ta.unit.addStatus(Status.Electrified);\n}",
					"notes": "FX d'éclair needed",
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 5,
						"y": 0
					},
					"done": 2,
					"minDmg": 5
				},
				{
					"id": "TeamSpirit",
					"name": "Esprit d'équipe",
					"desc": "Tant que cette unité est adjacente à un allié, elle a [Brutality].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Brutality"
							}
						]
					},
					"script": "function onBeginAction() {\n\tvar allies = getAllies(skill.unit);\n\tvar adjacents = [];\n\tfor( u in allies ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tadjacents.push(u);\n\t\t}\n\t}\n\n\tif ( adjacents.length > 0 ) {\n\t\tif( skill.unit.addStatusPersist(Status.Brutality, skill) )\n\t\t\tspawnFx();\n\t} else {\n\t\tskill.unit.cancelStatus(Status.Brutality, skill);\n\t}\n\n\tif ( skill.level == 2 ) {\n\t\tvar alliesWithout = [];\n\t\tvar alliesWithSkill = [skill.unit];\n\t\t@sync for ( a in allies ) {\n\t\t\tif ( a.hasSkill(Skill.TeamSpirit, 1) )\n\t\t\t\talliesWithSkill.push(a);\n\t\t\telse\n\t\t\t\talliesWithout.push(a);\n\t\t}\n\t\t@sync for ( u1 in alliesWithout ) {\n\t\t\tvar adjacent = false;\n\t\t\tfor ( u2 in alliesWithSkill ) {\n\t\t\t\tif ( u1.isMelee(u2) ) {\n\t\t\t\t\tadjacent = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( adjacent ) {\n\t\t\t\tif( !u1.hasStatus(Status.Brutality) ) {\n\t\t\t\t\tspawnFx(u1);\n\t\t\t\t}\n\t\t\t\tu1.addStatusPersist(Status.Brutality, skill);\n\t\t\t} else {\n\t\t\t\tu1.cancelStatus(Status.Brutality, skill);\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 5
					},
					"levels": [
						{
							"props": {},
							"desc": "Tant que cette unité est adjacente à un allié, elle et cet allié ont [Brutality]."
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "SharpSupport",
					"name": "Soutien acéré",
					"desc": "Chaque fois qu'un allié adjacent est attaqué en mêlée par un ennemi, inflige [DMG] à cet ennemi.",
					"mode": 2,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"globalEvents": true
					},
					"script": "function onSkillPlayed(s) {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( s.unit.side != skill.unit.side && u.isMelee(skill.unit) && u.isMelee(s.unit) && !skill.unit.isEngaged() ) {\n\t\t\tfor( t in s.getTargets() ) {\n\t\t\t\tif( t.target == u && t.dmg > 0 ) {\n\t\t\t\t\tspawnFx();\n\t\t\t\t\tattackTarget(s.unit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 5
					},
					"notes": "",
					"minDmg": 5,
					"levels": [
						{
							"props": {
								"minDmg": 7
							}
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "InspiringPresence",
					"name": "Présence inspirante",
					"desc": "À la fin de son tour, confère [Deflection] aux alliés adjacents engagés.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1,
							"value2": 2,
							"value3": 1
						},
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						]
					},
					"script": "function onEndTurn() {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( skill.level == 1 && u.isMelee(skill.unit) && u.isEngaged() ) {\n\t\t\tspawnFx();\n\t\t\tu.addStatus(Status.Deflection);\n\t\t} else if ( skill.level == 2 && u.isMelee(skill.unit) ) {\n\t\t\tspawnFx();\n\t\t\tu.addStatus(Status.Deflection);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 5
					},
					"levels": [
						{
							"props": {},
							"desc": "À la fin de son tour, confère [Deflection] aux alliés adjacents."
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "SweetSpot",
					"name": "Point idéal",
					"desc": "Les attaques à distance appliquent [Destabilization] pendant ::value1:: round.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Destabilization"
							}
						],
						"vars": {
							"value1": 1,
							"value2": 40
						}
					},
					"script": "function onEval(a) {\n\tif( skill.level == 2 && !a.target.isMelee(skill.unit) ) {\n\t\ta.criticalHitPercent += vars.value2;\n\t}\n}\n\nfunction onDamageDealt(t) {\n\tif( t.dmg > 0 && !t.wasMelee ) {\n\t\tif( t.target.addStatus(Status.Destabilization, vars.value1, true) ) {\n\t\t\tspawnFx();\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 8
					},
					"levels": [
						{
							"props": {},
							"desc": "Les attaques à distance appliquent [Destabilization] pendant ::value1:: round et ont ::value2::% de chances d'être des coups critiques."
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "SpearThrow",
					"name": "Jet perforant",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nApplique [Bleeding] à la première unité touchée.",
					"mode": 5,
					"range": {
						"type": 2,
						"radius": 1,
						"allowedTargets": 5,
						"baseDistance": 8
					},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"apCost": 1,
						"specialAnim": "Throw",
						"vars": {
							"value1": 1
						},
						"flags": 68,
						"needDisengaged": true
					},
					"script": "function onHit(a) {\n\tvar minD = 10e9;\n\tvar minFoe = null;\n\tfor( t in skill.getTargets() ) {\n\t\tvar d = getDistance(skill.unit, t.target);\n\t\tif( d < minD ) {\n\t\t\tminD = d;\n\t\t\tminFoe = t.target;\n\t\t}\n\t}\n\tif( skill.level == 2 ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t} else minFoe.addStatus(Status.Bleeding);\n\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 17
					},
					"minDmg": 5.5,
					"levels": [
						{
							"props": {},
							"desc": "Inflige [DMG] à toutes les unités dans la zone et leur applique [Bleeding]."
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "SpearsWall",
					"name": "Mur de lances",
					"desc": "Cible une zone.\nQuand un ennemi traverse la zone, effectue ::value3:: attaque d'opportunité et stoppe son déplacement.\n\nN'arrête pas le déplacement des Élites.",
					"mode": 5,
					"range": {
						"angle": 60,
						"radius": 3,
						"type": 1,
						"allowedTargets": 0
					},
					"props": {
						"globalEvents": true,
						"needDisengaged": true,
						"apCost": 2,
						"vars": {
							"value1": 2,
							"value2": 0,
							"value3": 1
						},
						"tooltipStatus": [
							{
								"st": "Targeting"
							},
							{
								"st": "OpportunityAttack"
							}
						],
						"reactionSkill": true
					},
					"script": "function onSkill() {\n\tvars.value2 = 0;\n\tif( waitNextTurn() ) {\n\t\tcreateZone();\n\t\treturn;\n\t}\n\tcancelZone();\n}\n\nfunction onMoveEvent(m) {\n\tm.stop(isFoe(m.unit) && !m.unit.hasStatus(Status.Champion));\n\tskill.unit.cast(Skill.OpportunityAttack, m.unit, skill);\n\tvars.value2++;\n\tif( vars.value2 == vars.value3 ) {\n\t\tcancelZone();\n\t\tvars.value2 = 0;\n\t}\n}\n\nfunction onMove(m) {\n\tif( m.unit.side == skill.unit.side ) return;\n\tvar z = getZone();\n\tif( z == null ) return;\n\tm.addZoneEvent(z,onMoveEvent);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 2
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value3": 2
								}
							},
							"desc": "Cible une zone.\nEffectue une attaque d'opportunité contre les ::value1:: premiers ennemis qui traversent la zone et stoppent leur déplacement."
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 1
				},
				{
					"id": "RallyingShout",
					"name": "Cri de ralliement",
					"desc": "Applique [Fury] à tous les alliés dans la zone.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 4,
						"allowedTargets": 1,
						"baseDistance": 0
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						],
						"apCost": 1,
						"specialAnim": "Taunt",
						"useWithoutWeapon": true,
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryBlue.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Fury);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 0
					},
					"levels": [
						{
							"props": {
								"rangeRadius": 6
							}
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "MasteredWhirlwind",
					"name": "Tourbillon maîtrisé",
					"desc": "Inflige [DMG] à toutes les unités dans la zone et les repousse de ::value1:: mètres. Les dégâts sont augmentés de [VALUE] pour chaque unité dans la zone.",
					"mode": 5,
					"range": {
						"radius": 2.5,
						"type": 0,
						"baseDistance": 0,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"scaledValue": 4,
						"scaledValueAttribute": 0,
						"vars": {
							"value1": 2
						},
						"apCost": 1,
						"specialAnim": "AttackSpin",
						"extraFx": "prefabs/fx/fight/Special/PushingWooshLate.fx"
					},
					"script": "function onEval(a) {\n\ta.dmg += ceil(skill.value*skill.getTargetsCount()-skill.value);\n}\n\nfunction onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 8
					},
					"minDmg": 3,
					"levels": [
						{
							"props": {
								"value": 6
							}
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "Preparation",
					"name": "Préparation",
					"desc": "Si cette unité termine son tour non-engagée, elle gagne [Fury].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						]
					},
					"script": "function onEndTurn() {\n\tif( !skill.unit.isEngaged() ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.Fury);\n\t\tif( skill.level >= 2 ) {\n\t\t\tskill.unit.addStatus(Status.Riposte);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Riposte"
									}
								]
							},
							"desc": "Si cette unité termine son tour non-engagée, elle gagne [Fury] et [Riposte]."
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "ExploitationOfStrength",
					"name": "Exploitation des forces",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% pour chaque Bonus appliqué sur cette unité.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 5
						}
					},
					"script": "function onSkillEval(s) {\n\tvar nb = 0;\n\tfor( t in s.getTargets() ) {\n\t\tfor( st in skill.unit.getAllStatus() ) {\n\t\t\tif( st.isBonus ) {\n\t\t\t\tnb++;\n\t\t\t}\n\t\t}\n\t\tt.baseDamageBonus += vars.value1*nb;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 10
								}
							}
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "LastEffort",
					"name": "Dernier effort",
					"desc": "Applique à cette unité et à l'allié ciblé autant de [AnimalMarkedBonus] qu'ils ont de Malus.",
					"mode": 0,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"apCost": 1,
						"specialAnim": "Taunt",
						"vars": {
							"value1": 0
						},
						"useWithoutWeapon": true,
						"tooltipStatus": [
							{
								"st": "AnimalMarkedBonus"
							}
						],
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryBlue.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tvar nb = 0;\n\tfor( t in skill.getTargets() ) {\n\t\tfor( st in t.target.getAllStatus() ) {\n\t\t\tif( st.isMalus ) {\n\t\t\t\tnb++;\n\t\t\t}\n\t\t}\n\t\tt.target.addStatus(Status.AnimalMarkedBonus, nb+vars.value1);\n\t\tnb = 0;\n\t}\n\tfor ( st in skill.unit.getAllStatus() ) {\n\t\tif( st.isMalus ) {\n\t\t\tnb++;\n\t\t}\n\t}\n\tskill.unit.addStatus(Status.AnimalMarkedBonus, nb+vars.value1);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 2
								}
							},
							"desc": "Applique à cette unité et à l'allié ciblé autant de [AnimalMarkedBonus] qu'ils ont de Malus plus ::value1::."
						}
					],
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "ChangeOfPace",
					"name": "Changement de rythme",
					"desc": "Quand cette unité tue un ennemi engagé avec un allié, cette unité et son allié gagnent [Dodge].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Dodge"
							}
						]
					},
					"script": "function onDeath(a) {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( a.target == skill.unit && a.unit.isEngaged() && u.engagedUnit == a.unit  ) {\n\t\t\tskill.unit.addStatus(Status.Dodge);\n\t\t\tu.addStatus(Status.Dodge);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 14
					},
					"done": 2
				},
				{
					"id": "HorounStrike",
					"name": "Frappe de Horoun",
					"desc": "Inflige [DMG] à la cible.\nSi [NarsesMark] est appliqué sur la cible, consomme le statut.\nSinon, applique [HorounMark].",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"isAttack": true,
						"defaultAction": true,
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "NarsesMark"
							},
							{
								"st": "HorounMark"
							},
							{
								"st": "OpportunityAttack"
							}
						],
						"fxSuffix": 0
					},
					"script": "function onDamage(a) {\n\tif( a.target.hasStatus(Status.NarsesMark) ) {\n\t\ta.target.consumeStatus(Status.NarsesMark);\n\t\tskill.unit.opportunityAttack(a.target, skill);\n\t} else a.target.addStatus(Status.HorounMark);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 6
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 12,
					"done": 2
				},
				{
					"id": "Madness",
					"name": "Folie",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% contre les unités ayant ::value2::% ou moins de [Health].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 30
						}
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\tvar p = 100 * (t.target.health / t.target.stats.health);\n\t\tif( p <= vars.value2 ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 5
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value2": 50
								}
							}
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "Recklessness",
					"name": "Témérité",
					"desc": "La première attaque utilisée chaque combat inflige ::value1::% dégâts supplémentaires.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"used": false,
							"value1": 100
						}
					},
					"script": "function onSkillEval(s) {\n\tif( !vars.used ) {\n\t\tfor( t in s.getTargets() ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}\n\nfunction onSkillPlayed(a) {\n\tif( !vars.used ) {\n\t\tvar damageDone = false;\n\t\tfor( t in a.getTargets() ) {\n\t\t\tdamageDone = t.damagedArmor + t.damagedHealth > 0;\n\t\t\ttrace(damageDone);\n\t\t\tif( damageDone ) break;\n\t\t}\n\t\tif( damageDone ) {\n\t\t\tspawnFx();\n\t\t\tvars.used = true;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 3,
						"y": 5
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 150
								}
							}
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "Fanatism",
					"name": "Fanatisme",
					"desc": "À la fin de son tour, cette unité perd ::value1::% de sa [Health] maximum pour gagner [Fury].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						},
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						]
					},
					"script": "function onEndTurn() {\n\tif( !skill.unit.hasStatus(Status.Fury) ) {\n\t\tspawnFx();\n\t\tif( skill.level == 1 ) {\n\t\t\tskill.unit.damages(skill, ceil(skill.unit.stats.health*vars.value1/100), true);\n\t\t}\n\t\tskill.unit.addStatus(Status.Fury);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 8
					},
					"levels": [
						{
							"props": {},
							"desc": "À la fin de son tour, gagne [Fury]."
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "FirstBlood",
					"name": "Premier sang",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% contre les unités ennemies dont la [Health] est intacte.",
					"mode": 2,
					"range": {
						"allowedTargets": 0
					},
					"props": {
						"vars": {
							"healthproc": 100,
							"value1": 35,
							"value2": 2
						}
					},
					"script": "function onBeforeHit(a) {\n\tif( skill.level == 2 ) {\n\t\tif( a.target.side != skill.unit.side ) {\n\t\t\tvar p = 100 * (a.target.health / a.target.stats.health);\n\t\t\tif( p == vars.healthproc ) {\n\t\t\t\tif( a.target.addStatus(Status.Fragility, vars.value2, true) )\n\t\t\t\t\tspawnFx();\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tvar p = 100 * (t.target.health / t.target.stats.health);\n\t\tif( p == vars.healthproc )\n\t\t\tt.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 5
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Fragility"
									}
								]
							},
							"desc": "[DamageBonusPercent] augmentés de ::value1::% contre les unités dont la [Health] est intacte.\nLeur applique également [Fragility] pendant ::value2:: rounds."
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "SharpWhirlwind",
					"name": "Tourbillon tranchant",
					"desc": "Inflige [DMG] à toutes les unités dans la zone. Attaque ::value1:: fois pour chaque unité dans la zone.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"apCost": 2,
						"specialAnim": "AttackSpin"
					},
					"script": "function onEval(t) {\n\tvar count = 0;\n\tfor( t in skill.getTargets() )\n\t\tcount += vars.value1;\n\tt.attackCount = count;\n}\n\nfunction onPostSkill() {\n\tvar count = 0;\n\tfor( t in skill.getTargets() ) {\n\t\tif( skill.level == 2 && !t.target.isAlive() ) {\n\t\t\tcount += vars.value1;\n\t\t}\n\t}\n\tif( count > 0 ) {\n\t\tfor( t in skill.getTargets() )\n\t\t\tt.attackCount = count;\n\t\tattack();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 2
					},
					"minDmg": 3.5,
					"levels": [
						{
							"props": {},
							"desc": "Inflige [DMG] à toutes les unités dans la zone. Attaque ::value1:: fois pour chaque unité dans la zone.\n\n[DeadlyBlow] : Attaque de nouveau."
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "Outburst",
					"name": "Déchaînement",
					"desc": "Inflige ::value1:: fois [DMG] à la cible.\n\n[CapaCritical] : Gagne [Fury].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 3,
							"value2": 30
						},
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						],
						"apCost": 1
					},
					"script": "function onDamage(a) {\n\tif( a.isCritical ) {\n\t\tskill.unit.addStatus(Status.Fury);\n\t}\n}\n\nfunction onEval(a) {\n\ta.attackCount = vars.value1;\n}\n\nfunction onSkill() {\n\tvar count = vars.value1;\n\tfor( i in 0...count ) {\n\t\tattack({ anim : i == count - 1 ? \"AttackPower\" : \"AttackFast\"+(i%2+1), fast : i < count - 1 });\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 2
					},
					"minDmg": 3,
					"maxDmg": 4.5,
					"levels": [
						{
							"props": {
								"flags": 1
							},
							"desc": "Inflige ::value1:: fois [DMG] à la cible et ignore la [Guard].\n\n[CapaCritical] : Gagne [Fury]."
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "Ovation",
					"name": "Ovation",
					"desc": "Tous les alliés engagés gagnent [Riposte].",
					"mode": 4,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"specialAnim": "Taunt",
						"tooltipStatus": [
							{
								"st": "Riposte"
							}
						],
						"apCost": 2,
						"useWithoutWeapon": true,
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryBlue.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\t@sync for( u in getAllies(skill.unit)) {\n\t\tif( u.isEngaged() ) {\n\t\t\tu.addStatus(Status.Riposte);\n\t\t}\n\t\tif( skill.level == 2 && !u.isEngaged() ) {\n\t\t\tu.addStatus(Status.Inspiration, vars.value1, true);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Inspiration"
									}
								]
							},
							"desc": "Tous les alliés engagés gagnent [Riposte].\nTous les alliés non-engagés gagnent [Inspiration] pendant ::value1:: round."
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "PridefulStrike",
					"name": "Frappe orgueilleuse",
					"desc": "Inflige [DMG] à la cible. Les dégâts sont doublés si la cible a strictement plus de [Health].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"apCost": 1,
						"vars": {
							"value1": 100,
							"value2": 200
						},
						"specialAnim": "AttackPower",
						"aiOrder": 1
					},
					"script": "function onEval(a) {\n\tif( a.target.health > skill.unit.health ) {\n\t\tif( skill.level == 2 ) {\n\t\t\ta.baseDamageBonus += vars.value2;\n\t\t} else a.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 8
					},
					"minDmg": 4,
					"maxDmg": 6,
					"levels": [
						{
							"props": {},
							"desc": "Inflige [DMG] à la cible. Les dégâts sont triplés si la cible a strictement plus de [Health]."
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "WarCry",
					"name": "Cri de guerre",
					"desc": "L'unité et tous les alliés dans la zone gagnent [Brutality] pendant ::value1:: rounds.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 6,
						"allowedTargets": 2,
						"baseDistance": 0
					},
					"props": {
						"vars": {
							"value1": 2
						},
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Brutality"
							}
						],
						"specialAnim": "Taunt",
						"useWithoutWeapon": true,
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryBlue.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Brutality, vars.value1, true);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"rangeRadius": 10,
								"vars": {
									"value1": 3
								}
							}
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "ChallengeCry",
					"name": "Cri de défi",
					"desc": "Attire en mêlée tous les ennemis dans la zone.\nApplique [Fragility] pendant ::value2:: rounds aux ennemis ainsi désengagés.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 0,
						"baseDistance": 0
					},
					"props": {
						"vars": {
							"value1": 3,
							"value2": 1
						},
						"useWithoutWeapon": true,
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Fragility"
							}
						],
						"specialAnim": "Taunt",
						"extraFx": "prefabs/fx/fight/Taunt/ChallengingShout.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tvar arr = [];\n\tfor( t in skill.getTargets() ) {\n\t\tif( skill.level >= 2 ) {\n\t\t\tt.target.addStatus(Status.Fragility, vars.value2, true);\n\t\t} else if( t.target.isEngaged() ) {\n\t\t\tarr.push(t);\n\t\t}\n\t\tt.target.pushback({ unit : skill.unit },-vars.value1);\n\t}\n\tfor( t in arr ) {\n\t\tif( !t.target.isEngaged() ) {\n\t\t\tt.target.addStatus(Status.Fragility, vars.value2, true);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 3
					},
					"levels": [
						{
							"props": {},
							"desc": "Attire en mêlée tous les ennemis dans la zone et leur applique [Fragility] pendant ::value2:: rounds."
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "Ecstasy",
					"name": "Extase",
					"desc": "Tant que cette unité a moins de ::value1::% de [Health], elle inflige toujours des coups critiques.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"globalEvents": true
					},
					"script": "function onSkillEval(s) {\n\tif( skill.unit == s.unit ) {\n\t\tvar p = 100 * (skill.unit.health / skill.unit.stats.health);\n\t\tif( p < vars.value1 ) {\n\t\t\tfor ( t in s.getTargets() ) {\n\t\t\t\tt.criticalHitPercent = 100;\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 80
								}
							}
						}
					],
					"iconeDone": true,
					"group": 13,
					"done": 2
				},
				{
					"id": "ExceedingLimits",
					"name": "Dépassement des limites",
					"desc": "[CritHitDamageBonusPercent] augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"attributes": [
							{
								"kind": "CritHitDamageBonusPercent",
								"value": 25
							}
						],
						"feature": "Alazar1_Update",
						"vars": {
							"value1": 25
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 13,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 14
					},
					"levels": [
						{
							"props": {
								"attributes": [
									{
										"kind": "CritHitDamageBonusPercent",
										"value": 50
									}
								]
							}
						}
					],
					"done": 2
				},
				{
					"id": "Opportunism",
					"name": "Opportunisme",
					"desc": "Tant qu'il y a au moins ::value1:: ennemis à moins de ::value2:: mètres de cette unité, elle a [Protection].",
					"mode": 2,
					"range": {
						"type": 0,
						"radius": 6,
						"baseDistance": 0,
						"allowedTargets": 0
					},
					"props": {
						"vars": {
							"value1": 2,
							"value2": 6,
							"value3": 4
						},
						"tooltipStatus": [
							{
								"st": "Protection"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tvar foes = getFoes(skill.unit);\n\tvar nb = 0;\n\tfor( u in foes ) {\n\t\tif( getDistance(skill.unit, u) <= vars.value2 ) {\n\t\t\tnb++;\n\t\t}\n\t}\n\tif( skill.level ==  2 ) {\n\t\tif( nb >= vars.value3 ) {\n\t\t\tif( skill.unit.addStatusPersist(Status.Brutality, skill) ) {\n\t\t\t\tspawnFx();\n\t\t\t}\n\t\t} else {\n\t\t\tskill.unit.cancelStatus(Status.Brutality, skill);\n\t\t}\n\t}\n\tif( nb >= vars.value1 ) {\n\t\tif( skill.unit.addStatusPersist(Status.Protection, skill) ) {\n\t\t\tspawnFx();\n\t\t}\n\t} else {\n\t\tskill.unit.cancelStatus(Status.Protection, skill);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 16
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Brutality"
									}
								]
							},
							"desc": "Tant qu'il y a au moins ::value1:: ennemis à moins de ::value2:: mètres de cette unité, elle a [Protection].\nS'il y en a au moins ::value3::, elle a également [Brutality]."
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "Cruelty",
					"name": "Cruauté",
					"desc": "[DamageBonusPercent] et  [CritHitPercent] augmentés de ::value1::% contre les unités ayant au moins un Malus.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 20
						},
						"globalEvents": true
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( s.unit == skill.unit ) {\n\t\t\tfor( st in t.target.getAllStatus() ) {\n\t\t\t\tif( st.isMalus ) {\n\t\t\t\t\tt.baseDamageBonus += vars.value1;\n\t\t\t\t\tt.criticalHitPercent += vars.value1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif( skill.level == 2 && t.target == skill.unit ) {\n\t\t\tfor( st in s.unit.getAllStatus() ) {\n\t\t\t\tif( st.isMalus ) {\n\t\t\t\t\tt.baseDamageBonus -= vars.value1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 5
					},
					"levels": [
						{
							"props": {},
							"desc": "[DamageBonusPercent] et  [CritHitPercent] augmentés de ::value1::% contre les unités ayant au moins un Malus.\nEn retour, elles infligent ::value1::% de [DamageBonusPercent] de moins à cette unité."
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "ArmorBreaker",
					"name": "Brise-armure",
					"desc": "[DamageBonusPercent] infligés à l'[Armor] augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 35
						}
					},
					"script": "var targetWithArmor = [];\nfunction onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target.armor > 0 ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t\ttargetWithArmor.push(t.target);\n\t\t}\n\t}\n}\n\nfunction onDamageDealt(a) {\n\tif( skill.level == 2 && a.target.armor <= 0 && targetWithArmor.contains(a.target) ) {\n\t\tvar brutality = skill.unit.addStatusPersist(Status.Brutality, skill);\n\t\tvar inspiration = skill.unit.addStatusPersist(Status.Inspiration, skill);\n\t\tif( brutality || inspiration )\n\t\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 7
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Brutality"
									},
									{
										"st": "Inspiration"
									}
								]
							},
							"desc": "[DamageBonusPercent] infligés à l'[Armor] augmentés de ::value1::%.\nSi une attaque de cette unité détruit l'[Armor] d'un ennemi, elle gagne [Brutality] et [Inspiration]."
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "Bash",
					"name": "Coup de boule",
					"desc": "À la fin de son tour, inflige [VALUE] dégâts à la [Health] de la cible la plus proche.",
					"mode": 2,
					"range": {},
					"props": {
						"scaledValue": 3,
						"scaledValueAttribute": 0
					},
					"script": "function onEndTurn() {\n\tvar minD = 10e9;\n\tvar minFoe = skill.unit.engagedUnit;\n\tif ( minFoe == null ) {\n\t\tfor( u in getFoes(skill.unit) ) {\n\t\t\tvar d = getDistance(skill.unit, u);\n\t\t\tif( d < minD ) {\n\t\t\t\tminD = d;\n\t\t\t\tminFoe = u;\n\t\t\t}\n\t\t}\n\t}\n\tif( minFoe != null && skill.unit.isMelee(minFoe) ) {\n\t\tif( !minFoe.isEngaged() ) {\n\t\t\tskill.unit.engage(minFoe);\n\t\t}\n\t\tspawnFx();\n\t\tskill.unit.cast(Skill.Bash_Skill, minFoe, skill);\n\t}\n}",
					"notes": "Réservé à la classe gladiateur mace (patch Gosenberg)",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 8
					},
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "Bash_Skill",
					"name": "",
					"desc": "",
					"mode": 0,
					"range": {},
					"props": {
						"flags": 2,
						"dmgAttribute": 0
					},
					"script": "",
					"notes": "",
					"minDmg": 3,
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "PoisonedImpact",
					"name": "Impact empoisonné",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nApplique ::value1:: [Poison]s aux unités qui saignent.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"apCost": 1,
						"specialAnim": "AttackWide",
						"vars": {
							"value1": 2
						},
						"fxSuffix": 3
					},
					"script": "function onHit(a) {\n\tif( skill.level == 2 ) {\n\t\ta.target.addStatus(Status.Poison, vars.value1);\n\t}\n\n\tif( a.target.hasStatus(Status.Bleeding)) {\n\t\ta.target.addStatus(Status.Poison, vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 3
					},
					"minDmg": 6,
					"levels": [
						{
							"props": {},
							"desc": "Inflige [DMG] à toutes les unités dans la zone.\nApplique ::value1:: [Poison]s à toutes les unités ainsi que ::value1:: [Poison]s aux unités qui saignent."
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "WeakeningShock",
					"name": "Choc affaiblissant",
					"desc": "Inflige [DMG] à la cible et lui applique [Weakening] pendant ::value1:: rounds.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 3
						},
						"tooltipStatus": [
							{
								"st": "Weakening"
							}
						],
						"apCost": 1,
						"specialAnim": "AttackPower"
					},
					"script": "function onDamage(a) {\n\tif( skill.level == 2 && a.target.hasStatus(Status.Weakening) ) {\n\t\ta.target.addStatus(Status.Vulnerability);\n\t}\n\ta.target.addStatus(Status.Weakening, vars.value1, true);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 3
					},
					"minDmg": 7,
					"maxDmg": 9,
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Vulnerability"
									}
								]
							},
							"desc": "Inflige [DMG] à la cible et lui applique [Weakening] pendant ::value1:: rounds.\nSi l'unité est déjà affaiblie, lui applique également [Vulnerability]."
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "RelentlessCharge",
					"name": "Charge implacable",
					"desc": "Se désengage et charge en ligne droite. Inflige [DMG] à toutes les unités sur le chemin et applique [Slowdown] pendant ::value1:: round.",
					"mode": 3,
					"range": {
						"flags": 1,
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Slowdown"
							}
						],
						"apCost": 1,
						"specialAnim": "RunCharge"
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Slowdown, vars.value1, true);\n}\n\nfunction onPostSkill() {\n\tif( skill.level == 2 ) {\n\t\tfor( u in getFoes(skill.unit) ) {\n\t\t\tif( skill.unit.isMelee(u) ) {\n\t\t\t\tskill.unit.addStatus(Status.Fury);\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 3
					},
					"minDmg": 6,
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Fury"
									}
								]
							},
							"desc": "Se désengage et charge en ligne droite. Inflige [DMG] à toutes les unités sur le chemin et applique [Slowdown] pendant ::value1:: round.\nSi cette unité termine adjacente à un ennemi, elle gagne [Fury].\n"
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "ThunderousBlow",
					"name": "Coup tonitruant",
					"desc": "Inflige [DMG] à la cible. Si elle est engagée avec un allié, la force à se désengager et elle subit une attaque d'opportunité de l'allié.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						],
						"specialAnim": "AttackPower"
					},
					"script": "function onDamage(a) {\n\tif( skill.level == 2 && a.backstab ) {\n\t\ta.target.addStatus(Status.Vulnerability);\n\t}\n\tif( a.target.isEngaged() && a.target.engagedUnit != skill.unit ) {\n\t\ta.target.disengage(true);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 8
					},
					"minDmg": 2,
					"maxDmg": 4,
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Vulnerability"
									}
								]
							},
							"desc": "Inflige [DMG] à la cible. Si elle est engagée avec un allié, la force à se désengager et elle subit une attaque d'opportunité de l'allié.\n\n[Backstab] : Applique [Vulnerability]."
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "GuardBreaker",
					"name": "Brise-garde",
					"desc": "Les attaques ignorent ::value1::% de la [Guard] ennemie.",
					"mode": 2,
					"range": {},
					"props": {
						"attributes": [
							{
								"kind": "IgnoreGuard",
								"value": 50
							}
						],
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"attributes": [
									{
										"kind": "IgnoreGuard",
										"value": 100
									}
								],
								"vars": {
									"value1": 100
								}
							}
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "Temperance",
					"name": "Tempérance",
					"desc": "Après avoir subi ::value2:: attaques, cette unité gagne [Deflection].\n\nAttaques subies : ::value1::",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 0,
							"value2": 2
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						]
					},
					"script": "function onDamageTaken(s) {\n\tif( s.unit != skill.unit && s.target == skill.unit ) {\n\t\tvars.value1++;\n\t}\n\tif( vars.value1 >= vars.value2 ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.Deflection);\n\t\tif( skill.level == 2) {\n\t\t\tskill.unit.addStatus(Status.Riposte);\n\t\t}\n\t\tvars.value1 = 0;\n\t}\n\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 3
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Riposte"
									}
								]
							},
							"desc": "Après avoir subi ::value2:: attaques, cette unité gagne [Deflection] et [Riposte].\n\nAttaques subies : ::value1::"
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "OneOnOne",
					"name": "Face-à-face",
					"desc": "Tant qu'aucune autre unité n'est adjacente à cette unité ou à son adversaire engagé, elle a [Rivalry].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Rivalry"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tvar valid = true;\n\tfor( u in getUnits() ) {\n\t\tif( skill.unit.isMelee(u) && skill.unit.engagedUnit != u ) {\n\t\t\tvalid = false;\n\t\t\tbreak;\n\t\t}\n\t\tif( skill.level == 1 && skill.unit.engagedUnit != null && skill.unit.engagedUnit.isMelee(u) && u != skill.unit ) {\n\t\t\tvalid = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif( valid ) {\n\t\tif( !skill.unit.hasStatus(Status.Rivalry) ) {\n\t\t\tspawnFx();\n\t\t}\n\t\tskill.unit.addStatusPersist(Status.Rivalry, skill);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 3
					},
					"levels": [
						{
							"props": {},
							"desc": "Tant qu'aucune autre unité n'est adjacente à cette unité, elle a [Rivalry]."
						}
					],
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "OverwhelmingPresence",
					"name": "Présence écrasante",
					"desc": "Si cette unité a plus d'[Armor] que son adversaire engagé, ses attaques sont forcément critiques.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( skill.unit.armor > t.target.armor ) {\n\t\t\tt.criticalHitPercent == 100;\n\t\t\tif( skill.level == 2 ) {\n\t\t\t\tt.target.addStatus(Status.Confus, vars.value1, true);\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 14,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 14
					},
					"levels": [
						{
							"props": {
								"tooltipStatus": [
									{
										"st": "Confus"
									}
								]
							},
							"desc": "Si cette unité a plus d'[Armor] que son adversaire engagé, ses attaques sont forcément critiques et appliquent [Confus] pendant ::value1:: round."
						}
					],
					"done": 2
				},
				{
					"id": "ErkeshetWrath",
					"name": "Courroux d'Erkeshet",
					"desc": "Inflige [DMG] à la cible.\nSi cette unité a plus de [Strength] que la cible, les dégâts sont doublés et un coup critique est assuré.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 100
						},
						"isAttack": true,
						"defaultAction": true,
						"specialAnim": "AttackPower",
						"fxSuffix": 0
					},
					"script": "function onEval(a) {\n\tif( skill.unit.stats.strength > a.target.stats.strength ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t\ta.criticalHitPercent = 100;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 2,
						"y": 14
					},
					"minDmg": 5,
					"maxDmg": 6,
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "InsectSmash",
					"name": "PAF !",
					"desc": "Inflige [DMG] à la cible. Si la cible est un moustique, les dégâts sont augmentés de ::value1::%.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 1000
						},
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"specialAnim": "AttackWide"
					},
					"script": "function onEval(a) {\n\tif( a.target.kind == UnitClass.Mosquito ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 0
					},
					"minDmg": 2,
					"maxDmg": 4,
					"iconeDone": true,
					"group": 14,
					"done": 2
				},
				{
					"id": "TargetHeal",
					"name": "Distance Heal",
					"desc": "",
					"mode": 0,
					"range": {
						"allowedTargets": 2,
						"baseDistance": 8
					},
					"props": {
						"isHeroic": true,
						"apCost": 1,
						"vars": {
							"value1": 100
						},
						"needDisengaged": true,
						"cursor": "CursorHeal",
						"healPreview": 1,
						"useWithoutWeapon": true
					},
					"script": "function onSkill() {\n\tplay();\n\tskill.target.gainsHealth( ceil( skill.target.stats.health * ( min(skill.unit.stats.willpower, 50)/50 ) * (vars.value1/100) * randInt(12,20)/16 ) , null);\n\tif( skill.level == 2 ) {\n\t\tvar armorRecovery = ceil ( skill.target.stats.armor * min(skill.unit.stats.willpower, 50)/100 * randInt(12,20)/16 );\n\t\tskill.target.armor = min(skill.target.armor + armorRecovery, skill.target.stats.armor);\n\t}\n}",
					"notes": "",
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 125
								}
							}
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 12
					},
					"iconeDone": true,
					"group": 16,
					"done": 2
				},
				{
					"id": "RangeHeal",
					"name": "Healing Bomb",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 2,
						"baseDistance": 6
					},
					"props": {
						"isHeroic": true,
						"specialAnim": "ThrowLeftGrenade",
						"apCost": 1,
						"vars": {
							"value1": 50
						},
						"needDisengaged": true,
						"cursor": "CursorHeal",
						"healPreview": 1,
						"useWithoutWeapon": true,
						"castFx": "prefabs/fx/fight/Explosion/PoisonBomb/PoisonBomb.fx",
						"throwModel": "chars/Weapons/LeftHand_IncendiaryFlask.fbx"
					},
					"script": "function onSkill() {\n\tplayAttack();\n	for( t in skill.getTargets() ) {\n\t\tif( t.target.side == skill.unit.side ) {\n\t\t\tt.target.gainsHealth( ceil( t.target.stats.health * ( min(skill.unit.stats.willpower, 50)/50 ) * (vars.value1/100) * randInt(12,20)/16 ) , null);\n\t\t\tif( skill.level == 2 && randInt(0,3) == 3 ) {\n\t\t\t\tt.target.addStatus(Status.Protection, vars.value2, true);\n\t\t\t}\n\t\t\tspawnFx();\n\t\t}\n	}\n}",
					"notes": "",
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 75,
									"value2": 2
								},
								"tooltipStatus": [
									{
										"st": "Protection"
									}
								]
							}
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 13
					},
					"iconeDone": true,
					"group": 16,
					"done": 2
				},
				{
					"id": "GroupHeal",
					"name": "Group Heal",
					"desc": "",
					"mode": 4,
					"range": {},
					"props": {
						"isHeroic": true,
						"specialAnim": "Taunt",
						"apCost": 3,
						"vars": {
							"value1": 50
						},
						"needDisengaged": true,
						"cursor": "CursorHeal",
						"healPreview": 1,
						"useWithoutWeapon": true,
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryBlue.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\t@sync for( u in getAllies(skill.unit) ) {\n\t\tu.gainsHealth(ceil( u.stats.health * min(skill.unit.stats.willpower, 50)/50 * (vars.value1/100) ), null);\n\t}\n\tspawnFx();\n}",
					"notes": "",
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 75
								}
							}
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 15
					},
					"iconeDone": true,
					"group": 16,
					"done": 2
				},
				{
					"id": "FearVoice",
					"name": "Voice of Fear",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 1,
						"angle": 60,
						"radius": 3,
						"allowedTargets": 0
					},
					"props": {
						"isHeroic": true,
						"specialAnim": "Taunt",
						"apCost": 1,
						"vars": {
							"value1": 10
						},
						"tooltipStatus": [
							{
								"st": "Terror"
							}
						],
						"needDisengaged": true,
						"useWithoutWeapon": true,
						"extraFx": "prefabs/fx/fight/Special/PoisonSlashTrail.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tvar will = min(skill.unit.stats.willpower, 50);\n\tfor( t in skill.getTargets() ) {\n\t\tif( t.target.side != skill.unit.side ) {\n\t\t\tvar num = randomDice( 50 );\n\t\t\tt.target.addStatus(Status.Terror, num);\n\t\t\tvar num2 = randomDice( 50 );\n\t\t\tif( num2 > 2 ) {\n\t\t\t\tt.target.addStatus(Status.Immobile, 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction randomDice (w) {\n\tvar dice = randInt(w, 100);\n\tif ( dice <= 30 ) return 1;\n\tif ( dice <= 60 ) return 2;\n\tif ( dice <= 80 ) return 3;\n\tif ( dice <= 90 ) return 4;\n\telse return 5;\n}",
					"notes": "",
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 0,
									"value2": 10
								},
								"tooltipStatus": [
									{
										"st": "Immobile"
									}
								]
							}
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 3
					},
					"iconeDone": true,
					"group": 16,
					"done": 2
				},
				{
					"id": "DeathScent",
					"name": "Scent of Death",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 0,
						"baseDistance": 4
					},
					"props": {
						"isHeroic": true,
						"specialAnim": "ThrowLeftGrenade",
						"apCost": 1,
						"vars": {
							"value1": 10
						},
						"tooltipStatus": [
							{
								"st": "Fragility"
							},
							{
								"st": "Fracture"
							},
							{
								"st": "Weakening"
							},
							{
								"st": "Bruise"
							}
						],
						"needDisengaged": true,
						"useWithoutWeapon": true,
						"castFx": "prefabs/fx/fight/Explosion/ConfusingPowder/ConfusingPowder.fx",
						"throwFx": "prefabs/fx/fight/Explosion/ConfusingPowder/ConfusingPowderThrowTrail.fx",
						"throwModel": "chars/Weapons/LeftHand_BlindingPowder.fbx"
					},
					"script": "function onSkill() {\n\tplay();\n\tvar will = 50;\n\tfor( t in skill.getTargets() ) {\n\t\tif( t.target.side != skill.unit.side ) {\n\t\t\tvar num = randomDice( max(will - vars.value1, 0) );\n\t\t\tif ( num == 2 ) t.target.addStatus(Status.Fragility, 2, true);\n\t\t\tif ( num == 3 ) t.target.addStatus(Status.Fracture, 1, true);\n\t\t\tif ( num == 4 ) t.target.addStatus(Status.Weakening, 2, true);\n\t\t\tif ( num == 5 ) t.target.addStatus(Status.Bruise, 1, true);\n\t\t\tt.target.addStatus(Status.Stun, 2, true);\n\t\t}\n\t}\n}\n\nfunction randomDice (w) {\n\tvar dice = randInt(w, 100);\n\tif ( dice <= 30 ) return 1;\n\tif ( dice <= 60 ) return 2;\n\tif ( dice <= 80 ) return 3;\n\tif ( dice <= 90 ) return 4;\n\telse return 5;\n}",
					"notes": "",
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 0,
									"value2": 10
								},
								"tooltipStatus": [
									{
										"st": "Stun"
									}
								]
							}
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 7
					},
					"iconeDone": true,
					"group": 16,
					"done": 2
				},
				{
					"id": "PainLess",
					"name": "Painless",
					"desc": "",
					"mode": 0,
					"range": {
						"allowedTargets": 1,
						"baseDistance": 3
					},
					"props": {
						"isHeroic": true,
						"apCost": 1,
						"vars": {
							"value1": 10
						},
						"tooltipStatus": [
							{
								"st": "Enervate"
							},
							{
								"st": "Berserk"
							},
							{
								"st": "BrothersFury"
							}
						],
						"needDisengaged": true,
						"useWithoutWeapon": true
					},
					"script": "function onSkill() {\n\tplay();\n\tvar will = 50;\n\tvar num = randomDice( max(will - vars.value1, 0) );\n\tif ( num == 2 || num == 4 ) {\n\t\tskill.target.addStatus(Status.Enervate, randomDice(will));\n\t}\n\tif ( num == 3 ) skill.target.addStatus(Status.Berserk, 1, true);\n\tif ( num == 5 ) skill.target.addStatus(Status.BrothersFury, 1, true);\n\tskill.target.addStatus(Status.Arena_Willforce, 2, true);\n}\n\nfunction randomDice (w) {\n\tvar dice = randInt(w, 100);\n\tif ( dice <= 30 ) return 1;\n\tif ( dice <= 60 ) return 2;\n\tif ( dice <= 80 ) return 3;\n\tif ( dice <= 90 ) return 4;\n\telse return 5;\n}",
					"notes": "",
					"levels": [
						{
							"props": {
								"vars": {
									"value1": 0,
									"value2": 10
								},
								"tooltipStatus": [
									{
										"st": "Arena_Willforce"
									}
								]
							}
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 0,
						"y": 0
					},
					"iconeDone": true,
					"group": 16,
					"done": 2
				},
				{
					"id": "MagicMissile",
					"name": "Magical Missile",
					"desc": "",
					"mode": 1,
					"range": {
						"minDistance": 1,
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 2,
						"needDisengaged": true,
						"castFx": "prefabs/fx/fight/hits & impacts/impactElectrical.fx",
						"isAttack": true,
						"defaultAction": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 3
					},
					"minDmg": 6,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 3,
					"done": 2
				},
				{
					"id": "Protection",
					"name": "Protection",
					"desc": "Gagne [Deflection].",
					"mode": 4,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						],
						"isHeroic": true,
						"apCost": 1,
						"specialAnim": "Taunt",
						"aiOrder": 1
					},
					"script": "function onSkill() {\n\tplay();\n\tskill.unit.addStatus(Status.Deflection);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 1
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "ShieldSlam",
					"name": "Coup de bouclier",
					"desc": "Inflige [DMG] à la cible et lui applique [Fragility] pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fragility"
							}
						],
						"vars": {
							"value1": 1
						},
						"isHeroic": true,
						"apCost": 1,
						"dmgAttribute": 0,
						"specialAnim": "AttackShield",
						"aiOrder": 1
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Fragility, vars.value1, true);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 3
					},
					"minDmg": 3,
					"maxDmg": 4,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "BurningShieldSlam",
					"name": "Coup flamboyant",
					"desc": "Inflige [DMG] à la cible et lui applique [Burning].",
					"mode": 0,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Burning"
							}
						],
						"isHeroic": true,
						"apCost": 1,
						"dmgAttribute": 0,
						"specialAnim": "AttackShield",
						"aiOrder": 1
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Burning);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 8
					},
					"minDmg": 3,
					"maxDmg": 4,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "CounterArrows",
					"name": "Contre-flèches",
					"desc": "[DamageTakenPercent] des attaques de Tir réduits de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 90
						},
						"isHeroic": true,
						"globalEvents": true
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( a.isPrecisionSkill() ) {\n\t\t\tif( a.unit != skill.unit && t.target == skill.unit ) {\n\t\t\t\tt.baseDamageBonus -= vars.value1;\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 0
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "MotivatingSlam",
					"name": "Heurt motivant",
					"desc": "Inflige [DMG] à la cible et cette unité et tous ses alliés adjacents gagnent [Motivation] pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Motivation"
							}
						],
						"vars": {
							"value1": 1
						},
						"isHeroic": true,
						"apCost": 1,
						"dmgAttribute": 0,
						"specialAnim": "AttackShield",
						"aiOrder": 1
					},
					"script": "function onDamage(a) {\n\tskill.unit.addStatus(Status.Motivation, vars.value1, true);\n\tfor(u in getAllies(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tu.addStatus(Status.Motivation, vars.value1, true);\n\t\t}\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 16,
						"y": 1
					},
					"minDmg": 3,
					"maxDmg": 4
				},
				{
					"id": "EngagingSlam",
					"name": "Heurt d'engagement",
					"desc": "Inflige [DMG] à la cible. Si la cible est engagée avec cette capacité, cette unité gagne [Riposte].",
					"mode": 0,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Riposte"
							}
						],
						"isHeroic": true,
						"apCost": 1,
						"dmgAttribute": 0,
						"specialAnim": "AttackShield",
						"vars": {
							"engaged": false
						},
						"aiOrder": 1
					},
					"script": "function onEval(a) {\n\tif( !a.target.isEngaged() || a.target.engagedUnit != skill.unit ) {\n\t\tvars.engaged = false;\n\t} else vars.engaged = true;\n}\n\nfunction onDamage(a) {\n\tif( a.target.isEngaged() && skill.unit.engagedUnit == a.target && !vars.engaged ) {\n\t\tskill.unit.addStatus(Status.Riposte);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 17,
						"y": 1
					},
					"minDmg": 3,
					"maxDmg": 4
				},
				{
					"id": "AgressiveShielding",
					"name": "Tenue de bouclier agressive",
					"desc": "Si cette unité a encore de l'armure, renvoie ::value1::% des dégâts subis à l'attaquant.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 15
						}
					},
					"script": "function onDamageTaken(a) {\n\tif(skill.unit.armor > 0 && a.unit.isMelee(skill.unit))\n\t\ta.unit.damages(skill, ceil(a.dmg*vars.value1/100));\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 18,
						"y": 1
					}
				},
				{
					"id": "PowerfulBackhand",
					"name": "Puissant revers",
					"desc": "Après avoir subi une attaque de la part de son adversaire engagé, réplique avec une attaque d'opportunité.\n\nUne attaque d'opportunité subie ne peut pas déclencher cet effet.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onDamageTaken(a) {\n\tif( !a.isOpportunityAttack() && a.unit == skill.unit.engagedUnit ) {\n\t\tskill.unit.opportunityAttack(a.unit, skill);\n\t}\n}",
					"notes": "",
					"done": 2,
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 0,
						"y": 2
					}
				},
				{
					"id": "AnimalLink",
					"name": "Lien animal",
					"desc": "Si cette unité termine son tour adjacente à un animal allié, elle lui applique [Deflection].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						]
					},
					"script": "function onEndTurn() {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isAnimal && u.isMelee(skill.unit) ) {\n\t\t\tu.addStatus(Status.Deflection);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 0
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "TorchStrike",
					"name": "Coup de torche",
					"desc": "Inflige [DMG] à toutes les unités dans la zone et leur applique [Burning].",
					"mode": 5,
					"range": {
						"radius": 2,
						"angle": 160,
						"type": 1,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 2,
						"tooltipStatus": [
							{
								"st": "Burning"
							}
						],
						"damageType": [
							0
						],
						"specialAnim": "AttackLeftHand",
						"apCost": 0,
						"itemCost": {
							"item": "Torch",
							"qty": 1
						},
						"fxSuffix": 2
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Burning);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 8
					},
					"minDmg": 3,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "TorchRuinsThrow",
					"name": "Lancer de torche des ruines",
					"desc": "Crée un [Fire].",
					"mode": 5,
					"range": {
						"radius": 1,
						"type": 0,
						"allowedTargets": 4,
						"baseDistance": 10
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fire"
							},
							{
								"st": "Burning"
							}
						],
						"specialAnim": "ThrowLeftGrenade",
						"apCost": 0,
						"itemCost": {
							"item": "TorchRuins",
							"qty": 3
						},
						"fxSuffix": 2
					},
					"script": "function onZoneHit(){\n\tcreateSkillZone(Skill.FireZone);\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 19
					},
					"group": 15,
					"done": 2
				},
				{
					"id": "Boarding",
					"name": "Abordage",
					"desc": "Inflige [DMG] à la cible et l'attire jusqu'en mêlée pour l'engager.",
					"mode": 1,
					"range": {
						"flags": 1,
						"baseDistance": 6
					},
					"props": {
						"vars": {
							"value1": 6
						},
						"dmgAttribute": 0,
						"apCost": 1,
						"needDisengaged": true,
						"specialAnim": "AttackLeftHand",
						"aiOrder": 1
					},
					"script": "function onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction onDamage(a) {\n\tif( a.target.isMelee(skill.unit) && a.target.side != skill.unit.side ) {\n\t\ta.target.disengage(false);\n\t\ta.target.engage(skill.unit);\n\t}\n}\n\nfunction getPushback( a ) {\n\treturn -vars.value1;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 3
					},
					"minDmg": 3,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "AxeThrow",
					"name": "Lancer de hache",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 1,
					"range": {
						"baseDistance": 4
					},
					"props": {
						"dmgAttribute": 0,
						"apCost": 0,
						"needDisengaged": true,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingAxe",
							"qty": 1
						},
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"aiOrder": 1
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 1,
						"y": 3
					},
					"minDmg": 2.5,
					"maxDmg": 5,
					"levels": [],
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "AxeThrowT2",
					"name": "Lancer de hache",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 1,
					"range": {
						"baseDistance": 4
					},
					"props": {
						"dmgAttribute": 0,
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingAxeT2",
							"qty": 1
						}
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 1,
						"y": 0
					},
					"minDmg": 3,
					"maxDmg": 5.5,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "AxeThrowT3",
					"name": "Lancer de hache",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 0,
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingAxeT3",
							"qty": 1
						}
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 1,
						"y": 1
					},
					"minDmg": 3.5,
					"maxDmg": 6,
					"group": 15,
					"done": 2
				},
				{
					"id": "AxeThrowT4",
					"name": "Lancer de hache",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 0,
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingAxeT4",
							"qty": 1
						}
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 1,
						"y": 4
					},
					"minDmg": 4,
					"maxDmg": 6,
					"done": 2
				},
				{
					"id": "PowerfulAxeThrow",
					"name": "Lancer de hache puissante",
					"desc": "Inflige [DMG] à la cible.\nIgnore la garde.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 1,
					"range": {
						"baseDistance": 4
					},
					"props": {
						"dmgAttribute": 0,
						"apCost": 0,
						"needDisengaged": true,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "PowerfulThrowingAxe",
							"qty": 1
						},
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"flags": 1,
						"feature": "Alazar1_Update"
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 3
					},
					"minDmg": 2.5,
					"maxDmg": 5,
					"levels": [],
					"done": 2
				},
				{
					"id": "PowerfulAxeThrowT2",
					"name": "Lancer de hache puissante",
					"desc": "Inflige [DMG] à la cible.\nIgnore la garde.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 1,
					"range": {
						"baseDistance": 4
					},
					"props": {
						"dmgAttribute": 0,
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "PowerfulThrowingAxeT2",
							"qty": 1
						},
						"flags": 1,
						"feature": "Alazar1_Update"
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 2,
						"y": 0
					},
					"minDmg": 3,
					"maxDmg": 5.5,
					"done": 2
				},
				{
					"id": "PowerfulAxeThrowT3",
					"name": "Lancer de hache puissante",
					"desc": "Inflige [DMG] à la cible.\nIgnore la garde.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 0,
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "PowerfulThrowingAxeT3",
							"qty": 1
						},
						"flags": 1,
						"feature": "Alazar1_Update"
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 2,
						"y": 1
					},
					"minDmg": 3.5,
					"maxDmg": 6,
					"done": 2
				},
				{
					"id": "PowerfulAxeThrowT4",
					"name": "Lancer de hache puissante",
					"desc": "Inflige [DMG] à la cible.\nIgnore la garde.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 0,
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "PowerfulThrowingAxeT4",
							"qty": 1
						},
						"flags": 1,
						"feature": "Alazar1_Update"
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 2,
						"y": 4
					},
					"minDmg": 4,
					"maxDmg": 6,
					"done": 2
				},
				{
					"id": "PoisonedThrowingKnife",
					"name": "Lancer de couteau empoisonné",
					"desc": "Inflige [DMG] à la cible et lui applique ::value1:: [Poison]s.",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 1,
						"apCost": 0,
						"needDisengaged": true,
						"specialAnim": "ThrowLeft",
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"itemCost": {
							"item": "PoisonedThrowingKnife",
							"qty": 1
						},
						"aiOrder": 1
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Poison, vars.value1);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 3
					},
					"minDmg": 2,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "PoisonedThrowingKnifeT2",
					"name": "Lancer de couteau empoisonné",
					"desc": "Inflige [DMG] à la cible et lui applique ::value1:: [Poison]s.",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 1,
						"apCost": 0,
						"needDisengaged": true,
						"specialAnim": "ThrowLeft",
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"itemCost": {
							"item": "PoisonedThrowingKnifeT2",
							"qty": 1
						},
						"aiOrder": 1
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Poison, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 3
					},
					"minDmg": 2.5,
					"maxDmg": 5.5,
					"done": 2
				},
				{
					"id": "PoisonedThrowingKnifeT3",
					"name": "Lancer de couteau empoisonné",
					"desc": "Inflige [DMG] à la cible et lui applique ::value1:: [Poison]s.",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 1,
						"apCost": 0,
						"needDisengaged": true,
						"specialAnim": "ThrowLeft",
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"itemCost": {
							"item": "PoisonedThrowingKnifeT3",
							"qty": 1
						}
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Poison, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 3,
						"y": 1
					},
					"minDmg": 3,
					"maxDmg": 6,
					"done": 2
				},
				{
					"id": "PoisonedThrowingKnifeT4",
					"name": "Lancer de couteau empoisonné",
					"desc": "Inflige [DMG] à la cible et lui applique ::value1:: [Poison]s.",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 1,
						"apCost": 0,
						"needDisengaged": true,
						"specialAnim": "ThrowLeft",
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"itemCost": {
							"item": "PoisonedThrowingKnifeT4",
							"qty": 1
						}
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Poison, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 3,
						"y": 4
					},
					"minDmg": 4,
					"maxDmg": 6,
					"done": 2
				},
				{
					"id": "ThrowingKnife",
					"name": "Lancer de couteau",
					"desc": "Inflige [DMG] à la cible.\nIgnore la garde.",
					"mode": 1,
					"range": {
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 1,
						"apCost": 0,
						"needDisengaged": true,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingKnife",
							"qty": 1
						},
						"flags": 1
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 8
					},
					"minDmg": 2.5,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "ThrowingKnifeT2",
					"name": "Lancer de couteau",
					"desc": "Inflige [DMG] à la cible.\nIgnore la garde.",
					"mode": 1,
					"range": {
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 1,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingKnifeT2",
							"qty": 1
						},
						"flags": 1,
						"aiOrder": 1
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 8
					},
					"minDmg": 3,
					"maxDmg": 5.5,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "ThrowingKnifeT3",
					"name": "Lancer de couteau",
					"desc": "Inflige [DMG] à la cible.\nIgnore la garde.",
					"mode": 1,
					"range": {
						"baseDistance": 7
					},
					"props": {
						"dmgAttribute": 1,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingKnifeT3",
							"qty": 1
						},
						"flags": 1
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 8
					},
					"minDmg": 3.5,
					"maxDmg": 6,
					"group": 15,
					"done": 2
				},
				{
					"id": "ThrowingKnifeT4",
					"name": "Lancer de couteau",
					"desc": "Inflige [DMG] à la cible.\nIgnore la garde.",
					"mode": 1,
					"range": {
						"baseDistance": 7
					},
					"props": {
						"dmgAttribute": 1,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingKnifeT4",
							"qty": 1
						},
						"flags": 1
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 8
					},
					"minDmg": 4,
					"maxDmg": 6,
					"done": 2
				},
				{
					"id": "ThrowingSickle",
					"name": "Lancer de faucille",
					"desc": "Inflige [DMG] à la cible et a ::value1::% de chances de lui appliquer un malus aléatoire pendant ::value2:: round.",
					"mode": 1,
					"range": {
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 2,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingSickle",
							"qty": 1
						},
						"vars": {
							"value1": 30,
							"value2": 1
						},
						"aiOrder": 1
					},
					"script": "function onDamage(a) {\n\tif( randInt(0, 100) <= vars.value1 ) {\n\t\tvar malus = [Status.Weakening, Status.Fragility, Status.Destabilization, Status.Vulnerability, Status.Disarm, Status.SlowReflexes, Status.NoReflexes];\n\t\tmalus = malus.filter( function(s) { return !a.target.statusResist(s) && !a.target.hasStatus(s); } );\n\t\tif( malus.length > 0 ) {\n\t\t\ta.target.addStatus(malus[randInt(0, malus.length-1)], vars.value2, true);\n\t\t}\n\t}\n}",
					"notes": "Liste des malus : Affaiblissement (non stackable)\nFragilité (non stackable)\nDéstabilisation (non stackable)\nVulnérabilité (non stackable)\nDésarmement (non stackable)\nRéflexes lents (non stackable)\nAmorphe (non stackable)",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 17
					},
					"minDmg": 2,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "ThrowingSickleT2",
					"name": "Lancer de faucille",
					"desc": "Inflige [DMG] à la cible en ignorant la [Guard].\nA ::value1::% de chances d'appliquer un malus aléatoire à la cible pendant ::value2:: round.",
					"mode": 1,
					"range": {
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 2,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"flags": 1,
						"itemCost": {
							"item": "ThrowingSickleT2",
							"qty": 1
						},
						"vars": {
							"value1": 30,
							"value2": 1
						},
						"aiOrder": 1
					},
					"script": "function onDamage(a) {\n\tif( randInt(0, 100) <= vars.value1 ) {\n\t\tvar malus = [Status.Weakening, Status.Fragility, Status.Destabilization, Status.Vulnerability, Status.Disarm, Status.SlowReflexes, Status.NoReflexes];\n\t\tmalus = malus.filter( function(s) { return !a.target.statusResist(s) && !a.target.hasStatus(s); } );\n\t\tif( malus.length > 0 ) {\n\t\t\ta.target.addStatus(malus[randInt(0, malus.length-1)], vars.value2, true);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 17
					},
					"minDmg": 2.5,
					"maxDmg": 5.5,
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "ThrowingSickleT3",
					"name": "Lancer de faucille",
					"desc": "Inflige [DMG] à la cible en ignorant la [Guard].\nA ::value1::% de chances d'appliquer un malus aléatoire à la cible pendant ::value2:: round.",
					"mode": 1,
					"range": {
						"baseDistance": 7
					},
					"props": {
						"dmgAttribute": 2,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"flags": 1,
						"itemCost": {
							"item": "ThrowingSickleT3",
							"qty": 1
						},
						"vars": {
							"value1": 30,
							"value2": 1
						}
					},
					"script": "function onDamage(a) {\n\tif( randInt(0, 100) <= vars.value1 ) {\n\t\tvar malus = [Status.Weakening, Status.Fragility, Status.Destabilization, Status.Vulnerability, Status.Disarm, Status.SlowReflexes, Status.NoReflexes];\n\t\tmalus = malus.filter( function(s) { return !a.target.statusResist(s) && !a.target.hasStatus(s); } );\n\t\tif( malus.length > 0 ) {\n\t\t\ta.target.addStatus(malus[randInt(0, malus.length-1)], vars.value2, true);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 17
					},
					"minDmg": 3,
					"maxDmg": 6,
					"group": 15,
					"done": 2
				},
				{
					"id": "ThrowingSickleT4",
					"name": "Lancer de faucille",
					"desc": "Inflige [DMG] à la cible en ignorant la [Guard].\nA ::value1::% de chances d'appliquer un malus aléatoire à la cible pendant ::value2:: round.",
					"mode": 1,
					"range": {
						"baseDistance": 7
					},
					"props": {
						"dmgAttribute": 2,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"flags": 1,
						"itemCost": {
							"item": "ThrowingSickleT4",
							"qty": 1
						},
						"vars": {
							"value1": 30,
							"value2": 1
						}
					},
					"script": "function onDamage(a) {\n\tif( randInt(0, 100) <= vars.value1 ) {\n\t\tvar malus = [Status.Weakening, Status.Fragility, Status.Destabilization, Status.Vulnerability, Status.Disarm, Status.SlowReflexes, Status.NoReflexes];\n\t\tmalus = malus.filter( function(s) { return !a.target.statusResist(s) && !a.target.hasStatus(s); } );\n\t\tif( malus.length > 0 ) {\n\t\t\ta.target.addStatus(malus[randInt(0, malus.length-1)], vars.value2, true);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 17
					},
					"minDmg": 3.5,
					"maxDmg": 6.5,
					"done": 2
				},
				{
					"id": "ThrowingSicklePetrifying",
					"name": "Lancer de faucille pétrifiante",
					"desc": "Inflige [DMG] à la cible et lui applique [Confus] pendant ::value1:: round.",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 2,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingSicklePetrifying",
							"qty": 1
						},
						"tooltipStatus": [
							{
								"st": "Confus"
							}
						],
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Confus, vars.value1);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 17
					},
					"minDmg": 2,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 15,
					"done": 2,
					"levels": []
				},
				{
					"id": "ThrowingSicklePetrifyingT2",
					"name": "Lancer de faucille pétrifiante",
					"desc": "Inflige [DMG] à la cible et lui applique [Confus] pendant ::value1:: round.",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 2,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingSicklePetrifyingT2",
							"qty": 1
						},
						"tooltipStatus": [
							{
								"st": "Confus"
							}
						],
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Confus, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 17
					},
					"minDmg": 2.5,
					"maxDmg": 5.5,
					"done": 2
				},
				{
					"id": "ThrowingSicklePetrifyingT3",
					"name": "Lancer de faucille pétrifiante",
					"desc": "Inflige [DMG] à la cible et lui applique [Confus] pendant ::value1:: round.",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 2,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingSicklePetrifyingT3",
							"qty": 1
						},
						"tooltipStatus": [
							{
								"st": "Confus"
							}
						],
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Confus, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 17
					},
					"minDmg": 3,
					"maxDmg": 6,
					"done": 2
				},
				{
					"id": "ThrowingSicklePetrifyingT4",
					"name": "Lancer de faucille pétrifiante",
					"desc": "Inflige [DMG] à la cible et lui applique [Confus] pendant ::value1:: round.",
					"mode": 1,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"dmgAttribute": 2,
						"needDisengaged": true,
						"apCost": 0,
						"specialAnim": "ThrowLeft",
						"itemCost": {
							"item": "ThrowingSicklePetrifyingT4",
							"qty": 1
						},
						"tooltipStatus": [
							{
								"st": "Confus"
							}
						],
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Confus, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 17
					},
					"minDmg": 3.5,
					"maxDmg": 6.5,
					"done": 2
				},
				{
					"id": "Blind",
					"name": "Cécité",
					"desc": "Se désengage.",
					"mode": 4,
					"range": {},
					"props": {
						"apCost": 0,
						"needDisengaged": false,
						"itemCost": {
							"item": "BlindingPowder",
							"qty": 1
						},
						"specialAnim": "ThrowGround",
						"castFx": "prefabs/fx/fight/Explosion/SmokeBomb/SmokeBomb.fx"
					},
					"script": "function onSkill() {\n\tskill.unit.disengage(false);\n\tplay();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 2,
						"y": 16
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "OdorousPowder",
					"name": "Zone odorante",
					"desc": "Tous les animaux non-engagés dans la zone se déplacent vers le point d'impact.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 6,
						"baseDistance": 6,
						"allowedTargets": 4
					},
					"props": {
						"apCost": 0,
						"specialAnim": "ThrowLeftGrenade",
						"itemCost": {
							"item": "OdorousPowder",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/OdorusPowder/OdorusPowder.fx",
						"needDisengaged": true,
						"vars": {
							"value1": 5
						},
						"flags": 96,
						"throwFx": "prefabs/fx/fight/Explosion/OdorusPowder/OdorousPowderThrowTrail.fx"
					},
					"script": "function onEval(a) {\n\tif(!a.target.isAnimal) {\n\t\ta.dontShowPreview();\n\t}\n}\n\nfunction onPostSkill() {\n\tvar targets = [];\n\tfor (t in skill.getTargets()) {\n\t\tvar dist = t.target.getPosition().distanceSq(skill.getPosition());\n\t\ttargets.push({target : t.target, dist : dist});\n\t}\n\ttargets.sort(function(a,b) {\n\t\tif (a.dist > b.dist) return 1;\n\t\tif (a.dist < b.dist) return -1;\n\t\treturn 0;\n\t});\n\tfor(t in targets) {\n\t\tif(t.target.isAnimal && !t.target.isEngaged()) {\n\t\t\tt.target.moveTo(getPushbackOrigin());\n\t\t}\n\t}\n}\n\nfunction getPushback( a ) {\n\tif( a != null && a.target.isAnimal && !a.target.isEngaged() ) {\n\t\tvar skillPos = a.getSkillPosition();\n\t\tvar uPos = a.target.getPosition();\n\t\treturn 0 - distance(skillPos.x, skillPos.y, uPos.x, uPos.y);\n\t}\n\treturn 0;\n}\n\nfunction getPushbackOrigin() {\n\treturn { skill : skill };\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 16
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "RagePowder",
					"name": "Rage animale",
					"desc": "Tous les animaux dans la zone gagnent [Fury] et [AnimalMarkedBonus].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 5,
						"baseDistance": 7,
						"allowedTargets": 4
					},
					"props": {
						"apCost": 0,
						"specialAnim": "ThrowLeftGrenade",
						"itemCost": {
							"item": "RagePowder",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/RagePowder/RagePowder.fx",
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Fury"
							},
							{
								"st": "AnimalMarkedBonus"
							}
						],
						"flags": 64,
						"throwFx": "prefabs/fx/fight/Explosion/RagePowder/RagePowderThrowTrail.fx"
					},
					"script": "function onHit(a) {\n\tif( a.target.isAnimal ) {\n\t\ta.target.addStatus(Status.AnimalMarkedBonus);\n\t\ta.target.addStatus(Status.Fury);\n\t}\n}",
					"notes": "ok vfx",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 16
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "ConfusingPowder",
					"name": "Confusion",
					"desc": "Toutes les unités dans la zone gagnent le statut [Confus].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"baseDistance": 7,
						"allowedTargets": 4
					},
					"props": {
						"apCost": 0,
						"specialAnim": "ThrowLeftGrenade",
						"itemCost": {
							"item": "ConfusingPowder",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/ConfusingPowder/ConfusingPowder.fx",
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Confus"
							}
						],
						"flags": 64,
						"throwFx": "prefabs/fx/fight/Explosion/ConfusingPowder/ConfusingPowderThrowTrail.fx"
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Confus);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 16
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "FogPowder",
					"name": "Nuage de poussière",
					"desc": "Créé un [DustFog].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 5,
						"baseDistance": 7,
						"allowedTargets": 4
					},
					"props": {
						"apCost": 0,
						"specialAnim": "ThrowLeftGrenade",
						"itemCost": {
							"item": "FogPowder",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/SmokeBomb/SmokeBomb.fx",
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "DustFog"
							}
						],
						"flags": 64
					},
					"script": "function onSkill() {\n\tcreateAreaEffect(\"Immediate\", 1 , {skillId: Skill.FogZone} );\n\tplay();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 16
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "Flashover",
					"name": "Embrasement",
					"desc": "Inflige ::value1::% de leur [Health] maximum à toutes les cibles dans la zone et crée un [Fire].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 4,
						"baseDistance": 6
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fire"
							},
							{
								"st": "Burning"
							}
						],
						"apCost": 0,
						"specialAnim": "ThrowLeftGrenade",
						"damageType": [
							0
						],
						"itemCost": {
							"item": "IncendiaryFlask",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/Molotov/MolotovExplosion.fx",
						"vars": {
							"value1": 5
						},
						"flags": 64,
						"throwFx": "prefabs/fx/fight/Explosion/Grenade/MolotovThrowTrail.fx",
						"needDisengaged": true
					},
					"script": "function onHit(a) {\n\ta.target.damages(skill, a.target.getPercentHealth(vars.value1), true);\n}\n\nfunction onZoneHit() {\n\tcreateSkillZone(Skill.FireZone);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 9
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "PoisonPuddle",
					"name": "Flaque de poison",
					"desc": "Inflige ::value1::% de leur [Health] maximum à toutes les unités dans la zone et crée un [PoisonCloud].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 4,
						"baseDistance": 6
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "PoisonCloud"
							}
						],
						"apCost": 0,
						"specialAnim": "ThrowLeftGrenade",
						"damageType": [
							1
						],
						"itemCost": {
							"item": "PoisonedFlask",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/PoisonBomb/PoisonBomb.fx",
						"vars": {
							"value1": 5
						},
						"flags": 64,
						"throwFx": "prefabs/fx/fight/Explosion/PoisonBomb/PoisonPuddleThrowTrail.fx",
						"needDisengaged": true
					},
					"script": "function onHit(a) {\n\ta.target.damages(skill, a.target.getPercentHealth(vars.value1), true);\n}\n\nfunction onZoneHit() {\n\tcreateSkillZone(Skill.PoisonZone);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 16
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "SmallExplosion",
					"name": "Petite explosion",
					"desc": "Inflige ::value1::% de leur [Health] maximum à toutes les cibles dans la zone.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 4,
						"baseDistance": 6
					},
					"props": {
						"specialAnim": "ThrowLeftGrenade",
						"apCost": 0,
						"itemCost": {
							"item": "HandHeldFrag",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/Grenade/GrenadeBlast.fx",
						"vars": {
							"value1": 10
						},
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"flags": 66,
						"throwFx": "prefabs/fx/fight/Explosion/Grenade/BombThrowTrail.fx",
						"needDisengaged": true
					},
					"script": "function onEval(a) {\n\ta.dmg = a.target.getPercentHealth(vars.value1);\n}\n\nfunction onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 9
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "ForcedRecoil",
					"name": "Recul forcé",
					"desc": "Toutes les unités dans la zone sont repoussées de ::value1:: mètres.",
					"mode": 5,
					"range": {
						"baseDistance": 6,
						"allowedTargets": 4,
						"type": 0,
						"radius": 3
					},
					"props": {
						"specialAnim": "ThrowLeftGrenade",
						"apCost": 0,
						"itemCost": {
							"item": "HandRecoil",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/ForcedRecoil/ForcedRecoil.fx",
						"vars": {
							"value1": 2
						},
						"flags": 64,
						"throwFx": "prefabs/fx/fight/Explosion/Grenade/RecoilThrowTrail.fx"
					},
					"script": "function onHit(a) {\n\ta.target.pushback(getPushbackOrigin(), getPushback(a));\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}\n\nfunction getPushbackOrigin() {\n\treturn { skill : skill };\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 17
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "BeeBomb",
					"name": "Jet de ruche",
					"desc": "Inflige [DMG] aux unités dans la zone et créé un [BeeArea].",
					"mode": 5,
					"range": {
						"baseDistance": 6,
						"allowedTargets": 4,
						"type": 0,
						"radius": 3
					},
					"props": {
						"apCost": 0,
						"specialAnim": "ThrowLeftGrenade",
						"itemCost": {
							"item": "BeeBomb",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/Grenade/BeeBomb.fx",
						"vars": {
							"value1": 5
						},
						"flags": 64,
						"feature": "Alazar1_Update",
						"needDisengaged": true,
						"dmgAttribute": 2,
						"tooltipStatus": [
							{
								"st": "BeeArea"
							}
						]
					},
					"script": "function onZoneHit() {\n\tspawnTrap(\"BeeSwarm\");\n\t//createAreaEffect(\"Immediate\", 1 , {skillId: Skill.BeeArea} );\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 11
					},
					"group": 15,
					"minDmg": 1,
					"maxDmg": 2,
					"done": 2
				},
				{
					"id": "BeeArea",
					"name": "Essaim d'abeilles",
					"desc": "Inflige [VALUE]% dégâts à la [Health] de toute unité qui traverse ou termine son tour dans l'essaim.",
					"mode": 5,
					"range": {
						"allowedTargets": 4,
						"radius": 3
					},
					"props": {
						"flags": 128,
						"value": 10
					},
					"script": "function onZoneIn(a) {\n\ta.target.damages(skill, ceil(a.target.stats.health*skill.value/100), true);\n}\n\nfunction onZoneEndTurn(a) {\n\ta.target.damages(skill, ceil(a.target.stats.health*skill.value/100), true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 15,
					"done": 2,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 18,
						"y": 4
					}
				},
				{
					"id": "CorrosiveBomb",
					"name": "Liquide corrosif",
					"desc": "Applique [Corrosion] à tous les ennemis dans la zone.\nNon cumulable.",
					"mode": 5,
					"range": {
						"baseDistance": 6,
						"allowedTargets": 4,
						"type": 0,
						"radius": 3
					},
					"props": {
						"apCost": 0,
						"specialAnim": "ThrowLeftGrenade",
						"itemCost": {
							"item": "CorrosiveBomb",
							"qty": 1
						},
						"castFx": "prefabs/fx/fight/Explosion/Grenade/CorrosiveBomb.fx",
						"flags": 64,
						"tooltipStatus": [
							{
								"st": "Corrosion"
							}
						],
						"feature": "Alazar1_Update",
						"needDisengaged": true
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Corrosion);\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 11
					},
					"group": 15,
					"done": 2
				},
				{
					"id": "NetThrow",
					"name": "Lancer de filet",
					"desc": "Applique [Slowdown] à la cible pendant ::value1:: round.",
					"mode": 0,
					"range": {
						"baseDistance": 4
					},
					"props": {
						"apCost": 0,
						"specialAnim": "ThrowLeftGrenade",
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Slowdown"
							}
						],
						"flags": 64
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Slowdown, vars.value1, true);\n\t}\n}",
					"notes": "A NE PAS FAIRE",
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "Transmission",
					"name": "Transmission",
					"desc": "Applique ::value1:: [Fever] à tous les ennemis dans la zone.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 4,
						"baseDistance": 6
					},
					"props": {
						"vars": {
							"value1": 2
						},
						"tooltipStatus": [
							{
								"st": "Fever"
							}
						],
						"specialAnim": "ThrowLeftGrenade",
						"itemCost": {
							"item": "SwampFlask",
							"qty": 1
						},
						"flags": 64,
						"castFx": "prefabs/fx/fight/Explosion/Grenade/TransmissionBomb.fx",
						"needDisengaged": true
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Fever, vars.value1);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 0
					},
					"iconeDone": true,
					"group": 15,
					"done": 2
				},
				{
					"id": "Spraying",
					"name": "Aspersion",
					"desc": "Inflige ::value1::% de leur [Health] maximum à tous les Moustiques dans la zone.\nSi cette attaque est censée tuer un Moustique, elle le capture à la place.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 4,
						"baseDistance": 6
					},
					"props": {
						"vars": {
							"value1": 50
						},
						"flags": 66,
						"specialAnim": "ThrowLeftGrenade",
						"itemCost": {
							"item": "HaragConcoction",
							"qty": 1
						},
						"apCost": 0,
						"castFx": "prefabs/fx/fight/Explosion/Grenade/SprayingBomb.fx",
						"needDisengaged": true
					},
					"script": "function onEval(a) {\n\tif( a.target.kind == UnitClass.Mosquito ) {\n\t\ta.dmg = a.target.getPercentHealth(vars.value1);\n\t} else {\n\t\ta.cancelAttack = true;\n\t}\n}\n\nfunction onSkill() {\n\tvar capturedUnits = [];\n\tfor( a in skill.getTargets() ) {\n\t\tif( a.target.kind == UnitClass.Mosquito && a.target.health <= a.target.getPercentHealth(vars.value1) ) {\n\t\t\tcapturedUnits.push(a);\n\t\t\ta.cancelAttack = true;\n\t\t}\n\t}\n\tattack();\n\tfor( a in capturedUnits ) {\n\t\tcaptureTarget(a);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 7
					},
					"iconeDone": true,
					"levels": [],
					"group": 15,
					"done": 2
				},
				{
					"id": "DamageReturn",
					"name": "",
					"desc": "Si le porteur a encore de l'armure, renvoie ::value1::% des dégâts subis à l'attaquant.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 15
						}
					},
					"script": "function onDamageTaken(a) {\n\tif(a.target.armor > 0 && a.unit.isMelee(a.target))\n\t\ta.unit.damages(skill, ceil(a.dmg*vars.value1/100));\n}",
					"notes": "",
					"iconeDone": false,
					"group": 15,
					"done": 2,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 4,
						"y": 0
					}
				},
				{
					"id": "ValorousAxeThrow",
					"name": "Lancer de hache valeureux",
					"desc": "Après avoir utilisé une compétence coûtant de la Bravoure, cette unité inflige [DMG] à l’ennemi le plus éloigné dans un rayon de ::value1:: mètres, même si elle est engagée.\n\nCoup critique assuré contre la Meute Fantôme.",
					"mode": 2,
					"range": {
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 2,
						"vars": {
							"value1": 6
						},
						"flags": 64,
						"preventEngage": true,
						"specialAnim": "ThrowLeft",
						"feature": "Alazar1_Update"
					},
					"script": "function onEval(a) {\n\tif( a.target.kind == UnitClass.GhostBoar || a.target.kind == UnitClass.GhostWolf || a.target.kind == UnitClass.Nightmare ) {\n\t\ta.criticalHitPercent = 100;\n\t}\n}\n\nfunction onSkillPlayed(s) {\n\tvar dTmp = -1.;\n\tvar foeTmp = null;\n\tif(s.apCost < 1)\n\t\treturn;\n\tfor( u in getFoes(skill.unit) ) {\n\t\tvar d = getDistance(skill.unit, u);\n\t\tif(d > dTmp && d < vars.value1) {\n\t\t\tdTmp = d;\n\t\t\tfoeTmp = u;\n\t\t}\n\t}\n\tif (foeTmp != null) {\n\t\tspawnFx();\n\t\tattackTarget(foeTmp);\n\t}\n}",
					"notes": "",
					"done": 2,
					"iconeDone": true,
					"group": 15,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 17,
						"y": 4
					},
					"minDmg": 2
				},
				{
					"id": "Poisoning",
					"name": "Empoisonnement",
					"desc": "Inflige [DMG] à la cible et lui applique ::value1:: [Poison]s.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 1,
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"isAttack": true,
						"vars": {
							"value1": 1
						},
						"defaultAction": true,
						"extraFx": "prefabs/fx/fight/Special/AttackPoison_D.fx"
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Poison, vars.value1);\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 3,
						"y": 6
					},
					"minDmg": 7,
					"maxDmg": 9,
					"iconeDone": true,
					"group": 17,
					"done": 2
				},
				{
					"id": "ViciousShot",
					"name": "Tir vicieux",
					"desc": "Inflige [DMG] à la cible et la repousse de ::value1:: mètres.",
					"mode": 1,
					"range": {
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"needDisengaged": true,
						"vars": {
							"value1": 2
						},
						"tooltipStatus": [
							{
								"st": "Pushback"
							}
						],
						"isAttack": true,
						"defaultAction": true,
						"extraFx": "prefabs/fx/fight/Attack/Attack_B.fx"
					},
					"script": "function onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 2,
						"y": 6
					},
					"minDmg": 5,
					"maxDmg": 9,
					"iconeDone": true,
					"group": 17,
					"done": 2
				},
				{
					"id": "Obliteration",
					"name": "Oblitération",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nCoup critique assuré contre les unités empoisonnées.\n\n[CapaCritical] : Repousse de ::value1:: mètres.",
					"mode": 5,
					"range": {
						"radius": 2,
						"angle": 160,
						"type": 1,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"vars": {
							"value1": 1
						},
						"specialAnim": "AttackWide",
						"defaultAction": true,
						"tooltipStatus": [
							{
								"st": "Pushback"
							}
						]
					},
					"script": "function onEval(a) {\n\tfor( t in skill.getTargets() ) {\n\t\tif( t.target.hasStatus(Status.Poison) ) {\n\t\t\tt.criticalHitPercent = 100;\n\t\t}\n\t}\n}\n\nfunction onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n\t}\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}",
					"notes": "3",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 6
					},
					"minDmg": 7.5,
					"iconeDone": true,
					"group": 17,
					"done": 2
				},
				{
					"id": "PerniciousEngagement",
					"name": "Engagement pernicieux",
					"desc": "Inflige [DMG] à la cible.\nSi la cible est engagée avec cette compétence, lui applique [Fragility] pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"vars": {
							"value1": 1,
							"engaged": false
						},
						"defaultAction": true,
						"tooltipStatus": [
							{
								"st": "Fragility"
							}
						]
					},
					"script": "function onEval(a) {\n\tif( !a.target.isEngaged() || a.target.engagedUnit != skill.unit ) {\n\t\tvars.engaged = false;\n\t} else vars.engaged = true;\n}\n\nfunction onDamage(a) {\n\tif( a.target.isEngaged() && skill.unit.engagedUnit == a.target && !vars.engaged ) {\n\t\ta.target.addStatus(Status.Fragility, vars.value1, true);\n\t}\n}",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 0
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 17,
					"done": 2
				},
				{
					"id": "SneakyWhirlwind",
					"name": "Tourbillon sournois",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nSi cette attaque touche plusieurs unités, crée un [PoisonCloud] sous chacune d'elles.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 1,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "PoisonCloud"
							},
							{
								"st": "Poison"
							}
						],
						"defaultAction": true,
						"specialAnim": "AttackSpin"
					},
					"script": "function onPostSkill() {\n\tvar arr = [];\n\tfor( t in skill.getTargets() ) {\n\t\tif( t.dmg > 0 ) {\n\t\t\tarr.push(t.target);\n\t\t}\n\t}\n\tif( arr.length >= 2 ) {\n\t\tfor( t in arr ) {\n\t\t\tskill.unit.cast(Skill.CastPoisonZone, t, skill);\n\t\t}\n\t}\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 6
					},
					"minDmg": 6,
					"iconeDone": true,
					"group": 17,
					"done": 2
				},
				{
					"id": "TreacherousSetback",
					"name": "Revers perfide",
					"desc": "Inflige [DMG] à toutes les unités dans la zone et leur applique [Bleeding] si elles sont empoisonnées.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"defaultAction": true,
						"specialAnim": "AttackWide",
						"vars": {
							"value1": 50
						},
						"feature": "Difficulty_Update"
					},
					"script": "function onHit(a) {\n\tif( a.target.hasStatus(Status.Poison) ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "3",
					"iconeDone": true,
					"minDmg": 7.5,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 11
					},
					"group": 17,
					"levels": [],
					"done": 2
				},
				{
					"id": "DisgustForTheWeak",
					"name": "Dégoût des faibles",
					"desc": "Dégâts augmentés de ::value1::% contre les unités qui saignent, brûlent ou sont empoisonnées.\nL'effet se cumule à chaque statut.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30
						},
						"feature": "Difficulty_Update"
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\tvar nb = 0;\n\t\tif( t.target.hasStatus(Status.Bleeding) ) {\n\t\t\tnb++;\n\t\t}\n\t\tif( t.target.hasStatus(Status.Poison) ) {\n\t\t\tnb++;\n\t\t}\n\t\tif( t.target.hasStatus(Status.Burning) ) {\n\t\t\tnb++;\n\t\t}\n\t\tt.baseDamageBonus += nb*vars.value1;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 10
					},
					"group": 17,
					"done": 2
				},
				{
					"id": "RaidExperience",
					"name": "Expérience des pillages",
					"desc": "Cette unité et ses alliés ont [MischiefMakerCritical].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "MischiefMakerCritical"
							}
						],
						"feature": "Difficulty_Update"
					},
					"script": "function onBeginAction() {\n\tskill.unit.addStatus(Status.MischiefMakerCritical);\n\n\tfor(u in getAllies(skill.unit))\n\t\tu.addStatus(Status.MischiefMakerCritical);\n}\n\nfunction onDeath(a) {\n\tfor(u in getAllies(skill.unit)) {\n\t\tif(u.hasSkill(Skill.RaidExperience))\n\t\t\treturn;\n\t}\n\n\tfor(u in getAllies(skill.unit)) {\n\t\tu.cancelStatus(Status.MischiefMakerCritical);\n\t}\n}\n",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 0
					},
					"iconeDone": true,
					"group": 17,
					"done": 2
				},
				{
					"id": "RingleaderThreat",
					"name": "Menace du meneur",
					"desc": "Cette unité et ses alliés ont [CriticalLeader].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "CriticalLeader"
							}
						]
					},
					"script": "function onBeginRound() {\n\tif( !skill.unit.hasStatus(Status.CriticalLeader) ) {\n\t\tspawnFx();\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.addStatus(Status.CriticalLeader);\n\t\t}\n\t\tskill.unit.addStatus(Status.CriticalLeader);\n\t}\n}\n\nfunction onDeath(a) {\n\tif( a.target == skill.unit ) {\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.cancelStatus(Status.CriticalLeader);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 5
					},
					"iconeDone": true,
					"group": 17,
					"done": 2
				},
				{
					"id": "OathOfTheCowards",
					"name": "Serment des lâches",
					"desc": "[DamageBonusPercent] contre des cibles engagées augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30
						},
						"descPassiveGroup": "[GROUPTYPE] : [DamageBonusPercent] contre des cibles engagées augmentés de ::value1::%. Les cibles engagées deviennent des cibles prioritaires."
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target.isEngaged() ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 1
					},
					"iconeDone": true,
					"group": 17,
					"done": 2
				},
				{
					"id": "DishonorableTechnics",
					"name": "Technique déshonorante",
					"desc": "Après avoir subi ::value1:: attaques d'une unité dans un même tour, cette unité gagne [Fury].\nUne seule fois maximum par tour d'unité.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 2,
							"counter": 0
						},
						"descPassiveGroup": "[GROUPTYPE] : Après avoir subi ::value1:: attaques d'une unité dans un même tour, une unité gagne [Fury].\nUne seule fois maximum par tour d'unité.",
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						],
						"globalEvents": true
					},
					"script": "function onEndTurn() {\n\tvars.counter = 0;\n}\n\nfunction onDamageTaken(a) {\n\tif( skill.unit == a.target ) {\n\t\tvars.counter++;\n\t\tif( vars.counter == vars.value1 ) {\n\t\t\tspawnFx();\n\t\t\tskill.unit.addStatus(Status.Fury);\n\t\t}\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 17,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 1
					}
				},
				{
					"id": "FugitiveSword2HBandits",
					"name": "Tourbillon acéré",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nLes dégâts sont augmentés de ::value1::% contre les unités qui saignent.\n\n[CapaCritical] : Applique [Bleeding].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 40
						},
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"isAttack": true,
						"defaultAction": true,
						"specialAnim": "AttackSpin"
					},
					"script": "function onEval(a) {\n\tif( a.target.hasStatus(Status.Bleeding) ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}\n\nfunction onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 8
					},
					"minDmg": 8.5,
					"iconeDone": true,
					"group": 18,
					"done": 2
				},
				{
					"id": "FugitiveDaggerBandits",
					"name": "Pluie de dagues",
					"desc": "Se désengage et inflige [DMG] aux ::value1:: ennemis les plus proches dans un rayon de ::value2:: mètres.",
					"mode": 5,
					"range": {
						"baseDistance": 0,
						"radius": 4,
						"allowedTargets": 0
					},
					"props": {
						"dmgAttribute": 1,
						"isAttack": true,
						"defaultAction": true,
						"vars": {
							"value1": 3,
							"value2": 4
						},
						"specialAnim": "Throw",
						"preventEngage": true
					},
					"script": "function onSkill() {\n\tskill.unit.disengage(false);\n\tvar array = [];\n\tfor( t in getFoes(skill.unit) ) {\n\t\tvar d = getDistance(skill.unit, t);\n\t\tif( d <= vars.value2 )\n\t\t\tarray.push({ dist : d, target: t });\n\t}\n\tarray.sort(function (u1, u2) {\n\t\tif (u1.dist < u2.dist) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (u2.dist < u1.dist) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\tvar nb = min(array.length, vars.value1);\n\tfor( i in 0...nb ) {\n\t\tattackTarget(array[i].target);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 8
					},
					"minDmg": 5,
					"iconeDone": true,
					"group": 18,
					"done": 2
				},
				{
					"id": "Bravado",
					"name": "Bravade",
					"desc": "Inflige [DMG] à la cible et la force à s'engager.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onDamage(a) {\n\tif( a.target.engagedUnit != skill.unit ) {\n\t\ta.target.disengage(false);\n\t\ta.target.engage(skill.unit);\n\t}\n}",
					"notes": "3",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 6
					},
					"minDmg": 7,
					"maxDmg": 9,
					"iconeDone": true,
					"group": 19,
					"done": 2
				},
				{
					"id": "CoupDeGrace",
					"name": "Coup de grâce",
					"desc": "Cible une zone.\nInflige [DMG] à toutes les unités dans la zone au début du tour suivant ou si l'adversaire se désengage.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "Targeting"
							}
						],
						"defaultAction": true,
						"specialAnim": "AttackWide"
					},
					"script": "function onSkill() {\n\tif( waitNextTurn() ) {\n\t\tprepareAttack();\n\t\tcreateZone();\n\t\tskill.unit.addStatus(Status.Targeting);\n\t\treturn;\n\t}\n\tattack();\n\tcancelZone();\n}",
					"notes": "4 / 1",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 6
					},
					"minDmg": 12,
					"iconeDone": true,
					"group": 19,
					"done": 2
				},
				{
					"id": "IncendiaryArrow",
					"name": "Flèche incendiaire",
					"desc": "Inflige [DMG] à toutes les unités dans la zone puis crée un [Fire].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"baseDistance": 12,
						"allowedTargets": 4
					},
					"props": {
						"dmgAttribute": 1,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "Fire"
							},
							{
								"st": "Burning"
							}
						],
						"damageType": [
							0
						],
						"defaultAction": true,
						"specialAnim": "AttackBellshot",
						"needDisengaged": true,
						"flags": 68,
						"castFx": "prefabs/fx/fight/AttackBellshot/FlamingArrows.fx"
					},
					"script": "function onZoneHit() {\n\tcreateSkillZone(Skill.FireZone);\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 6
					},
					"minDmg": 4.5,
					"iconeDone": true,
					"group": 19,
					"done": 2
				},
				{
					"id": "TendonRupture",
					"name": "Rupture des tendons",
					"desc": "Inflige [DMG] à la cible et lui applique [Slowdown] pendant ::value1:: rounds.\nSi elle est déjà affectée par [Slowdown], lui applique [Bleeding].",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "Slowdown"
							},
							{
								"st": "Bleeding"
							}
						],
						"defaultAction": true,
						"vars": {
							"value1": 1
						},
						"extraFx": "prefabs/fx/fight/AttackFar/AttackFar_P.fx"
					},
					"script": "function onHit(a) {\n\tif( a.target.hasStatus(Status.Slowdown) ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n\ta.target.addStatus(Status.Slowdown, vars.value1, true);\n}",
					"notes": "2",
					"minDmg": 6.5,
					"maxDmg": 8.5,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 1
					},
					"iconeDone": true,
					"group": 19,
					"done": 2
				},
				{
					"id": "Annihilation",
					"name": "Anéantissement",
					"desc": "Inflige [DMG] à la cible.\nLes dégâts ignorent la [Guard].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"vars": {
							"value1": 2
						},
						"defaultAction": true,
						"flags": 1
					},
					"script": "",
					"notes": "3",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 6
					},
					"minDmg": 6,
					"maxDmg": 8,
					"iconeDone": true,
					"group": 19,
					"done": 2
				},
				{
					"id": "SurpriseAttack",
					"name": "Attaque surprise",
					"desc": "Inflige [DMG] à la cible et lui applique un malus aléatoire.\n\nLe malus aléatoire change chaque combat.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 1,
						"isAttack": true,
						"vars": {
							"statusIndex": -1
						},
						"defaultAction": true,
						"feature": "Difficulty_Update"
					},
					"script": "var arr = [Status.Burning];\nfunction onInit() {\n\tvars.statusIndex = randInt(0 , arr.length-1);\n}\n\nfunction onDamage(a) {\n\ta.target.addStatus(arr[vars.statusIndex%arr.length]);\n}",
					"notes": "Ajouter les status // 2",
					"iconeDone": true,
					"minDmg": 8,
					"maxDmg": 10,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 11
					},
					"group": 19,
					"done": 2
				},
				{
					"id": "CarefulStance",
					"name": "Posture prudente",
					"desc": "Cette unité ne peut pas être [Surrounded].",
					"mode": 2,
					"range": {},
					"props": {
						"feature": "Difficulty_Update",
						"tooltipStatus": [
							{
								"st": "Surrounded"
							}
						]
					},
					"script": "function onStatus(s) {\n\tif( s.unit == skill.unit && s.kind == Status.Surrounded) {\n\t\ts.cancel;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 15
					},
					"group": 19,
					"done": 2
				},
				{
					"id": "TacticalIntelligence",
					"name": "Intelligence tactique",
					"desc": "Cette unité seule suffit à appliquer [Supported] à un allié.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Supported"
							}
						],
						"globalEvents": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 1
					},
					"iconeDone": true,
					"group": 19,
					"done": 2
				},
				{
					"id": "SurvivalStrategy",
					"name": "Stratégie de survie",
					"desc": "Cette unité et ses alliés ont [ProtectionLeader].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "ProtectionLeader"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginRound() {\n\tif( !skill.unit.hasStatus(Status.ProtectionLeader) ) {\n\t\tspawnFx();\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.addStatus(Status.ProtectionLeader);\n\t\t}\n\t\tskill.unit.addStatus(Status.ProtectionLeader);\n\t}\n}\n\nfunction onDeath(a) {\n\tif( a.target == skill.unit ) {\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.cancelStatus(Status.ProtectionLeader);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"iconeDone": true,
					"group": 19,
					"done": 2
				},
				{
					"id": "ThirstForFreedom",
					"name": "Soif de liberté",
					"desc": "Cette unité a [Galvanization] tant qu'elle est adjacente à au moins ::value1:: ennemis.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Galvanization"
							}
						],
						"descPassiveGroup": "[GROUPTYPE] : Les unités gagnent [Galvanization] tant qu'elles sont adjacentes à au moins ::value1:: ennemis."
					},
					"script": "function onBeginAction() {\n\tvar nb = 0;\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( skill.unit.isMelee(u) ) {\n\t\t\tnb++;\n\t\t}\n\t}\n\tif( nb >= vars.value1 ) {\n\t\tif( !skill.unit.hasStatus(Status.Galvanization) ) {\n\t\t\tspawnFx();\n\t\t}\n\t\tskill.unit.addStatusPersist(Status.Galvanization, skill);\n\t}\n\telse\n\t\tskill.unit.cancelStatus(Status.Galvanization, skill);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 1
					},
					"iconeDone": true,
					"group": 19,
					"done": 2
				},
				{
					"id": "Independence",
					"name": "Indépendance",
					"desc": "Les attaques de cette unité appliquent [Fragility] pendant ::value1:: round tant qu'elle est adjacente à au moins ::value2:: ennemis.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1,
							"value2": 2
						},
						"tooltipStatus": [
							{
								"st": "Fragility"
							}
						],
						"descPassiveGroup": "[GROUPTYPE] : Les attaques des unités appliquent [Fragility] pendant ::value1:: round tant qu'elles sont adjacentes à au moins ::value2:: ennemis."
					},
					"script": "function onDamageDealt(a) {\n\tvar nb = 0;\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( skill.unit.isMelee(u) ) {\n\t\t\tnb++;\n\t\t}\n\t}\n\tif( nb >= vars.value2 ) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Fragility, vars.value1, true);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 19,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 10
					}
				},
				{
					"id": "FugitiveMaceDeserters",
					"name": "Acharnement brutal",
					"desc": "Inflige [DMG] à la cible.\nSi après cette attaque, la cible a plus de la moitié de son [Armor], effectue une attaque d'opportunité contre elle.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onPostSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tif( t.target.armor > t.target.stats.armor / 2) {\n\t\t\tskill.unit.opportunityAttack(t.target, skill);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 8
					},
					"minDmg": 6,
					"maxDmg": 8,
					"iconeDone": true,
					"group": 20,
					"done": 2
				},
				{
					"id": "FugitiveAxe2HDeserters",
					"name": "Déferlement déchaîné",
					"desc": "Inflige [DMG] à la cible et gagne [Unleashed].\nCette attaque ne peut pas engager.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"preventEngage": true,
						"tooltipStatus": [
							{
								"st": "Unleashed"
							}
						]
					},
					"script": "function onDamage(a) {\n\tskill.unit.addStatus(Status.Unleashed);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 9
					},
					"minDmg": 6,
					"maxDmg": 8,
					"iconeDone": true,
					"group": 20,
					"done": 2
				},
				{
					"id": "MaintainingTheLine",
					"name": "Maintien de la ligne",
					"desc": "Inflige [DMG] à la cible et la repousse de ::value1:: mètres.\n\n[CapaCritical] : Applique [Vulnerability].",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Pushback"
							},
							{
								"st": "Vulnerability"
							}
						],
						"isAttack": true,
						"defaultAction": true,
						"feature": "Alazar1_Update"
					},
					"script": "function onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction onDamage(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Vulnerability);\n\t}\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}",
					"notes": "4",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 19
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 21,
					"done": 2
				},
				{
					"id": "ShootOrder",
					"name": "Ordre de tir",
					"desc": "Cible une zone. Effectue ::value1:: attaque d'opportunité contre le premier ennemi qui traverse la zone. ",
					"mode": 5,
					"range": {
						"type": 1,
						"angle": 60,
						"radius": 9,
						"allowedTargets": 0
					},
					"props": {
						"globalEvents": true,
						"needDisengaged": true,
						"vars": {
							"value1": 1,
							"value2": 0
						},
						"isHeroic": true,
						"tooltipStatus": [
							{
								"st": "Targeting"
							},
							{
								"st": "OpportunityAttack"
							}
						],
						"reactionSkill": true,
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onSkill() {\n\tif( waitNextTurn() ) {\n\t\tvars.value2 = 0;\n\t\tcreateZone();\n\t\treturn;\n\t}\n\tcancelZone();\n}\n\nfunction onMoveEvent(m) {\n\tskill.unit.cast(Skill.OpportunityAttack, m.unit, skill);\n\tvars.value2++ ;\n\tif( vars.value2 == vars.value1 ) {\n\t\tcancelZone();\n\t}\n}\n\nfunction onMove(m) {\n\tif( m.unit.side == skill.unit.side ) return;\n\tvar z = getZone();\n\tif( z == null ) return;\n\tm.addZoneEvent(z, onMoveEvent);\n}",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"iconeDone": true,
					"group": 21,
					"done": 2
				},
				{
					"id": "Interception",
					"name": "Interception",
					"desc": "Se désengage et charge en ligne droite. Inflige [DMG] à toutes les unités sur le chemin et applique [Slowdown] pendant ::value1:: round.",
					"mode": 3,
					"range": {
						"flags": 1,
						"baseDistance": 8
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Slowdown"
							}
						],
						"isAttack": true,
						"defaultAction": true,
						"specialAnim": "RunCharge"
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Slowdown, vars.value1, true);\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 4
					},
					"minDmg": 6.5,
					"iconeDone": true,
					"group": 21,
					"done": 2
				},
				{
					"id": "FunctionnalPairing",
					"name": "Duo fonctionnel",
					"desc": "Inflige [DMG] à la cible. Si elle est engagée avec un allié, cet allié gagne [Riposte].",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"isAttack": true,
						"defaultAction": true,
						"tooltipStatus": [
							{
								"st": "Riposte"
							}
						],
						"dmgAttribute": 0,
						"extraFx": "prefabs/fx/fight/AttackFar/AttackFar_P.fx"
					},
					"script": "function onDamage(a) {\n\tif( a.target.isEngaged() && a.target.engagedUnit.side == skill.unit.side && a.target.engagedUnit != skill.unit ) {\n\t\ta.target.engagedUnit.addStatus(Status.Riposte);\n\t}\n}",
					"notes": "3",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 7
					},
					"minDmg": 4,
					"maxDmg": 6,
					"iconeDone": true,
					"group": 21,
					"done": 2
				},
				{
					"id": "BlowsFlurry",
					"name": "Déferlante de coups",
					"desc": "Inflige ::value1:: fois [DMG] à la cible.",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 4
						},
						"isAttack": true,
						"specialAnim": "AttackFast",
						"defaultAction": true
					},
					"script": "function onEval(t) {\n\tt.attackCount = vars.value1;\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 9
					},
					"minDmg": 3,
					"iconeDone": true,
					"group": 21,
					"done": 2
				},
				{
					"id": "FractiousSequence",
					"name": "Enchaînement fracassant",
					"desc": "Inflige [DMG] à la cible. Si cette attaque n'est pas la première du tour de cette unité, ::value1::% des dégâts sont infligés également à la [Health] de la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"firstSkill": false,
							"available": false,
							"value1": 50
						},
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"globalEvents": true,
						"feature": "Difficulty_Update"
					},
					"script": "function onDamageDealt(a) {\n\tif( a.unit == skill.unit ) {\n\t\tvars.firstSkill = true;\n\t}\n}\n\nfunction onDamage(a) {\n\tif( vars.firstSkill ) {\n\t\ta.target.damages(skill, round(a.dmg * vars.value1 / 100), true);\n\t}\n}\n\nfunction onEndTurn() {\n\tvars.firstSkill = false;\n}",
					"notes": "Check si SkillPlayed = dash\nSéquence IA (d'abord coup de shield) // 2",
					"iconeDone": true,
					"minDmg": 6,
					"maxDmg": 8,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 14
					},
					"group": 21,
					"done": 2
				},
				{
					"id": "MartialImpact",
					"name": "Impact martial",
					"desc": "Inflige [DMG] à la cible et applique [Confus] pendant ::value1:: rounds.",
					"mode": 0,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Confus"
							}
						],
						"vars": {
							"value1": 1
						},
						"isHeroic": true,
						"apCost": 1,
						"dmgAttribute": 0,
						"specialAnim": "AttackShield",
						"feature": "Difficulty_Update"
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Confus, vars.value1, true);\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 10
					},
					"minDmg": 4,
					"maxDmg": 6,
					"group": 21,
					"done": 2
				},
				{
					"id": "MilitaryChoreography",
					"name": "Chorégraphie militaire",
					"desc": "Toutes les ::value1:: attaques, gagne [Fury].\n\nAttaques effectuées : ::value2::",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 3,
							"value2": 0
						},
						"feature": "Difficulty_Update",
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif( vars.value2 < vars.value1 ) {\n\t\tvars.value2++;\n\t}\n\tif( vars.value2 >= vars.value1 ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.Fury);\n\t\tvars.value2 = 0;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 11
					},
					"group": 21,
					"done": 2
				},
				{
					"id": "MedicalAssistance",
					"name": "Assistance médicale",
					"desc": "Cette unité ne peut pas être engagée.\n\nÀ la fin de son tour, soigne tous les alliés adjacents de ::value1::% de leur [Health] maximum.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 20
						},
						"specialAnim": "Heal"
					},
					"script": "function onEndTurn() {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) && u.health != u.stats.health) {\n\t\t\tspawnFx();\n\t\t\tplay();\n\t\t\tu.gainsHealth(ceil(u.stats.health*vars.value1/100));\n\t\t}\n\t}\n}",
					"notes": "IA TOMS",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 1
					},
					"iconeDone": true,
					"group": 21,
					"done": 2
				},
				{
					"id": "TrainedToKill",
					"name": "Entraînés à tuer",
					"desc": "Cette unité et ses alliés ont [TrueDamageLeader].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 5
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "TrueDamageLeader"
							}
						]
					},
					"script": "function onBeginRound() {\n\tif( !skill.unit.hasStatus(Status.TrueDamageLeader) ) {\n\t\tspawnFx();\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.addStatus(Status.TrueDamageLeader);\n\t\t}\n\t\tskill.unit.addStatus(Status.TrueDamageLeader);\n\t}\n}\n\nfunction onDamageDealt(a) {\n\tif( a.unit.hasStatus(Status.TrueDamageLeader) ) {\n\t\ta.target.damages(skill, ceil((a.target.stats.health*vars.value1)/100), true);\n\t}\n}\n\nfunction onDeath(a) {\n\tif( a.target == skill.unit ) {\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.cancelStatus(Status.TrueDamageLeader);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 5
					},
					"iconeDone": true,
					"group": 21,
					"done": 2
				},
				{
					"id": "MilitaryFormation",
					"name": "Formation militaire",
					"desc": "Chaque fois que cette unité termine son tour à côté d'un allié, elle gagne [Deflection].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						],
						"descPassiveGroup": "[GROUPTYPE] : Chaque fois qu'une unité termine son tour à côté d'un allié, elle gagne [Deflection]."
					},
					"script": "function onEndTurn() {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tskill.unit.addStatus(Status.Deflection);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 1
					},
					"iconeDone": true,
					"group": 21,
					"done": 2
				},
				{
					"id": "AloneAgainstAll",
					"name": "Seuls contre tous",
					"desc": "Cette unité a [Protection] et [Brutality] tant que son équipe est moins nombreuse.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Protection"
							},
							{
								"st": "Brutality"
							}
						],
						"descPassiveGroup": "[GROUPTYPE] : Les unités ont [Protection] et [Brutality] tant que leur équipe est moins nombreuse.",
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tvar u = getAllies(skill.unit);\n\tvar eu = getFoes(skill.unit);\n\tif( u.length < eu.length ) {\n\t\tif( !skill.unit.hasStatus(Status.Protection) || !skill.unit.hasStatus(Status.Brutality) ) {\n\t\t\tspawnFx();\n\t\t}\n\t\tskill.unit.addStatusPersist(Status.Protection, skill);\n\t\tskill.unit.addStatusPersist(Status.Brutality, skill);\n\t} else {\n\t\tskill.unit.cancelStatus(Status.Protection, skill);\n\t\tskill.unit.cancelStatus(Status.Brutality, skill);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 21,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 11
					}
				},
				{
					"id": "FugitivePolearmLegion",
					"name": "Frappe victorieuse",
					"desc": "[DMG] à la cible.\n\n[DeadlyBlow] : Double le gain de [Morale] généré par la mort de la cible.",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"extraFx": "prefabs/fx/fight/Attack/Attack_P.fx"
					},
					"script": "function onPostSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tif( !t.target.isAlive() ) {\n\t\t\tskill.unit.gainsMorale(t.target.getMorale());\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 8
					},
					"minDmg": 6,
					"maxDmg": 9,
					"iconeDone": true,
					"group": 22,
					"done": 2
				},
				{
					"id": "FugitiveBowLegion",
					"name": "Impact violent",
					"desc": "Inflige [DMG] à la cible et la repousse de ::value1:: mètres.\nLes dégâts sont appliqués à nouveau si la cible rencontre un obstacle.",
					"mode": 1,
					"range": {
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"isAttack": true,
						"defaultAction": true,
						"vars": {
							"value1": 2
						},
						"needDisengaged": true,
						"tooltipStatus": [
							{
								"st": "Pushback"
							}
						]
					},
					"script": "var arr = [];\n\nfunction onHit(a) {\n\tvar pushbackData = a.target.getPushbackData({ unit : skill.unit }, getPushback(a));\n\tif( pushbackData.touchObstacle || pushbackData.touchUnit )\n\t\tarr.push({unit : a.target, dmg : 0 });\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction onDamage(a) {\n\tfor( t in arr ) {\n\t\tif( t.unit == a.target ) {\n\t\t\tt.dmg = round(a.dmg);\n\t\t}\n\t}\n\n}\n\nfunction getPushback( a ) {\n\treturn (vars.value1);\n}\n\nfunction onPostSkill() {\n\tfor( u in arr ) {\n\t\tif( u.unit != null && u.unit.isAlive() ) {\n   \t    \tu.unit.damages( skill, u.dmg);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 9
					},
					"minDmg": 3,
					"maxDmg": 8,
					"iconeDone": true,
					"group": 22,
					"done": 2
				},
				{
					"id": "FugitiveSwordLegion",
					"name": "Déferlement frénétique",
					"desc": "Inflige [DMG] à la cible.\n\nEffectue ::value1:: attaque supplémentaire  si la cible est affectée par [Bleeding], [Burning], [Poison] (cumulable).",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Bleeding"
							},
							{
								"st": "Burning"
							},
							{
								"st": "Poison"
							}
						]
					},
					"script": "function onPostSkill() {\n\tfor( t in skill.getTargets() ) { // don't use skill.target because it can be null if unit dodge attack\n\t\tif( t.target.hasStatus(Status.Bleeding) )\n\t\t\tattack();\n\t\tif( t.target.hasStatus(Status.Burning) )\n\t\t\tattack();\n\t\tif( t.target.hasStatus(Status.Poison) )\n\t\t\tattack();\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 9
					},
					"minDmg": 7,
					"maxDmg": 9,
					"iconeDone": true,
					"group": 22,
					"done": 2
				},
				{
					"id": "ForkStrike",
					"name": "Coup de fourche",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 9
					},
					"minDmg": 3,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 23,
					"done": 2
				},
				{
					"id": "KnifeStrike",
					"name": "Coup de couteau",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 1,
						"isAttack": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 0
					},
					"minDmg": 3,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 23,
					"done": 2
				},
				{
					"id": "MaceStrike",
					"name": "Coup de masse",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 23,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 6
					},
					"minDmg": 3,
					"maxDmg": 5,
					"done": 2
				},
				{
					"id": "HeavyStrike",
					"name": "Frappe lourde",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true
					},
					"script": "",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 9
					},
					"minDmg": 6,
					"maxDmg": 12,
					"iconeDone": true,
					"group": 24,
					"done": 2
				},
				{
					"id": "StunningAssault",
					"name": "Assaut étourdissant",
					"desc": "Inflige [DMG] à la cible et lui applique [Destabilization] pendant ::value1:: round si elle est déjà engagée avec un allié.",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Destabilization"
							}
						],
						"isAttack": true,
						"vars": {
							"engaged": false,
							"value1": 1
						},
						"defaultAction": true
					},
					"script": "function onEval(a) {\n\tif( a.target.isEngaged() && a.target.engagedUnit != skill.unit ) {\n\t\tvars.engaged = true;\n\t} else vars.engaged = false;\n}\n\nfunction onDamage(a) {\n\tif( vars.engaged ) {\n\t\ta.target.addStatus(Status.Destabilization, vars.value1, true);\n\t}\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 3,
						"y": 0
					},
					"minDmg": 5,
					"maxDmg": 7.5,
					"iconeDone": true,
					"group": 24,
					"done": 2
				},
				{
					"id": "ArmorCrushing",
					"name": "Broyage d'armure",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nApplique [Bleeding] si l'[Armor] a subi des dégâts.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"specialAnim": "AttackSpin",
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onHit(a) {\n\tif( a.damagedArmor > 0 ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 2,
						"y": 9
					},
					"minDmg": 6.5,
					"iconeDone": true,
					"group": 24,
					"done": 2
				},
				{
					"id": "AttackOrder",
					"name": "Ordre d'attaque",
					"desc": "Inflige [DMG] à la cible.\n\n[Backstab] : Si la cible est engagée avec un allié, cet allié effectue une attaque d'opportunité.",
					"mode": 0,
					"range": {},
					"props": {
						"isAttack": true,
						"defaultAction": true,
						"dmgAttribute": 1,
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onDamage(a) {\n\tif( a.backstab && a.target.engagedUnit != skill.unit && a.target.engagedUnit != null ) {\n\t\ta.target.engagedUnit.opportunityAttack(a.target, skill);\n\t}\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 19,
						"y": 4
					},
					"minDmg": 3,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 24,
					"done": 2
				},
				{
					"id": "VolleyOfArrows",
					"name": "Volée de flèches",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Attaque de nouveau une fois.",
					"mode": 1,
					"range": {
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"isAttack": true,
						"needDisengaged": true,
						"defaultAction": true,
						"vars": {
							"done": false
						}
					},
					"script": "function onDamage(a) {\n\tif( a.isCritical && !vars.done ) {\n\t\tvars.done = true;\n\t}\n}\n\nfunction onPostSkill() {\n\tif(vars.done)\n\t\tattack();\n\tvars.done = false;\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 4
					},
					"minDmg": 3,
					"maxDmg": 8,
					"iconeDone": true,
					"group": 24,
					"done": 2
				},
				{
					"id": "SkillfulBackAndForth",
					"name": "Habile va-et-vient",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Cette unité gagne [Riposte].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"feature": "Difficulty_Update",
						"tooltipStatus": [
							{
								"st": "Riposte"
							}
						]
					},
					"script": "function onDamage(a) {\n\tif( a.isCritical ) {\n\t\tskill.unit.addStatus(Status.Riposte);\n\t}\n}",
					"notes": "1",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 10
					},
					"minDmg": 8,
					"maxDmg": 10,
					"group": 24,
					"done": 2
				},
				{
					"id": "QuickShieldBlow",
					"name": "Coup de bouclier rapide",
					"desc": "Après avoir attaqué, inflige [DMG] à un ennemi adjacent.",
					"mode": 2,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"specialAnim": "AttackShield",
						"feature": "Difficulty_Update",
						"preventEngage": true
					},
					"script": "function onDamageDealt(a) {\n\tif( skill.unit.isEngaged() ) {\n\t\tattackTarget(skill.unit.engagedUnit);\n\t}\n\tif( !skill.unit.isEngaged() ) {\n\t\tfor( u in getFoes(skill.unit) ) {\n\t\t\tif( u.isMelee(skill.unit) ) {\n\t\t\t\tattackTarget(u);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 10
					},
					"minDmg": 2,
					"group": 24,
					"done": 2
				},
				{
					"id": "MeasuredResponse",
					"name": "Réponse mesurée",
					"desc": "Chaque fois que cette unité reçoit un coup critique en mêlée, elle effectue une attaque d'opportunité.",
					"mode": 2,
					"range": {},
					"props": {
						"feature": "Difficulty_Update"
					},
					"script": "function onDamageTaken(a) {\n\tif( a.isCritical ) {\n\t\tskill.unit.opportunityAttack(a.unit, skill);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 11
					},
					"group": 24,
					"done": 2
				},
				{
					"id": "SkilledClearance",
					"name": "Habile dégagement",
					"desc": "Si cette unité termine son tour engagée, elle effectue une attaque d'opportunité critique contre son adversaire puis se désengage.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onEndTurn() {\n\tif( skill.unit.isEngaged() ) {\n\t\tfor( u in getFoes(skill.unit) ) {\n\t\t\tif( skill.unit.engagedUnit == u ) {\n\t\t\t\tspawnFx();\n\t\t\t\tskill.unit.opportunityAttack(u, skill);\n\t\t\t\tskill.unit.disengage(false);\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 1
					},
					"iconeDone": true,
					"group": 24,
					"done": 2
				},
				{
					"id": "Exaltation",
					"name": "Exaltation",
					"desc": "Cette unité et ses alliés ont [InspirationLeader].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "InspirationLeader"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginRound() {\n\tif( !skill.unit.hasStatus(Status.InspirationLeader) ) {\n\t\tspawnFx();\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.addStatus(Status.InspirationLeader);\n\t\t}\n\t\tskill.unit.addStatus(Status.InspirationLeader);\n\t}\n}\n\nfunction onDeath(a) {\n\tif( a.target == skill.unit ) {\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.cancelStatus(Status.InspirationLeader);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 18
					},
					"iconeDone": true,
					"group": 24,
					"done": 2
				},
				{
					"id": "ForcefulRelease",
					"name": "Dégagement par la force",
					"desc": "Si cette unité commence son tour engagée, elle effectue une attaque d'opportunité en fin de tour.",
					"mode": 2,
					"range": {},
					"props": {
						"descPassiveGroup": "[GROUPTYPE] : Si une unité termine son tour engagée, elle effectue une attaque d'opportunité.",
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "var engaged = false;\nfunction onBeginTurn() {\n\tengaged = skill.unit.isEngaged();\n}\n\nfunction onEndTurn() {\n\tif ( engaged && skill.unit.isEngaged() ) {\n\t\tspawnFx();\n\t\tengaged = false;\n\t\tskill.unit.opportunityAttack(skill.unit.engagedUnit, skill);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 1
					},
					"iconeDone": true,
					"group": 24,
					"done": 2
				},
				{
					"id": "CloseRanks",
					"name": "Rang serrés",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% par point de mouvement restant.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"descPassiveGroup": "[GROUPTYPE] : [DamageBonusPercent] augmentés de ::value1::% par point de mouvement restant."
					},
					"script": "function onSkillEval(s) {\n\tvar nb = 0;\n\tfor( t in s.getTargets() ) {\n\t\tt.baseDamageBonus = vars.value1 * t.unit.movePoints;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 24,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 12
					},
					"done": 2
				},
				{
					"id": "FervorOfTheLaw",
					"name": "Ferveur de la Loi",
					"desc": "Les dégâts des attaques d'opportunité de cette unité sont augmentés de ::value1::% et appliquent [Confus] pendant ::value2:: round.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25,
							"value2": 1
						},
						"descPassiveGroup": "[GROUPTYPE] : Les dégâts des attaques d'opportunité des unités sont augmentés de ::value1::% et appliquent [Confus] pendant ::value2:: round.",
						"tooltipStatus": [
							{
								"st": "Confus"
							}
						]
					},
					"script": "function onSkillEval(a) {\n\tif( a.kind == Skill.OpportunityAttack) {\n\t\tfor( t in a.getTargets() ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}\n\nfunction onDamageDealt(a) {\n\tif( a.skillKind == Skill.OpportunityAttack) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Confus, vars.value2, true);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 24,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 9
					}
				},
				{
					"id": "FugitiveAxe2hGuard",
					"name": "Spirale furieuse",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nSi l'attaque touche au moins ::value1:: unités, leur applique [Vulnerability].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 0,
						"specialAnim": "AttackSpin",
						"isAttack": true,
						"defaultAction": true,
						"vars": {
							"value1": 2,
							"value2": 0
						},
						"tooltipStatus": [
							{
								"st": "Vulnerability"
							}
						]
					},
					"script": "function onDamage(a) {\n\tvars.value2 = 0;\n\tfor( t in skill.getTargets() ) {\n\t\tvars.value2++;\n\t}\n\tif( vars.value2 >= vars.value1 ) {\n\t\ta.target.addStatus(Status.Vulnerability);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 8
					},
					"minDmg": 8,
					"iconeDone": true,
					"group": 25,
					"done": 2
				},
				{
					"id": "FugitiveMace2HGuard",
					"name": "Motivation calculée",
					"desc": "Cible une zone et gagne [Unwavering] pendant le ciblage.\nInflige [DMG] à toutes les unités dans la zone au début du tour suivant ou si l'adversaire se désengage.\nObtenez <apt>::value1::</apt> par unité touchée.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"allowedTargets": 5,
						"angle": 160
					},
					"props": {
						"dmgAttribute": 0,
						"specialAnim": "AttackWide",
						"isAttack": true,
						"defaultAction": true,
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Unwavering"
							}
						]
					},
					"script": "function onSkill() {\n\tif( waitNextTurn() ) {\n\t\tskill.unit.addStatus(Status.Unwavering);\n\t\tprepareAttack();\n\t\tcreateZone();\n\t\tskill.unit.addStatus(Status.Targeting);\n\t\treturn;\n\t}\n\tattack();\n\tcancelZone();\n\tskill.unit.cancelStatus(Status.Unwavering);\n}\n\nfunction onDamage(a) {\n\tskill.unit.gainsActionPoint(vars.value1);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 9
					},
					"minDmg": 8,
					"iconeDone": true,
					"group": 25,
					"done": 2
				},
				{
					"id": "Bladestorm",
					"name": "Tempête de lame",
					"desc": "Inflige [DMG] à tous les ennemis dans la zone.\nSi l'attaque touche au moins ::value1:: unités, leur applique [Fragility] pendant ::value2:: round.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 2,
							"value2": 1,
							"value3": 0
						},
						"isAttack": true,
						"specialAnim": "AttackSpin",
						"tooltipStatus": [
							{
								"st": "Fragility"
							}
						],
						"defaultAction": true
					},
					"script": "function onDamage(a) {\n\tvars.value3 = 0;\n\tfor( t in skill.getTargets() ) {\n\t\tvars.value3++;\n\t}\n\tif( vars.value3 >= vars.value1 ) {\n\t\ta.target.addStatus(Status.Fragility, vars.value2, true);\n\t}\n}",
					"notes": "3",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 9
					},
					"minDmg": 8,
					"iconeDone": true,
					"group": 26,
					"done": 2
				},
				{
					"id": "Beheading",
					"name": "Décapitation",
					"desc": "Inflige [DMG] à la cible. Si celle-ci n'a plus d'[Armor], les dégâts sont augmentés de ::value1::%.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onEval(a) {\n\tif( a.target.armor == 0 ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "3",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 9
					},
					"minDmg": 8,
					"maxDmg": 11,
					"iconeDone": true,
					"group": 26,
					"done": 2
				},
				{
					"id": "TeamStrike",
					"name": "Frappe d'équipe",
					"desc": "Inflige [DMG] à la cible. Les dégâts sont augmentés de ::value1::% pour chaque allié adjacent.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onEval(a) {\n\tvar count = 0;\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tcount++;\n\t\t}\n\t}\n\ta.baseDamageBonus += vars.value1*count;\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 9
					},
					"minDmg": 7,
					"maxDmg": 9,
					"iconeDone": true,
					"group": 26,
					"done": 2
				},
				{
					"id": "KillShot",
					"name": "Tir mortel",
					"desc": "Inflige [DMG] à la cible. Les dégâts sont augmentés de ::value1::% contre les unités ayant ::value2::% ou moins de [Health].",
					"mode": 1,
					"range": {
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"vars": {
							"value1": 50,
							"value2": 35
						},
						"isAttack": true,
						"needDisengaged": true,
						"defaultAction": true,
						"extraFx": "prefabs/fx/fight/Attack/Attack_B.fx"
					},
					"script": "function onEval(a) {\n\tvar p = 100 * (a.target.health / a.target.stats.health);\n\tif( p <= vars.value2 ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "3",
					"minDmg": 5,
					"maxDmg": 9,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 1
					},
					"iconeDone": true,
					"group": 26,
					"done": 2
				},
				{
					"id": "Massacre",
					"name": "Massacre",
					"desc": "Inflige [DMG] à toutes les unités dans la zone. Les dégâts sont augmentés de ::value1::% si cette unité est engagée.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"vars": {
							"value1": 50
						},
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"specialAnim": "AttackWide"
					},
					"script": "function onEval(a) {\n\tif( skill.unit.isEngaged() ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 9
					},
					"minDmg": 7,
					"iconeDone": true,
					"group": 26,
					"done": 2
				},
				{
					"id": "Overconfidence",
					"name": "Excès de confiance",
					"desc": "Inflige [DMG] à la cible. Si cette unité a encore de la [Guard], attaque à nouveau une fois.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"vars": {
							"done": false
						},
						"feature": "Difficulty_Update"
					},
					"script": "function onDamage(a) {\n\tif( !vars.done && skill.unit.guard > 0 && skill.unit.armor > 0 ) {\n\t\tvars.done = true;\n\t}\n}\n\nfunction onPostSkill() {\n\tif( vars.done ) {\n\t\tattack();\n\t\tvars.done = false;\n\t}\n}",
					"notes": "1",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 15
					},
					"minDmg": 6,
					"maxDmg": 8,
					"group": 26,
					"done": 2
				},
				{
					"id": "ReassuringShield",
					"name": "Bouclier rassurant",
					"desc": "Les dégâts de cette unité sont augmentés d'un montant égal à la moitié de sa [Guard].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"feature": "Difficulty_Update"
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( skill.unit.guard > 0 ) {\n\t\t\tt.baseDamageBonus += round(skill.unit.guard*vars.value1/100);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 15
					},
					"group": 26,
					"done": 2
				},
				{
					"id": "UnwaveringWill",
					"name": "Volonté indéfectible",
					"desc": "La troupe de cette unité ne peut pas perdre au moral.",
					"mode": 2,
					"range": {},
					"props": {
						"feature": "Difficulty_Update"
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 15
					},
					"group": 26,
					"done": 2
				},
				{
					"id": "EagleEye",
					"name": "Œil de lynx",
					"desc": "Au début de chaque Round, applique [Vulnerability] à l'ennemi ayant le moins de [Health] restante.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Vulnerability"
							}
						]
					},
					"script": "function onBeginRound() {\n\tvar unitMinHealth = null;\n\tvar minHealth = 1e9;\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( u.health < minHealth ) {\n\t\t\tminHealth = u.health;\n\t\t\tunitMinHealth = u;\n\t\t}\n\t}\n\tif( unitMinHealth != null ) {\n\t\tspawnFx();\n\t\tunitMinHealth.addStatus(Status.Vulnerability);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 1
					},
					"iconeDone": true,
					"group": 26,
					"done": 2
				},
				{
					"id": "AttackStrategy",
					"name": "Stratégie d'attaque",
					"desc": "Cette unité et ses alliés ont [BrutalityLeader].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "BrutalityLeader"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginRound() {\n\tif( !skill.unit.hasStatus(Status.BrutalityLeader) ) {\n\t\tspawnFx();\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.addStatus(Status.BrutalityLeader);\n\t\t}\n\t\tskill.unit.addStatus(Status.BrutalityLeader);\n\t}\n}\n\nfunction onDeath(a) {\n\tif( a.target == skill.unit ) {\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.cancelStatus(Status.BrutalityLeader);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 16
					},
					"iconeDone": true,
					"group": 26,
					"done": 2
				},
				{
					"id": "EliteMercenaries",
					"name": "Mercenaires d'élites",
					"desc": "Cette unité a [Rivalry] quand elle est engagée.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Rivalry"
							}
						],
						"globalEvents": true,
						"descPassiveGroup": "[GROUPTYPE] : Les unités ont [Rivalry] quand elles sont engagées."
					},
					"script": "function onBeginAction() {\n\tif( skill.unit.isEngaged() ) {\n\t\tif( skill.unit.addStatusPersist(Status.Rivalry, skill) ) {\n\t\t\tspawnFx();\n\t\t}\n\t} else skill.unit.cancelStatus(Status.Rivalry, skill);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 2
					},
					"iconeDone": true,
					"group": 26,
					"done": 2
				},
				{
					"id": "DuelScience",
					"name": "Science du duel",
					"desc": "Les attaques de cette unité envers son adversaire engagé appliquent [Blind].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Blind"
							}
						],
						"descPassiveGroup": "[GROUPTYPE] : Les attaques des unités envers leur adversaire engagé appliquent [Blind].",
						"vars": {
							"engaged": false
						}
					},
					"script": "function onSkillEval(a) {\n\tif( skill.unit.isEngaged() ) {\n\t\tvars.engaged = true;\n\t} else vars.engaged = false;\n}\n\nfunction onDamageDealt(a) {\n\tif( vars.engaged && a.target == skill.unit.engagedUnit ) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Blind);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 26,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 10
					}
				},
				{
					"id": "FugitiveMace2HCompanions",
					"name": "Frappe subversive",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nApplique également [Destabilization] pendant ::value1:: round à celles ayant au moins ::value2::% de [Guard].",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1,
							"value2": 30
						},
						"defaultAction": true,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "Destabilization"
							}
						],
						"specialAnim": "AttackWide"
					},
					"script": "function onDamage(a) {\n\tif( a.target.guard >= vars.value2 ) {\n\t\ta.target.addStatus(Status.Destabilization, vars.value1, true);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 8
					},
					"minDmg": 9.5,
					"iconeDone": true,
					"group": 27,
					"done": 2
				},
				{
					"id": "FugitiveAxeCompanions",
					"name": "Brise-poigne",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Applique [Disarm] à la cible pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Disarm"
							}
						]
					},
					"script": "function onDamage(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Disarm, vars.value1, true);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 8
					},
					"minDmg": 6,
					"maxDmg": 8,
					"iconeDone": true,
					"group": 27,
					"done": 2
				},
				{
					"id": "FugitiveSword2HCompanions",
					"name": "Touche incapacitante",
					"desc": "Inflige [DMG] à toutes les cibles dans la zone et leur applique [NoReflexes].",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"allowedTargets": 5,
						"angle": 160
					},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "NoReflexes"
							}
						],
						"specialAnim": "AttackWide"
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.NoReflexes);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 9
					},
					"minDmg": 6,
					"maxDmg": 8,
					"iconeDone": true,
					"group": 27,
					"done": 2
				},
				{
					"id": "ForcefulInterrogation",
					"name": "Interrogatoire musclé",
					"desc": "Inflige [DMG] à la cible et attaque de nouveau jusqu'à appliquer [Fever]. Chaque attaque augmente les chances de l'appliquer de ::value1::%.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 20,
							"value2": 0,
							"done": false
						},
						"dmgAttribute": 0,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "Fever"
							}
						],
						"defaultAction": true
					},
					"script": "function onDamage(a) {\n\tvars.value2 += vars.value1;\n\tif( proba(vars.value2) ) {\n\t\ta.target.addStatus(Status.Fever);\n\t\tvars.value2 = 0;\n\t} else {\n\t\tattack();\n\t}\n}",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 18
					},
					"minDmg": 2,
					"maxDmg": 4,
					"iconeDone": true,
					"group": 28,
					"done": 2
				},
				{
					"id": "ViolentFlogging",
					"name": "Flagellation violente",
					"desc": "Perd [VALUE] [Health] pour infliger [DMG] aux unités dans la zone en ignorant leur [Guard].",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"scaledValue": 4,
						"scaledValueAttribute": 0,
						"dmgAttribute": 0,
						"isAttack": true,
						"specialAnim": "AttackWide",
						"defaultAction": true,
						"flags": 1
					},
					"script": "function onSkill() {\n\tskill.unit.damages(skill, skill.value, true);\n\tattack();\n}",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 9
					},
					"minDmg": 12,
					"iconeDone": true,
					"group": 28,
					"done": 2
				},
				{
					"id": "JusticeHand",
					"name": "Main de la Justice",
					"desc": "Inflige [DMG] à la cible et l'attire jusqu'en mêlée pour l'engager.\nSi la cible est engagée avec cette capacité, effectue une attaque d'opportunité.",
					"mode": 0,
					"range": {
						"flags": 1,
						"baseDistance": 2
					},
					"props": {
						"vars": {
							"value1": 6,
							"engaged": false
						},
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onEval(a) {\n\tif( !a.target.isEngaged() || a.target.engagedUnit != skill.unit ) {\n\t\tvars.engaged = false;\n\t} else vars.engaged = true;\n}\n\nfunction onHit(a) {\n/*\tif( !a.target.isEngaged() || a.target.engagedUnit != skill.unit ) {\n\t\tvars.engaged = false;\n\t} else vars.engaged = true;*/\n\ta.target.pushback({ unit : skill.unit },getPushback(a));\n}\n\nfunction onDamage(a) {\n\tif( a.target.isAlive() && a.target.isMelee(skill.unit) ) {\n\t\ta.target.disengage(false);\n\t\ta.target.engage(skill.unit);\n\t\tif( a.target.isEngaged() && skill.unit.engagedUnit == a.target && !vars.engaged ) {\n\t\t\tskill.unit.opportunityAttack(a.target, skill);\n\t\t}\n\t}\n}\n\nfunction getPushback( a ) {\n\treturn -vars.value1;\n}",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 9
					},
					"minDmg": 3,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 28,
					"done": 2
				},
				{
					"id": "Hysteria",
					"name": "Histérie",
					"desc": "Inflige [DMG] à la cible. Recommence pour chaque Bonus appliqué sur la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 1,
						"isAttack": true,
						"defaultAction": true,
						"vars": {
							"value1": 1
						}
					},
					"script": "function onEval(a) {\n\tvars.value1 = 1;\n\tfor( st in a.target.getAllStatus() ) {\n\t\tif( st.isBonus ) {\n\t\t\tvars.value1++;\n\t\t}\n\t}\n\ta.attackCount = vars.value1;\n}\n\nfunction onSkill() {\n\tvar count = vars.value1;\n\tfor( i in 0...count ) {\n\t\tattack({ anim : i == count - 1 ? null : \"AttackFast\"+(i+1), fast : i < count - 1 });\n\t}\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 2
					},
					"minDmg": 6,
					"maxDmg": 8,
					"iconeDone": true,
					"group": 28,
					"done": 2
				},
				{
					"id": "ConsecratedStrike",
					"name": "Frappe consacrée",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nSi cette attaque touche plusieurs unités, crée un [Fire] sous chacune d'elles.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "Fire"
							},
							{
								"st": "Burning"
							}
						],
						"defaultAction": true,
						"specialAnim": "AttackWide",
						"animFx": "prefabs/fx/fight/AttackWide/AttackWideFire_S.fx"
					},
					"script": "function onPostSkill() {\n\tvar arr = [];\n\tfor( t in skill.getTargets() ) {\n\t\tif( t.dmg > 0 ) {\n\t\t\tarr.push(t.target);\n\t\t}\n\t}\n\tif( arr.length >= 2 ) {\n\t\tfor( t in arr ) {\n\t\tskill.unit.cast(Skill.ConsecratedStrikeZone, t, skill);\n\t\t}\n\t}\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 9
					},
					"minDmg": 8,
					"iconeDone": true,
					"group": 28,
					"done": 2
				},
				{
					"id": "ConsecratedStrikeZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 0.9,
						"allowedTargets": 4,
						"baseDistance": 10000
					},
					"props": {},
					"script": "function onSkill() {\n\tcreateAreaEffect(\"Immediate\", 1 , {skillId: Skill.FireZone} );\n}",
					"notes": "",
					"iconeDone": true,
					"group": 28,
					"done": 2
				},
				{
					"id": "EyeArrow",
					"name": "Flèche de l'Œil",
					"desc": "Inflige [DMG] à la cible.\nSi la cible n'a ni [Guard] ni [Armor], les dégâts sont triplés.",
					"mode": 1,
					"range": {
						"minDistance": 1,
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"needDisengaged": true,
						"defaultAction": true,
						"isAttack": true,
						"vars": {
							"value1": 200
						},
						"feature": "Difficulty_Update"
					},
					"script": "function onEval(a) {\n\tif( a.target.armor == 0 ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "3",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 10
					},
					"minDmg": 3.5,
					"maxDmg": 5,
					"group": 28,
					"done": 2
				},
				{
					"id": "TargetsInSight",
					"name": "Cibles en vue",
					"desc": "Dégâts augmentés de ::value1::% pour chaque unité ennemie dans un rayon de ::value2:: mètres.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 20,
							"value2": 6
						},
						"feature": "Difficulty_Update"
					},
					"script": "function onSkillEval(a) {\n\tvar arr = [];\n\tfor ( u in getFoes(skill.unit) ) {\n\t\tif( getDistance(skill.unit, u) <= vars.value2 ) {\n\t\t\tarr.push(u);\n\t\t\tfor( t in a.getTargets() ) {\n\t\t\t\tt.baseDamageBonus += arr.length;\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 14
					},
					"group": 28,
					"done": 2
				},
				{
					"id": "FanaticAura",
					"name": "Aura de fanatique",
					"desc": "La troupe ennemie ne peut pas gagner [Galvanization].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Galvanization"
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 2
					},
					"iconeDone": true,
					"group": 28,
					"done": 2
				},
				{
					"id": "IronWill",
					"name": "Volonté de fer",
					"desc": "Cette unité et ses alliés ont [DmgPerBonusLeader].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"vars": {
							"value1": 40
						},
						"tooltipStatus": [
							{
								"st": "DmgPerBonusLeader"
							}
						]
					},
					"script": "function onBeginRound() {\n\tif( !skill.unit.hasStatus(Status.DmgPerBonusLeader) ) {\n\t\tspawnFx();\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.addStatus(Status.DmgPerBonusLeader);\n\t\t}\n\t\tskill.unit.addStatus(Status.DmgPerBonusLeader);\n\t}\n}\n\nfunction onDeath(a) {\n\tif( a.target == skill.unit ) {\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.cancelStatus(Status.DmgPerBonusLeader);\n\t\t}\n\t}\n}\n\nfunction onSkillEval(a) {\n\tif( a.unit.side == skill.unit.side ) {\n\t\tvar count = 0;\n\t\tfor( t in a.getTargets() ) {\n\t\t\tfor( st in t.target.getAllStatus() ) {\n\t\t\t\tif( st.isBonus ) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tt.baseDamageBonus += vars.value1*count;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 3,
						"y": 18
					},
					"iconeDone": true,
					"group": 28,
					"done": 2
				},
				{
					"id": "ExhilaratingFervour",
					"name": "Ferveur exaltante",
					"desc": "Si cette unité engage elle-même un adversaire, elle effectue une attaque d'opportunité.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"engaged": false
						},
						"descPassiveGroup": "[GROUPTYPE] : Si une unité engage elle-même un adversaire, elle effectue une attaque d'opportunité.",
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onSkillEval(a) {\n\tif( skill.unit.isEngaged() ) {\n\t\tvars.engaged = true;\n\t} else vars.engaged = false;\n}\n\nfunction onSkillPlayed(a) {\n\tif( skill.unit.isEngaged() && !vars.engaged ) {\n\t\tspawnFx();\n\t\tskill.unit.opportunityAttack(skill.unit.engagedUnit, skill);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 2
					},
					"iconeDone": true,
					"group": 28,
					"done": 2
				},
				{
					"id": "Penance",
					"name": "Pénitence",
					"desc": "Chaque fois que la [Health] de cette unité subit des dégâts, elle gagne ::value1:: [AnimalMarkedBonus]",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						},
						"descPassiveGroup": "[GROUPTYPE] : Chaque fois que la [Health] d'une unité subit des dégâts, elle gagne ::value1:: [AnimalMarkedBonus]",
						"tooltipStatus": [
							{
								"st": "AnimalMarkedBonus"
							}
						]
					},
					"script": "function onHealthDamaged(a) {\n\tif( a.amount > 0 ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 28,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 0,
						"y": 0
					}
				},
				{
					"id": "FugitiveSwordInquisition",
					"name": "Châtiment",
					"desc": "Inflige [DMG] à la cible.\nLes dégâts sont augmentés de ::value1::% contre les cibles sans [Guard].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 40
						},
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onEval(a) {\n\tif( a.guard == 0 ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 8
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 29,
					"done": 2
				},
				{
					"id": "FugitiveMaceInquisition",
					"name": "Jeunesse éternelle",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nSi cette attaque touche plusieurs unités, cette unité se soigne de ::value1::% de sa [Health] maximum.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"specialAnim": "AttackWide",
						"vars": {
							"value1": 20
						}
					},
					"script": "function onPostSkill() {\n\tvar arr = [];\n\tfor( t in skill.getTargets() ) {\n\t\tif( t.dmg > 0 ) {\n\t\t\tarr.push(t.target);\n\t\t}\n\t}\n\tif( arr.length >= 2 ) {\n\t\tskill.unit.gainsHealth(ceil(skill.unit.stats.health*vars.value1/100));\n\t}\n}",
					"notes": "",
					"minDmg": 8,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 10
					},
					"iconeDone": true,
					"group": 29,
					"done": 2
				},
				{
					"id": "WildMarking",
					"name": "Marquage sauvage",
					"desc": "Inflige [DMG] à la cible et lui applique [AnimalMarked].",
					"mode": 1,
					"range": {
						"baseDistance": 4
					},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"tooltipStatus": [
							{
								"st": "AnimalMarked"
							}
						],
						"specialAnim": "Throw"
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.AnimalMarked);\n}",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 5
					},
					"minDmg": 6,
					"maxDmg": 12,
					"iconeDone": true,
					"group": 30,
					"done": 2
				},
				{
					"id": "Logging",
					"name": "Bûcheronnage",
					"desc": "Inflige [DMG] aux unité dans la zone.\nSe relance pour chaque unité touchée qui saigne.",
					"mode": 5,
					"range": {
						"radius": 2,
						"angle": 160,
						"type": 1,
						"allowedTargets": 5
					},
					"props": {
						"vars": {
							"value1": 1
						},
						"isAttack": true,
						"defaultAction": true,
						"dmgAttribute": 0,
						"specialAnim": "AttackWide"
					},
					"script": "function onEval(a) {\n\tvars.value1 = 1;\n\tfor( t in skill.getTargets() )\n\t\tfor( st in t.target.getAllStatus() ) {\n\t\t\tif( st.kind == Status.Bleeding ) {\n\t\t\t\tvars.value1++;\n\t\t\t}\n\t\t}\n\ta.attackCount = vars.value1;\n}\n\nfunction onSkill() {\n\tvar count = vars.value1;\n\tfor( i in 0...count ) {\n\t\tattack();\n\t}\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 5
					},
					"minDmg": 5.5,
					"iconeDone": true,
					"group": 30,
					"done": 2
				},
				{
					"id": "NaturalStrike",
					"name": "Frappe naturelle",
					"desc": "Inflige [DMG] à la cible.\n\nCette attaque active toujours l'Huile qui est lui est appliquée.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true
					},
					"script": "",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 5
					},
					"minDmg": 8,
					"maxDmg": 10,
					"levels": [],
					"iconeDone": true,
					"group": 30,
					"done": 2
				},
				{
					"id": "Slaughter",
					"name": "Égorger",
					"desc": "Inflige [DMG] à la cible et gagne ::value1:: [AnimalMarkedBonus].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 1,
						"vars": {
							"value1": 3
						},
						"tooltipStatus": [
							{
								"st": "AnimalMarkedBonus"
							}
						],
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onDamage(a) {\n\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n}",
					"notes": "1",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 5
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 30,
					"done": 2
				},
				{
					"id": "FeralSoul",
					"name": "Âme farouche",
					"desc": "Cette unité a [Berserk].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Berserk"
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 5
					},
					"iconeDone": true,
					"group": 30,
					"done": 2
				},
				{
					"id": "WildShot",
					"name": "Tir sauvage",
					"desc": "Inflige ::value1:: fois [DMG] à la cible. \nSi la cible est engagée avec un animal allié, coup critique assuré.",
					"mode": 1,
					"range": {
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"needDisengaged": true,
						"defaultAction": true,
						"isAttack": true,
						"vars": {
							"value1": 1
						},
						"extraFx": "prefabs/fx/fight/Attack/Attack_B.fx"
					},
					"script": "function onEval(a) {\n\tif( a.target.isEngaged() && a.target.engagedUnit.isAnimal ) {\n\t\ta.criticalHitPercent = 100;\n\t}\n}\n\nfunction onSkill() {\n\tvar count = vars.value1;\n\tfor( i in 0...count ) {\n\t\tattack();\n\t}\n}",
					"notes": "2",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 5
					},
					"minDmg": 4.5,
					"maxDmg": 8.5,
					"iconeDone": true,
					"group": 30,
					"done": 2
				},
				{
					"id": "HuntingSecretTechnique",
					"name": "Technique secrète de chasse",
					"desc": "Inflige [DMG] à la cible.\nFrappe de nouveau si la cible a déjà un malus.\nFrappe de nouveau si un animal allié est adjacent à la cible.\nFrappe de nouveau si la [Health] de la cible est entamée.",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"feature": "Difficulty_Update",
						"vars": {
							"processDone": false
						}
					},
					"script": "function onDamage(a) {\n\tif (!vars.processDone){\n\t\tvar nbAtk = 0;\n\t\tfor (st in a.target.getAllStatus())\n\t\t\tif(st.isMalus){\n\t\t\t\tnbAtk++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tfor (u in getAllies(skill.unit))\n\t\t\tif( u.isAnimal && u.isMelee(a.target)){\n\t\t\t\tnbAtk++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (a.target.health != a.target.stats.health)\n\t\t\tnbAtk++;\n\t\tvars.processDone = true;\n\t\tfor (i in 0...nbAtk)\n\t\t\tattackTarget(a.target);\n\t}\n}\n\nfunction onPostSkill() {\n\tvars.processDone = false;\n}",
					"notes": "3",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 16
					},
					"minDmg": 4.5,
					"maxDmg": 5.5,
					"group": 30,
					"done": 2
				},
				{
					"id": "WildComplaint",
					"name": "Complainte sauvage",
					"desc": "Quand cette unité meurt, elle appelle ::value1:: Ours en renfort.",
					"mode": 2,
					"range": {},
					"props": {
						"feature": "Difficulty_Update",
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDeath(a) {\n\tif ( a.target == skill.unit ) {\n\t\tspawnRenfort(UnitClass.Bear, vars.value1, false);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 11
					},
					"group": 30,
					"done": 2
				},
				{
					"id": "AlphaAura",
					"name": "Aura de l'alpha",
					"desc": "Tous les animaux alliés ont [Savagery].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"specialAnim": "Taunt",
						"tooltipStatus": [
							{
								"st": "Savagery"
							}
						]
					},
					"script": "function onBeginAction() {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isAnimal ) {\n\t\t\tu.addStatusPersist(Status.Savagery, skill);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 5
					},
					"iconeDone": true,
					"group": 30,
					"done": 2
				},
				{
					"id": "AnimalUnity",
					"name": "Unité animale",
					"desc": "À la fin de son tour, cette unité soigne l'animal allié le plus proche d'un montant égal à la [Constitution] de l'animal.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"descPassiveGroup": "[GROUPTYPE] : Quand une unité non-animale termine son tour, elle soigne l'animal allié le plus proche d'un montant égal à la [Constitution] de l'animal."
					},
					"script": "function onEndTurn() {\n\tvar array = [];\n\tif( !skill.unit.isAnimal ) {\n\t\tfor( t in getAllies(skill.unit) ) {\n\t\t\tif( t.isAnimal ) {\n\t\t\t\tvar d = getDistance(skill.unit, t);\n\t\t\t\tarray.push({ dist : d, target: t });\n\t\t\t}\n\t\t}\n\t\tarray.sort(function (u1, u2) {\n\t\t\tif (u1.dist < u2.dist) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (u2.dist < u1.dist) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t\tvar nb = 1;\n\t\tnb = min(array.length, nb);\n\t\tfor( i in 0...nb ) {\n\t\t\tspawnFx();\n\t\t\tarray[i].target.gainsHealth(ceil(array[i].target.stats.health*vars.value1/100));\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 7
					},
					"iconeDone": true,
					"group": 30,
					"done": 2
				},
				{
					"id": "WildOpportunism",
					"name": "Opportunisme sauvage",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% contre les unités engagées avec des animaux alliés.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"descPassiveGroup": "[GROUPTYPE] : [DamageBonusPercent] des unités augmentés de ::value1::% contre les unités engagées avec des animaux alliés."
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target.isEngaged() && t.target.engagedUnit.isAnimal && t.target.engagedUnit != skill.unit ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 30,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 0,
						"y": 1
					}
				},
				{
					"id": "FugitiveTrackersBow",
					"name": "Tir d'ouverture",
					"desc": "Inflige [DMG] à la cible. Coup critique assuré si la cible n'a pas encore subi de dégâts.\nCette attaque ne peut pas effectuer de coup critique autrement.\n\n[CapaCritical] : Confère <apt>::value1::</apt>",
					"mode": 1,
					"range": {
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"isAttack": true,
						"defaultAction": true,
						"vars": {
							"value1": 1
						},
						"needDisengaged": true
					},
					"script": "function onEval(a) {\n\tif( a.target.armor == a.target.stats.armor && a.target.health == a.target.stats.health ) {\n\t\ta.criticalHitPercent = 100;\n\t} else a.criticalHitPercent = 0;\n}\n\nfunction onDamage(a) {\n\tif( a.isCritical ) {\n\t\tskill.unit.gainsActionPoint(vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 8
					},
					"minDmg": 6,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 31,
					"done": 2
				},
				{
					"id": "FugitivePolearmTrackers",
					"name": "Jet puissant",
					"desc": "Inflige [DMG] à toutes les unités dans la zone, les repousse de ::value1:: mètres et leur applique [Slowdown].",
					"mode": 5,
					"range": {
						"type": 2,
						"radius": 1,
						"allowedTargets": 5,
						"baseDistance": 8
					},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Slowdown"
							}
						],
						"specialAnim": "Throw",
						"vars": {
							"value1": 2
						},
						"flags": 64
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Slowdown);\n}\n\nfunction onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction getPushback( a ) {\n\treturn (vars.value1);\n}\n",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 9
					},
					"minDmg": 5.5,
					"iconeDone": true,
					"group": 31,
					"done": 2
				},
				{
					"id": "CautiousStrike",
					"name": "Frappe prudente",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Applique [Weakening] ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Weakening"
							}
						],
						"isAttack": true,
						"defaultAction": true,
						"feature": "Alazar1_Update",
						"vars": {
							"value1": 1
						}
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Weakening, vars.value1, true);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 12
					},
					"minDmg": 8,
					"maxDmg": 10,
					"done": 2
				},
				{
					"id": "MudShot",
					"name": "Tir de boue",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\nPuis, génère une flaque de boue.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"baseDistance": 8,
						"allowedTargets": 4
					},
					"props": {
						"dmgAttribute": 1,
						"specialAnim": "AttackBellshot",
						"needDisengaged": true,
						"flags": 68,
						"feature": "Alazar1_Update",
						"castFx": "prefabs/fx/fight/AttackBellshot/MudArrows.fx",
						"isAttack": true
					},
					"script": "function onZoneHit() {\n\tcreateSkillZone(Skill.MudZone);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 11
					},
					"minDmg": 5.5,
					"done": 2
				},
				{
					"id": "PreservingStrike",
					"name": "Frappe préservatrice",
					"desc": "Inflige [DMG] à la cible et gagne [ToPosition] pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "ToPosition"
							}
						],
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDamageDealt(a) {\n\tif ( a.skillKind != skill.kind || a.unit != skill.unit ) return;\n\ta.unit.addStatus(Status.ToPosition, vars.value1, true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 13
					},
					"minDmg": 6,
					"maxDmg": 8,
					"done": 2
				},
				{
					"id": "DefensivePrecision",
					"name": "Précision défensive",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Gagne [Deflection].",
					"mode": 0,
					"range": {
						"baseDistance": 3
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						],
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true
					},
					"script": "function onDamageDealt(a) {\n\tif ( a.skillKind != skill.kind || a.unit != skill.unit ) return;\n\tif ( a.isCritical ) {\n\t\ta.unit.addStatus(Status.Deflection);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 12
					},
					"minDmg": 8,
					"maxDmg": 10,
					"done": 2
				},
				{
					"id": "UnsettlingStrike",
					"name": "Frappe déconcertante",
					"desc": "Inflige [DMG] à la cible.\n\n[CapaCritical] : Applique [Destabilization] pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Destabilization"
							}
						],
						"defaultAction": true,
						"isAttack": true,
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						}
					},
					"script": "function onHit(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Destabilization, vars.value1, true);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 13
					},
					"minDmg": 8,
					"maxDmg": 10,
					"done": 2
				},
				{
					"id": "FortifyingStrike",
					"name": "Frappe fortifiante",
					"desc": "Inflige [DMG] à la cible et gagne ::value1:: [Entrenched].\n\n[CapaCritical] : Gagne ::value2:: [Entrenched] supplémentaires.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 1,
							"value2": 1
						},
						"tooltipStatus": [
							{
								"st": "Entrenched"
							}
						],
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true
					},
					"script": "function onDamageDealt(a) {\n\tif ( a.skillKind != skill.kind || a.unit != skill.unit ) return;\n\ta.unit.addStatus(Status.Entrenched, vars.value1);\n\tif( a.isCritical ){\n\t\ta.unit.addStatus(Status.Entrenched, vars.value2);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 14
					},
					"minDmg": 8,
					"maxDmg": 10,
					"done": 2
				},
				{
					"id": "BackEyed",
					"name": "Yeux dans le dos",
					"desc": "Cette unité a [BackEyed].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "BackEyed"
							}
						]
					},
					"script": "function onBeginRound() {\n\tskill.unit.addStatus(Status.BackEyed);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 15
					},
					"done": 2
				},
				{
					"id": "Unwavering",
					"name": "Unwavering",
					"desc": "Cette unité a [Unwavering].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Unwavering"
							}
						]
					},
					"script": "function onBeginRound() {\n\tskill.unit.addStatus(Status.Unwavering);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 5
					},
					"done": 2
				},
				{
					"id": "SupportLeader",
					"name": "Support du chef",
					"desc": "Cette unité et ses alliés ont [SupportLeader].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "SupportLeader"
							}
						]
					},
					"script": "function onBeginRound() {\n\tif( !skill.unit.hasStatus(Status.SupportLeader) ) {\n\t\tspawnFx();\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.addStatus(Status.SupportLeader);\n\t\t}\n\t\tskill.unit.addStatus(Status.SupportLeader);\n\t}\n}\n\nfunction onDeath(a) {\n\tif( a.target == skill.unit ) {\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tu.cancelStatus(Status.SupportLeader);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 15
					},
					"done": 2
				},
				{
					"id": "CritOnEngaged",
					"name": "Acharnement",
					"desc": "[CritHitPercent] contre des cibles engagées augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target.isEngaged() ) {\n\t\t\tt.criticalHitPercent += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 16
					},
					"done": 2
				},
				{
					"id": "ExtremeResilience",
					"name": "Résilience extrême",
					"desc": "Tant que cette unité n'a pas de [Guard], ses attaques appliquent [Vulnerability].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Vulnerability"
							}
						],
						"descPassiveGroup": "[GROUPTYPE] : Tant que les unités n'ont pas de [Guard], leurs attaques appliquent [Vulnerability]."
					},
					"script": "function onDamageDealt(a) {\n\tif( skill.unit.guard == 0) {\n\t\ta.target.addStatus(Status.Vulnerability);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 32,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 18,
						"y": 3
					}
				},
				{
					"id": "DodgeEndTurn",
					"name": "Esquive",
					"desc": "À la fin de son tour, cette unité gagne [Dodge].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Dodge"
							}
						]
					},
					"script": "function onEndTurn() {\n\tskill.unit.addStatus(Status.Dodge);\n\tspawnFx();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 10
					},
					"iconeDone": true,
					"group": 33,
					"done": 2
				},
				{
					"id": "TuskBlow",
					"name": "Coup de défense",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"aiOrder": 1,
						"powerScale": 0.7
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 0
					},
					"minDmg": 6.5,
					"maxDmg": 8.5,
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "WildImpalement",
					"name": "Empalement sauvage",
					"desc": "Inflige [DMG] à la cible.\nCoup critique assuré si la cible est déjà engagée avec un allié.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"attacks": 1
						},
						"dmgAttribute": 0,
						"aiOrder": 1
					},
					"script": "function onEval(a) {\n\tif( a.target.isEngaged() && a.target.engagedUnit != skill.unit ) {\n\t\ta.criticalHitPercent = 100;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 16
					},
					"minDmg": 6.5,
					"maxDmg": 8.5,
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "ForestGuardian",
					"name": "Gardien de la forêt",
					"desc": "Chaque fois qu'un animal allié meurt, cette unité gagne [Fury].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						]
					},
					"script": "function onDeath(a) {\n\tif( a.target.isAnimal && a.target.side == skill.unit.side && a.target != skill.unit ) {\n\t\tif( skill.unit.addStatus(Status.Fury) ) {\n\t\t\tspawnFx();\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 5
					},
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "PathogenicBite",
					"name": "Morsure pathogène",
					"desc": "Inflige [DMG] à la cible et lui applique [Bleeding].\nSi elle saigne déjà, lui applique ::value1:: [Poison].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Bleeding"
							},
							{
								"st": "Poison"
							}
						],
						"vars": {
							"value1": 1
						},
						"aiOrder": 1,
						"powerScale": 0.7
					},
					"script": "function onHit(a) {\n\tif( a.target.hasStatus(Status.Bleeding) ) {\n\t\ta.target.addStatus(Status.Poison, vars.value1);\n\t}\n\ta.target.addStatus(Status.Bleeding);\n}",
					"notes": "",
					"minDmg": 5,
					"maxDmg": 7,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 5
					},
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "SwampGuardian",
					"name": "Gardien des marais",
					"desc": "Quand cette unité meurt, une Nuée de moustiques se forme.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onDeath(a) {\n\tif ( a.target == skill.unit ) {\n\t\tspawnTrap(\"mosquitoSwarm\");\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 6
					},
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "Mistrust",
					"name": "Défiance",
					"desc": "Chaque fois que cette unité termine son tour adjacente à une unité ennemie, elle gagne [Riposte].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Riposte"
							}
						],
						"descPassiveGroup": "[GROUPTYPE] : Chaque fois qu'une unité termine son tour adjacente à une unité ennemie, elle gagne [Riposte]."
					},
					"script": "function onEndTurn() {\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tskill.unit.addStatus(Status.Riposte);\n\t\t}\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 19,
						"y": 0
					}
				},
				{
					"id": "NonStopableCharge",
					"name": "Charge inéluctable",
					"desc": "Se désengage et charge en ligne droite. Inflige [DMG] à toutes les unités sur le chemin.",
					"mode": 3,
					"range": {
						"flags": 1,
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 0,
						"apCost": 1,
						"aiOrder": 0
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 18
					},
					"minDmg": 2,
					"maxDmg": 5,
					"done": 2
				},
				{
					"id": "ShaggyCreature",
					"name": "Créature hirsute",
					"desc": "Chaque fois que cette unité subit un coup critique, elle gagne [Riposte].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Riposte"
							}
						]
					},
					"script": "function onDamageTaken(a) {\n\tif( a.isCritical ) {\n\t\tskill.unit.addStatus(Status.Riposte);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 6
					},
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "ThickSkin",
					"name": "Peau épaisse",
					"desc": "[DamageTakenPercent] réduits de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						},
						"attributes": [
							{
								"kind": "DamageReducePercent",
								"value": 25
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 6
					},
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "GoodCompanion",
					"name": "Bon compagnon",
					"desc": "Cette unité peut être assignée au Feu de camp.",
					"mode": 6,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 6
					},
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "DraughtBoar",
					"name": "Sanglier de trait",
					"desc": "[Transport] augmenté de ::value1::.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 20
						},
						"attributes": [
							{
								"kind": "Transport",
								"value": 20
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 6
					},
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "FarmedBoar",
					"name": "Sanglier d'élevage",
					"desc": "Cette unité peut désormais être abattue pour sa viande.\n\nLa bête mange les restes et réduit sa consommation de Nourriture de ::value1::.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						},
						"bonuses": [
							{
								"bonus": "CanBeExecuted",
								"value": 1
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 6
					},
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "TruffleBoar",
					"name": "Sanglier truffier",
					"desc": "Vous avez une chance de ramasser des Champignons en marchant en forêt.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"durationDaysInForest": 0.1,
							"cooldownDays": 1.5
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 6
					},
					"iconeDone": true,
					"group": 35,
					"done": 2
				},
				{
					"id": "Jostling",
					"name": "Bousculade",
					"desc": "Applique [Destabilization] à la cible pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Destabilization"
							}
						],
						"vars": {
							"value1": 1
						},
						"specialAnim": "AttackPower"
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Destabilization, vars.value1, true);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 18,
						"y": 0
					}
				},
				{
					"id": "InjuredAndDangerous",
					"name": "Blessé et dangeureux",
					"desc": "Après avoir subi une attaque, cette unité gagne ::value1:: [Enervate].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Enervate"
							}
						],
						"vars": {
							"value1": 5
						}
					},
					"script": "function onDamageTaken(a) {\n\tif(skill.unit.hasStatus(Status.Enervate) && skill.unit.getStatusCount(Status.Enervate) < vars.value1)\n\t\tskill.unit.addStatus(Status.Enervate);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 35,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 12
					},
					"done": 2
				},
				{
					"id": "Bite",
					"name": "Morsure",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"powerScale": 0.7
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 1
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 36,
					"done": 2
				},
				{
					"id": "FerociousBite",
					"name": "Morsure féroce",
					"desc": "Inflige [DMG] à la cible.\nCoup critique assuré si la cible saigne.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0
					},
					"script": "function onEval(a) {\n\tif( a.target.hasStatus(Status.Bleeding) ) {\n\t\ta.criticalHitPercent = 100;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 3
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 36,
					"done": 2
				},
				{
					"id": "SharpFangs",
					"name": "Crocs acérés",
					"desc": "Chaque attaque effectuée contre une unité sans [Armor] lui applique [Bleeding].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"check": false
						},
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						]
					},
					"script": "function onSkillEval(a) {\n\tvars.check = false;\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target.armor == 0 ) {\n\t\t\tvars.check = true;\n\t\t}\n\t}\n}\n\nfunction onDamageDealt(a) {\n\tif( vars.check ) {\n\t\tif( a.target.addStatus(Status.Bleeding) ) {\n\t\t\tspawnFx();\n\t\t}\n\t\tvars.check = false;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 0,
						"y": 6
					},
					"iconeDone": true,
					"group": 36,
					"done": 2
				},
				{
					"id": "FrostenBite",
					"name": "Morsure gelée",
					"desc": "Inflige [DMG] à la cible et lui applique [Slowdown] pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Slowdown"
							}
						],
						"feature": "Alazar1_Update",
						"powerScale": 0.7
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Slowdown, vars.value1, true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 36,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 15
					},
					"minDmg": 6,
					"maxDmg": 8,
					"done": 2
				},
				{
					"id": "FerociousFrostenBite",
					"name": "Morsure féroce gelée",
					"desc": "Inflige [DMG] à la cible et lui applique [Slowdown] pendant ::value1:: round.\nCoup critique assuré si la cible est ralentie.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Slowdown"
							}
						],
						"feature": "Alazar1_Update"
					},
					"script": "function onEval(a) {\n\tif( a.target.hasStatus(Status.Slowdown) ) {\n\t\ta.criticalHitPercent = 100;\n\t}\n}\n\nfunction onDamage(a) {\n\ta.target.addStatus(Status.Slowdown, vars.value1, true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 36,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 16
					},
					"minDmg": 6,
					"maxDmg": 8,
					"done": 2
				},
				{
					"id": "WildPack",
					"name": "Meute sauvage",
					"desc": "Chaque fois que cette unité termine son tour blessée, elle gagne ::value1:: [AnimalMarkedBonus].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "AnimalMarkedBonus"
							}
						],
						"vars": {
							"value1": 2
						},
						"descPassiveGroup": "[GROUPTYPE] : Chaque fois qu'une unité termine son tour blessée, elle gagne ::value1:: [AnimalMarkedBonus]."
					},
					"script": "function onEndTurn() {\n\tif( skill.unit.health < skill.unit.stats.health ) {\n\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 36,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 16,
						"y": 2
					}
				},
				{
					"id": "Evasion",
					"name": "Dérobade",
					"desc": "Cette unité gagne [Deflection].",
					"mode": 4,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						],
						"apCost": 1,
						"aiOrder": 1,
						"specialAnim": "Howl",
						"extraFx": "prefabs/fx/fight/Creatures/BuffCry_Wolf.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tskill.unit.addStatus(Status.Deflection);\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 36,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 19,
						"y": 2
					},
					"levels": []
				},
				{
					"id": "SnowTrackers",
					"name": "Traqueurs des neiges",
					"desc": "Les attaques portées contre des cibles ralenties voient ::value1::% de leurs dégâts répliqués directement à la [Health].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"check": false,
							"value1": 50
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onSkillEval(a) {\n\tfor( u in a.getTargets() ) {\n\t\tif( u.target.hasStatus(Status.Slowdown) ) {\n\t\t\tvars.check = true;\n\t\t}\n\t}\n}\n\nfunction onDamageDealt(a) {\n\tif( vars.check ) {\n\t\ta.target.damages(skill, round(a.dmg*vars.value1/100), true);\n\t\tvars.check = false;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 36,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 17
					},
					"done": 2
				},
				{
					"id": "Pack",
					"name": "Meute",
					"desc": "S'il y a au moins ::value1:: Loups dans la Troupe, le [CritHitPercent] de cette unité est augmenté de ::value2::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 3,
							"value2": 50
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 6
					},
					"iconeDone": true,
					"group": 36,
					"done": 2
				},
				{
					"id": "SenseOfSacrifice",
					"name": "Sens du sacrifice",
					"desc": "Tant que cette unité est non-engagée et adjacente à un allié, elle gagne [Fragility] mais confère [Protection] à cet allié.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Fragility"
							},
							{
								"st": "Protection"
							}
						]
					},
					"script": "function onBeginAction() {\n\tif( !skill.unit.isEngaged() ) {\n\t\tvar melee = false;\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tif( skill.unit.isMelee(u) ) {\n\t\t\t\tmelee = true;\n\t\t\t\tu.addStatusPersist(Status.Protection, skill);\n\t\t\t} else {\n\t\t\t\tif( u.hasStatusPersist(Status.Protection, skill) ) {\n\t\t\t\t\tvar melee = false;\n\t\t\t\t\tfor( a in getAllies(u) ) {\n\t\t\t\t\t\tif( u.isMelee(a) && a.hasSkill(Skill.SenseOfSacrifice) ) {\n\t\t\t\t\t\t\tmelee = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif( !melee ) {\n\t\t\t\t\t\tu.cancelStatus(Status.Protection, skill);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif( melee ) {\n\t\t\tskill.unit.addStatusPersist(Status.Fragility, skill);\n\t\t} else skill.unit.cancelStatus(Status.Fragility, skill);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 6
					},
					"iconeDone": true,
					"group": 36,
					"done": 2
				},
				{
					"id": "CarnivorousDiet",
					"name": "Régime carnivore",
					"desc": "Chaque fois que cette unité tue un ennemi, elle se soigne de ::value1::% de sa [Health] maximum.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"vars": {
							"value1": 50
						}
					},
					"script": "function onDeath(a) {\n\tif( a.unit == skill.unit ) {\n\t\tskill.unit.gainsHealth(ceil(skill.unit.stats.health*vars.value1/100));\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 6
					},
					"iconeDone": true,
					"group": 36,
					"done": 2
				},
				{
					"id": "LockingHisWounds",
					"name": "Lécher ses plaies",
					"desc": "Cette unité soigne ::value1::% de sa [Health] maximum et se retire tous ses Malus.",
					"mode": 4,
					"range": {},
					"props": {
						"specialAnim": "Heal",
						"apCost": 1,
						"vars": {
							"value1": 30
						},
						"needDisengaged": true,
						"cursor": "CursorHeal",
						"healPreview": 0.1
					},
					"script": "function onSkill() {\n\tskill.unit.gainsHealth(ceil(skill.unit.stats.health*vars.value1/100));\n\tfor( st in skill.unit.getAllStatus() ) {\n\t\tif( !st.isBonus && !st.isInjury) {\n\t\t\tst.cancel();\n\t\t}\n\t}\n\tplay();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 6
					},
					"iconeDone": true,
					"group": 36,
					"done": 2
				},
				{
					"id": "Watchwolf",
					"name": "Loup de garde",
					"desc": "Si votre troupe est attaquée en plein repos, elle ne subit pas [Surprised] et cette unité gagne [Galvanization].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						},
						"bonuses": [
							{
								"value": -10,
								"bonus": "RestAttackChance"
							}
						],
						"tooltipStatus": [
							{
								"st": "Surprised"
							},
							{
								"st": "Galvanization"
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 6
					},
					"iconeDone": true,
					"group": 36,
					"done": 2
				},
				{
					"id": "BornHunter",
					"name": "Chasseur né",
					"desc": "Cette unité a une chance d'attraper du Gibier pendant le Repos.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"probability": 25
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 6
					},
					"iconeDone": true,
					"group": 36,
					"done": 2
				},
				{
					"id": "MoonHowl",
					"name": "Hurlement à la lune",
					"desc": "Après avoir attaqué, cette unité applique [Frightened].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Frightened"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\ttrace(\"onDamageDealt\");\n\ta.target.addStatus(Status.Frightened);\n\ttrace(\"+++++++++++++++++++++++++++++++++++++++++++++++++++++++\");\n}",
					"notes": "",
					"iconeDone": true,
					"group": 36,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 17
					},
					"done": 2
				},
				{
					"id": "PrimalReflexes",
					"name": "Réflexes primaires",
					"desc": "Si cette unité devait recevoir un coup critique, le coup porté n'est pas critique et elle effectue une attaque d'opportunité en réponse.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target == skill.unit )\n\t\t\tt.preventCriticalHit = true;\n\t}\n}\n\nfunction onDamageTaken(a) {\n\tif( a.target == skill.unit && a.isCritical ) {\n\t\tspawnFx();\n\t\tskill.unit.opportunityAttack(skill.unit.engagedUnit, skill);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 36,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 17
					},
					"done": 1
				},
				{
					"id": "Crush",
					"name": "Bousculade",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 3
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 37,
					"done": 2
				},
				{
					"id": "DraughtHorse",
					"name": "Poney de trait",
					"desc": "[Transport] augmenté de ::value1::.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						},
						"attributes": [
							{
								"kind": "Transport",
								"value": 10
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 6
					},
					"iconeDone": true,
					"group": 37,
					"done": 2
				},
				{
					"id": "WarHorse",
					"name": "Poney de guerre",
					"desc": "Cette unité participe désormais aux combats et peut porter des plaques d'armure.",
					"mode": 2,
					"range": {},
					"props": {
						"bonuses": [
							{
								"bonus": "CanEquipArmor",
								"value": 0
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 6
					},
					"iconeDone": true,
					"group": 37,
					"done": 2
				},
				{
					"id": "Racking",
					"name": "Cabrure",
					"desc": "Applique [Inspiration] à tous les alliés dans la zone pendant ::value1:: rounds.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 4,
						"allowedTargets": 1,
						"baseDistance": 0
					},
					"props": {
						"vars": {
							"value1": 1
						},
						"apCost": 0,
						"tooltipStatus": [
							{
								"st": "Inspiration"
							}
						],
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryBlue.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Inspiration, vars.value1, true);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 4
					},
					"iconeDone": true,
					"group": 37,
					"done": 2
				},
				{
					"id": "Vigour",
					"name": "Vigueur",
					"desc": "[Constitution] augmentée de ::value::%.",
					"mode": 2,
					"range": {},
					"props": {
						"attributes": [
							{
								"kind": "Constitution",
								"value": 5,
								"isPercentage": true
							}
						],
						"value": 10
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 4
					},
					"iconeDone": true,
					"group": 37,
					"done": 2
				},
				{
					"id": "Tireless",
					"name": "Infatigable",
					"desc": "Durée de la course augmentée de ::value1::%.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 5
						},
						"bonuses": [
							{
								"bonus": "RunStamina",
								"value": 5
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 6
					},
					"iconeDone": true,
					"group": 37,
					"done": 2
				},
				{
					"id": "PlainsRunner",
					"name": "Coureur des plaines",
					"desc": "Durée de la course augmentée de ::value1::%.\n[Transport] augmenté de ::value1::.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 5
						},
						"bonuses": [
							{
								"bonus": "RunStamina",
								"value": 5
							}
						],
						"attributes": [
							{
								"kind": "Transport",
								"value": 5
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 4
					},
					"iconeDone": true,
					"group": 37,
					"done": 2
				},
				{
					"id": "KingOfGallop",
					"name": "Roi du galop",
					"desc": "[Movement] augmenté de ::value1::.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 3
						},
						"bonuses": [
							{
								"bonus": "Movement",
								"value": 3
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 4
					},
					"iconeDone": true,
					"group": 37,
					"done": 2
				},
				{
					"id": "PonyCharge",
					"name": "Charge dévastatrice",
					"desc": "Se désengage et charge en ligne droite. Inflige [DMG] à toutes les unités sur le chemin en ignorant leur [Guard].",
					"mode": 3,
					"range": {
						"flags": 1,
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"apCost": 1,
						"specialAnim": "RunCharge",
						"flags": 1
					},
					"script": "",
					"notes": "",
					"minDmg": 8,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 6
					},
					"iconeDone": true,
					"levels": [],
					"group": 37,
					"done": 2
				},
				{
					"id": "Adventurer",
					"name": "Baroudeur",
					"desc": "Cette unité profite des bonus du poteau d'attelage comme si elle était un poney de trait.",
					"mode": 6,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 37,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 14
					},
					"done": 1
				},
				{
					"id": "Traveler",
					"name": "Voyageur",
					"desc": "Peut être équipe de +::value1:: équipements",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 37,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 17
					},
					"done": 1
				},
				{
					"id": "Rampart",
					"name": "Rempart",
					"desc": "Cette unité gagne [Protection] et [ToPosition] pendant ::value1:: round.",
					"mode": 4,
					"range": {},
					"props": {
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Protection"
							},
							{
								"st": "ToPosition"
							}
						],
						"vars": {
							"value1": 1
						}
					},
					"script": "function onSkill() {\n\tskill.unit.addStatus(Status.Protection);\n\tskill.unit.addStatus(Status.ToPosition);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 37,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 12
					},
					"done": 2
				},
				{
					"id": "InfectiousBite",
					"name": "Morsure infectieuse",
					"desc": "Inflige [DMG] à la cible et lui applique ::value1:: [Fever].",
					"mode": 0,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fever"
							}
						],
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Fever, vars.value1);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 6
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "SoilTaint",
					"name": "Souillure du sol",
					"desc": "Tant que cette unité est en vie, elle génère une zone de [Poison] autour d'elle.",
					"mode": 2,
					"range": {
						"type": 0,
						"radius": 5
					},
					"props": {
						"vars": {
							"played": false,
							"value1": 2
						},
						"tooltipStatus": [
							{
								"st": "PoisonCloud"
							},
							{
								"st": "Poison"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tif ( !vars.played ) {\n\t\tcreateAreaEffect(\"Immediate\", 0 , { skillId: Skill.PoisonZone, unit: skill.unit } );\n\t\tvars.played = true;\n\t}\n}\n\nfunction onDeath(a) {\n\tremoveAllAreaEffect();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 7
					},
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "ThroatyHowl",
					"name": "Hurlement guttural",
					"desc": "Appelle des rats en renfort.\nLe nombre de rats appelés augmente de ::value1:: chaque round.\n\nRats à appeler : ::rats::",
					"mode": 4,
					"range": {},
					"props": {
						"value": 1,
						"vars": {
							"value1": 1,
							"rats": 0,
							"done": false
						},
						"specialAnim": "Howl",
						"extraFx": "prefabs/fx/fight/Rat_Matriarch/MotherRatHowl.fx"
					},
					"script": "function onBeginRound() {\n\tif( !vars.done ) {\n\t\tvars.rats = getPlayerUnits().length + vars.value1;\n\t\tvars.done = true;\n\t}\n}\n\nfunction onSkill() {\n\tplay();\n\tvars.rats += vars.value1;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 6
					},
					"levels": [],
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "Nibbling",
					"name": "Grignotage",
					"desc": "Inflige [DMG] à la cible. Si elle est déjà engagée avec un allié, les dégâts sont augmentés de ::value1::%.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"dmgAttribute": 0
					},
					"script": "function onEval(a) {\n\tif( a.target.isEngaged() && a.target.engagedUnit.side == skill.unit.side && a.target.engagedUnit != skill.unit ) {\n\t\ta.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 11
					},
					"minDmg": 5,
					"maxDmg": 7,
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "NumericalStrength",
					"name": "Force du nombre",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% pour chaque Rat-taupe allié dans un rayon de ::value2:: mètres.\n\nActuel : ::value3::%",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25,
							"value2": 6,
							"value3": 0
						}
					},
					"script": "function onBeginAction() {\n\tvar nb = 0;\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.kind == UnitClass.Molerat && getDistance(skill.unit, u) <= vars.value2 ) {\n\t\t\tnb++;\n\t\t\tvars.value3 = (vars.value1*nb);\n\t\t}\n\t}\n}\n\nfunction onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tt.baseDamageBonus += vars.value3;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 9
					},
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "Snooper",
					"name": "Fouineur",
					"desc": "Cette unité a une chance de trouver du Fromage en visitant des lieux.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"cooldownDays": 1.5
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 4
					},
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "Necrophagy",
					"name": "Nécrophagie",
					"desc": "Si cette unité tue un ennemi, elle supprime sa consommation de Nourriture pour le prochain repas.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onDeath(a) {\n\tif( a.unit == skill.unit && skill.unit.side != a.target.side ) {\n\t\tif ( skill.unit.getCounter(Counter.SatiatedRests) == 0 )\n\t\t\tskill.unit.incCounter(Counter.SatiatedRests, 1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 4
					},
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "CallOfTheSwarm",
					"name": "Appel de la nuée",
					"desc": "Appelle ::value1:: unité de son espèce en renforts.\n\nUtilisable seulement à partir de ::value2::% de [Health] restante.",
					"mode": 4,
					"range": {},
					"props": {
						"vars": {
							"value1": 1,
							"value2": 50,
							"allowed": false
						},
						"extraFx": "prefabs/fx/fight/BuffCry/BuffCryWhite.fx"
					},
					"script": "function onBeginAction() {\n\tvars.allowed = ( 100 * (skill.unit.health / skill.unit.stats.health) <= vars.value2);\n}\n\nfunction onEval(a) {\n\tvar p = 100 * (a.unit.health / a.unit.stats.health);\n\tif( p > vars.value2 ) {\n\t\tdontAllow();\n\t}\n}\n\nfunction onSkill() {\n\tspawnRenfort(skill.unit.kind, vars.value1, false);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 4
					},
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "SpeciesSurvival",
					"name": "Survie de l'espèce",
					"desc": "Si deux unités de la même espèce ont cette compétence, elles ont une chance de se reproduire et de faire naître une nouvelle unité après un Repos.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"probability": 50
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 5
					},
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "NocturnalSnarls",
					"name": "Grognements nocturnes",
					"desc": "Cette unité a [PlaguedRatEnraged] la nuit.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "PlaguedRatEnraged"
							}
						]
					},
					"script": "function onBeginAction() {\n\tif ( isNight() )\n\t\tskill.unit.addStatusPersist(Status.PlaguedRatEnraged, skill);\n\telse\n\t\tskill.unit.consumeStatus(Status.PlaguedRatEnraged);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 4
					},
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "RemarkableOrganism",
					"name": "Organisme remarquable",
					"desc": "Cette unité ne peut pas mourir de dégâts provoqués par [Bleeding], [Poison] ou [Burning].",
					"mode": 2,
					"range": {},
					"props": {
						"bonuses": [
							{
								"bonus": "CantDieFromDots",
								"value": 0
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 4
					},
					"iconeDone": true,
					"group": 38,
					"done": 2
				},
				{
					"id": "Poisoned",
					"name": "Empoisonné",
					"desc": "Chaque attaque effectuée ou subie applique ::value1:: [Poison]s à l'unité adverse.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						},
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\ta.target.addStatus(Status.Poison, vars.value1);\n}\n\nfunction onDamageTaken(a) {\n\ta.unit.addStatus(Status.Poison, vars.value1);\n}",
					"notes": "",
					"iconeDone": false,
					"group": 38,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "Immortal",
					"name": "Immortel",
					"desc": "Quand cette unité doit mourir, elle ne meurt pas.\nÀ la place, à chaque attaque subie, elle a ::value1::% de chance d'esquiver, sinon elle fuit le combat.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 70
						}
					},
					"script": "",
					"notes": "hard coded",
					"iconeDone": true,
					"group": 38,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 13
					},
					"done": 1
				},
				{
					"id": "Vomiting",
					"name": "Vomissement",
					"desc": "Chaque fois que cette unité s'engage, elle crée une zone de [Poison] autour d'elle.",
					"mode": 2,
					"range": {
						"radius": 2.5,
						"baseDistance": 0,
						"type": 0
					},
					"props": {
						"vars": {
							"engaged": false,
							"value1": 2
						},
						"tooltipStatus": [
							{
								"st": "PoisonCloud"
							},
							{
								"st": "Poison"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tif( !skill.unit.isEngaged() ) {\n\t\tvars.engaged = false;\n\t}\n}\n\nfunction onSkillPlayed(s) {\n\tif( skill.unit.isEngaged() && !vars.engaged ) {\n\t\tvars.engaged = true;\n\t\tspawnFx();\n\t\tcreateAreaEffect(\"Immediate\", 1 , {skillId: Skill.PoisonZone} );\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 8
					},
					"iconeDone": true,
					"group": 39,
					"done": 2
				},
				{
					"id": "InfectedScratch",
					"name": "Blessure infectieuse",
					"desc": "Inflige [DMG] à la cible et lui applique ::value1:: [Fever].",
					"mode": 0,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fever"
							}
						],
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"isAttack": true,
						"useWithoutWeapon": true
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Fever, vars.value1);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 8
					},
					"minDmg": 8,
					"maxDmg": 10,
					"iconeDone": true,
					"group": 39,
					"done": 2
				},
				{
					"id": "PlagueOrganism",
					"name": "Organisme pestiféré",
					"desc": "Cette unité a [Pyrophobia] et les dégâts de [Poison] régénèrent sa [Health] à la place.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"played": false
						},
						"tooltipStatus": [
							{
								"st": "Pyrophobia"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tif ( !vars.played ) {\n\t\tskill.unit.addStatusPersist(Status.Pyrophobia, skill);\n\t\tskill.unit.addStatusPersist(Status.PoisonHeal, skill);\n\t\tvars.played = true;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 7
					},
					"iconeDone": true,
					"group": 39,
					"done": 2
				},
				{
					"id": "PutrefiedBrain",
					"name": "Cervelle putréfiée",
					"desc": "Cette unité a [SlowReflexes]",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"played": false,
							"value1": 50
						},
						"tooltipStatus": [
							{
								"st": "SlowReflexes"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tif ( !vars.played ) {\n\t\tskill.unit.addStatusPersist(Status.SlowReflexes, skill);\n\t\tvars.played = true;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 16
					},
					"iconeDone": true,
					"group": 39,
					"done": 2
				},
				{
					"id": "DeepBite",
					"name": "Morsure profonde",
					"desc": "Inflige [DMG] à la cible.\n\n[Backstab] : Coup critique assuré.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"useWithoutWeapon": true
					},
					"script": "function onEval(a) {\n\tif( a.backstab ) {\n\t\ta.criticalHitPercent = 100;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 9
					},
					"minDmg": 6.5,
					"maxDmg": 8.5,
					"iconeDone": true,
					"group": 40,
					"done": 2
				},
				{
					"id": "Cannibalism",
					"name": "Cannibalisme",
					"desc": "Chaque fois que cette unité inflige des dégâts à la [Health], elle se soigne du même montant.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onDamageDealt(a) {\n\tif( a.damagedHealth > 0 ) {\n\t\tspawnFx();\n\t\tskill.unit.gainsHealth(a.damagedHealth);\n\t}\n}\n",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 9
					},
					"iconeDone": true,
					"group": 40,
					"done": 2
				},
				{
					"id": "AllyOfDarkness",
					"name": "Allié de l'obscurité",
					"desc": "Tant que cette unité évolue dans l'obscurité, elle a [Brutality]. Sinon, a [Fragility].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Brutality"
							},
							{
								"st": "Fragility"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tif ( skill.unit.isInLight() ) {\n\t\tskill.unit.cancelStatus(Status.Brutality, skill);\n\t\tif ( !skill.unit.hasStatusPersist(Status.Fragility, skill) ) {\n\t\t\tspawnFx();\n\t\t}\n\t\tskill.unit.addStatusPersist(Status.Fragility, skill);\n\t} else {\n\t\tskill.unit.cancelStatus(Status.Fragility, skill);\n\t\tif ( !skill.unit.hasStatusPersist(Status.Brutality, skill) ) {\n\t\t\tspawnFx();\n\t\t}\n\t\tskill.unit.addStatusPersist(Status.Brutality, skill);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 10
					},
					"iconeDone": true,
					"group": 40,
					"done": 2
				},
				{
					"id": "FrozenClawStrike",
					"name": "Coup de griffe gelé",
					"desc": "Inflige [DMG] à la cible et lui applique [Slowdown] pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"useWithoutWeapon": true,
						"vars": {
							"value1": 2
						},
						"tooltipStatus": [
							{
								"st": "Slowdown"
							}
						],
						"feature": "Alazar1_Update"
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Slowdown, vars.value1, true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 40,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 12
					},
					"minDmg": 6.5,
					"maxDmg": 8.5,
					"done": 2
				},
				{
					"id": "FrozenBreath",
					"name": "Souffle glacial",
					"desc": "À la fin de son tour, cette unité inflige des dégâts à la [Health] de tous les ennemis adjacents égaux à ::value1::% de leur [Health] maximum.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 15
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onEndTurn() {\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tu.damages(skill, ceil(u.stats.health*vars.value1/100), true);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 40,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 14
					},
					"done": 2
				},
				{
					"id": "AllyOfFog",
					"name": "Allié du brouillard",
					"desc": "Tant que cette unité évolue dans le brouillard, elle a [Brutality]. Sinon, a [Fragility].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Brutality"
							},
							{
								"st": "Fragility"
							}
						],
						"globalEvents": true,
						"feature": "Alazar1_Update"
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 40,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 14
					},
					"done": 2
				},
				{
					"id": "TerrifyingAppearance",
					"name": "Allure terrifiante",
					"desc": "Chaque fois que cette unité attaque, elle applique ::value1:: [Terror].\nSi elle meurt, réduit de ::value2:: la [Terror] de l'unité l'ayant tuée.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1,
							"nightmare": false,
							"value2": 3
						},
						"tooltipStatus": [
							{
								"st": "Terror"
							}
						],
						"globalEvents": true
					},
					"script": "function onDamageDealt(a) {\n\tif( a.unit == skill.unit ) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Terror, vars.value1);\n\t}\n}\n\nfunction onDeath(a) {\n\tif( a.unit != null && a.target == skill.unit ) {\n\t\ta.unit.consumeStatus(Status.Terror, vars.value2);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 10
					},
					"iconeDone": true,
					"group": 41,
					"done": 2
				},
				{
					"id": "TerrorLink",
					"name": "Lien de terreur",
					"desc": "Inflige [VALUE] dégâts à la [Health] et applique [TerrorLink] à la cible et à un autre compagnon aléatoire.",
					"mode": 0,
					"range": {
						"baseDistance": 10
					},
					"props": {
						"specialAnim": "Taunt",
						"tooltipStatus": [
							{
								"st": "TerrorLink"
							},
							{
								"st": "Terror"
							}
						],
						"scaledValue": 5,
						"scaledValueAttribute": 0,
						"extraFx": "prefabs/fx/fight/BuffCry/AttackCryRed.fx"
					},
					"script": "function onSkill() {\n\tplay();\n\tvar currenttarget = null;\n\tfor( t in skill.getTargets() ) {\n\t\tcurrenttarget = t.target;\n\t\tt.target.damages(skill, skill.value, true);\n\t}\n\tvar arr = [];\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( !u.hasStatus(Status.TerrorLink) && u != currenttarget ) {\n\t\t\tarr.push(u);\n\t\t}\n\t}\n\tif( arr.length > 0 ) {\n\t\tcurrenttarget.addStatus(Status.TerrorLink);\n\t\tarr[randInt(0,arr.length-1)].addStatus(Status.TerrorLink);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 11
					},
					"minDmg": 3,
					"maxDmg": 5,
					"iconeDone": true,
					"group": 41,
					"done": 2
				},
				{
					"id": "NightmarishApperance",
					"name": "Allure cauchemardesque",
					"desc": "Chaque fois que cette unité subit des dégâts, elle applique ::value1:: [Terror] à l'attaquant.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Terror"
							}
						]
					},
					"script": "function onDamageTaken(a) {\n\tspawnFx();\n\ta.unit.addStatus(Status.Terror, vars.value1);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 10
					},
					"iconeDone": true,
					"group": 41,
					"done": 2
				},
				{
					"id": "BeastRoar",
					"name": "Hurlement de la Bête",
					"desc": "Applique ::value1:: [Terror] à tous les ennemis et [Fury] à tous les alliés.",
					"mode": 4,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Terror"
							},
							{
								"st": "Fury"
							}
						],
						"specialAnim": "Roar"
					},
					"script": "function onSkill() {\n\tbeastRoar();\n\tfor( u in getFoes(skill.unit) ) {\n\t\tu.addStatus(Status.Fury);\n\t}\n\tfor( u in getAllies(skill.unit) ) {\n\t\tu.addStatus(Status.Terror, vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 7
					},
					"iconeDone": true,
					"group": 41,
					"done": 2
				},
				{
					"id": "DreadfulSting",
					"name": "Piqûre épouvantable",
					"desc": "Inflige [DMG] à la [Health] de la cible.\nLes dégâts ignorent la [Guard].\n\n[CapaCritical] : Applique ::value1:: [Fever].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Fever"
							}
						],
						"flags": 3,
						"extraFx": "prefabs/fx/fight/Special/BloodSplash.fx",
						"powerScale": 0.7
					},
					"script": "function onDamage(a) {\n\tif( a.isCritical ) {\n\t\ta.target.addStatus(Status.Fever);\n\t}\n}",
					"notes": "",
					"minDmg": 3,
					"maxDmg": 5,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 4
					},
					"iconeDone": true,
					"group": 42,
					"done": 2
				},
				{
					"id": "BloodDrinker",
					"name": "Buveur de sang",
					"desc": "Chaque fois que cette unité inflige des dégâts, elle gagne ::value1:: application de [BloodReserve].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "BloodReserve"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tvar nb = skill.unit.getStatusCount(Status.BloodReserve);\n\tskill.unit.addStatus(Status.BloodReserve, vars.value1);\n\tnb += vars.value1;\n\tif( nb >= 2 ) {\n\t\tskill.unit.consumeStatus(Status.BloodReserve, nb);\n\t\tskill.unit.gainsHealth(skill.unit.stats.health);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 4
					},
					"iconeDone": true,
					"group": 42,
					"done": 2
				},
				{
					"id": "Lifesucker",
					"name": "Suceur de vie",
					"desc": "Chaque fois que cette unité inflige des dégâts, elle se soigne de la moitié des dégâts infligés.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "function onDamageDealt(a) {\n\tskill.unit.gainsHealth(round(a.dmg*((vars.value1)/100)) );\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 5
					},
					"iconeDone": true,
					"group": 42,
					"done": 2
				},
				{
					"id": "BloodExcitation",
					"name": "Excitation sanguine",
					"desc": "Chaque fois que cette unité se soigne, elle gagne [Fury].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"life": 0
						},
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						]
					},
					"script": "function onSkillEval(a) {\n\tvars.life = skill.unit.health;\n}\n\nfunction onDamageDealt(a) {\n\tvar life2 = skill.unit.health;\n\tif( life2 > vars.life ) {\n\t\tskill.unit.addStatus(Status.Fury);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 4
					},
					"iconeDone": true,
					"group": 42,
					"done": 2
				},
				{
					"id": "PowerReserve",
					"name": "Réserve de puissance",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% pour chaque [BloodReserve].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"tooltipStatus": [
							{
								"st": "BloodReserve"
							}
						]
					},
					"script": "function onEval(a) {\n\ta.baseDamageBonus += skill.unit.getStatusCount(Status.BloodReserve)*vars.value1;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 4
					},
					"iconeDone": true,
					"group": 42,
					"done": 2
				},
				{
					"id": "VenimousTrumpet",
					"name": "Trompe venimeuse",
					"desc": "Chaque attaque applique également ::value1:: [Poison].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\ta.target.addStatus(Status.Poison, vars.value1);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 4
					},
					"iconeDone": true,
					"group": 42,
					"done": 2
				},
				{
					"id": "DopingTransfusion",
					"name": "Transfusion dopante",
					"desc": "Cette unité confère [Fury] à un compagnon adjacent pendant le Repos.",
					"mode": 6,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 4
					},
					"iconeDone": true,
					"group": 42,
					"done": 2
				},
				{
					"id": "BloodCollection",
					"name": "Prélèvement sanguin",
					"desc": "Cette unité peut piquer un compagnon pour supprimer son besoin en nourriture pendant les ::value1:: prochains repas.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 5
					},
					"iconeDone": true,
					"group": 42,
					"done": 2
				},
				{
					"id": "DopingSshot",
					"name": "Piqûre dopante",
					"desc": "Si l'attaque cible un ennemi, lui inflige [DMG] et lui applique [Vulnerability].\n\nSi l'attaque cible un allié, le soigne de ::value1::% de sa [Health] maximum et lui confère [Fury].",
					"mode": 0,
					"range": {
						"allowedTargets": 5
					},
					"props": {
						"vars": {
							"value1": 10
						},
						"dmgAttribute": 0,
						"cursor": "CursorHeal",
						"healPreview": 0.1,
						"tooltipStatus": [
							{
								"st": "Vulnerability"
							},
							{
								"st": "Fury"
							}
						]
					},
					"script": "function onSkill() {\n\tif( skill.target.side != skill.unit.side ) {\n\t\tattack();\n\t\tskill.target.addStatus(Status.Vulnerability);\n\t} else {\n\t\tplay();\n\t\tskill.target.gainsHealth( ceil(skill.target.stats.health*vars.value1/100) , null);\n\t\tskill.target.addStatus(Status.Fury);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 42,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 17
					},
					"minDmg": 7,
					"maxDmg": 9,
					"done": 2
				},
				{
					"id": "Browser",
					"name": "Fureteur",
					"desc": "Cette unité a une chance de trouver des composants d'alchimie pendant le Repos.",
					"mode": 6,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 42,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 17
					},
					"done": 1
				},
				{
					"id": "MonstrousPawStrike",
					"name": "Coup de patte monstrueux",
					"desc": "Inflige [DMG] à la cible. \nSi cette unité est déjà engagée, elle gagne [Relentlessness].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"engaged": false
						},
						"tooltipStatus": [
							{
								"st": "Relentlessness"
							}
						],
						"powerScale": 0.2,
						"aiOrder": 1
					},
					"script": "function onEval(a) {\n\tvars.engaged = ( a.target.isEngaged() && a.target.engagedUnit == skill.unit && a.unit == skill.unit );\n}\n\nfunction onPostSkill() {\n\tif( vars.engaged && skill.unit.isEngaged() ) {\n\t\tskill.unit.addStatus(Status.Relentlessness);\n\t}\n}",
					"notes": "",
					"minDmg": 7,
					"maxDmg": 9,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 4
					},
					"iconeDone": true,
					"group": 43,
					"done": 2
				},
				{
					"id": "WildTenacity",
					"name": "Ténacité sauvage",
					"desc": "Quand cette unité doit mourir, elle gagne [Berserk] et ne meurt pas. \nSi elle a déjà [Berserk], elle meurt.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Berserk"
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 4
					},
					"iconeDone": true,
					"group": 43,
					"done": 2
				},
				{
					"id": "RagingPawStrike",
					"name": "Coup de patte rageur",
					"desc": "Inflige ::value3:: fois [DMG] à la cible.\nSi cette unité a accumulé plus de ::value1:: [AnimalMarkedBonus], elle gagne [Relentlessness].\nSi elle en accumulé plus de ::value2::, elle gagne également [Berserk].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 8,
							"value2": 16,
							"value3": 2
						},
						"tooltipStatus": [
							{
								"st": "Relentlessness"
							},
							{
								"st": "Berserk"
							}
						],
						"feature": "Alazar1_Update",
						"powerScale": 0.2,
						"aiOrder": 1
					},
					"script": "function onSkill() {\n\tfor( i in 0...vars.value3 ) {\n\t\tattack();\n\t}\n}\n\nfunction onDamage(a) {\n\tif( skill.unit.getStatusCount(Status.AnimalMarkedBonus) >= vars.value1 ) {\n\t\tskill.unit.addStatus(Status.Relentlessness);\n\t}\n\tif( skill.unit.getStatusCount(Status.AnimalMarkedBonus) >= vars.value2 ) {\n\t\tskill.unit.addStatus(Status.Berserk);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 17
					},
					"minDmg": 4,
					"maxDmg": 6,
					"done": 2
				},
				{
					"id": "HotBlood",
					"name": "Sang chaud",
					"desc": "Chaque fois que cette unité effectue ou subit une attaque, elle gagne ::value1:: [AnimalMarkedBonus].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "AnimalMarkedBonus"
							}
						],
						"vars": {
							"value1": 2
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onDamageDealt(a) {\n\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n}\n\nfunction onDamageTaken(a) {\n\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 17
					},
					"done": 2
				},
				{
					"id": "NaturalSprinter",
					"name": "Sprinter né",
					"desc": "Cette unité gagne [Inspiration] pendant ::value1:: round.",
					"mode": 4,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Inspiration"
							}
						],
						"vars": {
							"value1": 1
						},
						"feature": "Alazar1_Update",
						"apCost": 1,
						"aiOrder": 0
					},
					"script": "function onSkill() {\n\tplay();\n\tskill.unit.addStatus(Status.Inspiration, vars.value1, true);\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 19,
						"y": 3
					}
				},
				{
					"id": "PrimalWrath",
					"name": "Courroux primal",
					"desc": "Tant que cette unité n'est pas [Surrounded], elle a [Fury].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Surrounded"
							},
							{
								"st": "Fury"
							}
						],
						"globalEvents": true,
						"descPassiveGroup": "[GROUPTYPE] : Tant qu'une unité n'est ni engagée ni [Surrounded], elle a [Fury]."
					},
					"script": "function onBeginAction() {\n\tif( !skill.unit.hasStatus(Status.Surrounded) ) {\n\t\tskill.unit.addStatusPersist(Status.Fury, skill);\n\t} else skill.unit.cancelStatus(Status.Fury, skill);\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 18,
						"y": 2
					}
				},
				{
					"id": "Indomitability",
					"name": "Indomptabilité",
					"desc": "[Strength] et [Constitution] augmentées de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						},
						"attributes": [
							{
								"kind": "Strength",
								"value": 10,
								"isPercentage": true
							},
							{
								"kind": "Constitution",
								"value": 10,
								"isPercentage": true
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 3
					},
					"iconeDone": true,
					"group": 43,
					"done": 2
				},
				{
					"id": "KingOfTheForest",
					"name": "Roi de la forêt",
					"desc": "Si cette unité débute un combat dans une forêt, elle a [Galvanization].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Galvanization"
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 4
					},
					"levels": [],
					"iconeDone": true,
					"group": 43,
					"done": 2
				},
				{
					"id": "KingOfTheMountain",
					"name": "Roi de la montagne",
					"desc": "Si cette unité débute un combat dans une montagne, elle a [Galvanization].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Galvanization"
							}
						],
						"feature": "Alazar1_Update"
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 17
					},
					"done": 2
				},
				{
					"id": "FeralVividness",
					"name": "Vivacité farouche",
					"desc": "Les attaques d'opportunité de cette unité ignorent la [Guard].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "",
					"notes": "Hard coded",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 3
					},
					"iconeDone": true,
					"group": 43,
					"done": 2
				},
				{
					"id": "IntimidatingGrowl",
					"name": "Grognement intimidant",
					"desc": "Force la cible à s'engager et lui applique [Fragility] pendant ::value1:: rounds.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"apCost": 1,
						"tooltipStatus": [
							{
								"st": "Fragility"
							}
						],
						"specialAnim": "Growl",
						"extraFx": "prefabs/fx/fight/Creatures/DebuffCry_Bear.fx"
					},
					"script": "function onSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Fragility, vars.value1, true);\n\t\tif( t.target.engagedUnit != skill.unit ) {\n\t\t\tt.target.disengage(false);\n\t\t\tt.target.engage(skill.unit);\n\t\t}\n\t}\n\tplay();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 4
					},
					"iconeDone": true,
					"group": 43,
					"done": 2
				},
				{
					"id": "ComfortableFur",
					"name": "Fourrure confortable",
					"desc": "Tout compagnon qui passe son Repos adjacent à cette unité génère <ap>::value1::</ap> supplémentaire.\n\nLimité à ::value2:: compagnon par ours.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 1,
							"value2": 1
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 3
					},
					"iconeDone": true,
					"group": 43,
					"done": 2
				},
				{
					"id": "MasterAngler",
					"name": "Maître-pêcheur",
					"desc": "Vous avez une chance d'attraper des Poissons en marchant près des cours d'eau.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"durationDaysNextToWater": 0.1,
							"cooldownDays": 1.2
						}
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 4
					},
					"iconeDone": true,
					"group": 43,
					"done": 2
				},
				{
					"id": "Enraged",
					"name": "Enragé",
					"desc": "Les unités ennemies adjacentes ont [Immobile].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Immobile"
							}
						]
					},
					"script": "function onSkill() {\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tu.addStatus(Status.Immobile);\n\t\t}\n\t\telse {\n\t\t\tu.cancelStatus(Status.Immobile);\n\t\t}\n\t}\n}",
					"notes": "Je n'arrive pas à le faire marcher en script.",
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "Tamed",
					"name": "Dompté",
					"desc": "Transport +[ATTR]",
					"mode": 6,
					"range": {},
					"props": {
						"attributes": [
							{
								"kind": "Transport",
								"value": 50
							}
						]
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 43,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 17
					},
					"done": 2
				},
				{
					"id": "Uncontrollable",
					"name": "Incontrôlable",
					"desc": "Cette unité ne peut ni être engagée ni repoussée.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 6
					},
					"iconeDone": true,
					"group": 45,
					"done": 2
				},
				{
					"id": "LucillaJudgment",
					"name": "Jugement de Lucilla",
					"desc": "Applique [Sentence] à l'ennemi le plus proche.",
					"mode": 0,
					"range": {
						"flags": 6,
						"allowedTargets": 0,
						"baseDistance": 30
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Sentence"
							}
						]
					},
					"script": "function onSkill() {\n\tfor( u in getFoes(skill.unit) )\n\t\tu.cancelStatus(Status.Sentence);\n\tfor (t in skill.getTargets()) {\n\t\tt.target.addStatus(Status.Sentence);\n\t\tsetPriorityTarget(t.target);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 6
					},
					"iconeDone": true,
					"group": 45,
					"done": 2
				},
				{
					"id": "LucillaVengeance",
					"name": "Vengeance de Lucilla",
					"desc": "Cible une zone.\nInflige [DMG] à toutes les unités dans la zone et les repousse de ::value1:: mètres au début du tour suivant.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 3,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Targeting"
							}
						],
						"isAttack": true,
						"vars": {
							"value1": 6
						},
						"specialAnim": "AttackWide",
						"pendingSkill": 0,
						"defaultAction": true,
						"fxSuffix": 0,
						"extraFx": "prefabs/fx/fight/Special/PushingWhooshCone_M2.fx"
					},
					"script": "function onSkill() {\n\tif( waitNextTurn() ) {\n\t\tprepareAttack();\n\t\tcreateZone();\n\t\tskill.unit.addStatus(Status.Targeting);\n\t\treturn;\n\t}\n\tattack();\n\tcancelZone();\n}\n\nfunction onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 6
					},
					"minDmg": 13.5,
					"iconeDone": true,
					"group": 45,
					"done": 2
				},
				{
					"id": "ToxicBlade",
					"name": "Lame toxique",
					"desc": "Inflige [DMG] à la cible. Consomme tous les [Poison]s appliqués pour augmenter les dégâts de ::value1::% par application.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						},
						"dmgAttribute": 1,
						"isAttack": true,
						"defaultAction": true,
						"specialAnim": "AttackPower",
						"fxSuffix": 0,
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"extraFx": "prefabs/fx/fight/Special/PoisonSlashTrail.fx"
					},
					"script": "function onEval(a) {\n\tfor( s in a.target.getAllStatus() ) {\n\t\tif( s.kind == Status.Poison ) {\n\t\t\ta.baseDamageBonus += s.count * vars.value1;\n\t\t}\n\t}\n}\n\nfunction onDamage(a) {\n\tfor( st in a.target.getAllStatus() ) {\n\t\tif( st.kind == Status.Poison ) {\n\t\t\tst.cancel();\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 11
					},
					"minDmg": 6,
					"iconeDone": true,
					"group": 46,
					"done": 2
				},
				{
					"id": "RatMaster",
					"name": "Maître des rats",
					"desc": "Tous les ::value1:: rats alliés tués, cette unité gagne [Berserk] pendant ::value2:: round.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 3,
							"value2": 1,
							"value3": 1
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Berserk"
							}
						]
					},
					"script": "function onDeath(a) {\n\tif( a.target.kind == UnitClass.PlaguedRat && a.target.side == skill.unit.side && !skill.unit.hasStatus(Status.Berserk) ) {\n\t\tskill.unit.addStatus(Status.BerserkStack, vars.value3);\n\t}\n\tif( skill.unit.getStatusCount(Status.BerserkStack) >= vars.value1 ) {\n\t\tskill.unit.cancelStatus(Status.BerserkStack);\n\t\tskill.unit.addStatus(Status.Berserk, vars.value2, true);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 15
					},
					"iconeDone": true,
					"group": 46,
					"done": 2
				},
				{
					"id": "Nepti",
					"name": "Semeur de laideur",
					"desc": "Inflige [DMG] à toutes les cibles dans la zone et applique ::value1:: [Corrosion] et [Poison].",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 3,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 2
						},
						"defaultAction": true,
						"isAttack": true,
						"specialAnim": "AttackWide",
						"fxSuffix": 0,
						"tooltipStatus": [
							{
								"st": "Corrosion"
							},
							{
								"st": "Poison"
							}
						],
						"extraFx": "prefabs/fx/fight/Special/PoisonSlashTrail.fx"
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Corrosion, vars.value1);\n\ta.target.addStatus(Status.Poison, vars.value1);\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 47,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 17,
						"y": 0
					},
					"minDmg": 7
				},
				{
					"id": "PiercingArrow",
					"name": "Flèche perforante",
					"desc": "Inflige [DMG] à toutes les unités dans la zone.\n\n[CapaCritical] : La cible est repoussée de ::value2:: mètres et perd ::value1::% de sa [Health] maximum.",
					"mode": 5,
					"range": {
						"type": 2,
						"radius": 1,
						"allowedTargets": 5,
						"baseDistance": 10
					},
					"props": {
						"vars": {
							"value1": 10,
							"value2": 2
						},
						"dmgAttribute": 1,
						"isAttack": true,
						"preventEngage": true,
						"defaultAction": true,
						"flags": 64,
						"fxSuffix": 0
					},
					"script": "function onDamage(a) {\n\tif( a.isCritical ) {\n\t\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n\t\ta.target.damages(skill, ceil(a.target.stats.health*vars.value1/100), true);\n\t}\n}\n\nfunction getPushback( a ) {\n\treturn vars.value2;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 11
					},
					"minDmg": 5,
					"iconeDone": true,
					"group": 48,
					"done": 2
				},
				{
					"id": "Training",
					"name": "Dressage",
					"desc": "Tous les animaux alliés engagés effectuent une attaque d'opportunité contre leur adversaire.\n\nS'il n'y a pas d'animaux alliés, appelle des renforts.",
					"mode": 4,
					"range": {},
					"props": {
						"specialAnim": "Taunt",
						"vars": {
							"value1": 3
						},
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onSkill() {\n\tplay();\n\tvar nb = 0;\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isAnimal ) {\n\t\t\tnb++;\n\t\t\tif( u.isEngaged() ) {\n\t\t\t\tu.opportunityAttack(u.engagedUnit, skill);\n\t\t\t}\n\t\t}\n\t}\n\tif( nb == 0 ) {\n\t\tspawnRenfort(UnitClass.KaghalBoar, vars.value1, false);\n\t\tspawnRenfort(UnitClass.KaghalWolf, vars.value1, false);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 13
					},
					"iconeDone": true,
					"group": 48,
					"done": 2
				},
				{
					"id": "PackLeader",
					"name": "Chef de meute",
					"desc": "Gagne [AnimalProtection] pour chaque animal allié non-engagé.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "AnimalProtection"
							}
						]
					},
					"script": "function onBeginAction() {\n\tvar nb = 0;\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isAnimal && !u.isEngaged() ) {\n\t\t\tnb++;\n\t\t}\n\t}\n\tvar count = skill.unit.getStatusCount(Status.AnimalProtection);\n\tvar delta = nb - count;\n\tif( delta > 0 ) {\n\t\tskill.unit.addStatus(Status.AnimalProtection, delta);\n\t} else skill.unit.consumeStatus(Status.AnimalProtection, (count-nb));\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 13
					},
					"iconeDone": true,
					"group": 48,
					"done": 2
				},
				{
					"id": "BattleBrothers",
					"name": "Frères de bataille",
					"desc": "Chaque fois qu'un animal allié meurt, cette unité gagne ::value1:: [Wrath].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Wrath"
							}
						]
					},
					"script": "function onDeath(a) {\n\tif( a.target.isAnimal && a.target.side == skill.unit.side ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.Wrath, vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 11
					},
					"iconeDone": true,
					"group": 48,
					"done": 2
				},
				{
					"id": "FeralCharge",
					"name": "Charge farouche",
					"desc": "Se désengage et charge en ligne droite. Inflige [DMG] à toutes les unités sur le chemin et applique [Vulnerability].",
					"mode": 3,
					"range": {
						"flags": 1,
						"baseDistance": 8
					},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Vulnerability"
							}
						]
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Vulnerability);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 14
					},
					"minDmg": 5,
					"iconeDone": true,
					"group": 48,
					"done": 2
				},
				{
					"id": "DefenseOfTheOwner",
					"name": "Défense du maître",
					"desc": "Inflige [DMG] à la cible et la force à s'engager.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true
					},
					"script": "function onDamage(a) {\n\tif( a.target.engagedUnit != skill.unit ) {\n\t\ta.target.disengage(false);\n\t\ta.target.engage(skill.unit);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 15
					},
					"minDmg": 7,
					"maxDmg": 9,
					"iconeDone": true,
					"group": 48,
					"done": 2
				},
				{
					"id": "SliceAndDice",
					"name": "Bonne tranche",
					"desc": "Inflige [VALUE] dégâts à toutes les unités dans la zone.\nLes dégâts sont partagés entre les unités touchées qui subissent autant d'applications de [Bloodshed].",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 3,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"scaledValue": 9,
						"scaledValueAttribute": 0,
						"vars": {
							"value1": 100,
							"healthproc": 50
						},
						"tooltipStatus": [
							{
								"st": "Bloodshed"
							}
						],
						"isAttack": true,
						"defaultAction": true,
						"specialAnim": "AttackWide",
						"fxSuffix": 0
					},
					"script": "function onEval(a) {\n\ta.dmg = round(skill.value/skill.getTargets().length);\n}\n\nfunction onDamage(a) {\n\ta.target.addStatus(Status.Bloodshed, a.dmgDealt);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 15
					},
					"minDmg": 0,
					"iconeDone": true,
					"group": 49,
					"levels": [],
					"done": 2
				},
				{
					"id": "LossOfControl",
					"name": "Perte de contrôle",
					"desc": "Quand cette unité a moins de ::value1::% de [Health], elle a [Brutality].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"tooltipStatus": [
							{
								"st": "Brutality"
							}
						]
					},
					"script": "function onDamageTaken(a) {\n\tif( skill.unit.health < (skill.unit.stats.health*vars.value1/100) ) {\n\t\tskill.unit.addStatusPersist(Status.Brutality, skill);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 14
					},
					"iconeDone": true,
					"group": 49,
					"done": 2
				},
				{
					"id": "BionnAttack",
					"name": "Frappe de la Traque",
					"desc": "Inflige [DMG] à la cible et gagne ::value1:: [AnimalMarkedBonus].\n\n[CapaCritical] : Gagne ::value1:: [AnimalMarkedBonus].",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						},
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "AnimalMarkedBonus"
							}
						],
						"isAttack": true,
						"defaultAction": true,
						"specialAnim": "AttackPower",
						"fxSuffix": 0
					},
					"script": "function onDamage(a) {\n\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n\tif( a.isCritical ) {\n\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 5,
						"y": 1
					},
					"minDmg": 7,
					"maxDmg": 9,
					"iconeDone": true,
					"group": 50,
					"done": 2
				},
				{
					"id": "TransformedBionnAttack",
					"name": "Violent coup de griffe pestiféré",
					"desc": "Inflige [DMG] à la cible, gagne ::value1:: [AnimalMarkedBonus] et applique ::value2:: [Fever].\n\n[CapaCritical] : Gagne ::value1:: [AnimalMarkedBonus].",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 2,
							"value2": 5
						},
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Fever"
							},
							{
								"st": "AnimalMarkedBonus"
							}
						],
						"useWithoutWeapon": true,
						"animFx": "prefabs/fx/fight/Attack/TransformedBionnAttack.fx"
					},
					"script": "function onDamage(a) {\n\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n\ta.target.addStatus(Status.Fever, vars.value2);\n\tif( a.isCritical ) {\n\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 5
					},
					"minDmg": 12,
					"maxDmg": 14,
					"iconeDone": true,
					"group": 50,
					"done": 2
				},
				{
					"id": "IrrationalScreaming",
					"name": "Hurlement irraisonné",
					"desc": "Hurle pour appeler en renforts un nombre de pestiférés égal à son nombre de [BionnPanic]. Puis, retire toutes ses applications.",
					"mode": 4,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "BionnPanic"
							}
						]
					},
					"script": "function onSkill() {\n\tvar count = skill.unit.getStatusCount(Status.BionnPanic);\n\tspawnRenfort(UnitClass.Plagueridden, count, false);\n\tskill.unit.consumeStatus(Status.BionnPanic, count);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 5
					},
					"iconeDone": true,
					"group": 50,
					"done": 2
				},
				{
					"id": "DisturbedMind",
					"name": "Esprit perturbé",
					"desc": "[DamageBonusPercent] réduits de ::value1::% pour chaque pestiféré au combat.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						}
					},
					"script": "function onBeginAction() {\n\tvar nb = 0;\n\tfor ( p in getUnits() ) {\n\t\tif( p.kind == UnitClass.Plagueridden ) {\n\t\t\tnb++;\n\t\t}\n\t}\n\tvar count = skill.unit.getStatusCount(Status.FearPlague);\n\tvar delta = nb - count;\n\tif( delta > 0 ) {\n\t\tskill.unit.addStatus(Status.FearPlague, delta);\n\t} else skill.unit.consumeStatus(Status.FearPlague, (count-nb));\n\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 5
					},
					"iconeDone": true,
					"group": 50,
					"done": 2
				},
				{
					"id": "GlimmersOfMortality",
					"name": "Lueurs de mortalité",
					"desc": "Chaque fois que cette unité subit une attaque, elle gagne une application de [BionnPanic].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "BionnPanic"
							}
						]
					},
					"script": "function onDamageTaken(a) {\n\tskill.unit.addStatus(Status.BionnPanic);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 5
					},
					"iconeDone": true,
					"group": 50,
					"done": 2
				},
				{
					"id": "Transformation",
					"name": "Transformation",
					"desc": "Quand cette unité atteint ::value1::% de sa [Health] maximum, elle se transforme.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"globalEvents": true,
						"extraFx": "prefabs/fx/fight/BuffCry/BionnTransformation.fx"
					},
					"script": "function checkHealth() {\n\tvar pc = 100 * (skill.unit.health / skill.unit.stats.health);\n\tif ( pc < vars.value1 && skill.unit.kind != UnitClass.BionnZombie ) {\n\t\tskill.unit.cancelStatus(Status.Plagued);\n\t\tbionnTransformation();\n\t}\n}\n\nfunction onBeginAction() {\n\tcheckHealth();\n}\n\nfunction onPostSkill() {\n\tcheckHealth();\n}",
					"notes": "",
					"iconeDone": true,
					"group": 50,
					"done": 2,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 5
					}
				},
				{
					"id": "FenrisSeek",
					"name": "Cibler les faibles",
					"desc": "Applique [Sentence] à l'ennemi le plus faible à portée.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Sentence"
							}
						],
						"vars": {
							"value1": 16
						},
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tvar current = null;\n\tvar scores : Array<{ u : battle.skill.UnitView, score : Int }> = [];\n\tfor( t in getPlayerUnits() ) {\n\t\tif(\tt.hasStatus(Status.Sentence) )\n\t\t\tcurrent = t;\n\t\tvar power = t.armor + (t.armor > 0 ? t.guard : 0) + t.health;\n\t\tif( !t.hasStatus(Status.Dying) ) {\n\t\t\tvar idx = 0;\n\t\t\tfor( i in 0...scores.length ) {\n\t\t\t\tvar s = scores[idx];\n\t\t\t\tif( power < s.score )\n\t\t\t\t\tbreak;\n\t\t\t\tidx = i;\n\t\t\t}\n\t\t\tscores.insert(idx, { u : t, score : power });\n\t\t}\n\t}\n\n\tvar validUnits = [];\n\tfor( s in scores )\n\t\tvalidUnits.push(s.u);\n\n\tvar target = getFirstReachableUnit(skill.unit, validUnits);\n\tif( target == null && scores.length > 0 ) {\n\t\ttarget = scores[0].u;\n\t}\n\n\tif( target != null ) {\n\t\ttarget.addStatus(Status.Sentence);\n\t\tif( current != null && current != target )\n\t\t\tcurrent.cancelStatus(Status.Sentence);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 7
					},
					"iconeDone": true,
					"group": 51,
					"done": 2
				},
				{
					"id": "FenrisElimination",
					"name": "Eliminer les faibles",
					"desc": "Inflige [DMG] et force la cible à se désengager.\nSi cette unité était déjà engagée, réinitialise cette compétence.",
					"mode": 0,
					"range": {
						"flags": 16,
						"baseDistance": 3
					},
					"props": {
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"vars": {
							"value1": 16,
							"wasEngaged": false
						},
						"fxSuffix": 0
					},
					"script": "function onBeginAction() {\n\tif( skill.unit.kind == UnitClass.FenrisFleeing ) {\n\t\treturn;\n\t}\n\tif(!skill.unit.isEngaged()) {\n\t\tfor(u in getPlayerUnits()) {\n\t\t\tif(u.hasStatus(Status.Sentence)) {\n\t\t\t\tsetPriorityTarget(u);\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tsetPriorityTarget(skill.unit.engagedUnit);\n\t}\n}\n\nfunction onEval(a) {\n\tvars.wasEngaged = skill.unit.isEngaged();\n}\n\nfunction onDamage(a) {\n\tif( vars.wasEngaged ) {\n\t\tallowReplay();\n\t}\n\ta.target.disengage(false);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 8
					},
					"minDmg": 8,
					"iconeDone": true,
					"group": 51,
					"done": 2
				},
				{
					"id": "FenrisFreedom",
					"name": "Pour la liberté !",
					"desc": "Inflige [DMG] à toutes les unités dans la zone, les repousse de ::value1:: mètres et leur applique [Bleeding].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"specialAnim": "AttackSpin",
						"vars": {
							"value1": 2
						}
					},
					"script": "function onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}\n\nfunction onDamage(a) {\n\ta.target.addStatus(Status.Bleeding);\n}\n",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 7
					},
					"minDmg": 8,
					"maxDmg": 12,
					"iconeDone": true,
					"group": 51,
					"done": 2
				},
				{
					"id": "FenrisCourage",
					"name": "Force du Courage",
					"desc": "Chaque fois que cette unité inflige des dégâts, elle gagne une application de [FenrisCourage].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "FenrisCourage"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tskill.unit.addStatus(Status.FenrisCourage);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 8
					},
					"iconeDone": true,
					"group": 51,
					"done": 2
				},
				{
					"id": "FenrisCourageTrigger",
					"name": "Gagner ou Fuir !",
					"desc": "Quand l'unité atteint ::value1:: applications de [FenrisCourage], elle gagne [Brutality]. Quand l'unité a moins de ::value2::% de ses points de vie, elle décide de fuir le combat.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10,
							"value2": 20,
							"init": false
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "FenrisCourage"
							},
							{
								"st": "Brutality"
							}
						]
					},
					"script": "function checkCourage() {\n\tif( skill.unit.kind != UnitClass.FenrisFleeing ) {\n\t\tvar count = skill.unit.getStatusCount(Status.FenrisCourage);\n\n\t\tif ( count >= vars.value1 ) {\n\t\t\tskill.unit.addStatus(Status.Brutality);\n\t\t}\n\t}\n}\n\nfunction checkHealth() {\n\tif( skill.unit.kind != UnitClass.FenrisFleeing ) {\n\t\tvar pc = 100 * (skill.unit.health / skill.unit.stats.health);\n\t\tif ( pc < vars.value2 ) {\n\t\t\tnotify(\"fenris_transformation\");\n\t\t\tplayProcFx();\n\t\t\tskill.unit.setUnitClass(UnitClass.FenrisFleeing);\n\t\t\tsetPriorityTarget(null);\n\t\t\tfor(u in getPlayerUnits()) {\n\t\t\t\tu.cancelStatus(Status.Sentence);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction onBeginRound() {\n\tcheckHealth();\n\tcheckCourage();\n}\n\nfunction onBeginAction() {\n\tcheckHealth();\n\tcheckCourage();\n}\n\nfunction onPostSkill() {\n\tcheckCourage();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 11
					},
					"iconeDone": true,
					"group": 51,
					"done": 2
				},
				{
					"id": "FenrisCharge",
					"name": "Je dois fuir !",
					"desc": "Se désengage et charge en ligne droite. Inflige [DMG] à toutes les unités sur le chemin.",
					"mode": 3,
					"range": {
						"flags": 1,
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 0,
						"specialAnim": "RunCharge"
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 9
					},
					"minDmg": 10,
					"iconeDone": true,
					"group": 51,
					"done": 2
				},
				{
					"id": "FenrisFlee",
					"name": "Fuite",
					"desc": "Si elle n'a plus de [FenrisCourage], l'unité fuit le combat. Sinon, elle perd ::value1:: [FenrisCourage].",
					"mode": 4,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 2
						}
					},
					"script": "function onSkill() {\n\tif(!skill.unit.hasStatus(Status.FenrisCourage)) {\n\t\twin(false);\n\t}\n\telse {\n\t\tskill.unit.consumeStatus(Status.FenrisCourage, vars.value1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 17,
						"y": 3
					},
					"iconeDone": true,
					"group": 51,
					"done": 2
				},
				{
					"id": "LightningSpin",
					"name": "Trombe fulgurante",
					"desc": "Inflige [DMG] à toutes les unités dans la zone et les repousse de ::value1:: mètres.\nLes unités qui n'ont pas pu être entièrement repoussées subissent ::value2::% de dégâts supplémentaires.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 0,
						"specialAnim": "AttackSpin",
						"isAttack": true,
						"defaultAction": true,
						"vars": {
							"value1": 2,
							"value2": 150
						},
						"fxSuffix": 0,
						"extraFx": "prefabs/fx/fight/Special/PushingWoosh.fx"
					},
					"script": "var arr = [];\n\nfunction onHit(a) {\n\tvar pushbackData = a.target.getPushbackData({ unit : skill.unit }, getPushback(a));\n\tif( pushbackData.touchObstacle || pushbackData.touchUnit )\n\t\tarr.push({unit : a.target, dmg : 0 });\n\ta.target.pushback({ unit : skill.unit }, getPushback(a));\n}\n\nfunction onDamage(a) {\n\tfor( t in arr ) {\n\t\tif( t.unit == a.target ) {\n\t\t\tt.dmg = round(a.dmg*vars.value2/100);\n\t\t}\n\t}\n\n}\n\nfunction getPushback( a ) {\n\treturn (vars.value1);\n}\n\nfunction onPostSkill() {\n\tfor( u in arr ) {\n\t\tif( u.unit != null && u.unit.isAlive() ) {\n   \t    \tu.unit.damages( skill, u.dmg);\n\t\t}\n\t}\n}",
					"notes": "",
					"minDmg": 7,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 19
					},
					"iconeDone": true,
					"group": 52,
					"done": 2
				},
				{
					"id": "BrotherUnion",
					"name": "Union fraternelle",
					"desc": "Si l'autre frère est à moins de ::value1:: mètres de portée, cette unité gagne [BrothersFury].",
					"mode": 2,
					"range": {
						"radius": 4
					},
					"props": {
						"vars": {
							"value1": 4
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "BrothersFury"
							}
						]
					},
					"script": "function onBeginAction() {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( getDistance(u, skill.unit) <= vars.value1 ) {\n\t\t\tskill.unit.addStatus(Status.BrothersFury);\n\t\t} else skill.unit.cancelStatus(Status.BrothersFury);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 19
					},
					"iconeDone": true,
					"group": 52,
					"done": 2
				},
				{
					"id": "ValiantAssault",
					"name": "Assaut vaillant",
					"desc": "Inflige [DMG] à la cible\nSi cette unité est déjà engagée, elle gagne [Protection] pendant ::value1:: round.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"engaged": false,
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Protection"
							}
						],
						"dmgAttribute": 0,
						"defaultAction": true,
						"isAttack": true,
						"specialAnim": "AttackPower",
						"fxSuffix": 0
					},
					"script": "function onEval(a) {\n\tvars.engaged = ( a.target.isEngaged() && a.target.engagedUnit == skill.unit && a.unit == skill.unit );\n}\n\nfunction onPostSkill() {\n\tif( vars.engaged && skill.unit.isEngaged() ) {\n\t\tskill.unit.addStatus(Status.Protection, vars.value1, true);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 16,
						"y": 4
					},
					"minDmg": 7,
					"maxDmg": 9,
					"iconeDone": true,
					"group": 52,
					"done": 2
				},
				{
					"id": "ForGlory",
					"name": "Pour la gloire !",
					"desc": "Crée une <skill>PowerZone</skill>.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "PrideInfused"
							}
						],
						"specialAnim": "Taunt",
						"flags": 16
					},
					"script": "function onSkill() {\n\tplay();\n\tskill.unit.cast(Skill.PowerZone, skill.unit, skill);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 19
					},
					"iconeDone": true,
					"group": 52,
					"done": 2
				},
				{
					"id": "PowerZone",
					"name": "Zone de Puissance",
					"desc": "Tant qu'un Champion est dans cette zone, il a [PrideInfused].",
					"mode": 5,
					"range": {
						"allowedTargets": 1,
						"radius": 3,
						"type": 0
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "PrideInfused"
							}
						]
					},
					"script": "function onSkill() {\n\tcreateAreaEffect(\"Immediate\");\n}\n\nfunction onZoneIn(a) {\n\tif( a.target.kind == UnitClass.Kogo || a.target.kind == UnitClass.Toro )\n\t\ta.target.addStatus(Status.PrideInfused);\n}\n\nfunction onZoneOut(a) {\n\ta.target.cancelStatus(Status.PrideInfused);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 19
					},
					"iconeDone": true,
					"group": 52,
					"done": 2
				},
				{
					"id": "KogoPassive",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 20
						}
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( a.unit == skill.unit && t.target.hasStatus(Status.KogoTarget) ) {\n\t\t\tt.baseDamageBonus += t.target.getStatusCount(Status.KogoTarget)*vars.value1;\n\t\t}\n\t}\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target == skill.unit && a.unit.side != skill.unit.side && a.unit.hasStatus(Status.ToroTarget) ) {\n\t\t\tt.baseDamageBonus += a.unit.getStatusCount(Status.ToroTarget)*vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 52,
					"done": 2
				},
				{
					"id": "ToroPassive",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 20
						}
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( a.unit == skill.unit && t.target.hasStatus(Status.ToroTarget) ) {\n\t\t\tt.baseDamageBonus += t.target.getStatusCount(Status.ToroTarget)*vars.value1;\n\t\t}\n\t}\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target == skill.unit && a.unit.side != skill.unit.side && a.unit.hasStatus(Status.KogoTarget) ) {\n\t\t\tt.baseDamageBonus += a.unit.getStatusCount(Status.KogoTarget)*vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 52,
					"done": 2
				},
				{
					"id": "KogoTargetPassive",
					"name": "Acharnement de Kogo",
					"desc": "Infliger des dégâts à une unité lui donne [KogoTarget].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "KogoTarget"
							}
						]
					},
					"script": "function onDamageDealt(s) {\n\ts.target.addStatus(Status.KogoTarget);\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 19
					},
					"group": 52,
					"done": 2
				},
				{
					"id": "ToroTargetPassive",
					"name": "Acharnement de Toro",
					"desc": "Infliger des dégâts à une unité lui donne [ToroTarget].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "ToroTarget"
							}
						]
					},
					"script": "function onDamageDealt(s) {\n\ts.target.addStatus(Status.ToroTarget);\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 19
					},
					"group": 52,
					"done": 2
				},
				{
					"id": "SoakedAxe",
					"name": "Hache imbibée",
					"desc": "Inflige [DMG] à la cible.\nSi la cible est affectée par [Burning], ce coup est critique.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Burning"
							}
						],
						"specialAnim": "AttackPower",
						"fxSuffix": 0
					},
					"script": "function onEval(a) {\n\tfor ( t in skill.getTargets() ) {\n\t\tif( t.target.hasStatus(Status.Burning) ) {\n\t\t\tt.criticalHitPercent = 100;\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 19
					},
					"minDmg": 7.5,
					"iconeDone": true,
					"group": 53,
					"done": 2,
					"maxDmg": 8.5
				},
				{
					"id": "IncendiaryFlaskThrowing",
					"name": "Jet de Fiole Incendiaire",
					"desc": "Inflige [DMG] à toutes les unités dans la zone puis crée un [Fire].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"baseDistance": 10,
						"allowedTargets": 4
					},
					"props": {
						"dmgAttribute": 0,
						"tooltipStatus": [
							{
								"st": "Fire"
							},
							{
								"st": "Burning"
							}
						],
						"damageType": [
							0
						],
						"specialAnim": "ThrowLeftGrenade",
						"flags": 68
					},
					"script": "function onZoneHit() {\n\tcreateSkillZone(Skill.FireZone);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 19
					},
					"minDmg": 5,
					"iconeDone": true,
					"group": 53,
					"done": 2
				},
				{
					"id": "FireResistant",
					"name": "Résistant au feu",
					"desc": "Immunisé aux dégâts de feu et à [Burning].",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 19
					},
					"iconeDone": true,
					"group": 53,
					"done": 2
				},
				{
					"id": "EquipedWithIncendiaryFlask",
					"name": "Equipé de fioles incendiaires",
					"desc": "Quand cette unité subit des dégâts, une Fiole Incendiaire explose aléatoirement autour d'elle.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onDamageTaken(a) {\n\tskill.unit.cast(Skill.EquipedWithIncendiaryFlaskZone, null, skill); // target : null => around caster if the skill is a zone with baseDistance\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 19
					},
					"iconeDone": true,
					"group": 53,
					"done": 2
				},
				{
					"id": "EquipedWithIncendiaryFlaskZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 4,
						"baseDistance": 5
					},
					"props": {},
					"script": "function onSkill() {\n\tcreateAreaEffect(\"Immediate\", 1, { skillId: Skill.FireZone });\n}",
					"notes": "",
					"iconeDone": true,
					"group": 53,
					"done": 2
				},
				{
					"id": "BeheditePenalty",
					"name": "Sanction de Behedite",
					"desc": "Inflige [DMG] à la cible.\n[DamageBonusPercent] augmentés de ::value2::% si aucun allié de la cible n'est présent dans un rayon de ::value1:: mètres.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"value1": 4,
							"value2": 100
						},
						"dmgAttribute": 1,
						"specialAnim": "AttackPower",
						"fxSuffix": 0,
						"isAttack": true,
						"defaultAction": true
					},
					"script": "function onEval(a) {\n\tvar alone = true;\n\tfor(u in getAllies(a.target)) {\n\t\tif( getDistance(u, skill.unit) <= vars.value1 ) {\n\t\t\talone = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(alone) {\n\t\ta.baseDamageBonus += vars.value2;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 32,
						"x": 48,
						"y": 24,
						"width": 3,
						"height": 3
					},
					"minDmg": 5.5,
					"maxDmg": 7.5,
					"group": 54,
					"done": 2
				},
				{
					"id": "DaganPunishment",
					"name": "Punition de Dagan",
					"desc": "Inflige [DMG] dégâts à toutes les unités dans la zone.\nSi plus d'une unité subit des dégâts, attaque ::value1:: fois de plus.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 3,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"vars": {
							"value1": 2
						},
						"dmgAttribute": 0,
						"specialAnim": "AttackWide",
						"fxSuffix": 0
					},
					"script": "function onEval(t) {\n\tif(skill.getTargets().length > 1 )\n\t\tt.attackCount += vars.value1;\n}",
					"notes": "",
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 8
					},
					"minDmg": 3.5,
					"group": 55,
					"done": 2
				},
				{
					"id": "GluckStiffingAttack",
					"name": "Attaque handicapante",
					"desc": "Inflige [DMG] à la cible et lui applique ::value1:: [Poison], ainsi que  [Slowdown] et [SlowReflexes] pendant ::value2:: rounds.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 1,
						"tooltipStatus": [
							{
								"st": "Poison"
							},
							{
								"st": "Slowdown"
							},
							{
								"st": "SlowReflexes"
							}
						],
						"feature": "Alazar1_Update",
						"vars": {
							"value1": 1,
							"value2": 1
						}
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Poison, vars.value1);\n\ta.target.addStatus(Status.Slowdown, vars.value2, true);\n\ta.target.addStatus(Status.SlowReflexes, vars.value2, true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 56,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 11
					},
					"done": 2,
					"minDmg": 8,
					"maxDmg": 10
				},
				{
					"id": "GluckRenfort",
					"name": "Renforts",
					"desc": "Appelle des hors-la-loi en renforts.",
					"mode": 4,
					"range": {},
					"props": {
						"feature": "Alazar1_Update"
					},
					"script": "function onSkill() {\n\tplay();\n\tvar tab = [UnitClass.Mobster, UnitClass.Poacher, UnitClass.Marauder, UnitClass.MischiefMaker];\n\tfor(u in getAllies(skill.unit)) {\n\t\ttab.remove(u.kind);\n\t}\n\tfor(t in tab)\n\t\tspawnRenfort(t, 1, false);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 56,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 17
					},
					"done": 2
				},
				{
					"id": "GluckTraitorSwap",
					"name": "Interversion traître",
					"desc": "Chaque fois que cette unité inflige des dégâts en étant engagée, elle échange de place avec un allié non-engagé à moins de ::value1:: mètres. L’allié s’engage et subit une attaque d’opportunité. Si aucun allié n'est à portée, échange de place avec l'ennemi engagé.",
					"mode": 2,
					"range": {
						"allowedTargets": 1,
						"radius": 15
					},
					"props": {
						"targetAlly": true,
						"vars": {
							"value1": 15
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onDamageDealt(a) {\n\tif(!a.unit.isEngaged())\n\t\treturn;\n\n\tvar engagedUnit = a.unit.engagedUnit;\n\n\tvar tab = [];\n\tfor(u in getAllies(skill.unit)) {\n\t\tif( getDistance(u, skill.unit) <= vars.value1 && !u.isEngaged() && !u.isAnimal && u.canMove() ) {\n\t\t\ttab.push(u);\n\t\t}\n\t}\n\tif(tab.length > 0) {\n\t\tvar target = tab[randInt(0, tab.length-1)];\n\n\t\ta.unit.swapPositionWith(target, 0.2);\n\n\t\ttarget.engage(engagedUnit);\n\t\tif( target != skill.unit ) {\n\t\t\tengagedUnit.opportunityAttack(target, skill);\n\t\t}\n\t}\n\telse {\n\t\ta.unit.swapPositionWith(engagedUnit, 0.2);\n\t\ta.unit.engage(engagedUnit);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 56,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 17
					},
					"done": 2
				},
				{
					"id": "GluckUnlimitedDodge",
					"name": "Intouchable",
					"desc": "Cette unité a [Dodge] en permanence à moins d'être adjacent à au moins ::value1:: unités ennemies.",
					"mode": 2,
					"range": {},
					"props": {
						"feature": "Alazar1_Update",
						"globalEvents": true,
						"vars": {
							"nbAdjacent": 0,
							"value1": 3
						},
						"tooltipStatus": [
							{
								"st": "Dodge"
							}
						]
					},
					"script": "function onBeginAction() {\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tvars.nbAdjacent++;\n\t\t}\n\t}\n\tif(vars.nbAdjacent < vars.value1) {\n\t\tskill.unit.addStatus(Status.Dodge);\n\t}\n\telse {\n\t\tskill.unit.cancelStatus(Status.Dodge);\n\t}\n\tvars.nbAdjacent = 0;\n}",
					"notes": "",
					"iconeDone": true,
					"group": 56,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 19
					},
					"done": 2
				},
				{
					"id": "CrawlerChaosClaws",
					"name": "Griffes du chaos",
					"desc": "Inflige [DMG] à toutes les unités dans la zone et leur applique [Bleeding].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 0,
						"specialAnim": "Spin",
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"feature": "Alazar1_Update",
						"useWithoutWeapon": true
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Bleeding);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 57,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 18
					},
					"minDmg": 6,
					"done": 2
				},
				{
					"id": "CrawlerSerratedTalons",
					"name": "Serres dentelées",
					"desc": "Inflige [DMG] à toutes les unités dans la zone, les attire en mêlée et leur applique [Immobilisation] pendant ::value2:: rounds..",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 5,
						"allowedTargets": 0,
						"baseDistance": 0
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Immobile"
							}
						],
						"dmgAttribute": 0,
						"vars": {
							"value1": 3,
							"value2": 1
						},
						"specialAnim": "Spin",
						"feature": "Alazar1_Update",
						"useWithoutWeapon": true
					},
					"script": "function onHit(a) {\n\ta.target.pushback({ unit : skill.unit },-vars.value1);\n\ta.target.addStatus(Status.Immobile, 1, true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 57,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 18
					},
					"minDmg": 3,
					"done": 2
				},
				{
					"id": "CrawlerMassiveAttack",
					"name": "Attaque Massive",
					"desc": "Si l’unité subit une attaque en étant [Surrounded], elle riposte en infligeant [DMG] à toutes les unités adjacentes et les repousse de ::value1:: mètres.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Surrounded"
							}
						],
						"feature": "Alazar1_Update",
						"vars": {
							"value1": 3
						},
						"dmgAttribute": 0
					},
					"script": "function onDamageTaken(s) {\n\tif(skill.unit.hasStatus(Status.Surrounded)) {\n\t\tskill.unit.cast(Skill.CrawlerMassiveAttackEffect, s.unit, skill);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 57,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 17
					},
					"minDmg": 3,
					"done": 2
				},
				{
					"id": "CrawlerMassiveAttackEffect",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 0,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 3
						},
						"specialAnim": "AttackSpin",
						"feature": "Alazar1_Update"
					},
					"script": "function onHit( a ) {\n\ta.target.pushback({ unit : skill.unit }, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 57,
					"minDmg": 3,
					"done": 2
				},
				{
					"id": "CrawlerSurvival",
					"name": "Survivre",
					"desc": "Si un allié est à portée, aspire l'intégralité de sa [Health] pour se soigner.\nSinon, appelle ::value1:: Rampants en renfort.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"vars": {
							"value1": 2
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onSkill() {\n\tplay();\n\tvar tab = skill.getTargets();\n\tif(tab.length > 0) {\n\t\tvar target = tab[randInt(0, tab.length-1)];\n\t\tskill.unit.gainsHealth(target.damagedHealth);\n\t}\n\telse {\n\t\tspawnRenfort(UnitClass.Crawler, vars.value1, false);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 57,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "TacticalSlam",
					"name": "Heurtoir tactique",
					"desc": "Inflige [DMG] à la cible. Les dégâts sont augmentés de ::value1::% pour chaque Bonus et Malus appliqués sur la cible et sur cette unité.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 15
						},
						"feature": "Alazar1_Update",
						"specialAnim": "AttackShield",
						"apCost": 1
					},
					"script": "function onEval(a) {\n\tvar nb = 0;\n\tfor( st in skill.unit.getAllStatus() ) {\n\t\tif( st.isBonus || st.isMalus ) {\n\t\t\tnb++;\n\t\t}\n\t}\n\tfor( st in a.target.getAllStatus() ) {\n\t\tif( st.isBonus || st.isMalus ) {\n\t\t\tnb++;\n\t\t}\n\t}\n\ta.baseDamageBonus += vars.value1*nb;\n}",
					"notes": "",
					"iconeDone": true,
					"group": 58,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 19
					},
					"minDmg": 3,
					"maxDmg": 4,
					"done": 2
				},
				{
					"id": "Duel",
					"name": "Duel",
					"desc": "Inflige [DMG] et applique à la cible un malus aléatoire déjà appliqué sur cette unité puis gagne un bonus aléatoire déjà appliqué sur la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"isAttack": false,
						"feature": "Alazar1_Update"
					},
					"script": "function onDamage(a) {\n\tvar malus = [];\n\tvar bonus = [];\n\tfor(st in skill.unit.getAllStatus())\n\t\tif(st.isMalus && !a.target.hasStatus(st.kind))\n\t\t\tmalus.push(st);\n\tfor(st in a.target.getAllStatus())\n\t\tif(st.isBonus && !skill.unit.hasStatus(st.kind))\n\t\t\tbonus.push(st);\n\tif (malus.length > 0)\n\t\ta.target.addStatus(malus[randInt(0, malus.length - 1)].kind);\n\tif (bonus.length > 0)\n\t\tskill.unit.addStatus(bonus[randInt(0, bonus.length - 1)].kind);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 58,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 19
					},
					"minDmg": 8,
					"maxDmg": 10,
					"done": 2
				},
				{
					"id": "StanceDancing",
					"name": "Danse de postures",
					"desc": "Chaque fois que cette unité subit des dégâts, elle gagne ::value1:: [DefensiveStance] ou [BerserkerStance].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1,
							"value2": 10,
							"check": false
						},
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "DefensiveStance"
							},
							{
								"st": "BerserkerStance"
							}
						]
					},
					"script": "function onBeginRound() {\n\tif( !vars.check ) {\n\t\tskill.unit.addStatus(Status.DefensiveStance);\n\t\tvars.check = true;\n\t}\n}\n\nfunction onDamageTaken(a) {\n\tvar def = skill.unit.getStatusCount(Status.DefensiveStance);\n\tvar bers = skill.unit.getStatusCount(Status.BerserkerStance);\n\tif( (def > 0 && def < vars.value2 - 1) || bers == vars.value2 - 1 ) {\n\t\tskill.unit.addStatus(Status.DefensiveStance);\n\t\tskill.unit.cancelStatus(Status.BerserkerStance);\n\t}\n\tif( (bers > 0 && bers < vars.value2 - 1 ) || def == vars.value2 - 1 ) {\n\t\tskill.unit.addStatus(Status.BerserkerStance);\n\t\tskill.unit.cancelStatus(Status.DefensiveStance);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 58,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 14,
						"y": 19
					},
					"done": 2
				},
				{
					"id": "CombatFlow",
					"name": "Flux du combat",
					"desc": "Quand cette unité termine son tour, elle gagne un bonus aléatoire pendant ::value1:: round. Si elle est engagée, son adversaire engagé gagne un malus aléatoire pendant ::value1:: round.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onEndRound() {\n\tvar bonus = [Status.Fury, Status.Brutality, Status.Protection, Status.Inspiration, Status.Deflection, Status.Riposte, Status.Berserk, Status.Relentlessness];\n\tbonus = bonus.filter( function(s) { return !skill.unit.statusResist(s) && !skill.unit.hasStatus(s); } );\n\tif( bonus.length > 0 ) {\n\t\tskill.unit.addStatus(bonus[randInt(0, bonus.length-1)], vars.value1, true);\n\t}\n\tif( skill.unit.isEngaged() ) {\n\t\tvar u = skill.unit.engagedUnit;\n\t\tvar malus = [Status.Weakening, Status.Fragility, Status.Destabilization, Status.Vulnerability, Status.Disarm, Status.SlowReflexes, Status.NoReflexes];\n\t\tmalus = malus.filter( function(s) { return !u.statusResist(s) && !u.hasStatus(s); } );\n\t\tif( malus.length > 0 ) {\n\t\t\tu.addStatus(malus[randInt(0, malus.length-1)], vars.value1, true);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 58,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 19
					},
					"done": 2
				},
				{
					"id": "ImpalingStrike",
					"name": "Frappe écrasante",
					"desc": "Inflige [DMG] à la cible. Ignore la [Guard] dans [A1ArenaRedGazZone] et repousse de ::value1:: mètres dans [A1ArenaBlueGazZone].",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"defaultAction": true,
						"feature": "Alazar1_Update",
						"vars": {
							"value1": 2
						},
						"tooltipStatus": [
							{
								"st": "A1ArenaRedGazZone"
							},
							{
								"st": "A1ArenaBlueGazZone"
							}
						]
					},
					"script": "function onEval(a){\n\ta.forceIgnoreGuard = skill.unit.hasStatus(Status.A1ArenaRedGazZone);\n}\n\nfunction onHit(a){\n\tif (skill.unit.hasStatus(Status.A1ArenaBlueGazZone))\n\t\ta.target.pushback({ unit : skill.unit }, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 59,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 19
					},
					"minDmg": 8,
					"maxDmg": 10,
					"done": 2
				},
				{
					"id": "ThrowingAlazarianAxes",
					"name": "Lancer de hache alazarienne",
					"desc": "Après avoir utilisé une compétence, cette unité inflige [DMG] à l’ennemi le plus éloigné dans un rayon de ::value1:: mètres, même si elle est engagée.",
					"mode": 2,
					"range": {
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 2,
						"vars": {
							"value1": 6
						},
						"flags": 64,
						"preventEngage": true,
						"specialAnim": "ThrowLeft",
						"feature": "Alazar1_Update"
					},
					"script": "function onSkillPlayed(s) {\n\tvar dTmp = -1.;\n\tvar foeTmp = null;\n\tif(s.kind == Skill.KnockOut)\n\t\treturn;\n\tfor( u in getFoes(skill.unit) ) {\n\t\tvar d = getDistance(skill.unit, u);\n\t\tif(d > dTmp && d < vars.value1) {\n\t\t\tdTmp = d;\n\t\t\tfoeTmp = u;\n\t\t}\n\t}\n\tif (foeTmp != null) {\n\t\tspawnFx();\n\t\tattackTarget(foeTmp);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 59,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 17,
						"y": 19
					},
					"minDmg": 2,
					"done": 2
				},
				{
					"id": "EuphoricAddiction",
					"name": "Addiction euphorique",
					"desc": "Si cette unité termine son tour dans la même zone que ses vapeurs actuelles, elle gagne ::value1:: [Euphoria].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Euphoria"
							}
						]
					},
					"script": "function onEndRound() {\n\tif( skill.unit.hasStatus(Status.A1ArenaBlueGaz) && skill.unit.hasStatus(Status.A1ArenaBlueGazZone) ) {\n\t\tskill.unit.addStatus(Status.Euphoria, vars.value1);\n\t}\n\tif( skill.unit.hasStatus(Status.A1ArenaRedGaz) && skill.unit.hasStatus(Status.A1ArenaRedGazZone) ) {\n\t\tskill.unit.addStatus(Status.Euphoria, vars.value1);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 59,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 19
					},
					"done": 2
				},
				{
					"id": "UnbreakableBond1",
					"name": "Lien indéfectible",
					"desc": "Si Nairolf meurt, cette unité gagne [Berserk].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Berserk"
							}
						]
					},
					"script": "function onDeath(a) {\n\tif( a.target.kind == UnitClass.Nairolf ) {\n\t\tskill.unit.addStatus(Status.Berserk);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 60,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 19
					},
					"done": 2
				},
				{
					"id": "UnbreakableBond2",
					"name": "Lien indéfectible",
					"desc": "Si Ecila meurt, cette unité gagne [Berserk].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Berserk"
							}
						]
					},
					"script": "function onDeath(a) {\n\tif( a.target.kind == UnitClass.Ecila ) {\n\t\tskill.unit.addStatus(Status.Berserk);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 60,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 19
					},
					"done": 2
				},
				{
					"id": "ThrillOfTheTrack",
					"name": "Frisson de la traque",
					"desc": "Tant que les unités du joueur n'ont pas d'allié à moins de ::value1:: mètres, gagne [Inspiration] et [Brutality].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 4
						},
						"tooltipStatus": [
							{
								"st": "Inspiration"
							},
							{
								"st": "Brutality"
							}
						],
						"globalEvents": true,
						"feature": "Alazar1_Update"
					},
					"script": "function onBeginAction() {\n\tvar foes = getFoes(skill.unit);\n\tvar valid = true;\n\tif( isFoe(skill.unit) ) {\n\t\tfor( u1 in foes ) {\n\t\t\tfor( u2 in foes ) {\n\t\t\t\tif( u1 != u2 ) {\n\t\t\t\t\tif( getDistance(u1, u2) < vars.value1 ) {\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( !valid )\n\t\t\t\tbreak;\n\t\t}\n\t\tif( valid ) {\n\t\t\tskill.unit.addStatusPersist(Status.Inspiration, skill);\n\t\t\tskill.unit.addStatusPersist(Status.Brutality, skill);\n\t\t} else {\n\t\t\tskill.unit.cancelStatus(Status.Inspiration, skill);\n\t\t\tskill.unit.cancelStatus(Status.Brutality, skill);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 60,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 19,
						"y": 1
					},
					"done": 2
				},
				{
					"id": "EcilaWrath",
					"name": "Colère d'Ecila",
					"desc": "Inflige [DMG] à toutes les unités dans la zone et les repousse de ::value1:: mètres.\nLes dégâts sont augmentés de ::value2::% par animal allié tué ce combat.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 2,
						"angle": 160,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 2,
							"value2": 20
						},
						"defaultAction": true,
						"feature": "Alazar1_Update"
					},
					"script": "function onHit(a) {\n\ta.target.pushback({ unit : skill.unit }, vars.value1);\n}\n\nfunction onEval(s){\n\tvar nbAnimal = 0;\n\tfor( u in getAllUnits() ) {\n\t\tif( u.isAnimal && !u.isAlive() )\n\t\t\tnbAnimal++;\n\t}\n\ts.baseDamageBonus += vars.value2 * nbAnimal;\n}",
					"notes": "",
					"iconeDone": true,
					"group": 60,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 19
					},
					"minDmg": 8,
					"done": 2
				},
				{
					"id": "PheromoneShooting",
					"name": "Tir de phéromones",
					"desc": "Inflige [DMG] à la cible et lui applique [Chased] pendant ::value1:: round.",
					"mode": 1,
					"range": {
						"minDistance": 1,
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"tooltipStatus": [
							{
								"st": "Chased"
							}
						],
						"isHeroic": true,
						"apCost": 1,
						"vars": {
							"value1": 1
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onDamage(a) {\n\ta.target.addStatus(Status.Chased, vars.value1, true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 60,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 19
					},
					"minDmg": 6,
					"maxDmg": 10,
					"done": 2
				},
				{
					"id": "BestialShooting",
					"name": "Tir bestial",
					"desc": "Inflige [DMG] à la cible et tous les animaux adjacents à la cible effectuent une attaque d'opportunité sur la cible.",
					"mode": 1,
					"range": {
						"baseDistance": 9
					},
					"props": {
						"dmgAttribute": 1,
						"tooltipStatus": [],
						"isHeroic": true,
						"vars": {
							"value1": 2,
							"value2": 1
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onDamage(a) {\n\tfor(u in getAllies(skill.unit) ) {\n\t\tif( u.isAnimal && u.isMelee(a.target) ) {\n\t\t\tu.opportunityAttack(a.target, skill);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 60,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 19
					},
					"minDmg": 4,
					"maxDmg": 8,
					"done": 2
				},
				{
					"id": "Savagery",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onEndTurn() {\n\tif ( skill.unit.isEngaged() ) {\n\t\tskill.unit.addStatus(Status.Riposte);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 61,
					"done": 2
				},
				{
					"id": "Relentlessness",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"hasStatus": false
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onBeginAction() {\n\tif( skill.unit.hasStatus(Status.Relentlessness) ) {\n\t\tvars.hasStatus = true;\n\t} else vars.hasStatus = false;\n\tif ( !skill.unit.isEngaged() ) {\n\t\tskill.unit.cancelStatus(Status.Relentlessness);\n\t}\n}\n\nfunction onSkillPlayed(s) {\n\tif( s.unit == skill.unit ) {\n\t\tif ( s.kind == Skill.OpportunityAttack ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( skill.unit.isEngaged() && vars.hasStatus ) {\n\t\t\tskill.unit.opportunityAttack(skill.unit.engagedUnit, skill);\n\t\t}\n\t\tif ( !skill.unit.isEngaged() ) {\n\t\t\tskill.unit.cancelStatus(Status.Relentlessness);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 61,
					"done": 2
				},
				{
					"id": "AnimalMarked",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onDamageTaken(a) {\n\tif ( a.unit.isAnimal ) {\n\t\ta.unit.addStatus(Status.AnimalMarkedBonus, 1);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 61,
					"done": 2
				},
				{
					"id": "Rivalry",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"vars": {
							"value1": 50
						}
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target == skill.unit && t.unit.engagedUnit == skill.unit ) {\n\t\t\tt.baseDamageBonus -= vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 61,
					"done": 2
				},
				{
					"id": "LatentTerror",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"proba": 1
						}
					},
					"script": "function onDamageTaken(a) {\n\tif (skill.unit.isAlive() && !a.kills && proba(vars.proba)) {\n\t\tskill.unit.cancelStatus(Status.LatentTerror);\n\t\tterrorize();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 61,
					"done": 2
				},
				{
					"id": "Electrified",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true
					},
					"script": "function onSkillEval(a) {\n\tif( a.kind == Skill.Lightning || a.kind == Skill.SportLightning ||\n\t\ta.kind == Skill.CelestiumLightningStatusZone || a.kind == Skill.CelestiumLightning ) {\n\n\t\tfor( t in a.getTargets() ) {\n\t\t\tif( t.target == skill.unit ) {\n\t\t\t\tt.dmg = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction onSkillPlayed( a ) {\n\tif( a.unit.isMelee(skill.unit) ) {\n\t\tcast(Skill.ElectrifiedSkill, { unit : a.unit }, a);\n\t}\n}\n\nfunction onEndTurn() {\n\t// if( a)\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 61
				},
				{
					"id": "ElectrifiedSkill",
					"name": "",
					"desc": "",
					"mode": 0,
					"range": {
						"allowedTargets": 5
					},
					"props": {
						"flags": 2,
						"vars": {
							"value1": 20,
							"value2": 5
						},
						"castFx": "prefabs/fx/fight/status/Electrified.fx"
					},
					"script": "function onEval(a) {\n\tvar value = a.target.hasStatus(Status.Champion) ? vars.value2 : vars.value1;\n\ta.dmg = floor(a.target.health * value / 100);\n}",
					"notes": "",
					"done": 2,
					"iconeDone": true,
					"group": 61,
					"minDmg": 1
				},
				{
					"id": "Chased",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30
						},
						"globalEvents": true
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target == skill.unit ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 61
				},
				{
					"id": "Condemn",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						}
					},
					"script": "function onDeath(a) {\n\tif( a.target == skill.unit ) {\n\t\tskill.unit.gainsActionPoint(vars.value1);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 61,
					"done": 2
				},
				{
					"id": "Corrosion",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 15
						}
					},
					"script": "function onEndTurn() {\n\tif( skill.unit.isLastTurnThisRound() ) {\n\t\tvar nbStacks = skill.unit.getStatusCount(Status.Corrosion);\n\t\tvar value = floor((vars.value1 * nbStacks) / 100 * skill.unit.stats.armor);\n\t\tif( skill.unit.hasStatus(Status.Champion) ) {\n\t\t\tvalue = floor(value*0.25);\n\t\t}\n\t\telse skill.unit.damages(skill, value, false);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 61
				},
				{
					"id": "FrenzyStatus",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true
					},
					"script": "function onSkillEval(a) {\n\tif( a.unit == skill.unit ) {\n\t\tfor( t in a.getTargets() ) {\n\t\t\tvar p = round(100 * (1-(skill.unit.health / skill.unit.stats.health)));\n\t\t\tt.baseDamageBonus += p;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 61,
					"done": 2
				},
				{
					"id": "CelestiumLightningStatus",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onEndTurn() {\n\tskill.unit.consumeStatus(Status.CelestiumLightning);\n\tcast(Skill.CelestiumLightningStatusZone, { unit : skill.unit }, skill);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 61,
					"done": 2
				},
				{
					"id": "CelestiumLightningStatusZone",
					"name": "Châtiment de l'Œil",
					"desc": "À la fin du tour, toutes les unités à moins de ::value2:: mètres perdront ::value1::% de leur [Health].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 4
					},
					"props": {
						"castFx": "prefabs/fx/environment/lightning/CelestiumBattleLightning.fx",
						"vars": {
							"value1": 10,
							"value2": 2
						},
						"flags": 2
					},
					"script": "function onEval(a) {\n\ta.dmg = floor(a.target.stats.health * vars.value1 / 100);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 61,
					"done": 2
				},
				{
					"id": "Tear",
					"name": "Déchirure",
					"desc": "Cette unité ne peut plus infliger de coup critique.",
					"mode": 2,
					"range": {},
					"props": {
						"isInjury": true
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tt.criticalHitPercent = 0;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 1
					},
					"iconeDone": true,
					"group": 62,
					"done": 2
				},
				{
					"id": "OilStrengthProcWeak",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'augmenter la [Strength] pendant ::value2:: rounds.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30,
							"value2": 2
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.OilStrengthProc1);\n\t}\n}",
					"notes": "",
					"done": 2,
					"iconeDone": true,
					"group": 64
				},
				{
					"id": "OilDexterityProcWeak",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'augmenter la [Dexterity] pendant ::value2:: rounds.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30,
							"value2": 2
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.OilDexterityProc1, vars.value2, true);\n\t}\n}",
					"notes": "",
					"done": 2,
					"iconeDone": true,
					"group": 64
				},
				{
					"id": "OilDamageTakenProcWeak",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances de réduire les [DamageTakenPercent] pendant ::value2:: rounds.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30,
							"value2": 2
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.OilDamageTakenProc1, vars.value2, true);\n\t}\n}",
					"notes": "",
					"done": 2,
					"iconeDone": true,
					"group": 64
				},
				{
					"id": "OilProcPoison1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'appliquer ::value2:: [Poison].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 1
						},
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Poison, vars.value2);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilProcBurning1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'appliquer [Burning].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"tooltipStatus": [
							{
								"st": "Burning"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Burning);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilProcBleeding1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'appliquer [Bleeding].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilProcTrueDmg1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'infliger à sa [Health] ::value2::% de la [Health] maximum de la cible.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 5
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\ta.target.damages(skill, a.target.getPercentHealth(vars.value2), true);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilStrengthProc1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'augmenter la [Strength] pendant ::value2:: rounds.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 3
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.OilStrengthProc1);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilDexterityProc1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'augmenter la [Dexterity] pendant ::value2:: rounds.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 3
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.OilDexterityProc1, vars.value2, true);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilDamageTakenProc1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances de réduire les [DamageTakenPercent] pendant ::value2:: rounds.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 3
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.OilDamageTakenProc1, vars.value2, true);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilIgnoreGuard1",
					"name": "",
					"desc": "Les attaques effectuées ignorent ::value1::% de la [Guard] de la cible.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"attributes": [
							{
								"kind": "IgnoreGuard",
								"value": 50
							}
						]
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilSlowProc1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'appliquer [Slowdown] pendant ::value2:: round.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 1
						},
						"tooltipStatus": [
							{
								"st": "Slowdown"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.Slowdown, vars.value2, true);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilAnimalsDmg1",
					"name": "",
					"desc": "[DamageBonusPercent] infligés aux animaux augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						}
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( t.target.isAnimal ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilSelfheal1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances de rendre de la [Health] égale à ::value2::% des dégâts infligés.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 20
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\tskill.unit.gainsHealth(ceil(a.dmg*vars.value2/100));\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilPlagueDmg1",
					"name": "",
					"desc": "[DamageBonusPercent] infligés aux unités pestiférées augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						}
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( t.target.isAnimal ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilDotEffect1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'appliquer un statut infligeant des dégâts égaux à ::value2::% de l'attaque.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 50
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\ta.target.addStatus(Status.OilDotEffect1, ceil(a.dmg*vars.value2/100));\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilCleave1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'infliger également ::value2::% de ses dégâts aux ennemis adjacents à la cible.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 50
						}
					},
					"script": "function onDamageDealt(a) {\n\tif( checkOilProc(vars.value1) ) {\n\t\tspawnFx();\n\t\tfor( u in getFoes(skill.unit) ) {\n\t\t\tif( u.isMelee(a.target) ) {\n\t\t\t\tu.damages(skill, ceil(a.dmg*vars.value2/100));\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilWindfury1",
					"name": "",
					"desc": "Après avoir attaqué un ennemi en mêlée, a ::value1::% de chances d'enchaîner sur une attaque d'opportunité.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						},
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onSkillPlayed(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( t.target.isAlive() && t.dmg > 0 && t.target.side != skill.unit.side && t.target.isMelee(skill.unit) && checkOilProc(vars.value1) ) {\n\t\t\tspawnFx();\n\t\t\tskill.unit.opportunityAttack(t.target, skill);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilHemorraghe1",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts à un ennemi qui saigne, a ::value1::% de chances de déclencher des dégâts de [Bleeding].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						},
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif ( a.target.hasStatus(Status.Bleeding) && checkOilProc(vars.value1) ) {\n\t\ta.target.applyDot(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilSticky1",
					"name": "",
					"desc": "Le compagnon commence le combat avec [Deflection].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Deflection"
							}
						]
					},
					"script": "function onBeginBattle() {\n\tskill.unit.addStatus(Status.Deflection, 1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilProtection1",
					"name": "",
					"desc": "Le porteur ne peut subir aucun dégât direct de la part de ses alliés.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( skill.unit == t.target && skill.unit.side == s.unit.side ) {\n\t\t\tt.baseDamageBonus = -100;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilPlague1",
					"name": "",
					"desc": "Empêche le porteur d'être affecté par la Peste. Bloque le stade de contamination tant qu'il porte la ceinture.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilProcSolid",
					"name": "",
					"desc": "Tant que l'unité a de l'armure, elle a ::value1::% de chance de doubler sa garde.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"globalEvents": true
					},
					"script": "function onBeforeHit(t){\n\tif (skill.unit == t.target && skill.unit.armor > 0 && proba(vars.value1)){\n\t\tt.bonusGuard = t.guard;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 1
				},
				{
					"id": "OilSwipping",
					"name": "",
					"desc": "L'unité a ::value1::% de chances de ne pas être affectée par [Poison], [Burning] ou [Bleeding].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Poison"
							},
							{
								"st": "Burning"
							},
							{
								"st": "Bleeding"
							}
						],
						"vars": {
							"value1": 50
						}
					},
					"script": "function onStatus(a) {\n\tif( a.kind == Status.Poison || a.kind == Status.Bleeding || a.kind == Status.Burning ) {\n\t\tif( proba(vars.value1) ) {\n\t\t\tspawnFx();\n\t\t\ta.cancel();\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 1
				},
				{
					"id": "OilProcFever",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégâts, a ::value1::% de chances d'appliquer [Fever].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fever"
							}
						],
						"vars": {
							"value1": 50
						}
					},
					"script": "function onDamageDealt(a) {\n\tif (checkOilProc(vars.value1) ) {\n\t\ta.target.addStatus(Status.Fever);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "OilBrave",
					"name": "",
					"desc": "Quand l'unité utilise une compétence demandant de la Bravoure, a ::value1::% de chances de regagner <apt>::value2::</apt>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50,
							"value2": 1
						}
					},
					"script": "function onSkillPlayed( a ) {\n\tif( a.apCost > 0 && proba(vars.value1) ) {\n\t\tskill.unit.gainsActionPoint(vars.value2);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 1
				},
				{
					"id": "OilProcSlowReflexes",
					"name": "",
					"desc": "Chaque fois qu'une compétence inflige des dégats, a ::value1::% de chances d'appliquer [NoReflexes].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "NoReflexes"
							}
						],
						"vars": {
							"value1": 50
						}
					},
					"script": "function onDamageDealt(a) {\n\tif ( a.target.hasStatus(Status.Bleeding) && checkOilProc(vars.value1) ) {\n\t\ta.target.addStatus(Status.NoReflexes);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 64,
					"done": 2
				},
				{
					"id": "BeltAccPoisonExtra",
					"name": "Flacon de poison",
					"desc": "Après avoir utilisé une compétence, cette unité a ::value1::% de chances d'appliquer ::value2:: [Poison]s aux cibles touchées.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30,
							"value2": 1
						},
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						]
					},
					"script": "function onSkillPlayed(s) {\n\tif( proba(vars.value1) ) {\n\t\tfor( t in s.getTargets() ) {\n\t\t\tif( t.target.side != skill.unit.side )\n\t\t\t\tt.target.addStatus(Status.Poison, vars.value2);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccNoMovePenalty",
					"name": "Aisance",
					"desc": "Annule le malus de mouvement provenant des armures.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccLightArmorCrit",
					"name": "Percée",
					"desc": "[CriticalHit] contre les cibles qui portent une armure légère augmenté de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						}
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( t.target.hasLightArmor() ) {\n\t\t\tt.criticalHitPercent += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPoisonDmgBonus",
					"name": "Baume infectieux",
					"desc": "[DamageBonusPercent] infligés aux ennemis empoisonnés augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 5
						}
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( t.target.hasStatus(Status.Poison) ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilProcPoison",
					"name": "Concentré d'huile empoisonnée",
					"desc": "L'Huile empoisonnée a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPoisonResist",
					"name": "Antidote",
					"desc": "Cette unité résiste aux applications de [Poison].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						]
					},
					"script": "function onStatus(s) {\n\tif( s.kind == Status.Poison ) {\n\t\tspawnFx();\n\t\ts.cancel();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccBleedingCrit",
					"name": "Croc acéré",
					"desc": "[CriticalHit] contre les cibles qui saignent augmenté de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						}
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( t.target.hasStatus(Status.Bleeding) ) {\n\t\t\tt.criticalHitPercent += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilProcBleeding",
					"name": "Concentré d'huile d'aiguisage",
					"desc": "L'Huile d'aiguisage a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccBleedingResist",
					"name": "Cataplasme",
					"desc": "Cette unité résiste aux applications de [Bleeding].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						]
					},
					"script": "function onStatus(s) {\n\tif( s.kind == Status.Bleeding ) {\n\t\tspawnFx();\n\t\ts.cancel();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilProcBurning",
					"name": "Concentré d'huile acide",
					"desc": "L'Huile acide a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccHumanTorch",
					"name": "Onguent ignifugé ",
					"desc": "Cette unité ne subit plus les dégâts de [Burning] mais le statut n'est pas retiré suite à un déplacement spécial.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Burning"
							}
						]
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccBurningResist",
					"name": "Onguent anti-brûlure",
					"desc": "Cette unité résiste aux applications de [Burning].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Burning"
							}
						]
					},
					"script": "function onStatus(s) {\n\tif( s.kind == Status.Burning ) {\n\t\tspawnFx();\n\t\ts.cancel();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccRangeDmg",
					"name": "Projectiles de qualité",
					"desc": "[DamageBonusPercent] des attaques de Tir augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						}
					},
					"script": "function onSkillEval(s) {\n\tif ( s.isPrecisionSkill() ) {\n\t\tfor( t in s.getTargets() ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccBackstabCritBonus",
					"name": "Pierre à aiguiser",
					"desc": "[CritHitPercent] augmenté de ::value1::% lors d'une attaque dans le dos.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						}
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( t.backstab ) {\n\t\t\tt.criticalHitPercent += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccBackstabDmg",
					"name": "Coffin",
					"desc": "[DamageBonusPercent] des attaques dans le dos augmentés de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 5
						}
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( t.backstab ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccAutoHeal",
					"name": "Chique",
					"desc": "À la fin de son tour, cette unité régénère ::value1::% de sa [Health] maximum.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						}
					},
					"script": "function onEndTurn() {\n\tskill.unit.gainsHealth(ceil(skill.unit.stats.health*vars.value1/100));\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccGuardEngaged",
					"name": "Lanières de cuir",
					"desc": "Tant que cette unité est engagée, elle a [BeltAccGuardEngaged].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "BeltAccGuardEngaged"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tif ( skill.unit.isEngaged() ) {\n\t\tskill.unit.addStatusPersist(Status.BeltAccGuardEngaged, skill);\n\t} else skill.unit.cancelStatus(Status.BeltAccGuardEngaged, skill);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccReduceOpportunityAttack",
					"name": "Porte-bonheur en étain",
					"desc": "[DamageTakenPercent] des attaques d'opportunité réduits de ::value1::%.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tif( s.kind == Skill.OpportunityAttack && t.target == skill.unit ) {\n\t\t\tt.baseDamageBonus -= vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccBarbs",
					"name": "Tonifiant à la moutarde",
					"desc": "Chaque fois que cette unité subit des dégâts en mêlée, elle renvoie des dégâts égaux à ::value1::% de son [Armor] maximum.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 5
						}
					},
					"script": "function onDamageTaken(a) {\n\tif( skill.unit.isMelee(a.unit) ) {\n\t\ta.unit.damages(skill, ceil(skill.unit.stats.armor*vars.value1/100));\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccBaseActionOnly",
					"name": "Petit gantelet",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% mais cette unité peut seulement utiliser une [ActionBase].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						},
						"tooltipStatus": [
							{
								"st": "ActionBase"
							}
						]
					},
					"script": "function onSkillEval(s) {\n\tfor( t in s.getTargets() ) {\n\t\tt.baseDamageBonus += vars.value1;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccMoraleBonus",
					"name": "Idole ancienne",
					"desc": "Chaque fois que cette unité tue un ennemi, elle génère ::value1:: Moral de plus.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"vars": {
							"value1": 1
						}
					},
					"script": "function onDeath(a) {\n\tif( a.unit == skill.unit ) {\n\t\ta.unit.gainsMorale(vars.value1);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccGritEndTurn",
					"name": "Blason cousu",
					"desc": "À la fin de son tour, cette unité a ::value1::% de chances d'obtenir <apt>::value2::</apt>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 5,
							"value2": 1
						}
					},
					"script": "function onEndTurn() {\n\tif( proba(vars.value1) ) {\n\t\tskill.unit.gainsActionPoint(vars.value2);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilProcTrueDmg",
					"name": "Concentré d'huile explosive",
					"desc": "L'Huile explosive a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilStrengthProc",
					"name": "Concentré d'huile de force",
					"desc": "L'Huile de force a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilDexterityProc",
					"name": "Concentré d'huile de promptitude",
					"desc": "L'Huile de promptitude a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilDamageTakenProc",
					"name": "Concentré d'huile de renforcement",
					"desc": "L'Huile de renforcement a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilSlowProc",
					"name": "Concentré d'huile paralysante",
					"desc": "L'Huile paralysante a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilSelfHeal",
					"name": "Concentré d'huile de conversion",
					"desc": "L'Huile de conversion a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilDotEffect",
					"name": "Concentré d'huile infectieuse",
					"desc": "L'Huile infectieuse a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilCleave",
					"name": "Concentré d'huile vaporeuse",
					"desc": "L'Huile vaporeuse a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilWindfury",
					"name": "Concentré d'huile instable",
					"desc": "L'Huile instable a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilHemorraghe",
					"name": "Concentré d'huile hémorragique",
					"desc": "L'Huile hémorragique a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilSticky",
					"name": "Concentré d'huile poisseuse",
					"desc": "L'Huile hémorragique a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilProcSolid",
					"name": "Concentré d'huile solidifiante",
					"desc": "L'Huile solidifiante a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilSwipping",
					"name": "Concentré d'huile glissante",
					"desc": "L'Huile glissante a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccProcFever",
					"name": "Concentré d'huile fiévreuse",
					"desc": "L'Huile fiévreuse a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilBrave",
					"name": "Concentré d'huile de bravoure",
					"desc": "L'Huile de bravoure a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccOilProcSlowReflexes",
					"name": "Concentré d'huile d'épuisement",
					"desc": "L'Huile d'épuisement a ::value1::% de chances supplémentaires d'appliquer ses effets.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccTerrorMax",
					"name": "Charme des Traqueurs",
					"desc": "Augmente le maximum de [Terror] que peut subir le compagnon de ::value1::.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Terror"
							}
						]
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccGoldTeeth",
					"name": "Davier",
					"desc": "Cette unité a une chance de ramasser des dents en or à la fin des combats.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"probability": 0.05
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccTerrorReduceRound",
					"name": "Fétiche des Anciens",
					"desc": "Réduit de ::value1:: la quantité de [Terror] appliquée sur ce compagnon à la fin de son tour.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Terror"
							}
						]
					},
					"script": "function onEndTurn() {\n\tskill.unit.consumeStatus(Status.Terror, vars.value1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccBlindDay",
					"name": "Miroir en étain",
					"desc": "Chaque fois que cette unité s'engage, elle a une chance d'appliquer [Blind]. Ne fonctionne que par beau temps.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"engaged": false,
							"value1": 20
						},
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Blind"
							}
						]
					},
					"script": "function onBeginAction() {\n\tif( !skill.unit.isEngaged() ) {\n\t\tvars.engaged = false;\n\t}\n}\n\nfunction onSkillPlayed(s) {\n\tif( !vars.engaged && skill.unit.isEngaged() ) {\n\t\tvars.engaged = true;\n\t\tif( proba(vars.value1) ) {\n\t\t\tskill.unit.engagedUnit.addStatus(Status.Blind);\n\t\t}\n\t}\n}",
					"notes": "",
					"levels": [],
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccBeastH1",
					"name": "Poil de la Bête",
					"desc": "Chaque fois que cette unité est censée subir [Terror], elle gagne autant de [AnimalMarkedBonus] à la place.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Terror"
							},
							{
								"st": "AnimalMarkedBonus"
							}
						]
					},
					"script": "function onStatus(st) {\n\tvar nb = 0;\n\tif( st.kind == Status.Terror ) {\n\t\tspawnFx();\n\t\tnb = st.status.count;\n\t\tst.cancel();\n\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, nb);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccWeighted",
					"name": "Ceinture lestée",
					"desc": "Le porteur ne peut ni être attiré, ni repoussé. Gagne le statut [Unwavering].",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Unwavering"
							}
						]
					},
					"script": "function onBeginBattle() {\n\tskill.unit.addStatus(Status.Unwavering);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccMudGuard",
					"name": "Garde boue",
					"desc": "Cette unité ne subit pas les malus de [Boue].",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPushDistance",
					"name": "Gaine dorsale",
					"desc": "Les unités repoussées par le porteur parcourent le double de la distance.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPlague1",
					"name": "Ceinture de peste",
					"desc": "Empêche le porteur d'être affecté par la Peste. \nBloque le stade de contamination tant qu'il porte la ceinture.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccProtection1",
					"name": "Pansière",
					"desc": "Le porteur a ::value1::% de chance de ne pas subir de blessure.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 25
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPrisonerTrust",
					"name": "Timbale personnelle",
					"desc": "Chaque jour, le prisonnier équipé bénéficie d'un grand bonus de confiance envers le groupe.",
					"mode": 6,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPrisonerPony",
					"name": "Figurine de poney",
					"desc": "Le prisonnier porteur augmente sa capacité de transport.",
					"mode": 6,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPrisonerWorkMeatDryer",
					"name": "Torchon propre",
					"desc": "Le prisonnier équipé augmente la production de ::value1::% lorsqu'il est assigné à un séchoir à viande.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPrisonerWorkBrewBarrel",
					"name": "Levure sèche",
					"desc": "Le prisonnier équipé augmente la production de ::value1::% lorsqu'il est assigné à un tonneau de brassage.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPrisonerWorkSkinDryingRack",
					"name": "Tanin végétal",
					"desc": "Le prisonnier équipé augmente la production de ::value1::% lorsqu'il est assigné à un étendoir à peau.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "BeltAccPrisonerWorkBeeHive",
					"name": "Masque d'apiculteur",
					"desc": "Le prisonnier équipé augmente la production de ::value1::% lorsqu'il est assigné à une ruche.",
					"mode": 6,
					"range": {},
					"props": {
						"vars": {
							"value1": 50
						}
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"done": 2
				},
				{
					"id": "Corrupt",
					"name": "Soudoyer",
					"desc": "Vous dépensez ::value1:: krowns pour tenter de soudoyer une unité ennemie adjacente afin qu'elle combatte pour votre camp.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"allowed": false,
							"value1": 50
						},
						"defaultAction": true,
						"itemCost": {
							"item": "Gold",
							"qty": 50
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = false;\n\tfor( u in getFoes(skill.unit) )\n\t\tif( skill.unit.canCorrupt(u) ) {\n\t\t\tvars.allowed = true;\n\t\t\tbreak;\n\t\t}\n}\n\nfunction onEval(s) {\n\tif( !skill.unit.canCorrupt(s.target) ) dontAllow();\n}\n\nfunction onSkill() {\n\tcorrupt();\n}",
					"notes": "",
					"iconeDone": true,
					"group": 65,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 15,
						"y": 12
					},
					"done": 2
				},
				{
					"id": "BeltAccSong",
					"name": "Chant des anciens",
					"desc": "Applique [Motivation] aux alliés dans la zone.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 4,
						"allowedTargets": 1,
						"baseDistance": 0
					},
					"props": {
						"specialAnim": "Taunt",
						"tooltipStatus": [
							{
								"st": "Motivation"
							}
						],
						"apCost": 1
					},
					"script": "function onSkill() {\n\tplay();\n\tfor( a in skill.getTargets() ) {\n\t\ta.target.addStatusPersist(Status.Motivation, skill);\n\t}\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 65,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 2,
						"y": 6
					}
				},
				{
					"id": "BeltAccHunt",
					"name": "Chasse des anciens",
					"desc": "Capture un animal ennemi à coup sûr.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"allowed": false
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = false;\n\tfor( u in getFoes(skill.unit) )\n\t\tif( canCaptureTarget(u) ) {\n\t\t\tvars.allowed = true;\n\t\t\tbreak;\n\t\t}\n}\n\nfunction onEval(a) {\n\tif( !canCaptureTarget(a.target) ){\n\t\tdontAllow();\n\t}\n}\n\nfunction onSkill() {\n\tfor (t in skill.getTargets()){\n\t\tcaptureTarget(t);\n\t}\n}\n\nfunction canCaptureTarget(t){\n\treturn t.isAnimal && !t.isGhost && skill.unit.canCapture(t, false);\n}",
					"notes": "",
					"done": 1,
					"iconeDone": true,
					"group": 65,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 1,
						"y": 6
					}
				},
				{
					"id": "BeltAccElderSong",
					"name": "Chant des anciens",
					"desc": "Applique [Motivation] aux alliés dans la zone.",
					"mode": 0,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"done": 0,
					"iconeDone": false,
					"group": 65
				},
				{
					"id": "AnimAccAllyMelee",
					"name": "",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% si adjacent à un allié au combat.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"vars": {
							"value1": 10
						}
					},
					"script": "function onBeginAction() {\n\tvar count = 0;\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( skill.unit.isMelee(u) ) {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif( count >= 1 ) {\n\t\tskill.unit.addStatusPersist(Status.Unity, skill);\n\t} else skill.unit.cancelStatus(Status.Unity, skill);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "AnimAccNoAllyMelee",
					"name": "",
					"desc": "[DamageBonusPercent] augmentés de ::value1::% si non-adjacent à un allié au combat.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"vars": {
							"value1": 5
						}
					},
					"script": "function onBeginAction() {\n\tvar count = 0;\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( skill.unit.isMelee(u) ) {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif( count == 0 ) {\n\t\tskill.unit.addStatusPersist(Status.Loneliness, skill);\n\t} else skill.unit.cancelStatus(Status.Loneliness, skill);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "AnimAccObey",
					"name": "",
					"desc": "Cette unité peut être contrôlée au combat.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "AnimAccSecondLife",
					"name": "",
					"desc": "Quand cette unité doit mourir, elle ne meurt pas puis le collier est détruit.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "AnimAccBerserkProc",
					"name": "",
					"desc": "Quand cette unité a ::value1::% ou moins de [Health] restante, elle a [Berserk].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30
						},
						"tooltipStatus": [
							{
								"st": "Berserk"
							}
						]
					},
					"script": "function onDamageTaken(a) {\n\tif( skill.unit.health <= (skill.unit.stats.health*vars.value1/100)) {\n\t\tspawnFx();\n\t\tskill.unit.addStatus(Status.Berserk);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "AnimAccRegen",
					"name": "",
					"desc": "À la fin de son tour, cette unité soigne ::value1::% de sa [Health] maximum.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						}
					},
					"script": "function onEndTurn() {\n\tspawnFx();\n\tskill.unit.gainsHealth(ceil(skill.unit.stats.health*vars.value1/100));\n}",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "AnimAccGuard",
					"name": "",
					"desc": "Lorsque la troupe subit une attaque par surprise, un ennemi aléatoire commence avec une blessure.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "AnimAccPoison",
					"name": "",
					"desc": "L'animal porteur a ::value1::% de probabilité d'empoisonner sa cible mais il commence le combat avec le statut [Poison].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						],
						"vars": {
							"value1": 50,
							"value2": 2
						}
					},
					"script": "function onBeginBattle() {\n\tskill.unit.addStatus(Status.Poison);\n}\n\nfunction onSkillPlayed(s) {\n\tif( skill.unit.hasStatus(Status.Poison) && proba(vars.value1) ) {\n\t\tfor( t in s.getTargets() ) {\n\t\t\tif( t.target.side != skill.unit.side )\n\t\t\t\tt.target.addStatus(Status.Poison, vars.value2);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "AnimAccFire",
					"name": "",
					"desc": "L'animal porteur a ::value1::% de probabilité de brûler sa cible mais il commence le combat avec le statut [Burning].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Burning"
							}
						],
						"vars": {
							"value1": 50,
							"value2": 2
						}
					},
					"script": "function onBeginBattle() {\n\tskill.unit.addStatus(Status.Burning);\n}\n\nfunction onSkillPlayed(s) {\n\tif(skill.unit.hasStatus(Status.Burning) && proba(vars.value1) ) {\n\t\tfor( t in s.getTargets() ) {\n\t\t\tif( t.target.side != skill.unit.side )\n\t\t\t\tt.target.addStatus(Status.Burning, vars.value2);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "ArmorLastUnitPlay",
					"name": "",
					"desc": "Si l'unité est le dernier compagnon à jouer, alors elle gagne [Executer].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Executer"
							}
						]
					},
					"script": "function onBeginTurn(){\n\tvar isLast = true;\n\tfor (u in getAllies(skill.unit, false))\n\t\tif (!hasPlayed(u)){\n\t\t\tisLast = false;\n\t\t\tbreak;\n\t\t}\n\tif (isLast){\n\t\tskill.unit.addStatus(Status.Executer);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 2
				},
				{
					"id": "ArmorOpportunityCrit",
					"name": "",
					"desc": "Lorsqu'elle reçoit une attaque d'opportunité, l'unité effectue également une attaque d'opportunité, avec ::value1::% de [Critique].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 30
						},
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onEval( a ) {\n\tif( a.isOpportunityAttack() && a.castOrigin == Skill.ArmorOpportunityCrit ) {\n\t\ta.criticalHitPercent += vars.value1;\n\t}\n}\n\nfunction onDamageTaken(a) {\n\tif( a.isOpportunityAttack() ) {\n\t\tskill.unit.opportunityAttack(a.unit, skill);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 3
				},
				{
					"id": "ArmorSurrounded",
					"name": "",
					"desc": "L'unité compte pour 2 compagnons lorsqu'elle encercle un ennemi.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 66,
					"done": 3
				},
				{
					"id": "FireZone",
					"name": "Feu",
					"desc": "Une zone de feu qui applique [Burning] à toutes les unités qui traversent la zone.",
					"mode": 5,
					"range": {
						"allowedTargets": 4
					},
					"props": {
						"damageType": [
							0
						],
						"tooltipStatus": [
							{
								"st": "Fire"
							},
							{
								"st": "Burning"
							}
						]
					},
					"script": "function onZoneIn(a) {\n\ta.target.addStatus(Status.Burning);\n}\n\nfunction onZoneMoveEnd(a) {\n\ta.target.addStatus(Status.Burning);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 2
					},
					"minDmg": 10,
					"iconeDone": true,
					"group": 68,
					"done": 2
				},
				{
					"id": "PoisonZone",
					"name": "Poison",
					"desc": "Une zone de poison qui applique ::value1:: [Poison]s à toutes les unités qui traversent ou terminent leur tour dedans.",
					"mode": 5,
					"range": {
						"allowedTargets": 4
					},
					"props": {
						"damageType": [
							1
						],
						"vars": {
							"value1": 2
						},
						"tooltipStatus": [
							{
								"st": "PoisonCloud"
							}
						]
					},
					"script": "function onZoneIn(a) {\n\tif (a.target.kind == UnitClass.RatNest) return;\n\ta.target.addStatus(Status.PoisonCloud);\n\ta.target.addStatus(Status.Poison, vars.value1);\n}\n\nfunction onZoneEndTurn(a) {\n\tif (a.target.kind == UnitClass.RatNest) return;\n\ta.target.addStatus(Status.Poison, vars.value1);\n}\n\nfunction onZoneOut(a) {\n\tif (a.target.kind == UnitClass.RatNest) return;\n\ta.target.cancelStatus(Status.PoisonCloud);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 2
					},
					"minDmg": 10,
					"iconeDone": true,
					"group": 68,
					"done": 2
				},
				{
					"id": "CastPoisonZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 0.9,
						"allowedTargets": 4,
						"baseDistance": 10000
					},
					"props": {},
					"script": "function onSkill() {\n\tcreateAreaEffect(\"Immediate\", 1 , {skillId: Skill.PoisonZone} );\n}",
					"notes": "Cast PoisonZone sur un socle sans toucher l'attaquant si adjacent.",
					"iconeDone": true,
					"group": 68,
					"done": 2
				},
				{
					"id": "FogZone",
					"name": "Brouillard",
					"desc": "Une zone de brouillard qui masque la visibilité.",
					"mode": 5,
					"range": {
						"allowedTargets": 4
					},
					"props": {},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 2
					},
					"iconeDone": true,
					"group": 68,
					"done": 2
				},
				{
					"id": "TerrorFogZone",
					"name": "Brouillard fantôme",
					"desc": "Une zone de brouillard qui masque la visibilité et qui applique ::value1:: [Terror] à toutes les unités qui traversent ou terminent leur tour dedans.",
					"mode": 5,
					"range": {
						"allowedTargets": 4
					},
					"props": {
						"vars": {
							"value1": 1
						},
						"tooltipStatus": [
							{
								"st": "Terror"
							}
						]
					},
					"script": "function onZoneIn(a) {\n\ta.target.addStatus(Status.TerrorFog);\n\ta.target.addStatus(Status.Terror, vars.value1);\n}\n\nfunction onZoneEndTurn(a) {\n\ta.target.addStatus(Status.Terror, vars.value1);\n}\n\nfunction onZoneOut(a) {\n\ta.target.cancelStatus(Status.TerrorFog);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 2
					},
					"iconeDone": true,
					"group": 68,
					"done": 2
				},
				{
					"id": "MudZone",
					"name": "Boue",
					"desc": "Une zone de boue qui ralentit toutes les unités qui la traversent.",
					"mode": 5,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Mud"
							}
						]
					},
					"script": "function onZoneIn(a) {\n\ta.target.addStatus(Status.Mud);\n}\n\nfunction onZoneMoveEnd(a) {\n\ta.target.addStatus(Status.Mud);\n}\n\nfunction onZoneOut(a) {\n\ta.target.cancelStatus(Status.Mud);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 5
					},
					"iconeDone": true,
					"group": 68,
					"done": 2
				},
				{
					"id": "A1ArenaRedGazZone",
					"name": "Vapeurs stimulantes",
					"desc": "Une zone qui applique [A1ArenaRedGaz] aux unités adverses.",
					"mode": 5,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "A1ArenaRedGaz"
							}
						],
						"feature": "Alazar1_Update",
						"globalEvents": true
					},
					"script": "function onZoneIn(a) {\n\tif (isFoe(a.target))\n\t\ta.target.addStatus(Status.A1ArenaRedGazZone);\n}\n\nfunction onZoneOut(a) {\n\tif (isFoe(a.target))\n\t\ta.target.cancelStatus(Status.A1ArenaRedGazZone);\n}\n\nfunction onBeginRound() {\n\tfor( u in getFoeUnits() ) {\n\t\tif( u.hasStatus(Status.A1ArenaRedGazZone) ) {\n\t\t\tu.addStatus(Status.A1ArenaRedGaz);\n\t\t\tu.cancelStatus(Status.A1ArenaBlueGaz);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 68,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 8
					},
					"done": 2
				},
				{
					"id": "A1ArenaRedGazStatus",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 100
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( t.target.isEngaged() ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 68,
					"done": 2
				},
				{
					"id": "A1ArenaBlueGazZone",
					"name": "Vapeurs tonifiantes",
					"desc": "Une zone qui applique [A1ArenaBlueGaz] aux unités adverses.",
					"mode": 5,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "A1ArenaBlueGaz"
							}
						],
						"feature": "Alazar1_Update",
						"globalEvents": true
					},
					"script": "function onZoneIn(a) {\n\tif (isFoe(a.target))\n\t\ta.target.addStatus(Status.A1ArenaBlueGazZone);\n}\n\nfunction onZoneOut(a) {\n\tif (isFoe(a.target))\n\t\ta.target.cancelStatus(Status.A1ArenaBlueGazZone);\n}\n\nfunction onBeginRound() {\n\tfor( u in getFoeUnits() ) {\n\t\tif( u.hasStatus(Status.A1ArenaBlueGazZone) ) {\n\t\t\tu.addStatus(Status.A1ArenaBlueGaz);\n\t\t\tu.cancelStatus(Status.A1ArenaRedGaz);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 68,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 9
					},
					"done": 2
				},
				{
					"id": "A1ArenaBlueGazStatus",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 100
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onSkillEval(a) {\n\tfor( t in a.getTargets() ) {\n\t\tif( !t.target.isEngaged() ) {\n\t\t\tt.baseDamageBonus += vars.value1;\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 68,
					"done": 2
				},
				{
					"id": "RockSlideZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 6
					},
					"props": {
						"castFx": "prefabs/fx/environment/RockSlide/RockSlide_Sign.fx"
					},
					"script": "function onSkill() {\n\tcreateEvent(Skill.RockSlide, 1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 69,
					"done": 2
				},
				{
					"id": "RockSlideZone_Matriarch",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 6
					},
					"props": {
						"castFx": "prefabs/fx/environment/RockSlide/RockSlide_Sign.fx"
					},
					"script": "function onSkill() {\n\tcreateEvent(Skill.RockSlide, 2); // 2 end round because trigger at the end of a round\n}",
					"notes": "",
					"iconeDone": true,
					"group": 69,
					"done": 2
				},
				{
					"id": "RockSlide",
					"name": "Éboulement",
					"desc": "Un éboulement va s'abattre et tuer toute unité touchée.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 4
					},
					"props": {
						"castFx": "prefabs/fx/environment/RockSlide/RockSlide.fx",
						"flags": 1
					},
					"script": "function onEval(a) {\n\ta.dmg = a.target.health + a.target.armor;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 3,
						"y": 7
					},
					"iconeDone": true,
					"group": 69,
					"done": 2
				},
				{
					"id": "LightningZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 6
					},
					"props": {
						"castFx": "prefabs/fx/environment/lightning/BattleLightning_Sign.fx"
					},
					"script": "function onSkill() {\n\tcreateEvent(Skill.Lightning, 1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 69,
					"done": 2
				},
				{
					"id": "Lightning",
					"name": "Éclair",
					"desc": "Un éclair va s'abattre et tuer toute unité touchée.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 4
					},
					"props": {
						"castFx": "prefabs/fx/environment/lightning/BattleLightning.fx",
						"flags": 2
					},
					"script": "function onEval(a) {\n\ta.dmg = a.target.health;\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 7
					},
					"iconeDone": true,
					"group": 69,
					"done": 2
				},
				{
					"id": "SportLightningZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 6
					},
					"props": {
						"castFx": "prefabs/fx/environment/lightning/BattleLightning_Sign.fx"
					},
					"script": "function onSkill() {\n\tcreateEvent(Skill.SportLightning, 1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 69,
					"done": 2
				},
				{
					"id": "SportLightning",
					"name": "Éclair Mineur",
					"desc": "Un éclair va s'abattre et mettre hors de combat toute unité touchée.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 4
					},
					"props": {
						"castFx": "prefabs/fx/environment/lightning/BattleLightning.fx",
						"flags": 2
					},
					"script": "function onEval(a) {\n\ta.dmg = a.target.health;\n}",
					"notes": "",
					"iconeDone": true,
					"group": 69,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 1,
						"y": 5
					},
					"done": 2
				},
				{
					"id": "CelestiumLightningZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 6
					},
					"props": {
						"castFx": "prefabs/fx/environment/lightning/BattleLightning_Sign.fx"
					},
					"script": "function onSkill() {\n\tcreateEvent(Skill.CelestiumLightning, 1);\n}",
					"notes": "Timeline event",
					"iconeDone": true,
					"group": 69,
					"done": 2
				},
				{
					"id": "CelestiumLightning",
					"name": "Châtiment de l'Œil",
					"desc": "Le Châtiment de l'Œil va s'abattre et foudroyer la zone.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 4
					},
					"props": {
						"castFx": "prefabs/fx/environment/lightning/CelestiumBattleLightning.fx",
						"flags": 2,
						"vars": {
							"value1": 50
						}
					},
					"script": "function onEval(a) {\n\ta.dmg = floor(a.target.stats.health * vars.value1 / 100);\n}\n\nfunction onPostSkill() {\n\tcast(Skill.CelestiumLightningPersist, { skill : skill }, skill);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 69,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 19
					},
					"done": 2
				},
				{
					"id": "CelestiumLightningPersist",
					"name": "Châtiment de l'Œil",
					"desc": "L'Œil a châtié la zone et applique [CelestiumLightning] à la première unité qui la traverse.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 4
					},
					"props": {
						"castFx": "prefabs/fx/environment/lightning/CelestiumBattleLightning.fx",
						"flags": 2,
						"tooltipStatus": [
							{
								"st": "CelestiumLightning"
							}
						],
						"vars": {
							"value1": 25
						},
						"zoneFx": "prefabs/fx/environment/lightning/BattleCelestiumElectrifiedZone.fx"
					},
					"script": "function onSkill() {\n\tcreateAreaEffect(\"Infinite\", 0);\n}\n\nfunction onZoneIn( a ) {\n\tfor( u in a.getTargets() )\n\t\tu.addStatus(Status.CelestiumLightning);\n\ta.remove();\n}",
					"notes": "",
					"iconeDone": true,
					"group": 69,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 19
					},
					"done": 2
				},
				{
					"id": "PoisonTrap",
					"name": "Piège de poison",
					"desc": "Marcher à proximité de ce piège pourrait le déclencher et créer un nuage de poison.",
					"mode": 5,
					"range": {
						"allowedTargets": 4,
						"type": 0,
						"radius": 4
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "PoisonCloud"
							}
						]
					},
					"script": "function onZoneIn(a) {\n\tcreateSkillZone(Skill.PoisonZone, { aoe: a });\n\ta.remove();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 14,
						"y": 15
					},
					"iconeDone": true,
					"group": 70,
					"done": 2
				},
				{
					"id": "FireTrap",
					"name": "Piège de feu",
					"desc": "Marcher à proximité de ce piège pourrait le déclencher et créer une surface enflammée.",
					"mode": 5,
					"range": {
						"allowedTargets": 4,
						"type": 0,
						"radius": 2
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fire"
							}
						]
					},
					"script": "function onZoneIn(a) {\n\tcreateSkillZone(Skill.FireZone, { aoe: a });\n\ta.remove();\n}",
					"notes": "L'icone a été prise dans la banque pour ne pas que ce soit \"IG\" pour le joueur",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 9
					},
					"iconeDone": true,
					"group": 70,
					"done": 2
				},
				{
					"id": "PushTrap",
					"name": "Piège d'exil",
					"desc": "Marcher à proximité de ce piège pourrait le déclencher et repousser toutes les unités dans la zone.",
					"mode": 5,
					"range": {
						"allowedTargets": 4,
						"type": 0,
						"radius": 4
					},
					"props": {
						"vars": {
							"value1": 3,
							"value2": 4
						},
						"castFx": "prefabs/fx/fight/Explosion/Grenade/GrenadeBlast.fx"
					},
					"script": "function onZoneIn(a) {\n\ta.stopMove(false);\n\ta.remove();\n\tplay();\n\tfunction pushbackAllTargets() {\n\t\tfor( t in a.getUnitsInRadius(vars.value2) ) {\n\t\t\tt.pushback(getPushbackOrigin(), getPushback(null));\n\t\t}\n\t}\n\ta.addMoveEvent(pushbackAllTargets);\n}\n\nfunction getPushback( a ) {\n\treturn vars.value1;\n}\n\nfunction getPushbackOrigin() {\n\treturn { skill : skill };\n}",
					"notes": "L'icone a été prise dans la banque pour ne pas que ce soit \"IG\" pour le joueur",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 17
					},
					"iconeDone": true,
					"group": 70,
					"done": 2
				},
				{
					"id": "BearTrap",
					"name": "Piège à ours",
					"desc": "Marcher à proximité de ce piège pourrait le déclencher et infliger de lourds dégâts.",
					"mode": 5,
					"range": {
						"allowedTargets": 4,
						"type": 0,
						"radius": 3
					},
					"props": {
						"vars": {
							"value1": 20
						}
					},
					"script": "function onZoneIn(a) {\n\ta.sfx(Sound.Skill_BearTrap);\n\ta.target.damages(skill, round((a.target.stats.health*vars.value1)/100), true);\n\ta.remove();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 14
					},
					"iconeDone": true,
					"group": 70,
					"done": 2
				},
				{
					"id": "FearZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"allowedTargets": 4,
						"type": 0,
						"radius": 3
					},
					"props": {
						"vars": {
							"value1": 20
						}
					},
					"script": "function onZoneIn(a) {\n\tif( isPlayer(a.target) )\n\t\ta.target.addStatus(Status.Terror, 10);\n}",
					"notes": "",
					"done": 2,
					"iconeDone": true,
					"group": 70
				},
				{
					"id": "MosquitoZone",
					"name": "Nuée de moustique",
					"desc": "Inflige [VALUE]% dégâts à la [Health] de toute unité qui traverse ou termine son tour dans le nuage.\n\nCes insectes semblent attirés par la sueur.",
					"mode": 5,
					"range": {
						"allowedTargets": 4,
						"radius": 1
					},
					"props": {
						"vars": {
							"maxRange": 5
						},
						"value": 10
					},
					"script": "function onZoneIn(a) {\n\ta.target.damages(skill, ceil(a.target.stats.health*skill.value/100), true);\n}\n\nfunction onZoneEndTurn(a) {\n\ta.target.damages(skill, ceil(a.target.stats.health*skill.value/100), true);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 19,
						"y": 6
					},
					"iconeDone": true,
					"group": 70,
					"done": 2
				},
				{
					"id": "Brazier",
					"name": "Brasero",
					"desc": "Du feu pourrait embraser ce brasero.",
					"mode": 5,
					"range": {
						"allowedTargets": 4,
						"type": 0,
						"radius": 4
					},
					"props": {},
					"script": "function onZoneIn(a) {\n\tfor( u in getUnits() ) {\n\t}\n\ta.remove();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 12,
						"y": 14
					},
					"iconeDone": true,
					"group": 70,
					"done": 2
				},
				{
					"id": "SpearWeaponZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"allowedTargets": 4
					},
					"props": {
						"provideSkill": "SpearWeapon"
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 2
					},
					"iconeDone": true,
					"group": 70,
					"done": 2
				},
				{
					"id": "SpearWeapon",
					"name": "Jet de lance",
					"desc": "Inflige [DMG] à la cible.",
					"mode": 1,
					"range": {
						"baseDistance": 8
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1
						},
						"weapon": "PolearmArena",
						"specialAnim": "Throw",
						"apCost": 0,
						"flags": 4,
						"needDisengaged": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 2
					},
					"minDmg": 10,
					"iconeDone": true,
					"group": 70,
					"done": 2
				},
				{
					"id": "Plague_Madness",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 100
						}
					},
					"script": "function onBeginRound(){\n\tif (randInt(0, 100) <= vars.value1) {\n\t\tskill.unit.madness();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 71,
					"done": 2
				},
				{
					"id": "FleeArea",
					"name": "Zone de fuite",
					"desc": "Lorsqu’un compagnon atteint cette zone, utilisez sa compétence <iskill>Flee</iskill> afin de quitter le champ de bataille.",
					"mode": 5,
					"range": {
						"type": 2,
						"radius": 10,
						"allowedTargets": 0
					},
					"props": {},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 16
					},
					"iconeDone": true,
					"group": 71,
					"done": 2
				},
				{
					"id": "EquipTorch",
					"name": "Équiper une torche",
					"desc": "S'équiper d'une torche.",
					"mode": 4,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 13,
						"y": 15
					},
					"iconeDone": true,
					"group": 71,
					"done": 2
				},
				{
					"id": "AIBehaviourDefault",
					"name": "Comportement : Attaquer",
					"desc": "À son tour, cette unité se déplacera et attaquera les unités à proximité.",
					"mode": 4,
					"range": {},
					"props": {
						"defaultAction": false,
						"flags": 8
					},
					"script": "function onSkill() {\n\tskill.unit.cancelStatus(Status.AIBehaviourRunaway);\n\tskill.unit.cancelStatus(Status.AIBehaviourDefault);\n\tskill.unit.cancelStatus(Status.AIBehaviourStop);\n\n\tskill.unit.addStatus(Status.AIBehaviourStop);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 15
					},
					"iconeDone": true,
					"group": 72,
					"done": 2
				},
				{
					"id": "AIBehaviourStop",
					"name": "Comportement : Défendre",
					"desc": "À son tour, cette unité restera à sa position et attaquera les unités à proximité.",
					"mode": 4,
					"range": {},
					"props": {
						"defaultAction": false,
						"flags": 8
					},
					"script": "function onSkill() {\n\tskill.unit.cancelStatus(Status.AIBehaviourRunaway);\n\tskill.unit.cancelStatus(Status.AIBehaviourDefault);\n\tskill.unit.cancelStatus(Status.AIBehaviourStop);\n\n\tskill.unit.addStatus(Status.AIBehaviourRunaway);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 15
					},
					"iconeDone": true,
					"group": 72,
					"done": 2
				},
				{
					"id": "AIBehaviourRunaway",
					"name": "Comportement : Fuir",
					"desc": "À son tour, cette unité cherchera à s'éloigner des unités ennemies et à rester à proximité des unités alliées.",
					"mode": 4,
					"range": {},
					"props": {
						"defaultAction": false,
						"flags": 8
					},
					"script": "function onSkill() {\n\tskill.unit.cancelStatus(Status.AIBehaviourRunaway);\n\tskill.unit.cancelStatus(Status.AIBehaviourDefault);\n\tskill.unit.cancelStatus(Status.AIBehaviourStop);\n\tif (skill.unit.hasStatus(Status.ScaredUnit))\n\t\tskill.unit.addStatus(Status.AIBehaviourStop);\n\telse\n\t\tskill.unit.addStatus(Status.AIBehaviourDefault);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 15
					},
					"iconeDone": true,
					"group": 72,
					"done": 2
				},
				{
					"id": "ArenaVulnerability",
					"name": "Pression",
					"desc": "Tous les ennemis débutent le combat sous [Vulnerability].",
					"mode": 2,
					"range": {
						"allowedTargets": 0
					},
					"props": {
						"tooltipStatus": [
							{
								"st": "Vulnerability"
							}
						]
					},
					"script": "function onInit() {\n\tfor ( f in getFoeUnits() ) {\n\t\tf.addStatus(Status.Vulnerability, 1);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 4,
						"y": 12
					},
					"levels": [],
					"iconeDone": true,
					"group": 74,
					"done": 2
				},
				{
					"id": "ArenaStrengthBonus",
					"name": "Force améliorée",
					"desc": "[Strength] des compagnons augmentée de [ATTR]%.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"attributes": [
							{
								"kind": "Strength",
								"value": 5,
								"isPercentage": true
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 5,
						"y": 12
					},
					"iconeDone": true,
					"group": 74,
					"done": 2
				},
				{
					"id": "ArenaDexterityBonus",
					"name": "Dextérité améliorée",
					"desc": "[Dexterity] des compagnons augmentée de [ATTR]%.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"attributes": [
							{
								"kind": "Dexterity",
								"value": 5,
								"isPercentage": true
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 6,
						"y": 12
					},
					"iconeDone": true,
					"group": 74,
					"done": 2
				},
				{
					"id": "ArenaCriticalDamage",
					"name": "Dégâts des coups critiques améliorés",
					"desc": "[CritHitDamageBonusPercent] augmentés de [ATTR]%.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"attributes": [
							{
								"kind": "CritHitDamageBonusPercent",
								"value": 15
							}
						]
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 12
					},
					"iconeDone": true,
					"group": 74,
					"done": 2
				},
				{
					"id": "ArenaGritBonusOnKill",
					"name": "À mort !",
					"desc": "La mort d'un ennemi génère <ap>::value1::</ap>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 2
						}
					},
					"script": "function onDeath(a) {\n\tif ( isFoe(a.target) ) {\n\t\tvar unit = getPlayerUnits()[0];\n\t\tif (unit != null) {\n\t\t\tunit.gainsActionPoint(vars.value1);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 7,
						"y": 17
					},
					"iconeDone": true,
					"group": 74,
					"done": 2
				},
				{
					"id": "ArenaExigenceGritBonus",
					"name": "Public en folie",
					"desc": "Réussir une exigence confère <ap>::value1::</ap> supplémentaire.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						}
					},
					"script": "",
					"notes": "Hard codé",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 12
					},
					"iconeDone": true,
					"group": 74,
					"done": 2
				},
				{
					"id": "ArenaVengeanceBonus",
					"name": "Esprit de vengeance",
					"desc": "Chaque fois qu'un compagnon subit une attaque, il gagne [Fury].",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						]
					},
					"script": "function onDamageTaken(a) {\n\tif (a.target == skill.unit && isPlayer(skill.unit)) {\n\t\tskill.unit.addStatus(Status.Fury);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "ArenaDodgeBonus",
					"name": "État d'alerte",
					"desc": "Chaque fois qu'un compagnon réussit un coup critique, il gagne [AnimalMarkedBonus].",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "AnimalMarkedBonus"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif (a.unit == skill.unit && isPlayer(skill.unit) && a.isCritical) {\n\t\tskill.unit.addStatus(Status.AnimalMarkedBonus, 1);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 5,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "ArenaBleedingBonus",
					"name": "Sauvagerie",
					"desc": "Chaque fois qu'un compagnon réussit un coup critique, il inflige [Bleeding].",
					"mode": 2,
					"range": {
						"allowedTargets": 0
					},
					"props": {
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif (a.unit == skill.unit && isPlayer(skill.unit) && a.isCritical) {\n\t\tif (a.target.addStatus(Status.Bleeding))\n\t\t\tspawnFx();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 6,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "ArenaInspirationBonus",
					"name": "Exaltation",
					"desc": "Réussir une exigence applique [Galvanization] aux compagnons.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Galvanization"
							}
						]
					},
					"script": "function onSuccessExigence() {\n\tfor (f in getPlayerUnits())\n\t\tf.addStatus(Status.Galvanization, 1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 7,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "ArenaComeBackBonus",
					"name": "Repli stratégique",
					"desc": "Chaque fois qu'un compagnon termine son tour sans avoir infligé de dégâts, l'équipe gagne [Inspiration] pendant ::value1:: round.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"vars": {
							"value1": 1,
							"hasAttacked": false
						},
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Inspiration"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tvars.hasAttacked = true;\n}\n\nfunction onEndTurn() {\n\tif (!vars.hasAttacked && isPlayer(skill.unit)) {\n\t\tfor (f in getPlayerUnits()) {\n\t\t\tf.addStatus(Status.Inspiration, 1);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 8,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "ArenaSupportBonus",
					"name": "L'union fait la force",
					"desc": "Chaque fois qu'un compagnon est supporté, il gagne [Riposte].",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Riposte"
							}
						]
					},
					"script": "function onStatus(s) {\n\tif( s.unit == skill.unit && isPlayer(skill.unit) && s.kind == Status.Supported) {\n\t\t\ts.unit.addStatus(Status.Riposte, 1);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "ArenaSurroundBonus",
					"name": "Intimidation",
					"desc": "Tant qu'un ennemi est encerclé, il a [Destabilization].",
					"mode": 2,
					"range": {
						"allowedTargets": 0
					},
					"props": {
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Destabilization"
							}
						]
					},
					"script": "function onStatus(s) {\n\tif( s.unit == skill.unit && !isPlayer(skill.unit) && s.kind == Status.Surrounded) {\n\t\ts.unit.addStatus(Status.Destabilization, 1);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "ArenaEngageBonus",
					"name": "Joute",
					"desc": "Tant qu'un ennemi est engagé, il a [Fragility].",
					"mode": 2,
					"range": {
						"allowedTargets": 0
					},
					"props": {
						"feature": "Alazar1_Update",
						"globalEvents": true,
						"tooltipStatus": [
							{
								"st": "Fragility"
							}
						]
					},
					"script": "function onBeginAction() {\n\tif ( skill.unit.isEngaged() && !isPlayer(skill.unit)) {\n\t\tskill.unit.addStatusPersist(Status.Fragility, skill);\n\t} else skill.unit.cancelStatus(Status.Fragility, skill);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "ArenaDisengageBonus",
					"name": "Diversion",
					"desc": "Chaque fois qu'un compagnon se désengage, il effectue une attaque d'opportunité.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"engaged": false
						},
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onBeginAction() {\n\tif (isPlayer(skill.unit)) {\n\t\tif (!skill.unit.isEngaged()) {\n\t\t\tif (vars.engaged){\n\t\t\t\tvars.engaged = false;\n\t\t\t\tvar unitToAttack = getUnitToAttack();\n\t\t\t\tif ( unitToAttack != null ){\n\t\t\t\t\tskill.unit.cast(Skill.OpportunityAttack, unitToAttack, skill);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!vars.engaged){\n\t\t\tvars.engaged = true;\n\t\t}\n\t}\n}\n\nfunction getUnitToAttack(){\n\tvar fs = getFoeUnits();\n\tif ( fs.length == 0 ) return null;\n\tvar f = fs[0];\n\tvar d = getDistance(skill.unit, f);\n\tfor (foe in getFoeUnits()){\n\t\tvar dTmp = getDistance(skill.unit, foe);\n\t\tif (dTmp < d){\n\t\t\td = dTmp;\n\t\t\tf = foe;\n\t\t}\n\t}\n\treturn f;\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 18
					},
					"done": 1
				},
				{
					"id": "ArenaSkillBonus",
					"name": "Assurance",
					"desc": "Chaque fois qu'un compagnon utilise un ou plusieurs points de Bravoure, il gagne [Protection] pendant ::value1:: round.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"vars": {
							"value1": 1
						},
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "Protection"
							}
						]
					},
					"script": "function onSkillPlayed(s){\n\tif (isPlayer(s.unit) && s.apCost > 0)\n\t\ts.unit.addStatus(Status.Protection, 1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 74,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 18
					},
					"done": 2
				},
				{
					"id": "ArenaRulePoisonZone",
					"name": "",
					"desc": "Des nuages de poison apparaissent sous toutes les unités chaque fin de round.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onBeginRound() {\n\tfor (u in getUnits()) {\n\t\tif (!u.hasStatus(Status.Champion)) {\n\t\t\tskill.unit.cast(Skill.ArenaRulePoisonZoneSkill, u, skill);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "ArenaRulePoisonZoneSkill",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 1.5,
						"allowedTargets": 4
					},
					"props": {
						"isHeroic": true,
						"specialAnim": "Throw"
					},
					"script": "function onSkill() {\n\tcreateAreaEffect(\"EndRound\", 1, { skillId: Skill.PoisonZone });\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "ArenaRuleRatSpawn",
					"name": "",
					"desc": "Des rats pestiférés sont lâchés dans l'arène chaque fin de round.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onEndRound() {\n\tspawnRenfort(UnitClass.PlaguedRat, 2, false);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "ArenaRulePlagueRidden",
					"name": "",
					"desc": "L'équipe ennemie commence le combat avec un Pestiféré en tant qu'allié.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onInit() {\n\tspawnRenfort(UnitClass.Plagueridden, 1, false);\n}",
					"notes": "",
					"levels": [],
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "G2Arena1RuleHeal",
					"name": "",
					"desc": "À la fin de chaque round, chaque unité ennemie voit sa [Health] devenir égale à celle de son allié ayant le plus de [Health] restante.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onEndRound() {\n\tvar maxHpPercent = 0.;\n\tfor(u in getFoeUnits()) {\n\t\tif( u.health / u.stats.health > maxHpPercent ) {\n\t\t\tmaxHpPercent = u.health / u.stats.health;\n\t\t}\n\t}\n\tfor(u in getFoeUnits()) {\n\t\tvar gain = maxHpPercent * u.stats.health - u.health;\n\t\tu.gainsHealth(ceil(gain));\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "G2Arena1RuleLifeLinked",
					"name": "",
					"desc": "Les unités ennemies gagnent le statut [Arena_Willforce] quand elles ont ::value:: [Health].\nLes alliés gagnent quand toutes les unités ennemies ont le statut [Arena_Willforce].",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value": 1
						},
						"tooltipStatus": [
							{
								"st": "Arena_Willforce"
							}
						],
						"globalEvents": true
					},
					"script": "function onBeginAction() {\n\tfor(t in getFoeUnits()) {\n\t\tif(t.health == vars.value) {\n\t\t\tif(!t.hasStatus(Status.Arena_Willforce)) {\n\t\t\t\tt.addStatus(Status.Arena_Willforce);\n\t\t\t\tspawnFx(t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tt.cancelStatus(Status.Arena_Willforce);\n\t\t}\n\t}\n\n\tfor(u in getFoeUnits()) {\n\t\tif(!u.hasStatus(Status.Arena_Willforce)) {\n\t\t\treturn;\n\t\t}\n\t}\n\twin(true);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "G2Arena1RuleExigence",
					"name": "",
					"desc": "Échouer à une éxigence du public soigne toutes les unités ennemies de ::value1::% de leur [Health] maximum.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 20
						}
					},
					"script": "function onFailExigence() {\n\tfor(u in getFoeUnits()) {\n\t\tif(u.hasStatus(Status.Dying)) {\n\t\t\tu.cancelStatus(Status.Dying);\n\t\t}\n\t\tu.gainsHealth(ceil(u.stats.maxHealth * (vars.value1 / 100.) ) );\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "G2Arena2RuleRage",
					"name": "",
					"desc": "Les unités ennemies gagnent le statut [AnimalMarkedBonus] lorsqu’elles ont le statut [Burning].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "AnimalMarkedBonus"
							},
							{
								"st": "Burning"
							}
						]
					},
					"script": "function onStatus(s) {\n\tif( s.kind == Status.Burning ) {\n\t\tif( isFoe(s.unit) && !s.unit.hasStatus(Status.AnimalMarkedBonus) ) {\n\t\t\ts.unit.addStatus(Status.AnimalMarkedBonus);\n\t\t}\n\t}\n}\n\nfunction onStatusRemoved(s) {\n\tif( s.kind == Status.AnimalMarkedBonus ) {\n\t\tif( isFoe(s.unit) && !s.unit.hasStatus(Status.AnimalMarkedBonus) && s.unit.hasStatus(Status.Burning) ) {\n\t\t\ts.unit.addStatus(Status.AnimalMarkedBonus);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "G2Arena2RuleVulnerability",
					"name": "",
					"desc": "Les unités alliées gagnent le statut [Fragility] lorsqu'ils ont le statut [Burning].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fragility"
							},
							{
								"st": "Burning"
							}
						]
					},
					"script": "function onBeginAction() {\n\tfor(u in getPlayerUnits()) {\n\t\tif(u.hasStatus(Status.Burning) && !u.hasStatus(Status.Fragility)) {\n\t\t\tu.addStatusPersist(Status.Fragility, skill);\n\t\t}\n\t\telse if(!u.hasStatus(Status.Burning) && u.hasStatus(Status.Fragility)) {\n\t\t\tu.cancelStatus(Status.Fragility, skill);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "G2Arena2RuleExigence",
					"name": "",
					"desc": "Quand une unité passe [Arena_Dying], le public lance des Fioles Incendiaires sur une unité aléatoire de l'équipe adverse.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Arena_Dying"
							}
						]
					},
					"script": "function onStatus(a) {\n\tif(a.kind != Status.Arena_Dying) {\n\t\treturn;\n\t}\n\n\tvar units = [];\n\tfor(u in getUnits()) {\n\t\tif(u.side != a.unit.side) {\n\t\t\tunits.push(u);\n\t\t}\n\t}\n\n\tif(units.length > 0) {\n\t\tvar target = units[randInt(0, units.length-1)];\n\t\tcast(Skill.G2Arena2IncendiaryFlask, { unit : target }, skill);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "G2Arena2IncendiaryFlask",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 1.5,
						"allowedTargets": 4,
						"baseDistance": 10000
					},
					"props": {},
					"script": "function onSkill() {\n\tcreateAreaEffect(\"Immediate\", 1, { skillId: Skill.FireZone });\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "H1ArenaRuleVulnerability",
					"name": "",
					"desc": "Chaque fois qu'un animal adverse s'engage, il applique [Vulnerability].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Vulnerability"
							}
						],
						"vars": {
							"engaged": false
						}
					},
					"script": "function onBeginAction() {\n\tif( isFoeAnimal() && !skill.unit.isEngaged() ) {\n\t\tvars.engaged = false;\n\t}\n}\n\nfunction onSkillPlayed(s) {\n\tif( isFoeAnimal() && !vars.engaged && skill.unit.isEngaged() ) {\n\t\tvars.engaged = true;\n\t\tfor (t in s.getTargets())\n\t\t\tt.target.addStatus(Status.Vulnerability);\n\t}\n}\n\nfunction isFoeAnimal(){\n\treturn isFoe(skill.unit) && skill.unit.isAnimal;\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "H1ArenaRuleOpportunity",
					"name": "",
					"desc": "Chaque fois qu'une unité adverse inflige un coup critique, un animal adverse effectue une attaque d'opportunité si possible.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "OpportunityAttack"
							}
						]
					},
					"script": "function onDamageDealt(a) {\n\tif( a.isCritical && isFoe(a.unit) ) {\n\t\tvar animalTmp : battle.skill.UnitView = null;\n\t\tfor( f in getFoeUnits() ) {\n\t\t\tif( f.isAnimal && (animalTmp == null || animalTmp.health < f.health) && f.isMelee(a.target) )\n\t\t\t\tanimalTmp = f;\n\t\t}\n\t\tif (animalTmp != null)\n\t\t\tanimalTmp.opportunityAttack(a.target, null);\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "H1ArenaRulePlayAgain",
					"name": "",
					"desc": "Chaque fois qu'une unité adverse est mise hors-de-combat, l'animal adverse avec le plus de [Health] peut rejouer ce round.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onStatus(s){\n\tif (s.kind == Status.Arena_Dying && isFoe(s.unit)){\n\t\tvar animalTmp : battle.skill.UnitView = null;\n\t\tfor (f in getFoeUnits())\n\t\t\tif( f.isAnimal && f != s.unit && (animalTmp == null || animalTmp.health < f.health) && !f.hasStatus(Status.Replay) )\n\t\t\t\tanimalTmp = f;\n\t\tif (animalTmp != null){\n\t\t\tanimalTmp.addStatus(Status.Replay);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "E1ArenaRuleRandomBonus",
					"name": "",
					"desc": "Au début de chaque round, toutes les unités gagnent un bonus aléatoire pendant ::value1:: round.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 1
						}
					},
					"script": "function onBeginRound() {\n\tfor( u in getUnits() ) {\n\t\tvar bonus = [Status.Fury, Status.Brutality, Status.Protection, Status.Inspiration, Status.Deflection, Status.Riposte, Status.Berserk, Status.Relentlessness];\n\t\tbonus = bonus.filter( function(s) { return !u.statusResist(s) && !u.hasStatus(s); } );\n\t\tif( bonus.length > 0 ) {\n\t\t\tu.addStatus(bonus[randInt(0, bonus.length - 1)], vars.value1);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "E1ArenaRuleRemovedBonusHeal",
					"name": "",
					"desc": "Quand un bonus appliqué sur une unité adverse est retiré, elle se soigne de ::value1::% de sa [Health] maximum.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 10
						}
					},
					"script": "function onStatusRemoved(s){\n\tif (s.status.isBonus && isFoe(s.unit))\n\t\ts.unit.gainsHealth(ceil(s.unit.stats.health * vars.value1 / 100), null);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "E1ArenaRuleChallengeLegionary",
					"name": "",
					"desc": "Un légionnaire rejoint le groupe adverse chaque fois qu'une Exigence du public est échouée.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onFailExigence() {\n\tspawnRenfort(UnitClass.Legionary, 1, false);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "A1ArenaRuleZones",
					"name": "",
					"desc": "Des flaques de vapeurs sont répandues dans l'arène et améliorent les unités adverses au début de chaque round.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true
					},
					"script": "function onBeginRound() {\n\ttrace(\"hi\");\n\tfor( u in getFoeUnits() ) {\n\t\ttrace(\"hi2\");\n\t\tif( u.hasStatus(Status.A1ArenaRedGazZone) ) {\n\t\t\ttrace(\"hi3\");\n\t\t\tu.addStatus(Status.A1ArenaRedGaz);\n\t\t\tu.cancelStatus(Status.A1ArenaBlueGaz);\n\t\t}\n\t}\n\tfor( u in getFoeUnits() ) {\n\t\ttrace(\"hiblue2\");\n\t\tif( u.hasStatus(Status.A1ArenaBlueGazZone) ) {\n\t\t\ttrace(\"hiblue3\");\n\t\t\tu.addStatus(Status.A1ArenaBlueGaz);\n\t\t\tu.cancelStatus(Status.A1ArenaRedGaz);\n\t\t}\n\t}\n}",
					"notes": "Fait dans le prefab de l'arena",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "A1ArenaRuleRoot",
					"name": "",
					"desc": "Des fioles sont lancées sur les unités du joueur à chaque fin de round, les immobilisant le round suivant.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onBeginRound(){\n\tfor (u in getPlayerUnits())\n\t\tcast(Skill.A1ArenaRuleRootSkill, {unit : u}, skill);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 1
				},
				{
					"id": "A1ArenaRuleRootSkill",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 1
					},
					"props": {},
					"script": "function onSkill() {\n\tcreateAreaEffect(\"EndRound\", 0, { skillId: Skill.A1ArenaRuleRootPot });\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 1
				},
				{
					"id": "A1ArenaRuleRootPot",
					"name": "",
					"desc": "Une fiole immobilisante sera jetée ici.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 1
					},
					"props": {},
					"script": "function onSkill() {\n\tfor(t in skill.getTargets())\n\t\tif (isPlayer(t.target))\n\t\t\tt.target.addStatus(Status.Immobile);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"icon": {
						"file": "ui/Icons/BattleIcons_03_96PX.png",
						"size": 96,
						"x": 16,
						"y": 0
					},
					"done": 1
				},
				{
					"id": "A1ArenaRuleBear",
					"name": "",
					"desc": "Au début du second round, un ours des neiges est lâché dans l'arène.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"value1": 0,
							"check": false
						}
					},
					"script": "function onBeginRound() {\n\tif( vars.value1 == 2 && !vars.check ) {\n\t\tspawnRenfort(UnitClass.WhiteBear, 1, false);\n\t\tvars.check = true;\n\t} else if ( !vars.check ) {\n\t\tvars.value1++;\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 75,
					"done": 2
				},
				{
					"id": "ArenaUnitToEngage",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true
					},
					"script": "function onInit() {\n\tvar units = getFoeUnits();\n\tvar selectedUnit = units[0];\n\tselectedUnit.addStatus(Status.Arena_DemandTarget, 1);\n}\n\nfunction onEndRound() {\n\tvar isAlive = false;\n\tfor( u in getFoeUnits() ) {\n\t\tif( u.hasStatus(Status.Arena_DemandTarget) ) {\n\t\t\tisAlive = true;\n\t\t\tif( u.isEngaged()) {\n\t\t\t\tsuccessObjective();\n\t\t\t} else {\n\t\t\tfailObjective();\n\t\t\t}\n\t\t}\n\t}\n\tif(!isAlive){\n\t\tsuccessObjective();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaUnitNoDamage",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true
					},
					"script": "function onInit() {\n\tvar units = getPlayerUnits();\n\tvar selectedUnit = units[randInt(0, units.length-1)];\n\tselectedUnit.addStatus(Status.Arena_DemandTarget, 1);\n}\n\nfunction onDamageTaken(a) {\n\tif (a.target.hasStatus(Status.Arena_DemandTarget)) {\n\t\tfailObjective();\n\t}\n}\n\nfunction onEndRound() {\n\tvar found = false;\n\tfor ( u in getPlayerUnits() ) {\n\t\tif (u.hasStatus(Status.Arena_DemandTarget)) {\n\t\t\tfound = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (found) {\n\t\tsuccessObjective();\n\t} else {\n\t\tfailObjective();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaUnitToDamage",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"feature": "HideInCheatMenu"
					},
					"script": "function onInit() {\n\tvar units = getFoeUnits();\n\tvar selectedUnit = units[randInt(0, units.length-1)];\n\tselectedUnit.addStatus(Status.Arena_DemandTarget, 1);\n}\n\nfunction onDamageTaken(a) {\n\tif (a.target.hasStatus(Status.Arena_DemandTarget)) {\n\t\tsuccessObjective();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaTwoCrits",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"feature": "HideInCheatMenu"
					},
					"script": "function onDamageDealt(a) {\n\tif (a.isCritical && isPlayer(a.unit)) {\n\t\tif (!a.unit.hasStatus(Status.Arena_DemandAlreadyContribute)) {\n\t\t\tincrementObjective();\n\t\t\ta.unit.addStatus(Status.Arena_DemandAlreadyContribute);\n\t\t}\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaUnitToKill",
					"name": "",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"feature": "HideInCheatMenu"
					},
					"script": "function onInit() {\n\tvar units = [];\n\tfor (u in getFoeUnits()) {\n\t\tif ( !u.hasStatus(Status.Champion) ) {\n\t\t\tunits.push(u);\n\t\t}\n\t}\n\tvar selectedUnit = units[randInt(0, units.length-1)];\n\tselectedUnit.addStatus(Status.Arena_DemandTarget, 1);\n}\n\nfunction onDeath(a) {\n\tif( a.target.hasStatus(Status.Arena_DemandTarget) ) {\n\t\tsuccessObjective();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaAllyContact",
					"name": "",
					"desc": "Chaque compagnon doit finir son tour adjacent à un allié.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"globalEvents": true,
						"vars": {
							"melee": false
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onBeginRound() {\n\tvars.melee = false;\n}\n\nfunction onEndTurn() {\n\tif (isPlayer(skill.unit)) {\n\t\tfor (u in getAllies(skill.unit)) {\n\t\t\tif (u.isMelee(skill.unit)) {\n\t\t\t\tvars.melee = true;\n\t\t\t}\n\t\t}\n\t\tif (vars.melee) {\n\t\t\tif (!skill.unit.hasStatus(Status.Arena_DemandAlreadyContribute)) {\n\t\t\t\tskill.unit.addStatus(Status.Arena_DemandAlreadyContribute);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfailObjective();\n\t\t}\n\t}\n}\n\nfunction onEndRound() {\n\tvar isGood = true;\n\tfor (u in getPlayerUnits()) {\n\t\tif (u.isAlive() && !u.hasStatus(Status.Arena_DemandAlreadyContribute)) {\n\t\t\tfailObjective();\n\t\t\tisGood = false;\n\t\t}\n\t}\n\tif (isGood) {\n\t\tsuccessObjective();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaEnemyContact",
					"name": "",
					"desc": "Chaque compagnon doit finir son tour adjacent à un ennemi.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"globalEvents": true,
						"vars": {
							"melee": false
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onBeginRound() {\n\tvars.melee = false;\n}\n\nfunction onEndTurn() {\n\tif (isPlayer(skill.unit)) {\n\t\tfor (u in getFoes(skill.unit)) {\n\t\t\tif (u.isMelee(skill.unit)) {\n\t\t\t\tvars.melee = true;\n\t\t\t}\n\t\t}\n\t\tif (vars.melee) {\n\n\t\t\tif (!skill.unit.hasStatus(Status.Arena_DemandAlreadyContribute)) {\n\t\t\t\tskill.unit.addStatus(Status.Arena_DemandAlreadyContribute);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfailObjective();\n\t\t}\n\t}\n}\n\nfunction onEndRound() {\n\tvar isGood = true;\n\tfor (u in getPlayerUnits()) {\n\t\tif (u.isAlive() && !u.hasStatus(Status.Arena_DemandAlreadyContribute)) {\n\t\t\tfailObjective();\n\t\t\tisGood = false;\n\t\t}\n\t}\n\tif (isGood) {\n\t\tsuccessObjective();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaNoFocus",
					"name": "",
					"desc": "Ne pas attaquer deux fois la même unité.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"feature": "Alazar1_Update"
					},
					"script": "function onDamageDealt(a) {\n\tif (isPlayer(a.unit)) {\n\t\tif (!isPlayer(a.target)) {\n\t\t\tif (a.target.hasStatus(Status.Arena_Hit)) {\n\t\t\t\tfailObjective();\n\t\t\t}\n\t\t\ta.target.addStatus(Status.Arena_Hit);\n\t\t\ta.target.addStatus(Status.Arena_DemandAlreadyContribute);\n\t\t}\n\t}\n}\n\nfunction onEndRound() {\n\tsuccessObjective();\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaEveryDamage",
					"name": "",
					"desc": "Tous les ennemis doivent subir des dégâts.",
					"mode": 2,
					"range": {
						"allowedTargets": 0
					},
					"props": {
						"globalEvents": true,
						"feature": "Alazar1_Update"
					},
					"script": "function onDamageTaken(a) {\n\tif (isPlayer(a.unit)) {\n\t\tif (!isPlayer(a.target)) {\n\t\t\tif (!a.target.hasStatus(Status.Arena_Hit)) {\n\t\t\t\ta.target.addStatus(Status.Arena_Hit);\n\t\t\t\ta.target.addStatus(Status.Arena_DemandAlreadyContribute);\n\t\t\t}\n\t\t}\n\t}\n\tvar isGood = true;\n\tfor (u in getFoeUnits()) {\n\t\tif (u.isAlive() && !u.hasStatus(Status.Arena_Hit)) {\n\t\t\tisGood = false;\n\t\t}\n\t}\n\tif (isGood) {\n\t\tsuccessObjective();\n\t}\n}\n\nfunction onEndRound() {\n\tvar isGood = true;\n\tfor (u in getFoeUnits()) {\n\t\tif (u.isAlive() && !u.hasStatus(Status.Arena_Hit)) {\n\t\t\tisGood = false;\n\t\t}\n\t}\n\tif (isGood) {\n\t\tsuccessObjective();\n\t}\n\telse {\n\t\tfailObjective();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaNoMovement",
					"name": "",
					"desc": "[Cible alliée] ne doit pas se déplacer.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"globalEvents": true,
						"feature": "Alazar1_Update"
					},
					"script": "function onInit() {\n\tvar units = getPlayerUnits();\n\tvar selectedUnit = units[randInt(0, units.length-1)];\n\tselectedUnit.addStatus(Status.Arena_DemandTarget, 1);\n}\n\nfunction onMove(a) {\n\tif (a.unit.hasStatus(Status.Arena_DemandTarget)) {\n\t\tfailObjective();\n\t}\n}\n\nfunction onEndRound() {\n\tsuccessObjective();\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "ArenaEveryMovement",
					"name": "",
					"desc": "Chaque compagnon doit se déplacer.",
					"mode": 2,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"globalEvents": true,
						"vars": {
							"hasMoved": false
						},
						"feature": "Alazar1_Update"
					},
					"script": "function onBeginRound() {\n}\n\nfunction onMove(m) {\n\tif (isPlayer(skill.unit)) {\n\t\tif (!m.unit.hasStatus(Status.Arena_DemandAlreadyContribute)) {\n\t\t\tm.unit.addStatus(Status.Arena_DemandAlreadyContribute);\n\t\t}\n\t}\n}\n\nfunction onEndTurn() {\n\tif (isPlayer(skill.unit)) {\n\t\tif (!skill.unit.hasStatus(Status.Arena_DemandAlreadyContribute)) {\n\t\t\tfailObjective();\n\t\t}\n\t}\n}\n\nfunction onEndRound() {\n\tvar isGood = true;\n\tfor (u in getPlayerUnits()) {\n\t\tif (u.isAlive() && !u.hasStatus(Status.Arena_DemandAlreadyContribute)) {\n\t\t\tfailObjective();\n\t\t\tisGood = false;\n\t\t}\n\t}\n\tif (isGood) {\n\t\tsuccessObjective();\n\t}\n}",
					"notes": "",
					"iconeDone": true,
					"group": 76,
					"done": 2
				},
				{
					"id": "PestiferedFromCellingZone",
					"name": "",
					"desc": "",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 1.5,
						"allowedTargets": 6
					},
					"props": {
						"castFx": "prefabs/fx/environment/CellingFall/CellingFall_Sign.fx"
					},
					"script": "function onSkill() {\n\tcreateEvent(Skill.PestiferedFromCelling, 1);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 77,
					"done": 2
				},
				{
					"id": "PestiferedFromCelling",
					"name": "Effondrement",
					"desc": "Un pestiféré s'apprête à traverser le plafond !",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 1.5,
						"allowedTargets": 4
					},
					"props": {
						"castFx": "prefabs/fx/environment/CellingFall/CellingFall.fx",
						"flags": 2
					},
					"script": "function onEval(a) {\n\ta.dmg = ceil(a.target.health * 0.5);\n}\n\nfunction onPostSkill() {\n\tprocessEvent(\"PestiferedFromCelling\");\n}",
					"notes": "",
					"minDmg": 5,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 7
					},
					"iconeDone": true,
					"group": 77,
					"done": 2
				},
				{
					"id": "SportTeamLeader",
					"name": "Nommer Ouvreur",
					"desc": "L'ouvreur reçoit le ballon et engage la partie.",
					"mode": 4,
					"range": {},
					"props": {
						"flags": 8,
						"defaultAction": false
					},
					"script": "function onSkill() {\n\tsetTeamLeader();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 9
					},
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "SportRun",
					"name": "Courir",
					"desc": "L'unité charge en ligne droite.\n\n<idesc>SportTackle</idesc>\n<idesc>SportDodge</idesc>",
					"mode": 3,
					"range": {
						"flags": 1,
						"baseDistance": 10,
						"allowedTargets": 6
					},
					"props": {
						"defaultAction": false
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 17
					},
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "SportPass",
					"name": "Passer",
					"desc": "Tente de faire une passe à un allié.",
					"mode": 1,
					"range": {
						"baseDistance": 0,
						"allowedTargets": 1
					},
					"props": {
						"defaultAction": true,
						"specialAnim": "Throw",
						"noDamage": true,
						"extraFx": "prefabs/fx/activity/Rouste/ThrowBall.fx"
					},
					"script": "function onSkill() {\n\tmakePass();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 12,
						"y": 9
					},
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "SportKick",
					"name": "Tirer",
					"desc": "Tire une chandelle pour dégager la balle.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 0,
						"allowedTargets": 6,
						"baseDistance": 0,
						"typeModel": "prefabs/huds/dropZone.prefab",
						"flags": 8
					},
					"props": {
						"defaultAction": true,
						"specialAnim": "Kick",
						"extraFx": "prefabs/fx/activity/Rouste/Kick.fx"
					},
					"script": "function onSkill() {\n\tkick();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 17
					},
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "SportPunch",
					"name": "Avoiner",
					"desc": "Frappe un adversaire.\nA une chance de mettre l'adversaire à terre.",
					"mode": 0,
					"range": {
						"allowedTargets": 0
					},
					"props": {
						"vars": {
							"value1": 50
						},
						"useWithoutWeapon": true,
						"specialAnim": "Punch",
						"dmgAttribute": 0,
						"isAttack": true,
						"defaultAction": true,
						"preventEngage": true,
						"orientTarget": true
					},
					"script": "function onEval(a) {\n\tif(a.target.hasStatus(Status.SportDown))\n\t\tdontAllow();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 17
					},
					"minDmg": 0,
					"maxDmg": 0,
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "SportStandUp",
					"name": "Se relever",
					"desc": "L'unité se relève.",
					"mode": 4,
					"range": {},
					"props": {
						"defaultAction": false
					},
					"script": "function onSkill() {\n\tstandUp(skill.unit);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 9,
						"y": 8
					},
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "SportAssist",
					"name": "Assister",
					"desc": "Relève un allié.",
					"mode": 0,
					"range": {
						"allowedTargets": 1
					},
					"props": {
						"useWithoutWeapon": true,
						"defaultAction": true,
						"feature": "Alazar1_Update"
					},
					"script": "function onEval(a) {\n\tif(!a.target.hasStatus(Status.SportDown))\n\t\tdontAllow();\n}\n\nfunction onSkill() {\n\tstandUp(skill.target);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 78,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 0,
						"y": 16
					},
					"done": 2
				},
				{
					"id": "SportGuard",
					"name": "Garder",
					"desc": "Jusqu'à son prochain déplacement, cette unité gagne [SportGuard].",
					"mode": 0,
					"range": {
						"allowedTargets": 3
					},
					"props": {
						"feature": "Alazar1_Update",
						"tooltipStatus": [
							{
								"st": "SportGuard"
							}
						]
					},
					"script": "function onSkill() {\n\tskill.unit.addStatus(Status.SportGuard);\n}",
					"notes": "",
					"iconeDone": true,
					"group": 78,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 1,
						"y": 16
					},
					"done": 2
				},
				{
					"id": "SportDodge",
					"name": "Esquive",
					"desc": "Cette unité tentera d'esquiver les tacles d'adversaires à proximité.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 10,
						"y": 9
					},
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "SportTackle",
					"name": "Tacle",
					"desc": "Cette unité tentera de mettre au sol tout adversaire passant à portée.",
					"mode": 2,
					"range": {
						"radius": 2
					},
					"props": {},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 13,
						"y": 9
					},
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "SportFendOff",
					"name": "Raffuter",
					"desc": "Cette unité tentera de mettre au sol un adversaire dans sa trajectoire de course.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 11,
						"y": 9
					},
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "SportReplay",
					"name": "Rejouer",
					"desc": "Cette unité pourra rejouer si elle reçoit le ballon.",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 78,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 2,
						"y": 16
					},
					"done": 2
				},
				{
					"id": "SportAnimalCharge",
					"name": "Charge",
					"desc": "Charge en ligne droite, mettant à terre toute les unités sur son passage.",
					"mode": 3,
					"range": {
						"flags": 1,
						"baseDistance": 12,
						"allowedTargets": 6
					},
					"props": {
						"dmgAttribute": 0,
						"feature": "Alazar1_Update"
					},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 78,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 4,
						"y": 19
					},
					"done": 2
				},
				{
					"id": "SportBallDrop",
					"name": "Zone de chute",
					"desc": "Le ballon retombera quelque part dans la zone d'effet.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 4,
						"baseDistance": 100000
					},
					"props": {},
					"script": "function onSkill() {}",
					"notes": "",
					"icon": {
						"file": "ui/elements/battle/player_timeline.png",
						"size": 70,
						"x": 1,
						"y": 1
					},
					"iconeDone": true,
					"group": 78,
					"done": 2
				},
				{
					"id": "CelestiumSearch",
					"name": "Examiner la relique",
					"desc": "L'unité travaille sur la relique du Célestium.\n\nNécessite d'être à proximité de la relique.",
					"mode": 4,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 79,
					"done": 2,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 16,
						"y": 18
					}
				},
				{
					"id": "CelestiumRepair",
					"name": "Réparer la relique",
					"desc": "L'unité répare la relique du Célestium.\n\nNécessite d'être à proximité de la relique.",
					"mode": 4,
					"range": {},
					"props": {},
					"script": "",
					"notes": "",
					"iconeDone": true,
					"group": 79,
					"done": 2,
					"icon": {
						"file": "ui/Icons/BattleIcons_02_96PX.png",
						"size": 96,
						"x": 18,
						"y": 18
					}
				},
				{
					"id": "Gouge",
					"name": "Suriner",
					"desc": "[DMG] à la cible avec [VALUE]% de chances de l'<st>étourdir</st>.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 1,
						"vars": {
							"chances": 50,
							"stunned": false
						}
					},
					"script": "function onHit(a) {\n\tif( proba(vars.chances) ) {\n\ta.target.addStatus(Status.Stun);\n\t}\n\tif( a.target.hasStatus(Status.Stunned) ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"minDmg": 2,
					"maxDmg": 4,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"group": 80,
					"done": 2
				},
				{
					"id": "Bladestormzzz",
					"name": "Tempête de lame",
					"desc": "Inflige [DMG] à tous les ennemis dans la zone. Attaque ::value1:: fois supplémentaire si plusieurs ennemis sont adjacents.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 2,
						"allowedTargets": 5,
						"baseDistance": 0
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"value1": 1,
							"value2": 2
						},
						"isAttack": true
					},
					"script": "function onSkill() {\n\tvar enemies = 0;\n\tvar count = 1;\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\tenemies++;\n\t\t}\n\t}\n\tif( enemies >= 2 ) {\n\t\tcount += vars.value1;\n\t}\n\tfor( i in 0...count ) {\n\t\t\tattack();\n\t}\n}",
					"notes": "",
					"minDmg": 4,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"group": 80,
					"done": 2
				},
				{
					"id": "Thrashing",
					"name": "Raclée",
					"desc": "Si stun deal",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"scaledValue": 5,
						"scaledValueAttribute": 0
					},
					"script": "function onEval(a) {\n\tif( a.target.hasStatus(Status.Stun) ) {\n\t\ta.dmg += skill.value;\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"minDmg": 3,
					"maxDmg": 5,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Sweep",
					"name": "Balayage",
					"desc": "[DMG] aux unités dans une zone et [VALUE] de plus à chaque unité <st>étourdie</st>.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 3,
						"angle": 180,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"scaledValue": 10,
						"scaledValueAttribute": 0
					},
					"script": "function onEval(a) {\n\tif( a.target.hasStatus(Status.Stun) )\n\t\ta.dmg += skill.value;\n}",
					"notes": "Bear ",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"minDmg": 4,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idee6",
					"name": "Coup Puissant",
					"desc": "[DMG] dans la zone.\nSi l'attaque inflige au moins un coup critique, <st>désoriente</st> les unités touchées.",
					"mode": 5,
					"range": {
						"type": 1,
						"radius": 1,
						"angle": 120
					},
					"props": {
						"dmgAttribute": 0,
						"value": 1
					},
					"script": "function onDamage(a) {\n\tif( a.isCritical)\n\t\ta.target.addStatus(Status.Dazed);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"minDmg": 6,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idee15",
					"name": "Soif de sang",
					"desc": "Si la cible <st>saigne</st>, l'unité boit de son sang et regagne [VALUE] [Health].",
					"mode": 0,
					"range": {},
					"props": {
						"value": 10
					},
					"script": "function onSkill() {\n//\tif( skill.target.hasStatus(Status.Bleeding) )\n\t\tskill.unit.gainsHealth(skill.value);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idee19",
					"name": "Mots de la Croisade",
					"desc": "Crée une zone. Tant que cette unité ou ses alliés sont dans la zone, ils gagnent Rage.",
					"mode": 5,
					"range": {
						"type": 0,
						"angle": 90,
						"radius": 5,
						"baseDistance": 10
					},
					"props": {
						"dmgAttribute": 1,
						"globalEvents": true,
						"needDisengaged": true,
						"vars": {
							"flag": false
						}
					},
					"script": "function onSkill() {\n\tif( vars.flag == false ) {\n\t\tcreateZone();\n\t\treturn;\n\t}\n\tcancelZone();\n}\nfunction onMoveEvent(m) {\n\tm.unit.addStatus(Status.Angry, 1, true);\n}\nfunction onMove(m) {\n\tif( m.unit.side != skill.unit.side ) return;\n\tvar z = getZone();\n\tif( z == null ) return;\n\tm.addZoneEvent(z,onMoveEvent);\n}",
					"notes": "Bannière !",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"minDmg": 5,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idee24",
					"name": "Heurt de bouclier",
					"desc": "[DMG] à la cible puis retire [VALUE] statuts positifs aléatoires à la cible.",
					"mode": 0,
					"range": {},
					"props": {
						"dmgAttribute": 0,
						"scaledValue": 1,
						"scaledValueAttribute": 1,
						"useWithoutWeapon": true,
						"vars": {
							"guarddmg": 1
						}
					},
					"script": "function onDamage(a) {\n\t\tvar count = 0;\n\t\tfor( s in a.target.getAllStatus() ) {\n\t\t\tif( !s.isBonus ) continue;\n\t\t\ts.cancel();\n\t\t\tcount++;\n\t\t\tif( count == skill.value ) break;\n\t\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"minDmg": 3,
					"maxDmg": 5,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idee28",
					"name": "Interception",
					"desc": "L'unité se désengage librement et charge en ligne droite. Toutes les unités sur le chemin sont <st>POUSSÉES</st> sur [VALUE]m.",
					"mode": 3,
					"range": {
						"baseDistance": 5
					},
					"props": {
						"value": 3,
						"dmgAttribute": 0
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Vulnerability);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"minDmg": 2,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idee33",
					"name": "Levée de bouclier",
					"desc": "Cible une zone et se <st>concentre</st>. Au début du prochain Round, cette unité et tous ses alliés dans la zone gagnent [VALUE] [Guard].",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"allowedTargets": 2,
						"baseDistance": 0
					},
					"props": {
						"scaledValue": 4,
						"scaledValueAttribute": 0,
						"needDisengaged": true
					},
					"script": "function onSkill() {\n\tif( waitNextTurn() ) {\n\t\tprepareAttack();\n\t\tcreateZone();\n\t\tskill.unit.addStatus(Status.Targeting);\n\t\treturn;\n\t}\n\tfor(t in skill.getTargets() )\n\t\tt.target.addStatus(Status.ExtraGuard, skill.value);\n\tcancelZone();\n}",
					"notes": "Bonus à retardement",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idee41",
					"name": "Soif de sang",
					"desc": "DMG en plus si meurt. Dmg en plus si tue.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true,
						"value": 5,
						"useWithoutWeapon": true
					},
					"script": "function onDeath(a) {\n\tif( a.target.side != skill.unit.side ) {\n\t\tskill.unit.addSkillEffect(skill,Attribute.DamageBonusPercent,skill.value);\n\t}\n\tif( a.unit == skill.unit && a.target.side != skill.unit.side ) {\n\t\tskill.unit.addSkillEffect(skill,Attribute.DamageBonusPercent,skill.value);\n\t}\n}",
					"notes": "OK",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Judgement",
					"name": "Jugement",
					"desc": "L'unité bascule entre Aura de Pitié et Aura de Vindicte.",
					"mode": 4,
					"range": {},
					"props": {
						"vars": {
							"aura": true
						}
					},
					"script": "function onBeginRound() {\n\tif( !skill.unit.hasStatus(Status.RighteousnessAura) && !skill.unit.hasStatus(Status.RetributionAura) ) {\n\t\tskill.unit.addStatus(Status.RighteousnessAura);\n\t}\n}\nfunction onSkill() {\n\tif( skill.unit.consumeStatus(Status.RighteousnessAura) ) {\n\t\tskill.unit.addStatus(Status.RetributionAura);\n\t} else {\n\t\tskill.unit.addStatus(Status.RighteousnessAura);\n\t\tskill.unit.consumeStatus(Status.RetributionAura);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idea213",
					"name": "Tir de recul",
					"desc": "Bleed & poison trigger",
					"mode": 1,
					"range": {
						"minDistance": 1,
						"baseDistance": 8
					},
					"props": {
						"dmgAttribute": 1,
						"value": 2,
						"needDisengaged": true,
						"vars": {
							"poisondamage": 1,
							"bleedingdamage": 3
						}
					},
					"script": "function onDamage(a) {\n\ta.target.pushback({ unit : skill.unit }, skill.value);\n\tif( skill.level >= 3 ) {\n\t\tfor( s in a.target.getAllStatus() )\n\t\tif( s.kind == Status.Poison ) {\n\t\t\ta.target.looseLife(skill, s.count * vars.poisondamage);\n\t\t}\n\t\tfor( st in a.target.getAllStatus() )\n\t\tif( st.kind == Status.Bleeding ) {\n\t\t\ta.target.looseLife(skill, st.count * vars.bleedingdamage);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"minDmg": 11,
					"maxDmg": 14,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idea214",
					"name": "Orgueil",
					"desc": "Perd ::health:: [Health] et gagne [VALUE] [Power] si une compétence à infligé des dégâts.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"health": 3
						},
						"value": 3,
						"useWithoutWeapon": true
					},
					"script": "function onDamageDealt(a) {\n\t\tskill.unit.looseLife(skill, vars.health);\n\t\tskill.unit.addSkillEffect(skill,Attribute.Power,skill.value);\n}",
					"notes": "Frenzy",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idea248",
					"name": "Solution acide",
					"desc": "Les compétences ont ::chances::% de chances de <st>fragiliser</st> les ennemis. + détruire garde",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"chances": 20
						},
						"useWithoutWeapon": true
					},
					"script": "function onSkillPlayed(s) {\n\tfor(t in s.getTargets() ) {\n\t\tif( proba(vars.chances) ) {\n\t\t\tt.target.addStatus(Status.Fragility);\n\t\t}\n\t\tif( proba(vars.chances) ) {\n\t\t\tt.target.gainsGuard(-t.target.guard);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idea253",
					"name": "Hémorragie",
					"desc": "Si la cible saigne, la première attaque du tour permet à <st>saignement</st> d'infliger ses dégâts.",
					"mode": 2,
					"range": {},
					"props": {
						"useWithoutWeapon": true,
						"value": 50,
						"globalEvents": true
					},
					"script": "function onDamageDealt(a) {\n\tif( a.target.hasStatus(Status.Bleeding) && proba(skill.value) && a.unit == skill.unit ) {\n\t\ta.target.looseLife(skill, 10);\n\t}\n\tif( a.isCritical && skill.level >= 2 ) {\n\t\ta.target.looseLife(skill, 10);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idea254",
					"name": "Filet tranchant",
					"desc": "<st>Ralentit</st> les unités dans la zone.",
					"mode": 5,
					"range": {
						"type": 0,
						"radius": 3,
						"baseDistance": 10
					},
					"props": {
						"useWithoutWeapon": true,
						"value": 3,
						"vars": {
							"used": 0
						},
						"globalEvents": true
					},
					"script": "function onSkill() {\n\tfor( t in skill.getTargets() ) {\n\t\tt.target.addStatus(Status.Slowed);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idea255",
					"name": "Harpons à lancer",
					"desc": "Quand une unité ennemie est <st>ralentie</st>, lui lance un harpon infligeant [DMG].",
					"mode": 2,
					"range": {
						"baseDistance": 10
					},
					"props": {
						"vars": {
							"chances": 30
						},
						"useWithoutWeapon": true,
						"dmgAttribute": 0
					},
					"script": "function onStatus(s) {\n\tif( s.unit.side != skill.unit.side ) {\n\t\tattackTarget(s.unit);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 0
					},
					"minDmg": 5,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Idea256",
					"name": "Démence",
					"desc": "Chaque fois qu'une compétence de cette unité touche plusieurs unités, elle applique [Bleeding].",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						]
					},
					"script": "function onSkillPlayed(s) {\n\tvar arr = [];\n\tfor( t in s.getTargets() ) {\n\t\tif( t.dmg > 0 ) {\n\t\t\tarr.push(t.target);\n\t\t}\n\t\tif( arr.length >= 2 ) {\n\t\t\tfor( t in arr ) {\n\t\t\t\tt.addStatus(Status.Bleeding);\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "Si >3, malus",
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 1,
						"y": 5
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Elusive",
					"name": "Insaisissable",
					"desc": "Quand <st>riposte</st> est retiré, gagne <st>esquive</st>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"hasriposte": false
						},
						"useWithoutWeapon": true
					},
					"script": "function onStatus(st) {\n\tif( st.kind == Status.Riposte ) {\n\t\tvars.hasriposte = true;\n\t}\n}\n\nfunction onDamageDealt(a) {\n\tif( vars.hasriposte && !skill.unit.hasStatus(Status.Riposte) ) {\n\t\tvars.hasriposte = false;\n\t\tskill.unit.addStatus(Status.Dodge);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Protector",
					"name": "Protecteur",
					"desc": "À la fin de son tour, cette unité applique <stb>Protégé</stb> à tous les alliés adjacents.",
					"mode": 2,
					"range": {},
					"props": {
						"useWithoutWeapon": true
					},
					"script": "function onEndTurn() {\n\tvar arr = [];\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tarr.push(u);\n\t\t}\n\t}\n\tfor( u in arr ) {\n\t\tu.addStatus(Status.Protection);\n\t\tif( skill.level >= 2 && u.isEngaged() ) {\n\t\t\tu.addStatus(Status.Deflection);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Resilience",
					"name": "Résilience",
					"desc": "Gagne [VALUE] <st>[Guard] temporaire</st> pour chaque ennemi adjacent à la fin de son tour.",
					"mode": 2,
					"range": {},
					"props": {
						"value": 1,
						"useWithoutWeapon": true
					},
					"script": "function onEndTurn() {\n\tvar arr = [];\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tarr.push(u);\n\t\t}\n\t}\n\tif( skill.level == 1 ) {\n\t\tfor( u in arr ) {\n\t\t\tskill.unit.addStatus(Status.ExtraGuard, skill.value);\n\t\t}\n\t}\n\tif( skill.level >= 3 ) {\n\t\tfor( u in arr) {\n\t\t\tskill.unit.gainsGuard(skill.value);\n\t\t}\n\t}\n}",
					"notes": "OK",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "VenomArrow",
					"name": "Flèche venimeuse",
					"desc": "Inflige [DMG] à la cible et lui applique [VALUE] [Poison]s.\n\n[CapaCritical] : Applique également le Poison à tous les ennemis adjacents à la cible.",
					"mode": 1,
					"range": {
						"baseDistance": 8
					},
					"props": {
						"needDisengaged": true,
						"vars": {
							"chance": 50
						},
						"dmgAttribute": 1,
						"scaledValue": 2,
						"scaledValueAttribute": 1,
						"tooltipStatus": [
							{
								"st": "Poison"
							}
						]
					},
					"script": "function onHit(a) {\n\ta.target.addStatus(Status.Poison, skill.value );\n\tif( skill.level >= 2 && a.isCritical ) {\n\t\tfor( u in getFoes(skill.unit) ) {\n\t\t\tif( u.isMelee(a.target) ) {\n\t\t\t\tu.addStatus(Status.Poison, skill.value );\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "Spread on crit",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"minDmg": 4,
					"maxDmg": 7,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Rupture",
					"name": "Éventration",
					"desc": "Un coup d’épée violent transperce la cible et lui inflige [DMG] en lui appliquant <stm>Saignement</stm>. Si la cible saigne déjà, l’attaque est un coup critique.",
					"mode": 0,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Bleeding"
							}
						],
						"dmgAttribute": 0
					},
					"script": "function onEval(a) {\n\tif( a.target.hasStatus(Status.Bleeding) ) {\n\t\ta.criticalHitPercent = 100;\n\t}\n}\n\nfunction onHit(a) {\n\ta.target.addStatus(Status.Bleeding);\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"minDmg": 8,
					"maxDmg": 10,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Ideax",
					"name": "Entre les deux yeux",
					"desc": "Inflige [DMG] à la cible plus [VALUE] pour chaque application de [Poison].",
					"mode": 0,
					"range": {},
					"props": {
						"isHeroic": true,
						"apCost": 1,
						"dmgAttribute": 1,
						"scaledValue": 1,
						"scaledValueAttribute": 1
					},
					"script": "function onEval(a) {\n\tfor( s in a.target.getAllStatus() )\n\t\tif( s.kind == Status.Poison ) {\n\t\t\ta.dmg += s.count * skill.value;\n\t\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"minDmg": 8,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "FormLine",
					"name": "Formez la ligne !",
					"desc": "[Support] : L'allié gagne <st>esquive</st>.",
					"mode": 0,
					"range": {
						"allowedTargets": 1,
						"baseDistance": 6
					},
					"props": {
						"vars": {
							"chances": 50
						},
						"useWithoutWeapon": true
					},
					"script": "function onSkill() {\n\tif( checkSupport() ) {\n\t\tskill.target.addStatus(Status.Dodge);\n\t\tfor( u in getAllies(skill.unit) ) {\n\t\t\tif( u.isMelee(skill.target) && skill.level >= 2 && proba(vars.chances) ) {\n\t\t\t\tu.addStatus(Status.Dodge);\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "Spread",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "OldPowerfulAxeThrow",
					"name": "Puissant lancer de hache",
					"desc": "[DMG] à la cible.",
					"mode": 1,
					"range": {
						"baseDistance": 4
					},
					"props": {
						"dmgAttribute": 0,
						"needDisengaged": true,
						"scaledValue": 15,
						"scaledValueAttribute": 0
					},
					"script": "function onDamage(a) {\n\tif( proba(skill.value) && skill.level == 2 && checkReinforce(a) ) {\n\t\ta.target.addStatus(Status.Stun);\n\t}\n\tif( proba(skill.value) && skill.level >= 3 ) {\n\t\ta.target.addStatus(Status.Stunned);\n\t}\n}",
					"notes": "Stun ?",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"minDmg": 2,
					"maxDmg": 6,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "BelerionHorn",
					"name": "Le Cor de Belerion",
					"desc": "Tous les alliés engagés gagnent [VALUE] [Power].\n\nTous les alliés non-engagés gagnent [VALUE] [Dexterity].",
					"mode": 2,
					"range": {},
					"props": {
						"scaledValue": 2,
						"scaledValueAttribute": 0,
						"globalEvents": true,
						"vars": {
							"chances": 20,
							"powerbuffed": false,
							"dexteritybuffed": false
						}
					},
					"script": "function onBeginAction() {\n\tfor( u in getAllies(skill.unit)) {\n\t\tif( u.isEngaged() ) {\n\t\t\tu.cancelSkillEffects(skill);\n\t\t\tu.addSkillEffect(skill, Attribute.Power, skill.value);\n\t\t\tif( skill.level >= 3 ) {\n\t\t\t\tu.addSkillEffect(skill, Attribute.CritHitPercent, skill.value);\n\t\t\t}\n\t\t}\n\t\tif( !u.isEngaged() ) {\n\t\t\tu.cancelSkillEffects(skill);\n\t\t\tu.addSkillEffect(skill, Attribute.Dexterity, skill.value);\n\t\t\tif( skill.level >= 3 ) {\n\t\t\t\tu.addSkillEffect(skill, Attribute.CritHitPercent, skill.value);\n\t\t\t}\n\t\t}\n\t}\n}",
					"notes": "Crit",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "RagingBlowzzz",
					"name": "Coup rageur",
					"desc": "[DMG] aux unités dans la zone. <st>Enrage</st> si au moins [VALUE] unités sont touchées.",
					"mode": 5,
					"range": {
						"type": 1,
						"angle": 260,
						"radius": 2.3,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"value": 3
					},
					"script": "function onPostSkill() {\n\tvar arr = [];\n\tfor( t in skill.getTargets() )\n\t\tif( t.dmg > 0 ) {\n\t\t\tarr.push(t.target);\n\t\t}\n\tif( arr.length >= 3 ) {\n\t\t\tskill.unit.addStatus(Status.Bleeding);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"minDmg": 4,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Fury",
					"name": "Fureur",
					"desc": "[DMG] aux unités dans la zone.",
					"mode": 5,
					"range": {
						"type": 1,
						"angle": 180,
						"radius": 2.3,
						"allowedTargets": 5
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"bonushit": false,
							"attacks": 1
						},
						"value": 0
					},
					"script": "function onBeginAction() {\n\tvars.bonushit = false;\n}\n\nfunction onDamage(a) {\n\tif( skill.level >= 2 && a.isCritical && vars.bonushit == false) {\n\t\tvars.bonushit = true;\n\t\tattack();\n\t}\n}",
					"notes": "Crit relance",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"minDmg": 3,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "AnimalSpirit",
					"name": "Esprit animal",
					"desc": "Tant que bonus, deal plus.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"chances": 50
						},
						"useWithoutWeapon": true
					},
					"script": "function onSkillPlayed(s) {\n\t\tfor( u in getFoes(skill.unit) ) {\n\t\t\tif( proba(vars.chances) && skill.unit.hasStatus(Status.Angry) ) {\n\t\t\t\tu.addStatus(Status.Vulnerability);\n\t\t\t}\n\t\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "PurifyNest",
					"name": "Purifier",
					"desc": "Purifie un nid de rats.",
					"mode": 0,
					"range": {},
					"props": {
						"vars": {
							"allowed": false
						}
					},
					"script": "function onBeginAction() {\n\tvars.allowed = false;\n\tfor( u in getFoes(skill.unit) )\n\t\tif( u.kind == UnitClass.RatNest && u.health == 0 && u.isMelee(skill.unit) ) {\n\t\t\tvars.allowed = true;\n\t\t\tbreak;\n\t\t}\n}\n\nfunction onEval(s) {\n\tif( s.target.kind != UnitClass.RatNest || s.target.health > 0 )\n\t\tdontAllow();\n}\n\nfunction onSkill() {\n\tkill();\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Attract",
					"name": "Attirer",
					"desc": "[DMG] à la cible, l'attire jusqu'en mêlée et l'engage.",
					"mode": 1,
					"range": {
						"flags": 1,
						"baseDistance": 6
					},
					"props": {
						"dmgAttribute": 0,
						"vars": {
							"distance": 6
						},
						"needDisengaged": true,
						"useWithoutWeapon": true
					},
					"script": "function onDamage(a) {\n\tif( skill.level >= 2 && checkReinforce(a) ) {\n\t\ta.target.addStatus(Status.Bleeding);\n\t}\n\ta.target.pushback({ unit : skill.unit },-vars.distance);\n\tif( a.target.isMelee(skill.unit) ) {\n\t\ta.target.engage(skill.unit);\n\t}\n}",
					"notes": "OK",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"minDmg": 2,
					"maxDmg": 5,
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "ConstrictiveGuts",
					"name": "Tripes constrictives",
					"desc": "L'ennemi engagé ne peut pas se désengager.",
					"mode": 2,
					"range": {},
					"props": {
						"globalEvents": true
					},
					"script": "",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Testlink",
					"name": "Ok",
					"desc": "",
					"mode": 2,
					"range": {},
					"props": {},
					"script": "function onDamageTaken(a) {\n\tvar dmgtaken = a.dmg;\n\tfor( u in getAllies(skill.unit) ) {\n\t\tu.damages(skill, dmgtaken);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "Neutralisation",
					"name": "Neutralisation",
					"desc": "Quand cette unité termine son tour en étant adjacent à un ennemi, il subit <stm>Vulnérabilité</stm>.",
					"mode": 2,
					"range": {},
					"props": {
						"vars": {
							"rounds": 1
						},
						"tooltipStatus": [
							{
								"st": "Vulnerability"
							}
						]
					},
					"script": "function onEndTurn() {\n\tfor( u in getFoes(skill.unit) ) {\n\t\tif( u.isMelee(skill.unit) ) {\n\t\t\tu.addStatus(Status.Vulnerability);\n\t\t}\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				},
				{
					"id": "OutlawsPreparation",
					"name": "Préparation des hors-la-loi",
					"desc": "Cette unité et tous ses alliés, s'ils ne sont pas engagés à la fin de leur tour, gagnent <stb>Fureur</stb>.",
					"mode": 2,
					"range": {},
					"props": {
						"tooltipStatus": [
							{
								"st": "Fury"
							}
						],
						"globalEvents": true
					},
					"script": "function onEndTurn() {\n\tfor( u in getAllies(skill.unit) ) {\n\t\tif( !u.isEngaged() ) {\n\t\t\tu.addStatus(Status.Fury);\n\t\t}\n\t}\n\tif( !skill.unit.isEngaged() ) {\n\t\tskill.unit.addStatus(Status.Fury);\n\t}\n}",
					"notes": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"__ignoreLoc__": true,
					"iconeDone": true,
					"group": 80,
					"done": 2
				}
			],
			"props": {
				"hasIndex": true,
				"displayIcon": "icon",
				"hasGroup": true
			},
			"separators": [
				{
					"title": "Base",
					"id": "AA_DefaultSkill"
				},
				{
					"title": "BattleModes",
					"id": "Flee"
				},
				{
					"title": "Utilitaries",
					"level": 1,
					"id": "Wrath"
				},
				{
					"title": "BasicAttacks",
					"level": 1,
					"id": "Cleave"
				},
				{
					"title": "Strategy",
					"id": "OpportunityStrategy"
				},
				{
					"title": "Level10",
					"id": "Intervention"
				},
				{
					"level": 1,
					"title": "SwapWeapon",
					"id": "WeaponSwapSword"
				},
				{
					"title": "Level12",
					"id": "SuppressFire"
				},
				{
					"title": "Classes",
					"id": "Bulwark"
				},
				{
					"title": "Sword",
					"level": 1,
					"id": "Bulwark"
				},
				{
					"title": "Bow",
					"level": 1,
					"id": "ReinforcedArrows"
				},
				{
					"title": "Dagger",
					"level": 1,
					"id": "PoisonedWeapon"
				},
				{
					"title": "Polearm",
					"level": 1,
					"id": "LightningCharge"
				},
				{
					"title": "Axe",
					"level": 1,
					"id": "Madness"
				},
				{
					"title": "Mace",
					"level": 1,
					"id": "Opportunism"
				},
				{
					"title": "Wand",
					"level": 1,
					"id": "TargetHeal"
				},
				{
					"title": "Lefthands",
					"id": "Protection"
				},
				{
					"title": "Enemies",
					"id": "Poisoning"
				},
				{
					"level": 1,
					"title": "Bandits",
					"id": "Poisoning"
				},
				{
					"level": 2,
					"title": "WeeklyBandits",
					"id": "FugitiveSword2HBandits"
				},
				{
					"title": "Deserters",
					"level": 1,
					"id": "Bravado"
				},
				{
					"level": 2,
					"title": "WeeklyDeserters",
					"id": "FugitiveMaceDeserters"
				},
				{
					"title": "Legion",
					"level": 1,
					"id": "MaintainingTheLine"
				},
				{
					"level": 2,
					"title": "WeeklyLegion",
					"id": "FugitivePolearmLegion"
				},
				{
					"title": "Civilians",
					"level": 1,
					"id": "ForkStrike"
				},
				{
					"title": "Guard",
					"level": 1,
					"id": "HeavyStrike"
				},
				{
					"level": 2,
					"title": "WeeklyGuard",
					"id": "FugitiveAxe2hGuard"
				},
				{
					"title": "Companions",
					"level": 1,
					"id": "Bladestorm"
				},
				{
					"level": 2,
					"title": "WeeklyCompanions",
					"id": "FugitiveMace2HCompanions"
				},
				{
					"title": "Inquisition",
					"level": 1,
					"id": "ForcefulInterrogation"
				},
				{
					"level": 2,
					"title": "WeeklyInquisition",
					"id": "FugitiveSwordInquisition"
				},
				{
					"level": 1,
					"title": "Trackers",
					"id": "WildMarking"
				},
				{
					"level": 2,
					"title": "WeeklyTrackers",
					"id": "FugitiveTrackersBow"
				},
				{
					"level": 1,
					"title": "Alazar",
					"id": "CautiousStrike"
				},
				{
					"level": 2,
					"title": "Escape",
					"id": "DodgeEndTurn"
				},
				{
					"title": "Animal",
					"level": 1,
					"id": "TuskBlow"
				},
				{
					"level": 2,
					"title": "Boars",
					"id": "TuskBlow"
				},
				{
					"level": 2,
					"title": "Wolf",
					"id": "Bite"
				},
				{
					"level": 2,
					"title": "Horse",
					"id": "Crush"
				},
				{
					"level": 2,
					"title": "Rats&Molerats",
					"id": "InfectiousBite"
				},
				{
					"level": 2,
					"title": "Plagueriddens",
					"id": "Vomiting"
				},
				{
					"level": 2,
					"title": "Crawlers",
					"id": "DeepBite"
				},
				{
					"level": 2,
					"title": "GhostPack",
					"id": "TerrifyingAppearance"
				},
				{
					"level": 2,
					"title": "Mosquitos",
					"id": "DreadfulSting"
				},
				{
					"level": 2,
					"title": "Bear",
					"id": "MonstrousPawStrike"
				},
				{
					"title": "Champions",
					"level": 1,
					"id": "Uncontrollable"
				},
				{
					"level": 2,
					"title": "S1 Matthias Lund",
					"id": "Uncontrollable"
				},
				{
					"level": 2,
					"title": "ArenaG1 Smot",
					"id": "ToxicBlade"
				},
				{
					"level": 2,
					"title": "G1 Ruin Nepti",
					"id": "Nepti"
				},
				{
					"level": 2,
					"title": "E1 Kaghal",
					"id": "PiercingArrow"
				},
				{
					"level": 2,
					"title": "G1 Alaxa",
					"id": "SliceAndDice"
				},
				{
					"level": 2,
					"title": "H1 Bionn",
					"id": "BionnAttack"
				},
				{
					"level": 2,
					"title": "G2 Fenris",
					"id": "FenrisSeek"
				},
				{
					"level": 2,
					"title": "Arena1G2 Kogo Toro",
					"id": "LightningSpin"
				},
				{
					"level": 2,
					"title": "Arena2G2 TrivetteRagnol",
					"id": "SoakedAxe"
				},
				{
					"level": 2,
					"title": "G2 Ruin Behedite",
					"id": "BeheditePenalty"
				},
				{
					"level": 2,
					"title": "S1 Ruin Dagan",
					"id": "DaganPunishment"
				},
				{
					"level": 2,
					"title": "A1 Christoph Gluck",
					"id": "GluckStiffingAttack"
				},
				{
					"level": 2,
					"title": "A1 Crawler",
					"id": "CrawlerChaosClaws"
				},
				{
					"level": 2,
					"title": "ArenaE1 Kriskhed",
					"id": "TacticalSlam"
				},
				{
					"level": 2,
					"title": "ArenaA1 Lisbeth",
					"id": "ImpalingStrike"
				},
				{
					"level": 2,
					"title": "ArenaH1 Nairolf Ecila",
					"id": "UnbreakableBond1"
				},
				{
					"title": "Status",
					"id": "Savagery"
				},
				{
					"title": "Injuries",
					"id": "Tear"
				},
				{
					"title": "Gear",
					"id": "OilStrengthProcWeak"
				},
				{
					"level": 1,
					"title": "Oil",
					"id": "OilStrengthProcWeak"
				},
				{
					"title": "BeltAccs",
					"level": 1,
					"id": "BeltAccPoisonExtra"
				},
				{
					"title": "AnimAcc",
					"level": 1,
					"id": "AnimAccAllyMelee"
				},
				{
					"title": "Global",
					"id": "FireZone"
				},
				{
					"level": 1,
					"title": "Environment",
					"id": "FireZone"
				},
				{
					"level": 1,
					"title": "EnvironmentSkill",
					"id": "RockSlideZone"
				},
				{
					"title": "Traps",
					"level": 1,
					"id": "PoisonTrap"
				},
				{
					"title": "Misc",
					"level": 1,
					"id": "Plague_Madness"
				},
				{
					"level": 1,
					"title": "AIBehaviour",
					"id": "AIBehaviourDefault"
				},
				{
					"title": "Modes",
					"id": "ArenaVulnerability"
				},
				{
					"title": "Arena_VoxPopuli",
					"level": 1,
					"id": "ArenaVulnerability"
				},
				{
					"title": "Arena_Rules",
					"level": 1,
					"id": "ArenaRulePoisonZone"
				},
				{
					"title": "Arena_Challenges",
					"level": 1,
					"id": "ArenaUnitToEngage"
				},
				{
					"level": 1,
					"title": "ForsakenVillage",
					"id": "PestiferedFromCellingZone"
				},
				{
					"level": 1,
					"title": "Sport",
					"id": "SportTeamLeader"
				},
				{
					"level": 1,
					"title": "Celestium",
					"id": "CelestiumSearch"
				},
				{
					"title": "Ideas",
					"id": "Gouge"
				}
			]
		},
		{
			"name": "status",
			"columns": [
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "14",
					"name": "icon"
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "namePlural",
					"kind": "localizable",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "desc",
					"kind": "localizable"
				},
				{
					"typeStr": "8",
					"name": "attributes"
				},
				{
					"typeStr": "17",
					"name": "props"
				},
				{
					"typeStr": "1",
					"name": "notes",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "iconeDone",
					"editor": {
						"categories": [
							"todoInfo"
						]
					}
				}
			],
			"lines": [
				{
					"id": "No_Status",
					"name": "MUST BE CHANGED",
					"desc": "",
					"attributes": [],
					"props": {},
					"iconeDone": true,
					"group": 0,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 2
					}
				},
				{
					"id": "Targeting",
					"name": "Ciblage",
					"desc": "Cette unité prépare une compétence. Elle ne peut faire aucune autre action  et ne peut pas se faire engager.",
					"props": {},
					"group": 0,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 1
					},
					"attributes": [],
					"iconeDone": true
				},
				{
					"id": "Engaged",
					"name": "Engagé",
					"desc": "Cette unité peut seulement cibler l'adversaire engagé et a [VALUE]% de chances de subir un coup critique de la part des autres unités (20% de dos).",
					"attributes": [],
					"props": {
						"value": 10,
						"important": true
					},
					"group": 0,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "CriticalHit",
					"name": "Coup critique",
					"desc": "[DamageBonusPercent] de l'attaque augmentés de [VALUE]%.",
					"attributes": [],
					"props": {
						"value": 25,
						"attributeValue": "CritHitDamageBonusPercent"
					},
					"group": 1,
					"iconeDone": true
				},
				{
					"id": "OpportunityAttack",
					"name": "Attaque d'opportunité",
					"desc": "Une attaque qui inflige [VALUE]% de l'attribut principal, [Strength] ou [Dexterity].",
					"attributes": [],
					"props": {
						"value": 100,
						"attributeValue": "DamageBonusOppAttack"
					},
					"group": 1,
					"iconeDone": true
				},
				{
					"id": "Pushback",
					"name": "Repousser",
					"desc": "La cible effectue un déplacement forcé dans la direction opposée.",
					"attributes": [],
					"props": {},
					"group": 1,
					"iconeDone": true
				},
				{
					"id": "ActionBase",
					"name": "Action de base",
					"desc": "Vous ne pouvez utiliser qu'une seule action ou attaque de base par tour. ",
					"attributes": [],
					"props": {},
					"group": 1,
					"iconeDone": true
				},
				{
					"id": "Ultimate",
					"name": "Coup d'éclat",
					"desc": "Ces compétences vous permettront d'établir de nouvelles stratégies dans vos combats.\n\nVotre troupe peut réaliser un seul Coup d'éclat par round. Chaque compagnon a le possibilité de faire son Coup d'éclat qu'une seule fois par combat.",
					"attributes": [],
					"props": {},
					"iconeDone": true,
					"group": 1
				},
				{
					"id": "Leader",
					"name": "Leader",
					"desc": "[Strength], [Dexterity] et [Constitution] augmentées de [ATTR_0]%. Ne peux pas être capturé.",
					"props": {
						"important": true,
						"persistent": true
					},
					"group": 2,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 9
					},
					"attributes": [
						{
							"kind": "Strength",
							"value": 30,
							"isPercentage": true,
							"valueEasy": 30,
							"valueHard": 30
						},
						{
							"kind": "Dexterity",
							"value": 30,
							"isPercentage": true,
							"valueHard": 30,
							"valueEasy": 30
						},
						{
							"kind": "Constitution",
							"value": 30,
							"isPercentage": true,
							"valueHard": 30,
							"valueEasy": 30
						},
						{
							"kind": "Willpower",
							"value": 30,
							"isPercentage": true,
							"valueHard": 30,
							"valueEasy": 30
						}
					],
					"iconeDone": true
				},
				{
					"id": "Gladiator",
					"name": "Gladiateur",
					"desc": "[Strength], [Dexterity] et [Constitution] augmentées de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "Strength",
							"value": 50,
							"isPercentage": true,
							"valueEasy": 40,
							"valueHard": 60
						},
						{
							"kind": "Dexterity",
							"value": 50,
							"isPercentage": true,
							"valueEasy": 40,
							"valueHard": 60
						},
						{
							"kind": "Constitution",
							"value": 50,
							"isPercentage": true,
							"valueEasy": 40,
							"valueHard": 60
						}
					],
					"props": {
						"important": true,
						"persistent": true
					},
					"group": 2,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 9
					},
					"iconeDone": true
				},
				{
					"id": "Champion",
					"name": "Elite",
					"desc": "Peut utiliser plusieurs compétences dans un même round.\nLes dégâts sur la durée sont grandement diminués et ne se déclenchent qu'à la fin du round.\nNe peut pas être capturé.",
					"attributes": [],
					"props": {
						"important": true,
						"persistent": true
					},
					"group": 2,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "Skilled",
					"name": "Aguerri",
					"desc": "[Strength], [Dexterity] et [Constitution] augmentées de [ATTR_0]%.\nNe peut pas être capturé.",
					"attributes": [
						{
							"kind": "Strength",
							"value": 20,
							"isPercentage": true,
							"valueEasy": 15,
							"valueHard": 30
						},
						{
							"kind": "Dexterity",
							"value": 20,
							"isPercentage": true,
							"valueEasy": 15,
							"valueHard": 30
						},
						{
							"kind": "Constitution",
							"value": 20,
							"isPercentage": true,
							"valueEasy": 15,
							"valueHard": 30
						}
					],
					"props": {
						"important": true,
						"persistent": true
					},
					"iconeDone": true,
					"group": 2,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 9
					}
				},
				{
					"id": "ImportantUnit",
					"name": "Personnage important",
					"desc": "Cette unité est un personnage important. Si cette unité meurt, vous devrez relancer le combat.",
					"attributes": [],
					"props": {
						"important": true,
						"preventCancel": true
					},
					"group": 2,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "ScaredUnit",
					"name": "Personnage apeuré",
					"desc": "Cette unité est apeurée. Elle ne peut que se défendre ou fuir.",
					"attributes": [],
					"props": {
						"important": true,
						"preventCancel": true
					},
					"iconeDone": true,
					"group": 2,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 9
					}
				},
				{
					"id": "Tired",
					"name": "Fatigué",
					"desc": "[Strength] et [Dexterity] réduites de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "Strength",
							"value": -30,
							"isPercentage": true
						},
						{
							"kind": "Dexterity",
							"value": -30,
							"isPercentage": true
						}
					],
					"props": {
						"persistent": true,
						"important": true
					},
					"group": 3,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "HairGrowing",
					"name": "Repousse de cheveux",
					"desc": "Selon les inscriptions sur le flacon, il faut dormir pour que le repousse-cheveux fasse effet.",
					"attributes": [],
					"props": {
						"hideInFight": true,
						"persistent": true,
						"importantCamp": true,
						"cancelOn": 7,
						"refElement": "HairGrowingElement"
					},
					"group": 3,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "Galvanization",
					"name": "Galvanisation",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.",
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 1
					},
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 50
						}
					],
					"iconeDone": true
				},
				{
					"id": "Motivation",
					"name": "Motivé",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 10
						}
					],
					"props": {},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 8
					}
				},
				{
					"id": "Fury",
					"name": "Fureur",
					"desc": "[DamageBonusPercent] de la prochaine attaque augmentés de [ATTR_0]%.",
					"props": {
						"cancelOn": 5
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 0
					},
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 50
						}
					],
					"iconeDone": true
				},
				{
					"id": "Brutality",
					"name": "Brutalité",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.",
					"props": {
						"cancelOn": 1
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 13,
						"y": 0
					},
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 30
						}
					],
					"iconeDone": true
				},
				{
					"id": "Protection",
					"name": "Protection",
					"desc": "[DamageReducePercent] réduits de [ATTR_0]%.",
					"props": {
						"cancelOn": 1
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 14,
						"y": 0
					},
					"attributes": [
						{
							"kind": "DamageReducePercent",
							"value": 30
						}
					],
					"iconeDone": true
				},
				{
					"id": "Inspiration",
					"name": "Inspiration",
					"desc": "[Movement] doublé.",
					"props": {
						"cancelOn": 1
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 0
					},
					"attributes": [
						{
							"kind": "Movement",
							"value": 100,
							"isPercentage": true
						}
					],
					"iconeDone": true
				},
				{
					"id": "Deftness",
					"name": "Habileté",
					"desc": "Portée de la prochaine attaque doublée et précision améliorée.",
					"attributes": [
						{
							"kind": "DistanceBonus",
							"value": 100,
							"isPercentage": true
						},
						{
							"kind": "PrecisionBonus",
							"value": 100
						}
					],
					"props": {
						"cancelOn": 5
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 0
					},
					"notes": "",
					"iconeDone": true
				},
				{
					"id": "Deflection",
					"name": "Déviation",
					"desc": "[DamageReducePercent] de la prochaine attaque réduits de [ATTR_0]%.",
					"props": {
						"cancelOn": 4
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 0
					},
					"attributes": [
						{
							"kind": "DamageReducePercent",
							"value": 70
						}
					],
					"iconeDone": true
				},
				{
					"id": "Riposte",
					"name": "Riposte",
					"desc": "La prochaine fois que cette unité est attaquée par son adversaire engagé, elle le frappe en retour avec une attaque d'opportunité.\nRetiré si se déplace.",
					"props": {
						"cancelOn": 2
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 0
					},
					"attributes": [],
					"notes": "hard coded",
					"iconeDone": true
				},
				{
					"id": "Dodge",
					"name": "Esquive",
					"desc": "Esquive entièrement la prochaine attaque subie.\nRetiré si se déplace.",
					"props": {
						"cancelOn": 2
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 0
					},
					"attributes": [],
					"iconeDone": true
				},
				{
					"id": "OilStrengthProc1",
					"name": "",
					"desc": "[Strength] augmentée de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "Strength",
							"value": 10,
							"isPercentage": true
						}
					],
					"props": {
						"cancelOn": 1
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "OilDexterityProc1",
					"name": "",
					"desc": "[Dexterity] augmentée de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "Dexterity",
							"value": 10,
							"isPercentage": true
						}
					],
					"props": {
						"cancelOn": 1
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "OilDamageTakenProc1",
					"name": "",
					"desc": "[DamageReducePercent] réduits de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageReducePercent",
							"value": 10
						}
					],
					"props": {
						"cancelOn": 1
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "BeltAccGuardEngaged",
					"name": "",
					"desc": "[Guard] augmentée de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "Guard",
							"value": 10
						}
					],
					"props": {
						"cancelOn": 1
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "Fog",
					"name": "Brouillard",
					"desc": "Cette unité est invisible des autres unités.",
					"attributes": [],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "Unity",
					"name": "Unité",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]% car adjacent à un allié.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 10
						}
					],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "Loneliness",
					"name": "Solitude",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]% car non-adjacent à un allié.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 5
						}
					],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "Wrath",
					"name": "Courroux",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 30
						}
					],
					"props": {
						"stackable": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "Supported",
					"name": "Supporté",
					"desc": "Cette unité est engagée et adjacente à [VALUE] alliés libres.\n\n[DamageReducePercent] réduits de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageReducePercent",
							"value": 20
						}
					],
					"props": {
						"important": true,
						"value": 2
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "CriticalLeader",
					"name": "Agressivité du chef",
					"desc": "[CritHitPercent] augmentés de [ATTR_0]%",
					"attributes": [
						{
							"kind": "CritHitPercent",
							"value": 30,
							"valueEasy": 20,
							"valueHard": 40
						}
					],
					"props": {
						"important": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "ProtectionLeader",
					"name": "Protection du chef",
					"desc": "[DamageReducePercent] réduits de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageReducePercent",
							"value": 15,
							"valueEasy": 10,
							"valueHard": 20
						}
					],
					"props": {
						"important": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "TrueDamageLeader",
					"name": "Opportunisme du chef",
					"desc": "Les attaques de cette unité font également perdre [VALUE]% de la [Health] des unités touchées.",
					"attributes": [],
					"props": {
						"value": 5,
						"important": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 5,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "InspirationLeader",
					"name": "Inspiration du chef",
					"desc": "[Movement] augmenté de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "Movement",
							"value": 50,
							"isPercentage": true,
							"valueEasy": 40,
							"valueHard": 60
						}
					],
					"props": {
						"important": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "BrutalityLeader",
					"name": "Brutalité du chef",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 20,
							"valueEasy": 15,
							"valueHard": 25
						}
					],
					"props": {
						"important": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "DmgPerBonusLeader",
					"name": "Volonté du chef",
					"desc": "[DamageBonusPercent] augmentés de [VALUE]% pour chaque Bonus appliqué sur la cible de ses attaques.",
					"attributes": [],
					"props": {
						"value": 40,
						"important": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "SupportLeader",
					"name": "Soutien du chef",
					"desc": "La [Guard] de cette unité est égale à la meilleure [Guard] parmi celles de cette unité et de ses alliés proches ([VALUE] mètres).",
					"attributes": [],
					"props": {
						"value": 4
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 8
					},
					"notes": ""
				},
				{
					"id": "AnimalProtection",
					"name": "Protection animale",
					"desc": "[DamageReducePercent] réduits de [ATTR_0]%.\nCumulable.",
					"attributes": [
						{
							"kind": "DamageReducePercent",
							"value": 15
						}
					],
					"props": {
						"stackable": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "Berserk",
					"name": "Berserk",
					"desc": "[DamageBonusPercent] et [DamageTakenPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 100
						},
						{
							"kind": "DamageTakenPercent",
							"value": 100
						}
					],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "BerserkStack",
					"name": "Colère montante",
					"desc": "Au bout de [VALUE] rats tués, cette unité se déchaîne.",
					"attributes": [],
					"props": {
						"value": 3,
						"stackable": true,
						"hideNotif": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "BloodReserve",
					"name": "Réserve de sang",
					"desc": "Au bout de [VALUE] applications, cette unité régénère entièrement sa [Health].",
					"attributes": [],
					"props": {
						"stackable": true,
						"value": 2,
						"important": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "Relentlessness",
					"name": "Acharnement",
					"desc": "Après avoir attaqué, cette unité effectue une attaque d'opportunité.\nRetiré si n'est plus engagée.",
					"attributes": [],
					"props": {
						"skill": "Relentlessness"
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "AnimalMarkedBonus",
					"name": "Rage",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.\nCumulable.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 5
						}
					],
					"props": {
						"stackable": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "Savagery",
					"name": "Sauvagerie",
					"desc": "Gagne [Riposte] si termine son tour engagé.",
					"attributes": [],
					"props": {
						"skill": "Savagery"
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Rivalry",
					"name": "Rivalité",
					"desc": "[DamageReducePercent] causés par l'adversaire engagé réduits de [VALUE]%.",
					"attributes": [],
					"props": {
						"cancelOn": 1,
						"skill": "Rivalry",
						"value": 50
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "BionnPanic",
					"name": "Panique de Bionn",
					"desc": "Correspond au nombre de pestiférés appelés par le Hurlement despéréré de Bionn.",
					"attributes": [],
					"props": {
						"stackable": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "FenrisCourage",
					"name": "Courage",
					"desc": "Niveau de Courage de Fenris",
					"attributes": [],
					"props": {
						"stackable": true,
						"notifyNegative": true
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 5
					},
					"namePlural": "",
					"iconeDone": true
				},
				{
					"id": "Whipped",
					"name": "Fouetté",
					"desc": "",
					"attributes": [],
					"props": {
						"cancelOn": 7
					},
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "DieAfterRest",
					"name": "",
					"desc": "",
					"attributes": [],
					"props": {},
					"group": 4,
					"iconeDone": true
				},
				{
					"id": "BestFriendAdjacent",
					"name": "Meilleurs Amis",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 5
						}
					],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "Angry",
					"name": "Énervé",
					"desc": "[Strength] et [Dexterity] augmentées de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "Strength",
							"value": 10,
							"isPercentage": true
						},
						{
							"kind": "Dexterity",
							"value": 10,
							"isPercentage": true
						}
					],
					"props": {
						"cancelOn": 7
					},
					"group": 4,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "Watchful",
					"name": "Vigilant",
					"desc": "Zone d'agression des ennemis dans le monde réduite.",
					"attributes": [],
					"props": {
						"cancelOn": 7,
						"value": 5,
						"hideInFight": true
					},
					"group": 4,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "Satiated",
					"name": "Rassasié",
					"desc": "La consommation de nourriture de cette unité au prochain Repos est réduite à 0.",
					"attributes": [],
					"props": {
						"cancelOn": 7,
						"hideInFight": true
					},
					"group": 4,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "Endurance",
					"name": "Endurant",
					"desc": "Vitesse de déplacement dans le monde augmentée de [VALUE]%.",
					"attributes": [],
					"props": {
						"cancelOn": 7,
						"value": 10,
						"hideInFight": true
					},
					"group": 4,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 5,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "Ratkiller",
					"name": "Désinfesteur",
					"desc": "[DamageBonusPercent] contre les Excroissances pestiférées augmentés de [VALUE]%.\n\nStatut retiré après un affrontement contre les invasions de rats.",
					"attributes": [],
					"props": {
						"value": 50,
						"persistent": true
					},
					"group": 4,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "Inspired",
					"name": "Inspiré",
					"desc": "[Willpower] augmentée de [ATTR].",
					"attributes": [
						{
							"kind": "Willpower",
							"value": 5,
							"isPercentage": false
						}
					],
					"props": {
						"cancelOn": 7
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 6
					},
					"namePlural": "",
					"iconeDone": true
				},
				{
					"id": "GoldDigger",
					"name": "Chercheur d'or",
					"desc": "Le prochain gain de krowns est augmenté de [VALUE]%.",
					"attributes": [],
					"props": {
						"value": 10
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "Unleashed",
					"name": "Déchaîné",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]% et ne peut pas être engagé.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 5
						}
					],
					"props": {},
					"group": 4,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "Unwavering",
					"name": "Inébranlable",
					"desc": "Ne peut pas être repoussé.",
					"attributes": [],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 13,
						"y": 6
					},
					"namePlural": "",
					"iconeDone": true
				},
				{
					"id": "LinkedByWill",
					"name": "Lié par la volonté",
					"desc": "À la fin du Round, si au moins un allié a encore de la [Health], cette unité régénère la moitié de sa [Health].",
					"attributes": [],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "BrothersFury",
					"name": "Fureur fraternelle",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 300
						}
					],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "PrideInfused",
					"name": "Infusion d'orgueil",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 50
						}
					],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "ResistFire",
					"name": "Résistance au feu",
					"desc": "Les dégâts de feu sont réduits à 0.",
					"attributes": [],
					"props": {
						"damageType": [
							0
						]
					},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 7
					},
					"namePlural": "",
					"iconeDone": true,
					"notes": "hard coded to prevent other damage fire bonus"
				},
				{
					"id": "LoneWolf",
					"name": "Loup Solitaire",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.\n[DamageReducePercent] réduits de [ATTR_1]%.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 10
						},
						{
							"kind": "DamageReducePercent",
							"value": 10
						}
					],
					"props": {},
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "MischiefMakerCritical",
					"name": "Expérience des pillages",
					"desc": "[CritHitDamageBonusPercent] de la troupe augmentés de [ATTR_0]%",
					"attributes": [
						{
							"kind": "CritHitDamageBonusPercent",
							"value": 30
						}
					],
					"props": {},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 4
					}
				},
				{
					"id": "Doped",
					"name": "Drogué",
					"desc": "L'unité ignore sa prochaine blessure.",
					"attributes": [],
					"props": {
						"cancelOn": 7
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 8
					}
				},
				{
					"id": "Zeal",
					"name": "Zèle",
					"desc": "[CritHitPercent] et [CritHitDamageBonusPercent] augmentés de [ATTR_0]%",
					"attributes": [
						{
							"kind": "CritHitPercent",
							"value": 30
						},
						{
							"kind": "CritHitDamageBonusPercent",
							"value": 30
						}
					],
					"props": {
						"cancelOn": 1,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 8
					}
				},
				{
					"id": "Frenzy",
					"name": "Frénésie",
					"desc": "Les dégâts de cette unité augmentent proportionnellement à sa vie manquante et sont toujours critiques.",
					"attributes": [
						{
							"kind": "CritHitPercent",
							"value": 100
						}
					],
					"props": {
						"feature": "Alazar1_Update",
						"skill": "FrenzyStatus"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 13,
						"y": 8
					}
				},
				{
					"id": "DefensiveStance",
					"name": "Posture défensive",
					"desc": "[DamageReducePercent] réduits de [ATTR_0]%.\nCumulable.\nAu bout de [VALUE] applications, bascule en posture berserker.",
					"attributes": [
						{
							"kind": "DamageReducePercent",
							"value": 10
						}
					],
					"props": {
						"stackable": true,
						"value": 10,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 14,
						"y": 8
					}
				},
				{
					"id": "BerserkerStance",
					"name": "Posture berserker",
					"desc": "[DamageTakenPercent] et [DamageBonusPercent] augmentés de [ATTR_0]%.\nCumulable.\nAu bout de [VALUE] applications, bascule en posture défensive.",
					"attributes": [
						{
							"kind": "DamageTakenPercent",
							"value": 10
						},
						{
							"kind": "DamageBonusPercent",
							"value": 10
						}
					],
					"props": {
						"stackable": true,
						"value": 10,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 8
					}
				},
				{
					"id": "Euphoria",
					"name": "Euphorie",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.\nCumulable.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 50
						}
					],
					"props": {
						"stackable": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 8
					}
				},
				{
					"id": "A1ArenaRedGazZone",
					"name": "Vapeurs stimulantes",
					"desc": "Au début de son tour, cette unité gagne [A1ArenaRedGaz].",
					"attributes": [],
					"props": {
						"feature": "Alazar1_Update",
						"important": true
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 8
					}
				},
				{
					"id": "A1ArenaRedGaz",
					"name": "Stimulé",
					"desc": "Augmente les dégâts infligés aux unités engagées de [VALUE]%.",
					"attributes": [],
					"props": {
						"skill": "A1ArenaRedGazStatus",
						"value": 100,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 8
					}
				},
				{
					"id": "A1ArenaBlueGazZone",
					"name": "Vapeurs tonifiantes",
					"desc": "Au début de son tour, cette unité gagne [A1ArenaBlueGaz].",
					"attributes": [],
					"props": {
						"feature": "Alazar1_Update",
						"important": true
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 9
					}
				},
				{
					"id": "A1ArenaBlueGaz",
					"name": "Tonifié",
					"desc": "Augmente les dégâts infligés aux unités non-engagées de [VALUE]%.",
					"attributes": [],
					"props": {
						"skill": "A1ArenaBlueGazStatus",
						"value": 100,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 5,
						"y": 9
					}
				},
				{
					"id": "Replay",
					"name": "Deuxième chance",
					"desc": "Cette unité rejouera dans ce round.",
					"attributes": [],
					"props": {
						"cancelOn": 8,
						"important": true
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 8
					}
				},
				{
					"id": "Ordered",
					"name": "Ordonné",
					"desc": "Cette unité génère le double de Points de Bravoure.",
					"attributes": [],
					"props": {
						"cancelOn": 8,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 8
					},
					"namePlural": "",
					"notes": ""
				},
				{
					"id": "ToPosition",
					"name": "En position",
					"desc": "La garde de cette unité est doublée.",
					"attributes": [
						{
							"kind": "Guard",
							"value": 100,
							"isPercentage": true
						}
					],
					"props": {
						"cancelOn": 1,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 8
					},
					"namePlural": "",
					"notes": ""
				},
				{
					"id": "Entrenched",
					"name": "Retranché",
					"desc": "[DamageReducePercent] réduits de [ATTR_0]%.\nCumulable. (Maximum [VALUE]%).",
					"attributes": [
						{
							"kind": "DamageReducePercent",
							"value": 10
						}
					],
					"props": {
						"feature": "Alazar1_Update",
						"value": 50,
						"stackable": true,
						"maxStacks": 5
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 5,
						"y": 8
					},
					"namePlural": "",
					"notes": ""
				},
				{
					"id": "BackEyed",
					"name": "Yeux dans le dos",
					"desc": "Cette unité n'a pas de faiblesse de dos.",
					"attributes": [],
					"props": {
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 8
					},
					"notes": ""
				},
				{
					"id": "Electrified",
					"name": "Électricité statique",
					"desc": "Les dégâts d'éclair sont réduits à 0.\nLorsqu'une autre unité utilise une compétence ou termine son tour adjacent à cette unité, elle subit un coup d'éclair qui lui fait perdre [VALUE]% de sa [Health] maximum (effet\naffaiblit sur les Élites).",
					"attributes": [],
					"props": {
						"feature": "Alazar1_Update",
						"skill": "Electrified",
						"value": 20
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 9
					},
					"notes": ""
				},
				{
					"id": "Enervate",
					"name": "En colère",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.\r\nCumulable.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 20
						}
					],
					"props": {
						"stackable": true,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 9
					}
				},
				{
					"id": "Executer",
					"name": "Exécuteur",
					"desc": "[Movement] augmenté de [ATTR_0] et [CritHitPercent] augmenté de [ATTR_1]%.",
					"attributes": [
						{
							"kind": "Movement",
							"value": 3
						},
						{
							"kind": "CritHitPercent",
							"value": 20
						}
					],
					"props": {
						"cancelOn": 1
					},
					"iconeDone": true,
					"group": 4,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 8
					}
				},
				{
					"id": "Weakening",
					"name": "Affaiblissement",
					"desc": "[DamageBonusPercent] réduits de [ATTR_0]%.",
					"props": {
						"cancelOn": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 0
					},
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": -50
						}
					],
					"iconeDone": true
				},
				{
					"id": "Fragility",
					"name": "Fragilité",
					"desc": "[DamageTakenPercent] augmentés de [ATTR_0]%.",
					"props": {
						"cancelOn": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 0
					},
					"attributes": [
						{
							"kind": "DamageTakenPercent",
							"value": 30
						}
					],
					"iconeDone": true
				},
				{
					"id": "Destabilization",
					"name": "Déstabilisation",
					"desc": "[Guard] réduite à 0.",
					"attributes": [
						{
							"kind": "Guard",
							"value": -1000
						}
					],
					"props": {
						"cancelOn": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 14,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "Slowdown",
					"name": "Ralentissement",
					"desc": "[Movement] réduit de moitié.",
					"props": {
						"cancelOn": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 5,
						"y": 0
					},
					"attributes": [
						{
							"kind": "Movement",
							"value": -50,
							"isPercentage": true
						}
					],
					"iconeDone": true
				},
				{
					"id": "Bleeding",
					"name": "Saignement",
					"props": {
						"value": 20,
						"attributePercent": "Health",
						"important": true,
						"playFxOnSelect": true,
						"impactFx": "prefabs/fx/fight/hits & impacts/impactBleedAdd.fx"
					},
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 0
					},
					"desc": "Perd [VALUE]% de sa [Health] maximum à la fin de son tour.\n<extra>Dégâts : <bad>[VALUE%]</bad></extra>",
					"group": 5,
					"attributes": [],
					"iconeDone": true
				},
				{
					"id": "Poison",
					"name": "Poison",
					"desc": "Perd [VALUE]% de sa [Health] maximum à la fin de son tour.\nCumulable (actuel: [VALUE_STACK]%).\n<extra>Dégâts : <bad>[VALUE%]</bad></extra>",
					"props": {
						"stackable": true,
						"value": 5,
						"attributePercent": "Health",
						"damageType": [
							1
						],
						"important": true,
						"playFxOnSelect": true,
						"impactFx": "prefabs/fx/fight/hits & impacts/impactPoisonAdd.fx"
					},
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 0
					},
					"group": 5,
					"attributes": [],
					"namePlural": "Poisons",
					"iconeDone": true
				},
				{
					"id": "PoisonCloud",
					"name": "Nuage de poison",
					"desc": "Applique [VALUE] [Poison]s à toute unité qui traverse ou termine son tour dans le nuage.",
					"attributes": [],
					"props": {
						"value": 2,
						"hideNotif": true
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "DustFog",
					"name": "Nuage de poussière",
					"desc": "Les unités à l'intérieur ne sont pas visibles.",
					"attributes": [],
					"props": {},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 2
					},
					"namePlural": "",
					"iconeDone": true
				},
				{
					"id": "Burning",
					"name": "Brûlure",
					"desc": "Perd [VALUE]% de sa [Health] maximum et se propage aux unités adjacentes à la fin de son tour.\nRetiré lorsque l'unité se déplace par l'effet d'une compétence.",
					"props": {
						"value": 15,
						"cancelOn": 3,
						"attributePercent": "Health",
						"damageType": [
							0
						],
						"important": true,
						"playFxOnSelect": true,
						"impactFx": "prefabs/fx/fight/hits & impacts/impactFireAdd.fx"
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 0
					},
					"attributes": [],
					"iconeDone": true
				},
				{
					"id": "Vulnerability",
					"name": "Vulnérabilité",
					"props": {
						"cancelOn": 4
					},
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 0
					},
					"desc": "La prochaine attaque subie sera un coup critique.",
					"group": 5,
					"attributes": [],
					"iconeDone": true
				},
				{
					"id": "Stun",
					"name": "Étourdissement",
					"desc": "Ne peut effectuer aucune action.",
					"props": {},
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 0
					},
					"group": 5,
					"attributes": [],
					"iconeDone": true
				},
				{
					"id": "Dying",
					"name": "Mourant",
					"desc": "Cette unité ne peut plus utiliser de compétences et se déplace de la moitié de sa capacité.\nElle meurt si elle subit des dégâts.",
					"attributes": [
						{
							"kind": "Movement",
							"value": -50,
							"isPercentage": true
						}
					],
					"props": {
						"important": true
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "Surrounded",
					"name": "Encerclé",
					"desc": "Cette unité est engagée et adjacente à [VALUE] ennemis libres.\n\n[DamageTakenPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageTakenPercent",
							"value": 20
						}
					],
					"props": {
						"important": true,
						"preventCancel": true,
						"value": 2
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 13,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "Sentence",
					"name": "Sentence",
					"desc": "Cette unité est prise pour cible...",
					"attributes": [],
					"props": {
						"important": true,
						"preventCancel": true
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "Fever",
					"name": "Fièvre",
					"desc": "[DamageTakenPercent] augmentés de [ATTR_0]%.\nCumulable.",
					"attributes": [
						{
							"kind": "DamageTakenPercent",
							"value": 10
						}
					],
					"props": {
						"stackable": true
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 2
					},
					"namePlural": "Fièvres",
					"iconeDone": true
				},
				{
					"id": "Plagued",
					"name": "Contamination",
					"desc": "Cette unité est contaminée par la Peste.\nElle ne peut se nourrir que de viande et risque de perdre la raison si elle est affamée.",
					"attributes": [],
					"props": {
						"persistent": true,
						"injury": 2
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "Plagued_Starved",
					"name": "Contamination - Affamé",
					"desc": "Cette unité est contaminée par la Peste et affamée car elle n'a pas mangé de viande lors du dernier repos.\nElle peut perdre la raison en combat au début de chaque round.",
					"attributes": [],
					"props": {
						"skill": "Plague_Madness",
						"importantCamp": true,
						"persistent": true,
						"similarStatus": "Plagued",
						"important": true,
						"custom": {
							"maxPerRest": 3,
							"max": 5
						},
						"injury": 2
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 5,
						"y": 2
					},
					"notes": "when unit gets between 1 and VALUE Madness_Counter stacks per rest",
					"iconeDone": true
				},
				{
					"id": "Plagued_Madness",
					"name": "Contamination - Folie",
					"desc": "Cette unité est contaminée par la Peste et a perdu la raison. Elle est incontrôlable et peut attaquer les unités alliés.",
					"attributes": [],
					"props": {
						"importantCamp": true,
						"persistent": true,
						"custom": {
							"crunch": 1,
							"plagued": 0.5
						},
						"similarStatus": "Plagued_Starved",
						"injury": 2
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 2
					},
					"notes": "No weapon, get Plagueridden skills",
					"iconeDone": true
				},
				{
					"id": "Plagued_Injured",
					"name": "Blessure pestiférée",
					"desc": "Cette unité doit être soignée avant le prochain Repos. Sinon, elle sera Contaminée.",
					"attributes": [],
					"props": {
						"persistent": true,
						"importantCamp": true,
						"custom": {
							"remedy": 0.25
						},
						"injury": 2
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "PreventEngage",
					"name": "",
					"desc": "Cette unité ne peut pas être engagée.",
					"attributes": [],
					"props": {
						"preventCancel": true
					},
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Unpushable",
					"name": "",
					"desc": "Cette unité ne peut pas être poussée.",
					"attributes": [],
					"props": {},
					"group": 5,
					"iconeDone": true
				},
				{
					"id": "Fire",
					"name": "Feu",
					"desc": "Applique [Burning] à toute unité qui traverse la zone.",
					"attributes": [],
					"props": {},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "OilDotEffect1",
					"name": "",
					"desc": "Perd [VALUE] de [Health] à la fin de son tour.\nCumulable (actuel : [VALUE_STACK]).",
					"attributes": [],
					"props": {
						"stackable": true,
						"value": 1,
						"cancelOn": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 0
					},
					"iconeDone": true
				},
				{
					"id": "Terror",
					"name": "Terreur",
					"desc": "Au bout de [VALUE] applications, l'unité terrorisée fuit le combat.",
					"attributes": [],
					"props": {
						"value": 5,
						"stackable": true
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 4
					},
					"namePlural": "Terreurs",
					"iconeDone": true
				},
				{
					"id": "TerrorFog",
					"name": "Brouillard Fantôme",
					"desc": "Applique [VALUE] [Terror] à toute unité qui traverse ou termine son tour dans le brouillard.",
					"attributes": [],
					"props": {
						"value": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "TerrorLink",
					"name": "Lien de terreur",
					"desc": "Cette unité subit [VALUE] [Terror] à la fin de son tour.\nRetiré quand devient adjacent à un allié affecté par cet effet.",
					"attributes": [],
					"props": {
						"value": 3
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "Blind",
					"name": "Aveuglement",
					"desc": "A [VALUE]% de chances de manquer sa prochaine attaque.",
					"attributes": [],
					"props": {
						"value": 50,
						"cancelOn": 5
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 3
					},
					"iconeDone": true
				},
				{
					"id": "Surprised",
					"name": "Surprise",
					"desc": "[DamageTakenPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageTakenPercent",
							"value": 10
						}
					],
					"props": {
						"cancelOn": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 14,
						"y": 4
					},
					"iconeDone": true
				},
				{
					"id": "Bloodshed",
					"name": "Effusion de sang",
					"desc": "Perd [VALUE] de [Health] par application à la fin de son tour puis est retiré.\nCumulable.",
					"attributes": [],
					"props": {
						"stackable": true,
						"value": 1,
						"cancelOn": 1,
						"important": true
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 13,
						"y": 4
					},
					"namePlural": "Effusions de sang",
					"iconeDone": true
				},
				{
					"id": "AnimalMarked",
					"name": "Marquage",
					"desc": "Chaque fois que cette unité est attaquée par un animal, l'animal attaquant augmente ses dégâts.",
					"attributes": [],
					"props": {
						"skill": "AnimalMarked"
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "FearPlague",
					"name": "Peur des pestiférés",
					"desc": "[DamageBonusPercent] réduits de [ATTR_0]% pour chaque pestiféré au combat.\nCumulable.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": -10
						}
					],
					"props": {
						"stackable": true
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 5,
						"y": 5
					},
					"notes": "",
					"iconeDone": true
				},
				{
					"id": "Disarm",
					"name": "Désarmement",
					"desc": "Ne peut plus utiliser de compétence nécessitant l'usage de son arme.\nNe fonctionne pas sur les champions.",
					"attributes": [],
					"props": {
						"cancelOn": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Mud",
					"name": "Boue",
					"desc": "[Movement] requis doublé",
					"attributes": [],
					"props": {
						"value": 50
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "NarsesMark",
					"name": "Marque de Narsès",
					"desc": "Quand ce statut est consommé, l'attaquant effectue une attaque d'opportunité.",
					"attributes": [],
					"props": {},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "HorounMark",
					"name": "Marque de Horoun",
					"desc": "Quand ce statut est consommé, l'attaquant génère <apt>[VALUE]</apt> Points de Bravoure.",
					"attributes": [],
					"props": {
						"value": 2
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Noisy",
					"name": "Bruyant",
					"desc": "Zone d'agression des ennemis dans le monde augmentée.",
					"attributes": [],
					"props": {
						"value": 5,
						"cancelOn": 7
					},
					"group": 5,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Mistrustful",
					"name": "Méfiant",
					"desc": "Réduit de [VALUE] la Relation de cette unité envers tout compagnon qui blesse un autre compagnon.",
					"attributes": [],
					"props": {
						"value": 3,
						"cancelOn": 7
					},
					"group": 5,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Exhausted",
					"name": "Épuisé",
					"desc": "Après un Repos, la troupe régénère [VALUE]% de Fatigue en moins.",
					"attributes": [],
					"props": {
						"value": 10,
						"cancelOn": 7,
						"cancelCount": 3
					},
					"group": 5,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Sulky",
					"name": "Boudeur",
					"desc": "Après un Repos, la quantité de points de Bravoure gagnée par la troupe est diminuée de [VALUE].",
					"attributes": [],
					"props": {
						"value": 2,
						"cancelCount": 3,
						"cancelOn": 7
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Fearless",
					"name": "Imprudent",
					"desc": "Le Soupçon généré augmente fortement.",
					"attributes": [],
					"props": {
						"value": 20,
						"cancelOn": 7,
						"cancelCount": 3
					},
					"group": 5,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Nightmare",
					"name": "Cauchemar",
					"desc": "Après un Repos, la quantité de Bonheur gagnée par la troupe est diminuée de [VALUE].",
					"attributes": [],
					"props": {
						"value": 5,
						"cancelOn": 7,
						"cancelCount": 3
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 13,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "Ratmare",
					"name": "Phobie des rats",
					"desc": "Cette unité quittera la troupe si elle combat dans une tanière de rats.",
					"attributes": [],
					"props": {
						"value": 10,
						"cancelOn": 7,
						"cancelCount": 2
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 14,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "LatentTerror",
					"name": "Terreur latente",
					"desc": "Cette unité peut fuir un combat sans raison.\n\nStatut retiré si fuit.",
					"attributes": [],
					"props": {
						"skill": "LatentTerror",
						"persistent": true
					},
					"group": 5,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "SlowReflexes",
					"name": "Réflexes lents",
					"desc": "Les dégâts des <b>attaques d'opportunité</b> de cette unité sont réduits de moitié.",
					"attributes": [],
					"props": {
						"hideNotif": true,
						"value": -50
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 18,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "NoReflexes",
					"name": "Amorphe",
					"desc": "La prochaine attaque d'opportunité de cette unité n'inflige pas de dégâts.",
					"attributes": [],
					"props": {},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 6
					},
					"namePlural": "",
					"iconeDone": true
				},
				{
					"id": "KogoTarget",
					"name": "Cible de Kogo",
					"desc": "Dégâts subis de la part de Kogo augmentés de [VALUE]%.\nDégâts infligés à Toro augmentés de [VALUE]%.\nCumulable.",
					"attributes": [],
					"props": {
						"value": 5,
						"stackable": true
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "ToroTarget",
					"name": "Cible de Toro",
					"desc": "Dégâts subis de la part de Toro augmentés de [VALUE]%.\nDégâts infligés à Kogo augmentés de [VALUE]%.\nCumulable.",
					"attributes": [],
					"props": {
						"value": 5,
						"stackable": true
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 7
					},
					"iconeDone": true
				},
				{
					"id": "BodyParalysis",
					"name": "Paralysie physique",
					"desc": "Lorsque cette unité reçoit un malus, elle le génère en double.",
					"attributes": [],
					"props": {
						"cancelOn": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 7
					},
					"notes": "WAITING",
					"iconeDone": true
				},
				{
					"id": "Confus",
					"name": "Confus",
					"desc": "Cette unité ne peut pas recevoir de bonus.\nNe fonctionne pas sur les champions.",
					"attributes": [],
					"props": {
						"cancelOn": 1
					},
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 16,
						"y": 2
					},
					"notes": "",
					"iconeDone": true
				},
				{
					"id": "Corrosion",
					"name": "Corrosion",
					"desc": "Perd [VALUE]% de son [Armor] maximum à la fin de son tour.",
					"attributes": [],
					"props": {
						"value": 15,
						"stackable": true,
						"skill": "Corrosion"
					},
					"iconeDone": true,
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 14,
						"y": 7
					}
				},
				{
					"id": "Condemn",
					"name": "Condamnation",
					"desc": "Quand cette unité est tuée, elle confère <apt>[VALUE]</apt> Points de Bravoure.",
					"attributes": [],
					"props": {
						"value": 5,
						"skill": "Condemn",
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 8
					}
				},
				{
					"id": "Immobile",
					"name": "Immobile",
					"desc": " L’unité ne peut pas se déplacer.",
					"attributes": [
						{
							"kind": "Movement",
							"value": -1000,
							"isPercentage": true
						}
					],
					"props": {
						"cancelOn": 1,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 8
					}
				},
				{
					"id": "Chased",
					"name": "Poursuivi",
					"desc": "Cette unité devient la cible prioritaire des animaux et augmente les [DamageTakenPercent] par leurs attaques de [VALUE]%.",
					"attributes": [],
					"props": {
						"value": 30,
						"cancelOn": 1,
						"feature": "Alazar1_Update",
						"skill": "Chased"
					},
					"iconeDone": true,
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 9
					},
					"notes": ""
				},
				{
					"id": "CelestiumLightning",
					"name": "Châtié",
					"desc": "",
					"attributes": [],
					"props": {
						"skill": "CelestiumLightningStatus",
						"cancelOn": 1,
						"value": 10,
						"descSkill": "CelestiumLightningStatusZone",
						"impactFx": "prefabs/fx/fight/hits & impacts/impactElectrical.fx",
						"playFxOnSelect": true
					},
					"iconeDone": true,
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 8
					},
					"namePlural": ""
				},
				{
					"id": "Frightened",
					"name": "Apeuré",
					"desc": "Cette unité fait perdre [VALUE]% de moral en plus en mourant.",
					"attributes": [],
					"props": {
						"value": 10,
						"feature": "Alazar1_Update"
					},
					"iconeDone": true,
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 9
					},
					"notes": ""
				},
				{
					"id": "BeeArea",
					"name": "Essaim d'abeille",
					"desc": "Une zone d'abeilles qui inflige des dégâts à toutes les unités qui traversent la zone.",
					"attributes": [],
					"props": {},
					"iconeDone": false,
					"group": 5,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 2
					}
				},
				{
					"id": "AIBehaviourDefault",
					"name": "Comportement : Attaquer",
					"desc": "À son tour, cette unité se déplacera et attaquera les unités à proximité.",
					"attributes": [],
					"props": {
						"important": true
					},
					"group": 6,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 6
					},
					"namePlural": "",
					"iconeDone": true
				},
				{
					"id": "AIBehaviourStop",
					"name": "Comportement : Défendre",
					"desc": "À son tour, cette unité restera à sa position et attaquera les unités à proximité.",
					"attributes": [],
					"props": {
						"important": true
					},
					"group": 6,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 6
					},
					"namePlural": "",
					"iconeDone": true
				},
				{
					"id": "AIBehaviourRunaway",
					"name": "Comportement : Fuir",
					"desc": "À son tour, cette unité cherchera à s'éloigner des unités ennemies et à rester à proximité des unités alliées.",
					"attributes": [],
					"props": {
						"important": true
					},
					"group": 6,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "Whiplash",
					"name": "Coup de fouet",
					"desc": "Si cette unité est fouettée de nouveau, elle perdra la vie.",
					"attributes": [],
					"props": {
						"injury": 1,
						"specialApply": true
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 17,
						"y": 5
					},
					"iconeDone": true
				},
				{
					"id": "LigamentRupture",
					"name": "Rupture des ligaments",
					"desc": "Cette unité se déplace de la moitié de sa capacité.",
					"attributes": [
						{
							"kind": "Movement",
							"value": -50,
							"isPercentage": true
						}
					],
					"props": {
						"injury": 1
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 4,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "HeadTrauma",
					"name": "Traumatisme crânien",
					"desc": "[Willpower] réduite de moitié.",
					"attributes": [
						{
							"kind": "Willpower",
							"value": -50,
							"isPercentage": true
						}
					],
					"props": {
						"injury": 1
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "Tear",
					"name": "Déchirure",
					"desc": "Cette unité ne peut plus infliger de coup critique.",
					"attributes": [],
					"props": {
						"skill": "Tear",
						"injury": 1
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 3,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "Contusion",
					"name": "Contusion",
					"desc": "[Constitution] réduite de moitié.",
					"attributes": [
						{
							"kind": "Constitution",
							"value": -50,
							"isPercentage": true
						}
					],
					"props": {
						"injury": 1
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 5,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "Fracture",
					"name": "Fracture",
					"desc": "[DamageBonusPercent] réduits de moitié.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": -50
						}
					],
					"props": {
						"injury": 1
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 0,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "Bruise",
					"name": "Ecchymose",
					"desc": "[DamageTakenPercent] doublés.",
					"attributes": [
						{
							"kind": "DamageTakenPercent",
							"value": 50
						}
					],
					"props": {
						"injury": 1
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 1,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "Sprain",
					"name": "Entorse",
					"desc": "Ne peut plus être choisi pour effectuer une activité.",
					"attributes": [],
					"props": {
						"injury": 1
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "Colic",
					"name": "Colique",
					"desc": "[Movement] réduit de [ATTR].",
					"attributes": [
						{
							"kind": "Movement",
							"value": -2
						}
					],
					"props": {
						"injury": 1,
						"specialApply": true
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 1
					},
					"notes": "Via délicat (trait)",
					"iconeDone": true
				},
				{
					"id": "Sting",
					"name": "Piqûre",
					"desc": "[Strength] et [Dexterity] réduites de [ATTR]%.",
					"attributes": [
						{
							"kind": "Strength",
							"value": -30,
							"isPercentage": true
						},
						{
							"kind": "Dexterity",
							"value": -30,
							"isPercentage": true
						}
					],
					"props": {
						"injury": 1,
						"specialApply": true
					},
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "StruckByTheEye",
					"name": "Frappé par l'Œil",
					"desc": "Cette unité a été touché par l'Œil. [MaxHealth] réduit de [ATTR]%.",
					"attributes": [
						{
							"kind": "MaxHealth",
							"value": -20,
							"isPercentage": true
						}
					],
					"props": {
						"injury": 1,
						"specialApply": true
					},
					"iconeDone": true,
					"group": 7,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 15,
						"y": 7
					}
				},
				{
					"id": "Arena_HealthDamaged",
					"name": "",
					"desc": "",
					"attributes": [
						{
							"kind": "Health",
							"value": -1
						}
					],
					"props": {
						"stackable": true
					},
					"group": 8,
					"notes": "Used in arena mode, to save health lost",
					"iconeDone": true
				},
				{
					"id": "Arena_Hit",
					"name": "",
					"desc": "",
					"attributes": [],
					"props": {},
					"iconeDone": true,
					"group": 8,
					"notes": "Unit has been hit"
				},
				{
					"id": "Arena_Dying",
					"name": "Hors-Combat",
					"desc": "Cette unité a été mise hors-combat.\nElle ne peut plus combattre lors de ce combat.",
					"attributes": [],
					"props": {},
					"group": 8,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 1
					},
					"iconeDone": true
				},
				{
					"id": "Arena_Willforce",
					"name": "Force de volonté",
					"desc": "[DamageReducePercent] réduits de [ATTR_0]%.\nL'unité ne peut pas être [Arena_Dying].",
					"attributes": [
						{
							"kind": "DamageReducePercent",
							"value": 100
						}
					],
					"props": {},
					"iconeDone": true,
					"group": 8,
					"namePlural": "",
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 7
					}
				},
				{
					"id": "Arena_DemandTarget",
					"name": "Exigence",
					"desc": "Cette unité est une condition de l'exigence du public.",
					"attributes": [],
					"props": {
						"important": true
					},
					"group": 8,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "Arena_DemandAlreadyContribute",
					"name": "Exigence",
					"desc": "Cette unité a déjà contribué à l'exigence du public.",
					"attributes": [],
					"props": {},
					"group": 8,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "Pyrophobia",
					"name": "Pyrophobie",
					"desc": "[DamageTakenPercent] de feu augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageTypeBonus",
							"value": 50
						}
					],
					"props": {
						"damageType": [
							0
						],
						"hideNotif": true
					},
					"group": 9,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "PlaguedRatEnraged",
					"name": "Rage",
					"desc": "[DamageBonusPercent] augmentés de [ATTR_0]%.",
					"attributes": [
						{
							"kind": "DamageBonusPercent",
							"value": 30
						}
					],
					"props": {
						"flags": 0
					},
					"group": 9,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 2
					},
					"iconeDone": true
				},
				{
					"id": "PoisonHeal",
					"name": "",
					"desc": "",
					"attributes": [
						{
							"kind": "DamageTypeBonus",
							"value": -200
						}
					],
					"props": {
						"damageType": [
							1
						]
					},
					"group": 9,
					"notes": "poison heals instead of damage",
					"iconeDone": true
				},
				{
					"id": "FleeWithBackpack",
					"name": "Fuyard",
					"desc": "Cette unité transporte des objets et essaye de fuir le combat.",
					"attributes": [],
					"props": {
						"important": true
					},
					"group": 10,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 6
					},
					"iconeDone": true
				},
				{
					"id": "FleeWithoutBackpack",
					"name": "Fuyard",
					"desc": "Cette unité n'est pas un combattant mais veut quand même survivre à ce combat. La fuite est la meilleure des stratégies dans ce cas-là.",
					"attributes": [],
					"props": {
						"important": true
					},
					"iconeDone": true,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 6
					},
					"group": 10
				},
				{
					"id": "BallCarrier",
					"name": "Porteur de Ballon",
					"desc": "",
					"attributes": [],
					"props": {},
					"group": 11,
					"notes": "Porteur de balle (sport mode)",
					"iconeDone": true,
					"namePlural": ""
				},
				{
					"id": "NoWeapon",
					"name": "",
					"desc": "",
					"attributes": [],
					"props": {},
					"group": 11,
					"notes": "(sport mode)",
					"iconeDone": true
				},
				{
					"id": "NoArmor",
					"name": "",
					"desc": "",
					"attributes": [],
					"props": {},
					"group": 11,
					"notes": "(sport mode)",
					"iconeDone": true
				},
				{
					"id": "SportDown",
					"name": "À Terre",
					"desc": "",
					"attributes": [],
					"props": {},
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 2,
						"y": 0
					},
					"notes": "(sport mode)",
					"iconeDone": true
				},
				{
					"id": "SportStrengthUnit",
					"name": "Force",
					"desc": "Cette unité privilégie la Force",
					"attributes": [],
					"props": {
						"hideNotif": true
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 10,
						"y": 7
					},
					"notes": "(sport mode)"
				},
				{
					"id": "SportDexterityUnit",
					"name": "Dextérité",
					"desc": "Cette unité privilégie la Dextérité",
					"attributes": [],
					"props": {
						"hideNotif": true
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 7
					},
					"notes": "(sport mode)"
				},
				{
					"id": "SportLocalTeam",
					"name": "Joue à Domicile",
					"desc": "+[VALUE]% à tous les tirages de compétences",
					"attributes": [],
					"props": {
						"value": 5,
						"hideNotif": true
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 12,
						"y": 7
					}
				},
				{
					"id": "SportGuard",
					"name": "Défendre la position",
					"desc": "Cette unité a +[VALUE]% de chances de réussir un tacle ou d'encaisser une avoine.",
					"attributes": [],
					"props": {
						"value": 20,
						"cancelOn": 2
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 9,
						"y": 9
					}
				},
				{
					"id": "SportRole_Captain",
					"name": "Capitaine d'équipe",
					"desc": "Le Capitaine engage la partie.\n[Movement] augmenté de [ATTR].\n+[VALUE]% de chances de réussir une avoine.",
					"attributes": [
						{
							"kind": "Movement",
							"value": 2
						}
					],
					"props": {
						"value": 10
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 6,
						"y": 9
					}
				},
				{
					"id": "SportRole_Offensive",
					"name": "Attaquant",
					"desc": "[Movement] augmenté de [ATTR].",
					"attributes": [
						{
							"kind": "Movement",
							"value": 2
						}
					],
					"props": {},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 8,
						"y": 9
					}
				},
				{
					"id": "SportRole_Defensive",
					"name": "Défenseur",
					"desc": "+[VALUE]% de chances de réussir une avoine.",
					"attributes": [],
					"props": {
						"value": 10
					},
					"iconeDone": true,
					"group": 11,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 7,
						"y": 9
					}
				},
				{
					"id": "DeadlyPoisoned",
					"name": "",
					"desc": "",
					"attributes": [],
					"props": {},
					"group": 12,
					"notes": "unit will die at next rest (Hate confession)",
					"iconeDone": true
				},
				{
					"id": "WillpowerDying",
					"name": "",
					"desc": "",
					"attributes": [],
					"props": {},
					"group": 12,
					"iconeDone": true
				},
				{
					"id": "Repositioning",
					"name": "Se repositionne",
					"desc": "Cette unité se repositionne, elle ne peut plus utiliser de compétences et d'action de base jusqu'à la fin de son tour.",
					"attributes": [],
					"props": {
						"cancelOn": 1
					},
					"iconeDone": true,
					"group": 12,
					"icon": {
						"file": "ui/Icons/statusIcons.png",
						"size": 32,
						"x": 11,
						"y": 7
					}
				},
				{
					"id": "ForceTerrorize",
					"name": "",
					"desc": "",
					"attributes": [],
					"props": {},
					"iconeDone": true,
					"group": 12
				}
			],
			"props": {
				"hasGroup": true,
				"displayIcon": "icon"
			},
			"separators": [
				{
					"title": "Tooltips",
					"id": "CriticalHit"
				},
				{
					"title": "Perks",
					"id": "Leader"
				},
				{
					"title": "Gestion",
					"id": "Tired"
				},
				{
					"title": "Bonus",
					"id": "Galvanization"
				},
				{
					"title": "Malus",
					"id": "Weakening"
				},
				{
					"title": "AIBehaviour",
					"id": "AIBehaviourDefault"
				},
				{
					"title": "Injuries",
					"id": "Whiplash"
				},
				{
					"title": "Arena",
					"id": "Arena_HealthDamaged"
				},
				{
					"title": "RatInvasion",
					"id": "Pyrophobia"
				},
				{
					"title": "Escape",
					"id": "FleeWithBackpack"
				},
				{
					"title": "Sport",
					"id": "BallCarrier"
				},
				{
					"title": "Misc",
					"id": "DeadlyPoisoned"
				}
			]
		},
		{
			"name": "status@attributes",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:attribute",
					"name": "kind"
				},
				{
					"typeStr": "3",
					"name": "value"
				},
				{
					"typeStr": "3",
					"name": "valueEasy",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "valueHard",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isPercentage",
					"opt": true
				}
			]
		},
		{
			"name": "attribute",
			"columns": [
				{
					"typeStr": "0",
					"name": "id"
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "desc",
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "descAnimal",
					"kind": "localizable"
				},
				{
					"typeStr": "3",
					"name": "defaultValue"
				},
				{
					"typeStr": "2",
					"name": "isPercent",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "isBonus",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "canUp",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "increment",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "hasEnemyBonus",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "noScaling",
					"opt": true,
					"kind": null
				}
			],
			"lines": [
				{
					"id": "Strength",
					"defaultValue": 8,
					"name": "Force",
					"canUp": true,
					"desc": "Augmente les dégâts des compétences basées sur la [Strength] et les [CritHitDamageBonusPercent].",
					"hasEnemyBonus": true,
					"descAnimal": ""
				},
				{
					"id": "Dexterity",
					"defaultValue": 8,
					"name": "Dextérité",
					"canUp": true,
					"desc": "Augmente les dégâts des compétences basées sur la [Dexterity] et le [CritHitPercent].",
					"hasEnemyBonus": true,
					"descAnimal": ""
				},
				{
					"id": "Constitution",
					"defaultValue": 3,
					"name": "Constitution",
					"canUp": true,
					"desc": "Détermine le montant de [Health] de l'unité et augmente le [Transport].",
					"hasEnemyBonus": true,
					"descAnimal": "Détermine le montant de [Health] de l'unité."
				},
				{
					"id": "Willpower",
					"defaultValue": 10,
					"name": "Volonté",
					"desc": "Permet de renforcer le Moral de la troupe pendant les combats. Augmente également le [CritHitPercent].",
					"canUp": true,
					"noScaling": true,
					"descAnimal": ""
				},
				{
					"id": "CritHitPercent",
					"defaultValue": 0,
					"name": "Critique",
					"isPercent": true,
					"desc": "Détermine le % de chances qu'une attaque soit critique et inflige des dégâts supplémentaires.",
					"canUp": true,
					"noScaling": true,
					"descAnimal": ""
				},
				{
					"id": "Movement",
					"defaultValue": 10,
					"name": "Mouvement",
					"canUp": true,
					"desc": "Permet à l'unité de se déplacer en combat.",
					"noScaling": true,
					"descAnimal": ""
				},
				{
					"id": "Transport",
					"name": "Transport",
					"desc": "Permet de transporter plus de poids dans l'Inventaire.",
					"defaultValue": 3,
					"descAnimal": ""
				},
				{
					"id": "Health",
					"defaultValue": 0,
					"name": "Santé",
					"desc": "La [Health] représente les points de vie et se régénère après chaque combat. Subir trop de dégâts provoque des blessures.",
					"descAnimal": ""
				},
				{
					"id": "MaxHealth",
					"name": "Santé",
					"desc": "La [Health] représente les points de vie et se régénère après chaque combat. Subir trop de dégâts provoque des blessures.",
					"defaultValue": 0,
					"descAnimal": ""
				},
				{
					"id": "Armor",
					"defaultValue": 0,
					"name": "Armure",
					"desc": "L'[Armor] protège la [Health], maintient la [Guard] et doit être réparée après chaque combat.",
					"descAnimal": ""
				},
				{
					"id": "Guard",
					"defaultValue": 0,
					"name": "Garde",
					"desc": "La [Guard] réduit les dégâts des attaques subies tant que cette unité a de l'[Armor]. Les attaques dans le dos ignorent 50% de cette réduction.",
					"noScaling": true,
					"descAnimal": ""
				},
				{
					"id": "DamageBonusPercent",
					"defaultValue": 0,
					"name": "Dégâts",
					"isPercent": true,
					"desc": "",
					"isBonus": true,
					"descAnimal": ""
				},
				{
					"id": "CritHitDamageBonusPercent",
					"name": "Dégâts Critique",
					"desc": "",
					"defaultValue": 25,
					"isPercent": true,
					"noScaling": true,
					"descAnimal": ""
				},
				{
					"id": "DistanceBonus",
					"name": "Portée",
					"desc": "",
					"defaultValue": 0,
					"descAnimal": "",
					"noScaling": true
				},
				{
					"id": "PrecisionBonus",
					"name": "Précision",
					"desc": "",
					"defaultValue": 0,
					"isPercent": true,
					"descAnimal": ""
				},
				{
					"id": "DamageReducePercent",
					"name": "Dégâts subis",
					"desc": "",
					"defaultValue": 0,
					"isPercent": true,
					"descAnimal": ""
				},
				{
					"id": "DamageTakenPercent",
					"name": "Dégâts subis",
					"desc": "",
					"defaultValue": 0,
					"isPercent": true,
					"descAnimal": ""
				},
				{
					"id": "DamageTypeBonus",
					"name": "Dégâts élémentaires subis ",
					"desc": "",
					"defaultValue": 0,
					"isPercent": true,
					"descAnimal": ""
				},
				{
					"id": "DamageBonusOppAttack",
					"name": "Dégâts des attaques d'opportunité",
					"desc": "",
					"defaultValue": 0,
					"isPercent": true,
					"descAnimal": "",
					"noScaling": true
				},
				{
					"id": "IgnoreGuard",
					"name": "Ignore la garde",
					"desc": "",
					"defaultValue": 0,
					"isPercent": true,
					"descAnimal": ""
				},
				{
					"id": "VisionRange",
					"name": "Vision",
					"desc": "",
					"defaultValue": 0,
					"descAnimal": ""
				},
				{
					"id": "TerrorResistance",
					"name": "Résistance à la terreur",
					"desc": "",
					"defaultValue": 0,
					"descAnimal": ""
				},
				{
					"id": "Morale",
					"name": "Moral",
					"desc": "",
					"defaultValue": 0,
					"descAnimal": ""
				}
			],
			"props": {},
			"separators": [
				{
					"id": "Health"
				},
				{
					"id": "DistanceBonus"
				}
			]
		},
		{
			"name": "bonus",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"kind": null,
					"scope": null
				},
				{
					"typeStr": "1",
					"name": "desc",
					"kind": "localizable"
				},
				{
					"typeStr": "17",
					"name": "props",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "done",
					"editor": {
						"categories": [
							"todoInfo"
						]
					}
				}
			],
			"lines": [
				{
					"id": "AA_DefaultBonus",
					"desc": "<WARNING> Ce bonus doit etre remplacé </WARNING>",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "Tiredness",
					"desc": "Réduit de [VALUE]% la vitesse à laquelle la fatigue de la Troupe s'accumule.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "Dexterity",
					"desc": "[Dexterity] augmentée de [VALUE]%.",
					"props": {
						"attribute": "Dexterity",
						"isPercent": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Strength",
					"desc": "[Strength] augmentée de [VALUE]%.",
					"props": {
						"attribute": "Strength",
						"isPercent": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Constitution",
					"desc": "[Constitution] augmentée de [VALUE]%.",
					"props": {
						"attribute": "Constitution",
						"isPercent": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Critical",
					"desc": "[CritHitPercent] augmenté de [VALUE]%.",
					"props": {
						"attribute": "CritHitPercent",
						"isPercent": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "CritDmg",
					"desc": "[CritHitDamageBonusPercent] augmentés de [VALUE]%.",
					"props": {
						"attribute": "CritHitDamageBonusPercent"
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Willpower",
					"desc": "[Willpower] augmentée de [VALUE].",
					"props": {
						"attribute": "Willpower"
					},
					"group": 0,
					"done": true
				},
				{
					"id": "WillpowerReduced",
					"desc": "[Willpower] réduit de [VALUE].",
					"props": {
						"attribute": "Willpower",
						"isMalus": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "Happy",
					"desc": "Augmente de <happy>[VALUE]</happy> le Bonheur de la Troupe.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "Movement",
					"desc": "[Movement] augmenté de [VALUE].",
					"props": {
						"attribute": "Movement"
					},
					"group": 0,
					"done": true
				},
				{
					"id": "WalkSpeed",
					"desc": "Vitesse de déplacement dans le monde augmentée de [VALUE]%.",
					"props": {
						"global": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "CanRun",
					"desc": "Maintenez [KEY_Sprint] pour courir.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "RunStamina",
					"desc": "Durée de la course augmentée de [VALUE]%.",
					"props": {
						"global": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "ActionPoint",
					"desc": "Maximum de Points de Bravoure augmenté de <ap>[VALUE]</ap>",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "UnitSalaryNeg",
					"desc": "Solde versée aux compagnons augmentée de <gold>[VALUE]</gold>",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "Cannibalism",
					"desc": "Vous pouvez désormais dévorer des cadavres humains.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "HumanTannery",
					"desc": "Vous pouvez désormais étendre des cadavres humains à l'Étendoir à peaux.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "PoisonMastery",
					"desc": "Augmente l'efficacité du Poison (+[VALUE]% de la vie de la cible par poison)",
					"props": {
						"fixedValue": 1
					},
					"group": 0,
					"done": true
				},
				{
					"id": "BleedingMastery",
					"desc": "Augmente l'efficacité des Saignements (+[VALUE]% de la vie de la cible)",
					"props": {
						"fixedValue": 5
					},
					"group": 0,
					"done": true
				},
				{
					"id": "BurningMastery",
					"desc": "Augmente l'efficacité des Brûlures (+[VALUE]% de la vie de la cible)",
					"props": {
						"fixedValue": 5
					},
					"group": 0,
					"done": true
				},
				{
					"id": "SpeedupRecruit",
					"desc": "Les nouvelles recrues obtiendront un Point d'Aptitude.",
					"props": {
						"fixedValue": 1
					},
					"group": 0,
					"done": true
				},
				{
					"id": "SearchedEarlier",
					"desc": "La jauge de Soupçon se vide [VALUE]% plus lentement.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "RawMaterialEfficacity",
					"desc": "Les matériaux de réparation et les forgerons de villages réparent [VALUE] points d'armure supplémentaires.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "RawMaterialOnRest",
					"desc": "Vous fabriquez <img src=\"item/RawMaterials\"/>[VALUE] Matériaux bruts à chaque repos.",
					"props": {
						"isRestProduction": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "KnowledgeExperienceBonus",
					"desc": "Gain d'expérience de Connaissance augmenté de [VALUE]%.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "KnowledgeExperienceMalus",
					"desc": "Gain d'expérience de Connaissance réduit de [VALUE]%.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "RestAttackChance",
					"desc": "Danger pendant le Repos augmenté de [VALUE]%.",
					"props": {
						"global": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "WillLeaveEarly",
					"desc": "Vos compagnons quitteront la troupe plus vite s'ils sont mécontents.",
					"props": {
						"fixedValue": 2
					},
					"group": 0,
					"done": true
				},
				{
					"id": "TransportUnitMalus",
					"desc": "[Transport] de chaque compagnon réduit de <img src=\"icon/Weight\"/>[VALUE].",
					"props": {
						"attribute": "Transport",
						"isMalus": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "RestForest",
					"desc": "Augmente de <happy>[VALUE]</happy> le Bonheur de la Troupe quand elle repose en forêt.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "CritHitMalus",
					"desc": "[CritHitPercent] réduit de [VALUE]%.",
					"props": {
						"isMalus": true,
						"attribute": "CritHitPercent"
					},
					"group": 0,
					"done": true
				},
				{
					"id": "HappinessMalus",
					"desc": "Réduit de <happy>[VALUE]</happy> le Bonheur de la Troupe à chaque repos.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "FoodReduction",
					"desc": "La troupe mange <food>[VALUE]</food> de moins.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "UnitSalaryReduction",
					"desc": "Solde versée aux compagnons réduite de [VALUE]%.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "TransportBonus",
					"desc": "[Transport] augmenté de <img src=\"icon/Weight\"/>[VALUE].",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "InfluenceGainFight",
					"desc": "Gain d'Influence après un combat augmenté de [VALUE]%.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "GoldGainFight",
					"desc": "Gain de Krowns après un combat augmenté de [VALUE]%.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "InfluenceGainFightSnow",
					"desc": "Gain d'Influence après un combat dans la neige augmenté de [VALUE]%.",
					"props": {},
					"done": true,
					"group": 0
				},
				{
					"id": "GoldGainFightSnow",
					"desc": "Gain de Krowns après un combat dans la neige augmenté de [VALUE]%.",
					"props": {},
					"done": true,
					"group": 0
				},
				{
					"id": "LootEquipDropProbaGainFight",
					"desc": "",
					"props": {
						"isPercent": true
					},
					"group": 0,
					"done": true
				},
				{
					"id": "MoreContractsBoard",
					"desc": "Augmente de [VALUE] le nombre de Contrats affichés au Tableau des primes.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "RoadSpeedBonus",
					"desc": "Vitesse de déplacement sur les routes augmentée de [VALUE]%.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "ForestSpeedBonus",
					"desc": "Vitesse de déplacement en forêt augmentée de [VALUE]%.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "SnowSpeedBonus",
					"desc": "Vitesse de déplacement dans la neige augmentée de [VALUE]%.",
					"props": {},
					"done": true,
					"group": 0
				},
				{
					"id": "RunSnowWanted",
					"desc": "Si la troupe est recherchée, la vitesse déplacement dans la neige est augmentée de [VALUE]%.",
					"props": {
						"similarAs": "SnowSpeedBonus",
						"globalCondition": {
							"wanted": true
						}
					},
					"done": true,
					"group": 0
				},
				{
					"id": "RunSpeed",
					"desc": "Vitesse de course augmentée de [VALUE]%.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "Influenceur",
					"desc": "Gains d'Influence augmentés de [VALUE]%.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "AnimalsDmg",
					"desc": "Dégâts contre les animaux augmentés de [VALUE]%.",
					"props": {
						"unitCondition": {
							"isPlayer": true
						}
					},
					"group": 0,
					"done": true
				},
				{
					"id": "GatherBonus",
					"desc": "Lorsque la troupe collecte une ressource dans le monde, elle a [VALUE]% de chances d'en récupérer une bonus.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "SurprisingFighter",
					"desc": "Si le champ de bataille est en intérieur, les ennemis commencent avec [Surprised].",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "HappyBonusesT1",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "ActionPoint",
								"value": 1
							},
							{
								"bonus": "ExperienceFightBonus",
								"value": 15
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "HappyBonusesT2",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "ActionPoint",
								"value": 1
							},
							{
								"bonus": "ExperienceFightBonus",
								"value": 20
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "HappyBonusesT3",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "ActionPoint",
								"value": 2
							},
							{
								"bonus": "ExperienceFightBonus",
								"value": 20
							}
						]
					},
					"group": 0,
					"done": true
				},
				{
					"id": "CanEquipArmor",
					"desc": "Cette unité peut désormais équiper des armures.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "NoDamageFromDots",
					"desc": "",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "CantDieFromDots",
					"desc": "",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "CanBeExecuted",
					"desc": "",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "StrategyTableUnlocked",
					"desc": "Vous pouvez fabriquer la <b>Table de Stratégie</b>.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "StrategyTableT2",
					"desc": "Débloque un nouveau set de stratégie. Vous pouvez avoir jusqu'à 2 stratégies actives en même temps.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "StrategyTableT3",
					"desc": "Débloque un nouveau set de stratégie. Vous pouvez avoir jusqu'à 3 stratégies actives en même temps.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "BannerUnlocked",
					"desc": "Vous pouvez fabriquer la <b>Bannière</b>.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "WhipDeath",
					"desc": "Lorsqu'une unité meurt par un coup de fouet, toutes les unités assignées produisent comme s'ils avaient été fouettées.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "CareerPlan",
					"desc": "Vous pouvez dépenser de l'Influence pour ajouter 1<img src=\"icon/UnitInfoLevelUp\" /> à un Attribut lors du passage au niveau supérieur.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "BattleStart_AP_Bonus",
					"desc": "",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "LightUsageBonus",
					"desc": "Les torches se consument moins vite.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "LightVisionBonus",
					"desc": "Les torches éclairent plus loin en combat.",
					"props": {
						"attribute": "VisionRange"
					},
					"group": 0,
					"done": true
				},
				{
					"id": "AnimalAggroDecayFactor",
					"desc": "Les animaux abandonnent plus vite la poursuite.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "AnimalAggroRangeFactor",
					"desc": "Les animaux ont une portée d'agression réduite.",
					"props": {},
					"group": 0,
					"done": true
				},
				{
					"id": "ToolCapacityIncreased",
					"desc": "Capacité améliorée : ::total:: (<good>+[VALUE]</good>)",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "ToolProductionIncreased",
					"desc": "Augmente de [VALUE] la production de tous les outils de camp actifs pendant les repos.",
					"props": {
						"fixedValue": 1
					},
					"done": true,
					"group": 1
				},
				{
					"id": "CareerPlan_CostBonus",
					"desc": "Le coût pour acheter des points d'attribut avec Plan de Carrière est réduit de [VALUE]%.",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "PerfectRecipe",
					"desc": "Les recettes donnant des bonus ont [VALUE]% de chance d'être délicieuses.",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "CookingPotMoreAssign",
					"desc": "Assigner un compagnon réduit la consomation de nourriture quotidienne de <food>[VALUE]</food>",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "FirecampFirstAssign",
					"desc": "Génère <happy><good>+[VALUE]</good></happy> supplémentaire à chaque Repos si au moins 1 compagnon est assigné.",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "FirecampUpgrade1",
					"desc": "Améliore les bonus liés au Bonheur.",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 1,
					"done": true
				},
				{
					"id": "FireCampUpgrade1_minHappiness",
					"desc": "Le seuil de bonheur pour qu'un compagnon quitte le groupe est de [VALUE].",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 1,
					"done": true
				},
				{
					"id": "FireCampUpgrade1_CombatXpHappinessMax",
					"desc": "Quand le bonheur est au maximum, le gain d'expérience au combat est augmenté de [VALUE]%.",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 1,
					"done": true
				},
				{
					"id": "FirecampUpgrade2",
					"desc": "Améliore grandement les bonus liés au Bonheur.",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 1,
					"done": true
				},
				{
					"id": "FirecampUpgrade2_MaxBravoure",
					"desc": "Quand le bonheur est supérieur à 7, le maximum de Bravoure est augmenté de <ap>[VALUE]</ap>.",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 1,
					"done": true
				},
				{
					"id": "FirecampUpgrade2_Influence",
					"desc": "Quand le bonheur est au maximum, chaque point de bonheur supplémentaire rapporte [VALUE] Influence.",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 1,
					"done": true
				},
				{
					"id": "FirecampCharcoalUpgrade",
					"desc": "Vous pouvez brûler du bois pour obtenir du charbon pendant un Repos.",
					"props": {},
					"done": true,
					"group": 1
				},
				{
					"id": "TentFirstAssign_Rest",
					"desc": "Génère <ap><good>+[VALUE]</good></ap> supplémentaire à chaque Repos si au moins 1 compagnon est assigné.",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "TentFirstAssign_Fight",
					"desc": "Gagne <ap><good>+[VALUE]</good></ap> au début de chaque combat si au moins 1 compagnon est assigné.",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "LecternDayDiscount",
					"desc": "L'étude des Antiquités dure [VALUE] jour(s) de moins. (minimum 2 jours)",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "LecternDiscoveryBonus",
					"desc": "Vous gagnez +[VALUE]% de connaissance à chaque repos.",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "StakeMoreInfluence",
					"desc": "Influence générée +[VALUE].",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "MeatDryer_AdditionalFishOil",
					"desc": "Sécher du poisson produit également de l'huile.",
					"props": {
						"items": [
							{
								"item": "FishOil",
								"count": 0
							}
						]
					},
					"group": 1,
					"done": true
				},
				{
					"id": "MeatDryer_AdditionalFat",
					"desc": "Sécher de la viande produit également de la graisse animale.",
					"props": {
						"items": [
							{
								"item": "Fat",
								"count": 0
							}
						]
					},
					"group": 1,
					"done": true
				},
				{
					"id": "SkinDryingRack_AdditionnalBlood",
					"desc": "Produit du sang infecté à partir de cuir pestiféré.",
					"props": {
						"items": [
							{
								"item": "InfectedBlood",
								"count": 0
							}
						]
					},
					"done": true,
					"group": 1
				},
				{
					"id": "SkinDryingRack_AdditionalSkin",
					"desc": "Produit [VALUE] cuir de plus.",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "SkinDryingRack_WhiteLeather",
					"desc": "Permet de produire du cuir blanc à partir des carcasses d'animaux spectraux.",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "Workshop_Dismantle_Common",
					"desc": "",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "Workshop_Dismantle_Common_T2",
					"desc": "Vous pouvez démanteler les armes, armures et accessoires peu précieux pour obtenir jusqu'à [VALUE] <img src=\"item/RawMaterials\"/> et des ressources.",
					"props": {
						"bonuses": [
							{
								"bonus": "Workshop_Dismantle_Common",
								"value": 1
							}
						]
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Workshop_Dismantle_Common_T3",
					"desc": "Vous pouvez démanteler toutes les armes, armures et accessoires pour obtenir jusqu'à [VALUE]  <img src=\"item/RawMaterials\"/> et des ressources.",
					"props": {
						"bonuses": [
							{
								"bonus": "Workshop_Dismantle_Common",
								"value": 1
							}
						]
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Workshop_Dismantle_Rare",
					"desc": "",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "Workshop_Dismantle_Rare_T2",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "Workshop_Dismantle_Rare",
								"value": 2
							}
						]
					},
					"group": 1,
					"done": true
				},
				{
					"id": "Workshop_Dismantle_Rare_T3",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "Workshop_Dismantle_Rare",
								"value": 2
							}
						]
					},
					"group": 1,
					"done": true
				},
				{
					"id": "TrainingDummyExperienceBonus",
					"desc": "Vos compagnons humains gagnent [VALUE]% d'expérience supplémentaire en combat.",
					"props": {
						"similarAs": "ExperienceFightBonus",
						"unitCondition": {
							"isAnimal": false
						}
					},
					"group": 1,
					"done": true
				},
				{
					"id": "TrainingDummyTrainingExperience",
					"desc": "Les compagnons assignés gagnent [VALUE]% d'expérience supplémentaire pendant le Repos.",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "PonyAugeTransport",
					"desc": "Les Poneys assignés au poteau d'attelage gagnent <good>[VALUE]</good> de transport.",
					"props": {
						"attribute": "Transport"
					},
					"group": 1,
					"done": true
				},
				{
					"id": "PonyAugeTransportTrait",
					"desc": "Les Poneys de trait assignés au poteau d'attelage gagnent <good>[VALUE]</good> de transport supplémentaire.",
					"props": {
						"attribute": "Transport",
						"unitCondition": {
							"skills": [
								{
									"skill": "DraughtHorse"
								},
								{
									"skill": "Adventurer"
								}
							]
						}
					},
					"group": 1,
					"done": true
				},
				{
					"id": "PonyAugeExperienceCombat",
					"desc": "Les Poneys de combat assignés au poteau d'attelage gagnent <good>[VALUE]%</good> d'expérience supplémentaire.",
					"props": {
						"similarAs": "ExperienceFightBonus",
						"unitCondition": {
							"skills": [
								{
									"skill": "WarHorse"
								}
							]
						}
					},
					"group": 1,
					"done": true
				},
				{
					"id": "StretcherDoped",
					"desc": "Une unité saine assignée à la civière gagne le statut [Doped].",
					"props": {},
					"group": 1,
					"done": true
				},
				{
					"id": "DefaultTroop",
					"desc": "",
					"props": {
						"pattern": "PlayerStart"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "STroopAdventurers",
					"desc": "Des amis apprentis à la recherche d'aventure",
					"props": {
						"items": [
							{
								"item": "Influence",
								"count": 30
							},
							{
								"item": "RawMaterials",
								"count": -5
							}
						],
						"pattern": "PlayerStartAdventurer"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "STroopMerchants",
					"desc": "Une escorte de marchands ayant perdu leur employeur",
					"props": {
						"items": [
							{
								"item": "Gold",
								"count": 150
							},
							{
								"item": "Remedy",
								"count": -2
							}
						],
						"pattern": "PlayerStartMerchant"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "STroopDeserters",
					"desc": "Des déserteurs fuyant les abus d'un capitaine",
					"props": {
						"items": [
							{
								"item": "RawMaterials",
								"count": 10
							},
							{
								"item": "StartWanted",
								"count": 50
							}
						],
						"pattern": "PlayerStartDeserter"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "STroopFarmers",
					"desc": "De jeunes fermiers à la recherche d'une vie meilleure",
					"props": {
						"items": [
							{
								"item": "Bread",
								"count": 10
							},
							{
								"item": "Happiness",
								"count": -2
							}
						],
						"pattern": "PlayerStartFarmer"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "STroopBandits",
					"desc": "Un groupe de bandits cherchant à échapper à la Garde",
					"props": {
						"items": [
							{
								"item": "BraisedChicken",
								"count": 2,
								"stolen": true
							},
							{
								"item": "Cloth",
								"count": 6,
								"stolen": true
							}
						],
						"pattern": "PlayerStartBandit"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SBonus1",
					"desc": "...sont habitués à de longues marches",
					"props": {
						"bonuses": [
							{
								"bonus": "Tiredness",
								"value": 10
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SBonus2",
					"desc": "...sont d'astucieux combattants",
					"props": {
						"bonuses": [
							{
								"bonus": "ExperienceFightBonus",
								"value": 10
							},
							{
								"bonus": "InfluenceGainFight",
								"value": 10
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SBonus3",
					"desc": "...ont une résistance à toute épreuve",
					"props": {
						"bonuses": [
							{
								"bonus": "Constitution",
								"value": 10
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SBonus4",
					"desc": "...excellent aux concours de gifles",
					"props": {
						"bonuses": [
							{
								"bonus": "CritDmg",
								"value": 10
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SBonus5",
					"desc": "...apprennent rapidement",
					"props": {
						"bonuses": [
							{
								"bonus": "ProfessionExperienceBonus",
								"value": 10
							}
						],
						"refBonus": "STroopAdventurers"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SBonus6",
					"desc": "...ont un don pour le larcin",
					"props": {
						"bonuses": [
							{
								"bonus": "SuspicionStealReduction",
								"value": 15
							}
						],
						"refBonus": "STroopBandits"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SBonus7",
					"desc": "...savent parler aux nouvelles recrues",
					"props": {
						"bonuses": [
							{
								"bonus": "CompanionsRecruitCostReduction",
								"value": 10
							}
						],
						"refBonus": "STroopDeserters"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SBonus8",
					"desc": "...apprécient le contact de la nature",
					"props": {
						"bonuses": [
							{
								"bonus": "RestForest",
								"value": 2
							}
						],
						"refBonus": "STroopFarmers"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SBonus9",
					"desc": "...pourraient vendre n'importe quoi à n'importe qui",
					"props": {
						"bonuses": [
							{
								"bonus": "ItemsPriceBonus",
								"value": 10
							}
						],
						"refBonus": "STroopMerchants"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SMalus1",
					"desc": "...un physique un peu faiblard",
					"props": {
						"bonuses": [
							{
								"bonus": "TransportUnitMalus",
								"value": 1
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SMalus2",
					"desc": "...une éternelle insatisfaction",
					"props": {
						"bonuses": [
							{
								"bonus": "HappinessMalus",
								"value": 1
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SMalus3",
					"desc": "...une malchance peu commune",
					"props": {
						"bonuses": [
							{
								"bonus": "CritHitMalus",
								"value": 3
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SMalus4",
					"desc": "...un sommeil un peu trop lourd",
					"props": {
						"bonuses": [
							{
								"bonus": "RestAttackChance",
								"value": 10
							}
						]
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SMalus5",
					"desc": "...un cruel manque de confiance en eux",
					"props": {
						"bonuses": [
							{
								"bonus": "WillpowerReduced",
								"value": 1
							}
						],
						"refBonus": "STroopAdventurers"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SMalus6",
					"desc": "...une avidité plus développée que la moyenne",
					"props": {
						"bonuses": [
							{
								"bonus": "UnitSalaryNeg",
								"value": 1
							}
						],
						"refBonus": "STroopMerchants"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SMalus7",
					"desc": "...un sens de la fidélité tout à fait relatif",
					"props": {
						"bonuses": [
							{
								"bonus": "WillLeaveEarly"
							}
						],
						"refBonus": "STroopDeserters"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SMalus8",
					"desc": "...une culture remarquablement limitée",
					"props": {
						"bonuses": [
							{
								"bonus": "KnowledgeExperienceMalus",
								"value": 5
							}
						],
						"refBonus": "STroopFarmers"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "SMalus9",
					"desc": "...une attitude qui n'inspire pas confiance",
					"props": {
						"bonuses": [
							{
								"bonus": "SearchedEarlier",
								"value": 5
							}
						],
						"refBonus": "STroopBandits"
					},
					"group": 2,
					"done": true
				},
				{
					"id": "ArenaUnitToEngage",
					"desc": "<b>[TARGET]</b> doit être engagé à la fin du Round.",
					"props": {
						"skill": "ArenaUnitToEngage",
						"rewardAP": 3
					},
					"group": 3,
					"done": true
				},
				{
					"id": "ArenaTwoCrits",
					"desc": "Réaliser un coup critique avec deux unités différentes : [PROGRESS] / [VALUE]",
					"props": {
						"skill": "ArenaTwoCrits",
						"rewardAP": 3,
						"arenaProps": 4,
						"fixedValue": 2
					},
					"group": 3,
					"done": false
				},
				{
					"id": "ArenaUnitToDamage",
					"desc": "<b>[TARGET]</b> doit subir des dégâts.",
					"props": {
						"skill": "ArenaUnitToDamage",
						"rewardAP": 2
					},
					"group": 3,
					"done": false
				},
				{
					"id": "ArenaUnitToKill",
					"desc": "<b>[TARGET]</b> doit mourir.",
					"props": {
						"skill": "ArenaUnitToKill",
						"rewardAP": 4,
						"arenaProps": 3
					},
					"group": 3,
					"done": false
				},
				{
					"id": "ArenaUnitNoDamage",
					"desc": "<b>[TARGET]</b> ne doit pas subir de dégâts.",
					"props": {
						"skill": "ArenaUnitNoDamage",
						"rewardAP": 3
					},
					"group": 3,
					"done": true
				},
				{
					"id": "ArenaAllyContact",
					"desc": "Chaque compagnon doit finir son tour au contact d'un allié.",
					"props": {
						"skill": "ArenaAllyContact",
						"rewardAP": 3,
						"arenaProps": 4
					},
					"done": true,
					"group": 3
				},
				{
					"id": "ArenaEnemyContact",
					"desc": "Chaque compagnon doit finir son tour au contact d'un ennemi.",
					"props": {
						"skill": "ArenaEnemyContact",
						"rewardAP": 3,
						"arenaProps": 1
					},
					"done": true,
					"group": 3
				},
				{
					"id": "ArenaEveryDamage",
					"desc": "Tous les ennemis doivent subir des dégâts.",
					"props": {
						"skill": "ArenaEveryDamage",
						"rewardAP": 3,
						"arenaProps": 10
					},
					"done": true,
					"group": 3
				},
				{
					"id": "ArenaNoMovement",
					"desc": "<b>[TARGET]</b> ne doit pas se déplacer.",
					"props": {
						"skill": "ArenaNoMovement",
						"rewardAP": 3
					},
					"done": true,
					"group": 3
				},
				{
					"id": "ArenaNoFocus",
					"desc": "Ne pas attaquer deux fois la même unité.",
					"props": {
						"skill": "ArenaNoFocus",
						"rewardAP": 3,
						"arenaProps": 10
					},
					"done": true,
					"group": 3
				},
				{
					"id": "ArenaEveryMovement",
					"desc": "Chaque compagnon doit se déplacer.",
					"props": {
						"skill": "ArenaEveryMovement",
						"rewardAP": 3
					},
					"done": true,
					"group": 3
				},
				{
					"id": "PathMight",
					"desc": "",
					"props": {
						"bonuses": [
							{},
							{},
							{},
							{},
							{
								"bonus": "PathMightLvl4"
							},
							{},
							{},
							{
								"bonus": "PathMightLvl7"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathMightLvl4",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "ResolutionMight"
							},
							{
								"bonus": "CanRespecialize"
							},
							{
								"bonus": "CanBuySkillMastery"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "ResolutionMight",
					"desc": "Nouvelle résolution disponible \"<item>ResolutionMoreLoot</item>\"",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 4,
					"done": true
				},
				{
					"id": "CanRespecialize",
					"desc": "Respécialisation débloquée.",
					"props": {
						"additionalText": "Vous pouvez respécialiser vos compagnons dans les centres d'entraînement."
					},
					"group": 4,
					"done": true
				},
				{
					"id": "CanBuySkillMastery",
					"desc": "Amélioration des compétences débloquée.",
					"props": {
						"hiddenInGlobalBonuses": true,
						"additionalText": "Les centres d'entraînement et les arènes proposent désormais des <b>Maîtrises de compétence</b>."
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathMightLvl7",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "MoraleMotivation"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "MoraleMotivation",
					"desc": "Motivation en combat débloquée.",
					"props": {
						"additionalText": "Vos compagnons deviennent motivés grâce à leur moral en combat."
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathTrade",
					"desc": "",
					"props": {
						"bonuses": [
							{},
							{},
							{},
							{},
							{
								"bonus": "PathTradeLvl4"
							},
							{},
							{},
							{
								"bonus": "PathTradeLvl7"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathTradeLvl4",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "ComptoirUnlock"
							},
							{
								"bonus": "ResolutionTrade"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "ComptoirUnlock",
					"desc": "Comptoir débloqué.",
					"props": {
						"additionalText": "Vous pouvez construire un Comptoir dans le village principal de chaque région. Il est possible de voyager instantanément entre deux Comptoirs."
					},
					"group": 4,
					"done": true
				},
				{
					"id": "ResolutionTrade",
					"desc": "Nouvelle résolution disponible \"<item>ResolutionSellPriceCraftedItems</item>\"",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathTradeLvl7",
					"desc": "",
					"props": {
						"items": [
							{
								"item": "BeltPathTradeCorrupt",
								"count": 1
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathCrime",
					"desc": "",
					"props": {
						"bonuses": [
							{},
							{},
							{},
							{},
							{
								"bonus": "PathCrimeLvl4"
							},
							{},
							{},
							{
								"bonus": "PathCrimeLvl7"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathCrimeLvl4",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "ResolutionCrime"
							},
							{
								"bonus": "BlackMarketUnlocked"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "ResolutionCrime",
					"desc": "Nouvelle résolution disponible \"<item>ResolutionNoWanted</item>\"",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 4,
					"done": true
				},
				{
					"id": "BlackMarketUnlocked",
					"desc": "Accès au Marché Noir et à ses représentants.",
					"props": {},
					"group": 4,
					"done": true
				},
				{
					"id": "PathCrimeLvl7",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "BackstabDmgWanted",
								"value": 5
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "BackstabDmgWanted",
					"desc": "Attaque dans le dos améliorée.",
					"props": {
						"additionalText": "Dégâts lors d'une attaque dans le dos augmentés de [VALUE]% par étoile de soupçon."
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathMystery",
					"desc": "",
					"props": {
						"bonuses": [
							{},
							{},
							{},
							{},
							{
								"bonus": "PathMysteryLvl4"
							},
							{},
							{},
							{
								"bonus": "PathMysteryLvl7"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathMysteryLvl4",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "ResolutionMystery"
							},
							{
								"bonus": "UnlockLectern"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "ResolutionMystery",
					"desc": "Nouvelle résolution disponible \"<item>ResolutionForcedMarch</item>\"",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 4,
					"done": true
				},
				{
					"id": "PathMysteryLvl7",
					"desc": "",
					"props": {
						"bonuses": [
							{
								"bonus": "SecondaryOil"
							},
							{
								"bonus": "RatBaitRecipe"
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "RatBaitRecipe",
					"desc": "Nouvelle recette d'alchimie : <item>RatBait</item>",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 4,
					"done": true
				},
				{
					"id": "SecondaryOil",
					"desc": "Possibilité d'appliquer une seconde huile aux armes.",
					"props": {},
					"group": 4,
					"done": true
				},
				{
					"id": "TraitMightUnlock",
					"desc": "Chaque semaine, le compagnon ayant infligé le plus de dégâts gagne le trait Belliqueux.",
					"props": {
						"additionalText": "Compagnon ayant infligé le plus de dégâts : <img src=\"icon/DamageAmount\"/>[VALUE]"
					},
					"group": 4,
					"done": true
				},
				{
					"id": "TraitTradeUnlock",
					"desc": "Chaque semaine, le compagnon ayant la plus grosse solde gagne le trait Négociant.",
					"props": {
						"additionalText": "Compagnon ayant la plus grosse solde : <gold>[VALUE]</gold>"
					},
					"group": 4,
					"done": true
				},
				{
					"id": "TraitCrimeUnlock",
					"desc": "Chaque semaine, le compagnon ayant tué le plus d'ennemis gagne le trait Incongru.",
					"props": {
						"additionalText": "Compagnon ayant tué le plus d'ennemis: <img src=\"icon/DamageKill\"/>[VALUE]"
					},
					"group": 4,
					"done": true
				},
				{
					"id": "TraitKnowledgeUnlock",
					"desc": "Chaque semaine, le compagnon ayant gagné le plus d'expérience de métier gagne le trait Instruit.",
					"props": {
						"additionalText": "Compagnon ayant gagné le plus d'expérience de métier : [VALUE]"
					},
					"group": 4,
					"done": true
				},
				{
					"id": "ContractsNegociation",
					"desc": "Possibilité de négocier les Contrats du Tableau de primes.",
					"props": {},
					"group": 4,
					"done": true
				},
				{
					"id": "ContractsQuantity",
					"desc": "Augmente de [VALUE] le nombre de Contrats que vous pouvez accepter au Tableau des primes.",
					"props": {},
					"group": 4,
					"done": true
				},
				{
					"id": "TradeHorses",
					"desc": "Chaque poney de trait gagne [Transport] +[VALUE]%",
					"props": {
						"unitCondition": {
							"skills": [
								{
									"skill": "DraughtHorse"
								}
							]
						},
						"attribute": "Transport",
						"isPercent": true
					},
					"group": 4,
					"done": true
				},
				{
					"id": "AssassinationMissionUnlocked",
					"desc": "Accès aux contrats d'Assassinat du Tableau des primes.",
					"props": {},
					"group": 4,
					"done": true
				},
				{
					"id": "RunForestWanted",
					"desc": "Si la troupe est recherchée, la vitesse déplacement en forêt est augmentée de [VALUE]%.",
					"props": {
						"similarAs": "ForestSpeedBonus",
						"globalCondition": {
							"wanted": true
						}
					},
					"group": 4,
					"done": true
				},
				{
					"id": "GuardInquisitionParley",
					"desc": "Contre de l'Influence, vous pouvez négocier avec la Garde.",
					"props": {},
					"group": 4,
					"done": true
				},
				{
					"id": "UnlockLectern",
					"desc": "Vous pouvez fabriquer le <b>Lutrin</b>.",
					"props": {
						"hiddenInGlobalBonuses": true
					},
					"group": 4,
					"done": true
				},
				{
					"id": "BetterTorch",
					"desc": "Les torches durent plus longtemps et éclairent plus loin en combat.",
					"props": {
						"bonuses": [
							{
								"bonus": "LightUsageBonus",
								"value": 1,
								"hidden": true
							},
							{
								"bonus": "LightVisionBonus",
								"value": 2,
								"hidden": true
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "AnimalAggro",
					"desc": "Les animaux ont une portée d'agression plus petite et abandonnent plus vite les poursuites.",
					"props": {
						"bonuses": [
							{
								"bonus": "AnimalAggroDecayFactor",
								"value": 30,
								"hidden": true
							},
							{
								"bonus": "AnimalAggroRangeFactor",
								"value": 30,
								"hidden": true
							}
						]
					},
					"group": 4,
					"done": true
				},
				{
					"id": "SuspicionStealReduction",
					"desc": "Soupçon réduit de [VALUE]% lors d'un vol.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "StolenItemsPriceBonus",
					"desc": "Prix de vente d'un objet volé à un receleur augmenté de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "SuspicionLowerFaster",
					"desc": "La jauge de Soupçon se vide [VALUE]% plus rapidement.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "InfluenceGainGuardFightBonus",
					"desc": "Gain d'Influence après un combat contre la Garde augmenté de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "InfluenceGainMerchantsFightBonus",
					"desc": "Gain d'Influence après un combat contre les Marchands augmenté de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "XpGainMerchantsFightBonus",
					"desc": "Gain d'expérience après un combat contre les Marchands augmenté de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "BackstabCritChances",
					"desc": "Chances de coup critique lors d'une attaque dans le dos augmentées de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "PrisonnersRecruitCostReduction",
					"desc": "Coût de recrutement des prisonniers réduit de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "KrownsUnitKilledOutlawsAllies",
					"desc": "Gain de [VALUE] Krowns supplémentaires pour chaque unité tuée en combattant aux côtés de Hors-la-loi.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "InfluenceGainAssassinationMission",
					"desc": "Réussir un contrat d'Assassinat génère également [VALUE] Influence.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "HumanKnockoutChance",
					"desc": "Chances d'assommer un ennemi augmentées de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "HorseCaptureChance",
					"desc": "Chances de capturer un poney augmentées de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "AnimalCaptureChance",
					"desc": "Chances de capturer un animal augmentées de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "InfluenceGainAmbushFight",
					"desc": "Gain d'Influence après un combat mené en embuscade augmenté de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "XpGainAmbushFight",
					"desc": "Gain d'expérience après un combat mené en embuscade augmenté de [VALUE]%.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "SurpriseAndAmbush",
					"desc": "Au commencement d'un combat, vos compagnons ont une chance de déclencher un bonus de surprise ou d'embuscade.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "GuardCulprit",
					"desc": "Lorsque vous devez livrer un compagnon à la Garde, il y a une chance qu'un membre de celle-ci qui soit désigné. La troupe ne perd alors qu'une étoile de soupçon.",
					"props": {},
					"group": 5,
					"done": true
				},
				{
					"id": "CompanionsRecruitCostReduction",
					"desc": "Coût de recrutement des compagnons réduit de [VALUE]%.",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "TrackersMerchantsPriceReduction",
					"desc": "Prix d'achat des objets de la Guilde des Traqueurs réduit de [VALUE]%.",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "ExperienceFightBonus",
					"desc": "Gain d'expérience au combat augmenté de [VALUE]%.",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "OpportunityAttackDamageBonus",
					"desc": "[DamageBonusOppAttack] augmentés de [VALUE]%.",
					"props": {
						"attribute": "DamageBonusOppAttack",
						"isPercent": true
					},
					"group": 6,
					"done": true
				},
				{
					"id": "InfluenceGainFreedPoiBonus",
					"desc": "Gain d'Influence après un combat pour libérer un lieu augmenté de [VALUE]%.",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "AdditionnalLayerSlot",
					"desc": "Les armures forgées ont [VALUE] emplacement de renfort d'armure supplémentaire (3 maximum)",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "CraftedWeaponsStatsBonus",
					"desc": "Statistiques des armes forgées augmentées de [VALUE]%.",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "CraftedArmorsStatsBonus",
					"desc": "Statistiques des armures forgées augmentées de [VALUE]%.",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "RemovedLayersUpgrade",
					"desc": "Les renforts d'armures retirés de leur emplacement ne sont plus détruits.",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "MoraleCombatBonus",
					"desc": "Chaque ennemi tué augmente le Moral de [VALUE] point supplémentaire.",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "LeftHandedForge",
					"desc": "Forger des armes main gauche demande -[VALUE] composant de chaque type (minimum 1).",
					"props": {},
					"group": 6,
					"done": true
				},
				{
					"id": "ContratsKrownsBonus",
					"desc": "Gain de Krowns des contrats augmentées de [VALUE]%.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "InfluenceGainTradeGoods",
					"desc": "Vendre des Marchandises plus chères que leur prix de référence génère également [VALUE] Influence.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "LuxuriesPriceBonus",
					"desc": "Prix de vente des Objets de luxe augmenté de [VALUE]%.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "InfluenceGainPrisonnersGiven",
					"desc": "Livrer des prisonniers rapporte également [VALUE] Influence.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "TradeGoodsPriceBonus",
					"desc": "Prix de vente des Marchandises augmenté de [VALUE]%.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "WeaponsPriceBonus",
					"desc": "Prix de vente des Armes augmenté de [VALUE]% par point de qualité.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "ArmorsPriceBonus",
					"desc": "Prix de vente des Armures augmenté de [VALUE]% par point de qualité.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "ItemsPriceBonus",
					"desc": "Prix de vente de tous les objets augmenté de [VALUE]%.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "TradeGoodsBuyPriceReduction",
					"desc": "Prix d'achat des Marchandises réduit de [VALUE]%.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "PathRoadSpeedBonus",
					"desc": "",
					"props": {
						"similarAs": "RoadSpeedBonus",
						"globalCondition": {
							"notWanted": true
						}
					},
					"group": 7,
					"done": true
				},
				{
					"id": "DoubleJobXP",
					"desc": "L'expérience de métier gagnée est doublée si la troupe compte un autre compagnon de même métier et de niveau supérieur.",
					"props": {},
					"group": 7,
					"done": true
				},
				{
					"id": "LegendaryWeaponUpdatePriceReduction",
					"desc": "Prix pour mettre à niveau une arme légendaire réduit de [VALUE]%.",
					"props": {},
					"group": 8,
					"done": true
				},
				{
					"id": "InfluenceGainRatNest",
					"desc": "Nettoyer un Nid de rat rapporte également [VALUE] Influence.",
					"props": {},
					"group": 8,
					"done": true
				},
				{
					"id": "MoreSamplesRats",
					"desc": "Gain d'Échantillon d'excroissance pestiférée augmenté de [VALUE] sur chaque excroissance d'un nid de rats.",
					"props": {},
					"group": 8,
					"done": true
				},
				{
					"id": "LessInjuries",
					"desc": "Les compagnons sont moins enclins à subir des Blessures au combat.",
					"props": {},
					"group": 8,
					"done": true
				},
				{
					"id": "ProfessionExperienceBonus",
					"desc": "Gain d'expérience de chaque métier augmenté de [VALUE]%.",
					"props": {
						"global": true
					},
					"group": 8,
					"done": true
				},
				{
					"id": "AntiquitiesPriceBonus",
					"desc": "Prix de vente des Antiquités étudiées augmenté de [VALUE]%.",
					"props": {},
					"group": 8,
					"done": true
				},
				{
					"id": "DoubleLecternKnowledge",
					"desc": "Double la quantité de connaissance gagnée au Lutrin.",
					"props": {},
					"done": false,
					"group": 8
				},
				{
					"id": "BonusCraftedItemPrice",
					"desc": "Le prix de vente des objets manufacturés est augmenté de [VALUE]%.",
					"props": {},
					"group": 9,
					"done": true
				},
				{
					"id": "MoreLoot",
					"desc": "La troupe gagne plus de butin après un combat.",
					"props": {
						"bonuses": [
							{
								"bonus": "GoldGainFight",
								"value": 20,
								"hidden": true
							},
							{
								"bonus": "LootEquipDropProbaGainFight",
								"value": 15,
								"hidden": true
							}
						]
					},
					"group": 9,
					"done": true
				},
				{
					"id": "NoWanted",
					"desc": "Votre troupe est considérée comme n'étant pas recherchée.\nSi un délit est perpétré, l'effet de ce bonus est annulé.",
					"props": {},
					"group": 9,
					"done": true
				},
				{
					"id": "MiningGemsChance",
					"desc": "Augmente les chances de trouver des pierres précieuses en minant.",
					"props": {
						"fixedValue": 5
					},
					"group": 10,
					"done": true
				},
				{
					"id": "MiningGemsQuality",
					"desc": "A une chance que les gemmes obtenues en minant soient de qualité.",
					"props": {
						"fixedValue": 5
					},
					"group": 10,
					"done": true
				},
				{
					"id": "MiningOresBonus",
					"desc": "A une chance d'augmenter le nombre de minerais récolté.",
					"props": {
						"fixedValue": 1
					},
					"group": 10,
					"done": true
				},
				{
					"id": "MiningSandstone",
					"desc": "A une chance de trouver du grès en minant.",
					"props": {
						"fixedValue": 30
					},
					"group": 10,
					"done": true
				},
				{
					"id": "MiningGreyMass",
					"desc": "A plus de chance de trouver de l'agglomérat gris en minant.",
					"props": {
						"fixedValue": 20
					},
					"group": 10,
					"done": true
				},
				{
					"id": "MiningGoldenMetal",
					"desc": "A plus de chance de trouver de l'Éthérite en minant.",
					"props": {
						"fixedValue": 15
					},
					"group": 10,
					"done": true
				},
				{
					"id": "ProfessionXp",
					"desc": "Gain d'expérience de métier augmenté de [VALUE]%.",
					"props": {},
					"group": 10,
					"done": true
				},
				{
					"id": "ProfessionKnowledge",
					"desc": "Gagne également [VALUE] Influence quand gagne de l'expérience de métier.",
					"props": {},
					"group": 10,
					"done": true
				},
				{
					"id": "ThiefStealReduction",
					"desc": "Réduit les gains de Soupçon lors d'un vol.",
					"props": {},
					"group": 10,
					"done": true
				},
				{
					"id": "ThiefLockpickDuration",
					"desc": "Augmente de [VALUE]% la durabilité des crochets.",
					"props": {},
					"group": 10,
					"done": true
				},
				{
					"id": "ThiefLockpickEasy",
					"desc": "Les serrures sont plus simples à crocheter.",
					"props": {
						"fixedValue": 5
					},
					"group": 10,
					"done": true
				},
				{
					"id": "ThiefStealNoStolen",
					"desc": "A une chance que l'objet volé ne soit pas considéré comme volé.",
					"props": {
						"fixedValue": 10
					},
					"group": 10,
					"done": true
				},
				{
					"id": "BlacksmithQuality",
					"desc": "A une chance de créer un objet de qualité supérieure.",
					"props": {
						"fixedValue": 10
					},
					"group": 10,
					"done": true
				},
				{
					"id": "BlacksmithResources",
					"desc": "A une chance de récupérer une partie des ressources utilisées en Forge.",
					"props": {
						"fixedValue": 5
					},
					"group": 10,
					"done": true
				},
				{
					"id": "AlchemyResources",
					"desc": "A une chance de récupérer une partie des ressources utilisées en Alchimie.",
					"props": {
						"fixedValue": 5
					},
					"group": 10,
					"done": true
				},
				{
					"id": "FishingNumber",
					"desc": "A une chance de pêcher un poisson supplémentaire lors d'un même lancer.",
					"props": {
						"fixedValue": 35
					},
					"group": 10,
					"done": true
				},
				{
					"id": "FishingBonus",
					"desc": "Augmente de [VALUE] le nombre de poissons dans les lieux de pêche.",
					"props": {
						"fixedValue": 1
					},
					"group": 10,
					"done": true
				},
				{
					"id": "CookingNoSalt",
					"desc": "Produit du sel à chaque repos si assigné à la Marmite.",
					"props": {
						"fixedValue": 2
					},
					"group": 10,
					"done": true
				},
				{
					"id": "CookingResources",
					"desc": "A une chance de récupérer une partie des ressources utilisées en Cuisine.",
					"props": {
						"fixedValue": 5
					},
					"group": 10,
					"done": true
				},
				{
					"id": "TinkererResources",
					"desc": "A une chance de récupérer une partie des ressources utilisées en Bricolage.",
					"props": {
						"fixedValue": 5
					},
					"group": 10,
					"done": true
				},
				{
					"id": "ScholarTime",
					"desc": "Réduit de [VALUE] le nombre de Repos nécessaires pour reconstituer une Antiquité.",
					"props": {
						"fixedValue": 1
					},
					"group": 10,
					"done": true
				},
				{
					"id": "ScholarKnowledgeRest",
					"desc": "Génère un peu d'expérience de Connaissance chaque Repos.",
					"props": {
						"fixedValue": 5
					},
					"group": 10,
					"done": true
				},
				{
					"id": "ProfessionExperienceBonusGlobal",
					"desc": "Gain d'expérience de métier de la troupe augmenté de [VALUE]%.",
					"props": {
						"global": true,
						"similarAs": "ProfessionExperienceBonus"
					},
					"done": true,
					"group": 10
				},
				{
					"id": "SleepingInjury",
					"desc": "Le porteur a [VALUE]% de chance de perdre une blessure en dormant.",
					"props": {
						"fixedValue": 20
					},
					"done": true,
					"group": 10
				},
				{
					"id": "RankedUnitInspiration",
					"desc": "Si cette unité utilise une capacité de Capitaine ou de Lieutenant, elle applique [Inspiration] aux alliés touchés pendant [VALUE] round.",
					"props": {
						"fixedValue": 1
					},
					"done": true,
					"group": 10
				},
				{
					"id": "TradeGoodBuyInfluence",
					"desc": "L’achat de Marchandises génère également un peu d’Influence.",
					"props": {
						"fixedValue": 5,
						"global": true
					},
					"done": true,
					"group": 10
				},
				{
					"id": "StrategyTableBonusesAcc",
					"desc": "Tant que cette unité est assignée à la Table de Stratégie, génère un peu d'expérience de combat, de métier et d'Influence après un Repos.",
					"props": {
						"custom": {
							"xp": 4,
							"xpPowLevel": 1.1,
							"xpJob": 10,
							"influence": 5
						}
					},
					"done": true,
					"group": 10
				},
				{
					"id": "AnimalStartInspiration",
					"desc": "Tous les animaux alliés commencent le combat avec [Inspiration] pendant [VALUE] round.",
					"props": {
						"fixedValue": 1,
						"global": true
					},
					"done": true,
					"group": 10
				},
				{
					"id": "RousteBall",
					"desc": "A [VALUE]% de chances supplémentaires de réussir une avoine par niveau de métier bûcheron.",
					"props": {
						"fixedValue": 5
					},
					"done": true,
					"group": 10
				},
				{
					"id": "MinerApprentice",
					"desc": "Peut découvrir des pierres précieuses en minant.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "MinerConfirme",
					"desc": "Augmente la quantité de ressources récoltées en minant.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "MinerCompanion",
					"desc": "Peut découvrir de l'agglomérat gris en minant.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "MinerMaster",
					"desc": "Peut découvrir de l'Ethérite en minant.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "BlacksmithApprentice",
					"desc": "Peut apprendre des plans et forger des objets de rang Apprenti.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "BlacksmithConfirme",
					"desc": "Peut apprendre des plans et forger des objets de rang Confirmé.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "BlacksmithCompanion",
					"desc": "Peut apprendre des plans et forger des objets de rang Compagnon.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "BlacksmithMaster",
					"desc": "Peut apprendre des plans et forger des objets de rang Maître.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "AlchimistApprentice",
					"desc": "Peut apprendre des recettes et concevoir des décoctions d'Apprenti.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "AlchimistConfirme",
					"desc": "Peut apprendre des recettes et concevoir des décoctions de Confirmé. Les recettes ont une chance de générer de la Poudre d'Alazar.",
					"props": {
						"fixedValue": 20
					},
					"group": 11,
					"done": true
				},
				{
					"id": "AlchimistCompanion",
					"desc": "Peut apprendre des recettes et concevoir des décoctions de Compagnon. Les recettes ont une chance de générer des Résidus alchimiques.",
					"props": {
						"fixedValue": 20
					},
					"group": 11,
					"done": true
				},
				{
					"id": "AlchimistMaster",
					"desc": "Peut apprendre des recettes et concevoir des décoctions de Maître.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "ThiefApprentice",
					"desc": "Réduit le montant de Soupçon gagné de toutes sources.",
					"props": {
						"fixedValue": 20
					},
					"group": 11,
					"done": true
				},
				{
					"id": "ThiefConfirme",
					"desc": "Ne se fait plus attraper quand se fait prendre en train de voler.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "ThiefCompanion",
					"desc": "A plus de chance de blanchir des objets dans le coffre.",
					"props": {
						"fixedValue": 25
					},
					"group": 11,
					"done": true
				},
				{
					"id": "ThiefMaster",
					"desc": "A des chances que voler ne fasse pas augmenter la jauge de Soupçon.",
					"props": {
						"fixedValue": 25
					},
					"group": 11,
					"done": true
				},
				{
					"id": "CookApprentice",
					"desc": "Peut apprendre des recettes et cuisiner des plats d'Apprenti.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "CookConfirme",
					"desc": "Peut apprendre des recettes et cuisiner des plats de Confirmé.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "CookCompanion",
					"desc": "Réduit de [VALUE]% la vitesse à laquelle la fatigue de la Troupe s'accumule après un repas complet.",
					"props": {
						"fixedValue": 5
					},
					"group": 11,
					"done": true
				},
				{
					"id": "CookMaster",
					"desc": "La troupe mange <food>[VALUE]</food> de moins.",
					"props": {
						"fixedValue": 2
					},
					"group": 11,
					"done": true
				},
				{
					"id": "TinkererApprentice",
					"desc": "Peut apprendre des plans, concevoir et améliorer du Matériel de camp d'Apprenti.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "TinkererConfirme",
					"desc": "Peut apprendre des plans, concevoir et améliorer du Matériel de camp de Confirmé.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "TinkererCompanion",
					"desc": "Peut apprendre des plans, concevoir et améliorer du Matériel de camp de Compagnon.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "TinkererMaster",
					"desc": "Les matériaux de réparation et les forgerons de villages réparent [VALUE] points d'armure supplémentaires.",
					"props": {
						"fixedValue": 2
					},
					"group": 11,
					"done": true
				},
				{
					"id": "FishermanApprentice",
					"desc": "Permet de fabriquer des hameçons solides.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "FishermanConfirme",
					"desc": "Lorsque vous pêchez, vous ramenez parfois un composant aléatoire en plus. ",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "FishermanCompanion",
					"desc": "Permet de fabriquer des hameçons experts.\nLorsque vous pêchez, vous ramenez souvent un composant aléatoire en plus.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "FishermanMaster",
					"desc": "Lorsque vous pêchez, vous ramenez systématiquement un composant aléatoire en plus. ",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "ScholarApprentice",
					"desc": "Résoudre un puzzle dans un Tombeau des Anciens confère <img src=\"item/Knowledge\"/>1.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "ScholarConfirme",
					"desc": "Reconstituer un Trésor légendaire confère <img src=\"item/Knowledge\"/>1.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "ScholarCompanion",
					"desc": "Réduit de 1 le nombre de Repos nécessaire pour reconstituer un Objet Précieux.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "ScholarMaster",
					"desc": "Réduit de 1 le nombre de Repos nécessaire pour reconstituer un Trésor des Anciens.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "BardApprentice",
					"desc": "Augmente les récompenses de chaque chanson.",
					"props": {
						"fixedValue": 20
					},
					"group": 11,
					"done": true
				},
				{
					"id": "BardConfirme",
					"desc": "Le public est prêt à donner des objets précieux.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "BardCompanion",
					"desc": "Le public est prêt à donner encore plus d'objets précieux.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "BardMaster",
					"desc": "Certaines notes sont dorées : les réussir rapporte plus de récompenses.",
					"props": {},
					"group": 11,
					"done": true
				},
				{
					"id": "WoodcutterApprentice",
					"desc": "Découvre parfois des composants en coupant du bois.",
					"props": {
						"fixedValue": 20
					},
					"done": true,
					"group": 11
				},
				{
					"id": "WoodcutterConfirme",
					"desc": "Récupère un peu de bois après un Repos dans une forêt.",
					"props": {
						"fixedValue": 50
					},
					"done": true,
					"group": 11
				},
				{
					"id": "WoodcutterCompanion",
					"desc": "+[VALUE] bois par coup de hache.",
					"props": {
						"fixedValue": 1
					},
					"done": true,
					"group": 11
				},
				{
					"id": "WoodcutterMaster",
					"desc": "Tous les bonus précédents sont améliorés.",
					"props": {
						"fixedValue": 2
					},
					"done": true,
					"group": 11
				}
			],
			"props": {
				"hasGroup": true
			},
			"separators": [
				{
					"title": "Global",
					"id": "AA_DefaultBonus"
				},
				{
					"title": "Tool",
					"id": "ToolCapacityIncreased"
				},
				{
					"title": "StartingChoices",
					"id": "DefaultTroop"
				},
				{
					"id": "SBonus1"
				},
				{
					"id": "SMalus1"
				},
				{
					"title": "Battle_Objective",
					"id": "ArenaUnitToEngage"
				},
				{
					"title": "Paths",
					"id": "PathMight"
				},
				{
					"level": 1,
					"id": "TraitMightUnlock"
				},
				{
					"title": "BonusTitles:Crime",
					"id": "SuspicionStealReduction"
				},
				{
					"title": "BonusTitles:Might",
					"id": "CompanionsRecruitCostReduction"
				},
				{
					"title": "BonusTitles:Trade",
					"id": "ContratsKrownsBonus"
				},
				{
					"title": "BonusTitles:Knowledge",
					"id": "LegendaryWeaponUpdatePriceReduction"
				},
				{
					"title": "BonusResolution",
					"id": "BonusCraftedItemPrice"
				},
				{
					"title": "Backpack Accessories",
					"id": "MiningGemsChance"
				},
				{
					"title": "Job Capacities",
					"id": "MinerApprentice"
				}
			]
		},
		{
			"name": "counter",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"kind": null,
					"scope": null
				},
				{
					"typeStr": "6:icon",
					"name": "path",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "pathXP",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "desc",
					"kind": "localizable"
				},
				{
					"typeStr": "17",
					"name": "props",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "done",
					"editor": {
						"categories": [
							"todoInfo"
						]
					}
				}
			],
			"lines": [
				{
					"id": "UnitRenamed",
					"name": "Compagnons renommés",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "SleepCount",
					"name": "Repos effectués",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "SleepCount_LastSalary",
					"name": "",
					"desc": "",
					"props": {},
					"done": true
				},
				{
					"id": "DaysWithoutCaptain",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "DaysWithCaptain",
					"name": "",
					"desc": "",
					"props": {},
					"done": true
				},
				{
					"id": "DaysWithLieutenant",
					"name": "",
					"desc": "",
					"props": {},
					"done": true
				},
				{
					"id": "ReceiveRankCoolDown",
					"name": "",
					"props": {},
					"done": true,
					"path": "UnitPath",
					"desc": ""
				},
				{
					"id": "DropsItemsSellValue",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "FoodSoldGold",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "FoodBoughtGold",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "TrinketSoldGold",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "ComponentSoldGold",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "CookedFoodAmount",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "GoldPaidSalaries",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "RestCount",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "SoldItemsGold",
					"name": "Krowns obtenus en vendant des objets",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "BoughtItemsGold",
					"name": "Krowns utilisés en vendant des objets",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "FightGold",
					"name": "Krowns obtenus en combat",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "DialogGainGold",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "DialogSpentGold",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "CompagnonCount",
					"name": "Nombre de compagnons",
					"props": {
						"achievements": [
							{
								"value": 10,
								"id": "fellowship"
							},
							{
								"value": 20,
								"id": "family"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "ScenarioFinished",
					"name": "Scénario de région terminé",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "scenario"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "CampMaterial",
					"name": "Matériels de camp possédés",
					"props": {
						"achievements": [
							{
								"value": 5,
								"id": "campmaterial"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "ForgeQuality3",
					"name": "Objets de qualité supérieure forgés",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "quality3"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "DeadCompanions",
					"name": "Compagnons Morts",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "death"
							}
						],
						"confessionElement": "ConfessionCompanionDeath",
						"confessionPriority": 2,
						"confessionNeedTarget": true
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "Retreats",
					"name": "Retraites stratégiques effectuées",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "retreat"
							}
						],
						"confessionElement": "ConfessionRetreat",
						"confessionPriority": 1
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "DaysInHard",
					"name": "Jours passés en mode Difficile",
					"props": {
						"achievements": [
							{
								"value": 100,
								"id": "survive"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "Multikill",
					"name": "Morts simultanés en combat",
					"props": {
						"achievements": [
							{
								"value": 3,
								"id": "multikill"
							}
						]
					},
					"desc": "",
					"done": false
				},
				{
					"id": "KrownsOwned",
					"name": "Krowns possédés",
					"props": {
						"achievements": [
							{
								"value": 5000,
								"id": "wealth"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "KrownsOwnedFast",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1000,
								"id": "for_money"
							}
						]
					},
					"desc": "",
					"done": false
				},
				{
					"id": "MosquitoCaptured",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "mosquito_captured"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "UnitKilledWithWhip",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "killed_by_whip"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "PrisonerEscapedThenCaptured",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "prisoner_escape_then_capture"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "TiltrenCompleted",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "TiltrenPOICompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "tiltren_poi_completed"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "TiltrenSettingCompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "tiltren_setting_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "TiltrenChampionKilled",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "tiltren_champion_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "S1RuinsDone",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "tiltren_ruins_done"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "T1ComptoirBuilt",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "comptoir_tiltren"
							}
						]
					},
					"done": true
				},
				{
					"id": "TiltrenHuntDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "hunt_tiltren"
							}
						]
					},
					"done": true
				},
				{
					"id": "ArthesCompleted",
					"name": "",
					"props": {},
					"desc": "",
					"done": true
				},
				{
					"id": "ArthesPOICompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "arthes_poi_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "ArthesSettingCompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "arthes_setting_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "ArthesChampionKilled",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "arthes_champion_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "E1RuinsDone",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "arthes_ruins_done"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "E1ArenaDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "arthes_arena_done"
							}
						]
					},
					"done": true
				},
				{
					"id": "T2ComptoirBuilt",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "comptoir_arthes"
							}
						]
					},
					"done": true
				},
				{
					"id": "ArthesHuntDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "hunt_arthes"
							}
						]
					},
					"done": true
				},
				{
					"id": "VertruseCompleted",
					"name": "",
					"props": {},
					"desc": "",
					"done": true
				},
				{
					"id": "VertrusePOICompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "vertruse_poi_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "VertruseSettingCompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "vertruse_setting_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "VertruseChampionKilled",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "vertruse_champion_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "G1RuinsDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "vertruse_ruins_done"
							}
						]
					},
					"done": true
				},
				{
					"id": "G1ArenaDone",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "vertruse_arena"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "T3ComptoirBuilt",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "comptoir_vertruse"
							}
						]
					},
					"done": true
				},
				{
					"id": "VertruseHuntDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "hunt_vertruse"
							}
						]
					},
					"done": true
				},
				{
					"id": "LudernCompleted",
					"name": "",
					"props": {},
					"desc": "",
					"done": true
				},
				{
					"id": "LudernPOICompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "ludern_poi_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "LudernSettingCompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "ludern_setting_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "LudernChampionKilled",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "ludern_champion_completed"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "H1RuinsDone",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "ludern_ruins_done"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "H1ArenaDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "ludern_arena_done"
							}
						]
					},
					"done": true
				},
				{
					"id": "T4ComptoirBuilt",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "comptoir_ludern"
							}
						]
					},
					"done": true
				},
				{
					"id": "LudernHuntDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "hunt_ludern"
							}
						]
					},
					"done": true
				},
				{
					"id": "LudernBeastDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "ludern_beast_done"
							}
						]
					},
					"done": true
				},
				{
					"id": "G2Treasures",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 19,
								"id": "grinmeer_treasures"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "G2RooksCode",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "grinmeer_rooks_code"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "G2AmbassyEnter",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "grinmeer_ambassy_enter"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "GrinmeerPOICompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "grinmeer_poi_completed"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "GrinmeerSettingCompleted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "grinmeer_setting_completed"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "GrinmeerChampionKilled",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "grinmeer_champion_completed"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "G2RuinsDone",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "gosenberg_ruins_done"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "G2BernnaArenaDone",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "grinmeer_bernna_arena"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "G2HoevendorpArenaDone",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "grinmeer_hoevendorp_arena"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "G2ComptoirBuilt",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "comptoir_grinmeer"
							}
						]
					},
					"done": true
				},
				{
					"id": "GrinmeerHuntDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "hunt_grinmeer"
							}
						]
					},
					"done": true
				},
				{
					"id": "AlazarPOICompleted",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "alazar_poi_completed"
							}
						]
					},
					"done": true
				},
				{
					"id": "AlazarSettingCompleted",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "alazar_setting_completed"
							}
						]
					},
					"done": true
				},
				{
					"id": "AlazarChampionKilled",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "alazar_champion_completed"
							}
						]
					},
					"done": true
				},
				{
					"id": "A1RuinsDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "alazar_ruins_done"
							}
						]
					},
					"done": true
				},
				{
					"id": "A1ArenaDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "alazar_arena_done"
							}
						]
					},
					"done": true
				},
				{
					"id": "T5ComptoirBuilt",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "comptoir_drombach"
							}
						]
					},
					"done": true
				},
				{
					"id": "AlazarHuntDone",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "hunt_drombach"
							}
						]
					},
					"done": true
				},
				{
					"id": "AlazarTruthDragon",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "alazar_truth_dragon"
							}
						]
					},
					"done": true
				},
				{
					"id": "AlazarTruthEye",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "alazar_truth_eye"
							}
						]
					},
					"done": true
				},
				{
					"id": "HateRelationship",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "relation_hate"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "LoveRelationship",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "relation_love"
							}
						]
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "UseWarPaint",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "warpaint"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "PublicEnemy",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "public_enemy"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "WantedReset",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "wiping_slate_clean"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "ForgeMaster",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 5,
								"id": "forge_master"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "BattleNoDamage",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "battle_no_damage"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "SaveActionPoints",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "save_action_points"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "MerchantHeist",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "merchant_heist"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "CatPetted",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 9,
								"id": "cat_petted"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "PackSpirit",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "pack_spirit"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "PrisonerTrustRecruited",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "prisoner_trust_recruited"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "WalkingPlagueFights",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "walking_plague"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "PreventedLeaversBeforeRest",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "PreventedLeavers",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "PreventedLeaversMemory",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "SuccessiveLeavers",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "KrownsSpent",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "RecruitSpentGold",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "NotEnoughFood",
					"name": "",
					"props": {
						"confessionElement": "ConfessionNotEnoughFood",
						"confessionPriority": 1
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "Rest_RawFood",
					"name": "",
					"props": {
						"confessionElement": "ConfessionRawFood",
						"confessionPriority": 1
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "Rest_Wanted",
					"name": "",
					"props": {
						"confessionElement": "ConfessionCurrentlyResearched",
						"confessionPriority": 2
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "Rest_CookedFood",
					"name": "",
					"props": {
						"confessionElement": "ConfessionEatCookedFood",
						"confessionPriority": 1
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "Rest_FeastFood",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "feast_food"
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "SalaryDelaySleep",
					"name": "",
					"desc": "",
					"props": {},
					"done": false
				},
				{
					"id": "PrisonerDeliveredSincePrisonerHuntPlayer",
					"name": "",
					"props": {},
					"desc": "",
					"done": true
				},
				{
					"id": "ChampionDefeated",
					"name": "",
					"props": {
						"confessionElement": "ConfessionChampionDefeated",
						"confessionPriority": 2
					},
					"done": true,
					"path": "UnitPath",
					"desc": ""
				},
				{
					"id": "FailLaunderingMoney",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "WeeklyBountyDone",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "ConsecutiveFightAgainstAnimals",
					"name": "",
					"props": {
						"confessionElement": "ConfessionAnimalFight",
						"confessionThreshold": 3,
						"confessionPriority": 1
					},
					"done": true,
					"desc": ""
				},
				{
					"id": "TradeGoodsTransport",
					"name": "",
					"desc": "",
					"props": {
						"confessionElement": "ConfessionTradeGoods",
						"confessionThreshold": 3,
						"confessionPriority": 1
					},
					"done": true
				},
				{
					"id": "A1EyeFreeFromAlazar",
					"name": "",
					"desc": "",
					"props": {},
					"done": true
				},
				{
					"id": "CompagnonCountForSave",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "KrownsOwnedForSave",
					"name": "",
					"props": {},
					"done": true,
					"desc": ""
				},
				{
					"id": "GuardCulprit",
					"name": "",
					"desc": "",
					"props": {
						"custom": {
							"wantedReduction": 100,
							"wantedDelay": 60,
							"initialProba": 25,
							"incrementProba": 10
						}
					},
					"done": false
				},
				{
					"id": "SportTeamDefeated_A1",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "team_defeated_drombach"
							}
						]
					},
					"done": true
				},
				{
					"id": "SportTeamDefeated_S1",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "team_defeated_tiltren"
							}
						]
					},
					"done": true
				},
				{
					"id": "SportTeamDefeated_E1",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "team_defeated_arthes"
							}
						]
					},
					"done": true
				},
				{
					"id": "SportTeamDefeated_H1",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "team_defeated_ludern"
							}
						]
					},
					"done": true
				},
				{
					"id": "SportTeamDefeated_G1",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "team_defeated_vertruse"
							}
						]
					},
					"done": true
				},
				{
					"id": "SportTeamDefeated_G2",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "team_defeated_grinmeer"
							}
						]
					},
					"done": true
				},
				{
					"id": "SportTeamKnockDown",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "sport_team_knockdown"
							}
						]
					},
					"done": true
				},
				{
					"id": "StolenItems",
					"name": "Krowns économisés en volant",
					"props": {
						"unit": "Gold"
					},
					"pathXP": 0,
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "SoldStolenItems",
					"name": "Krowns gagnés en recelant",
					"props": {
						"unit": "Gold"
					},
					"pathXP": 0,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "GuardFought",
					"name": "Combats remportés contre la Garde",
					"props": {
						"title": "Sans foi ni loi",
						"titleRequired": 30
					},
					"pathXP": 10,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "WantedDuration",
					"name": "Heures passées en étant recherché",
					"props": {
						"title": "Morts ou vifs",
						"titleRequired": 100
					},
					"pathXP": 0,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "MerchantsFought",
					"name": "Combats remportés contre des Marchands",
					"props": {
						"title": "Bandits de grand chemin",
						"titleRequired": 30
					},
					"pathXP": 10,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "PrisonnersRecruited",
					"name": "Prisonniers recrutés",
					"props": {
						"title": "Gibiers de potence",
						"titleRequired": 10
					},
					"pathXP": 10,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "AssassinationMissions",
					"name": "Contrats d'Assassinat remplis",
					"props": {
						"title": "Maîtres assassins",
						"titleRequired": 10
					},
					"pathXP": 10,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "OutlawsAllies",
					"name": "Combats remportés aux côtés de Hors-la-loi",
					"props": {
						"title": "Truands",
						"titleRequired": 10
					},
					"pathXP": 15,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "AmbushDone",
					"name": "Combats remportés en embuscade",
					"props": {
						"title": "Sans-vergogne",
						"titleRequired": 20
					},
					"pathXP": 10,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "ElitesKilled",
					"name": "Élites tués",
					"props": {
						"title": "Tueurs d'élite",
						"titleRequired": 5,
						"achievements": [
							{
								"value": 1,
								"id": "elite"
							}
						]
					},
					"done": true,
					"pathXP": 20,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "TracksDone",
					"name": "Traques réussies",
					"props": {
						"title": "Traqueurs experts",
						"titleRequired": 10
					},
					"pathXP": 10,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "NormalFightsDone",
					"name": "Combats normaux ou difficiles remportés",
					"props": {
						"title": "Foudres de guerre",
						"titleRequired": 30
					},
					"done": true,
					"pathXP": 15,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "FightsDone",
					"name": "Combats remportés",
					"props": {
						"title": "Combattants aguerris",
						"titleRequired": 100
					},
					"done": true,
					"pathXP": 3,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "ArenasDone",
					"name": "Arènes remportées",
					"props": {
						"title": "Champions de l'arène",
						"titleRequired": 6,
						"achievements": [
							{
								"value": 1,
								"id": "arena"
							}
						]
					},
					"done": true,
					"pathXP": 20,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "GhostPackFought",
					"name": "Combats remportés contre la Meute Fantôme",
					"props": {
						"title": "Chasseurs de fantômes",
						"titleRequired": 30,
						"achievements": [
							{
								"value": 1,
								"id": "ghosthound"
							}
						]
					},
					"done": true,
					"pathXP": 15,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "PoiFreed",
					"name": "Lieux libérés",
					"props": {
						"title": "Libérateurs providentiels",
						"titleRequired": 20
					},
					"done": true,
					"pathXP": 10,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "ArmorsCrafted",
					"name": "Armures forgées",
					"props": {
						"title": "Artisans défenseurs",
						"titleRequired": 50
					},
					"done": true,
					"pathXP": 5,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "WeaponsCrafted",
					"name": "Armes forgées",
					"props": {
						"title": "Forgeurs de guerre",
						"titleRequired": 50
					},
					"done": true,
					"pathXP": 5,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "LayersCrafted",
					"name": "Renforts d'armure créés",
					"props": {
						"title": "Renforts renforcés",
						"titleRequired": 50
					},
					"done": true,
					"pathXP": 3,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "MissionsDone",
					"name": "Contrats remplis",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "contract"
							},
							{
								"value": 100,
								"id": "constracts100"
							}
						]
					},
					"pathXP": 5,
					"done": true,
					"desc": ""
				},
				{
					"id": "MissionsGold",
					"name": "Krowns obtenus via des contrats",
					"props": {
						"title": "Mercenaires prestigieux",
						"titleRequired": 2000,
						"unit": "Gold"
					},
					"done": true,
					"pathXP": 0,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "TradeGoodsSold",
					"name": "Krowns obtenus via Marchandises",
					"props": {
						"unit": "Gold",
						"title": "Marchands habiles",
						"titleRequired": 2000,
						"achievements": [
							{
								"value": 2000,
								"id": "budding_trader"
							}
						]
					},
					"pathXP": 0,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "LuxuriesSold",
					"name": "Krowns obtenus via Objets de luxe",
					"props": {
						"unit": "Gold",
						"title": "Les maîtres du luxe",
						"titleRequired": 2000
					},
					"pathXP": 0,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "SettingMissionGold",
					"name": "Krowns obtenu via missions de scénario",
					"props": {
						"title": "Chroniqueurs",
						"titleRequired": 1000,
						"unit": "Gold"
					},
					"pathXP": 0,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "PrisonnersGiven",
					"name": "Krowns obtenus en livrant des prisonniers",
					"props": {
						"title": "Incorruptibles",
						"titleRequired": 2000,
						"unit": "Gold"
					},
					"pathXP": 0,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "TradeMissionsDone",
					"name": "Contrats de Commerce remplis",
					"props": {
						"title": "Colporteurs fiables",
						"titleRequired": 10
					},
					"pathXP": 10,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "WeaponsSold",
					"name": "Krowns obtenus via armes vendues",
					"props": {
						"unit": "Gold",
						"title": "Vendeurs d'armes",
						"titleRequired": 2000
					},
					"pathXP": 0,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "ArmorsSold",
					"name": "Krowns obtenus via armures vendues",
					"props": {
						"unit": "Gold",
						"title": "Vendeurs d'armures",
						"titleRequired": 2000
					},
					"pathXP": 0,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "MerchantsAllies",
					"name": "Combats remportés aux côtés de Marchands",
					"props": {
						"title": "Gardiens des Négociants",
						"titleRequired": 10
					},
					"pathXP": 15,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "DestroyedRatNest",
					"name": "Nids de rats nettoyés",
					"props": {
						"title": "Dératiseurs",
						"titleRequired": 10,
						"achievements": [
							{
								"value": 1,
								"id": "rats"
							},
							{
								"value": 5,
								"id": "rat_invasion_cleaned"
							}
						],
						"confessionElement": "ConfessionSucceedRatNest",
						"confessionPriority": 2
					},
					"pathXP": 15,
					"done": true,
					"path": "Outdated",
					"desc": ""
				},
				{
					"id": "LearntKnowledges",
					"name": "Connaissances apprises",
					"props": {
						"title": "Encyclopédistes",
						"titleRequired": 100
					},
					"path": "Outdated",
					"pathXP": 8,
					"done": true,
					"desc": ""
				},
				{
					"id": "DiscoverProfessions",
					"name": "Métiers découverts",
					"props": {
						"title": "Artisans polyvalents",
						"titleRequired": 8
					},
					"path": "Outdated",
					"pathXP": 5,
					"done": true,
					"desc": ""
				},
				{
					"id": "ExpertCompanions",
					"name": "Compagnons devenus Maître de métier",
					"props": {
						"title": "Maîtres artisans",
						"titleRequired": 4
					},
					"path": "Outdated",
					"pathXP": 30,
					"done": true,
					"desc": ""
				},
				{
					"id": "MasterCompanions",
					"name": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "master_companion"
							},
							{
								"value": 5,
								"id": "master_labour"
							}
						]
					},
					"desc": "",
					"done": false
				},
				{
					"id": "TreasuresFromMapTreasures",
					"name": "Trésors de cartes au trésor découverts",
					"props": {
						"title": "Chercheurs de trésors",
						"titleRequired": 30
					},
					"path": "Outdated",
					"pathXP": 15,
					"done": true,
					"desc": ""
				},
				{
					"id": "RuinsDone",
					"name": "Tombeaux des Anciens explorés",
					"props": {
						"title": "Pilleurs de tombes",
						"titleRequired": 6,
						"achievements": [
							{
								"value": 1,
								"id": "explorer"
							}
						],
						"confessionElement": "ConfessionRuins",
						"confessionPriority": 2
					},
					"path": "Outdated",
					"pathXP": 20,
					"done": true,
					"desc": ""
				},
				{
					"id": "StudiesAntiquities",
					"name": "Antiquités étudiées",
					"props": {
						"title": "Archéologues",
						"titleRequired": 50
					},
					"path": "Outdated",
					"pathXP": 6,
					"done": true,
					"desc": ""
				},
				{
					"id": "DecipheredCodexes",
					"name": "Codex déchiffrés",
					"props": {
						"title": "Spécialistes des Anciens",
						"titleRequired": 18
					},
					"path": "Outdated",
					"pathXP": 10,
					"done": true,
					"desc": ""
				},
				{
					"id": "DiscoveredSecrets",
					"name": "Secrets découverts",
					"props": {
						"title": "Chercheurs de Vérité",
						"titleRequired": 10,
						"achievements": [
							{
								"value": 1,
								"id": "secretfound"
							}
						]
					},
					"path": "Outdated",
					"pathXP": 15,
					"done": true,
					"desc": ""
				},
				{
					"id": "DiscoveredPoi",
					"name": "Lieux découverts",
					"props": {
						"title": "Explorateurs",
						"titleRequired": 100,
						"confessionElement": "ConfessionNewPlaceDiscovered",
						"confessionPriority": 1
					},
					"path": "Outdated",
					"pathXP": 2,
					"done": true,
					"desc": ""
				},
				{
					"id": "MaxCompletedRegions",
					"name": "Régions complétées",
					"props": {
						"title": "Seigneurs des chemins",
						"titleRequired": 6,
						"achievements": [
							{
								"value": 1,
								"id": "region"
							}
						]
					},
					"path": "Outdated",
					"pathXP": 50,
					"done": true,
					"desc": ""
				},
				{
					"id": "StolenItemsCount",
					"name": "Objets volés",
					"props": {
						"title": "Doigts de fée",
						"titleRequired": 300
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "SoldStolenItemsCount",
					"name": "Objets volés revendus",
					"props": {
						"title": "Receleurs prolifiques",
						"titleRequired": 200
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "Backstabs",
					"name": "Ennemis tués par des attaques dans le dos",
					"props": {
						"title": "Coupes-jarrets",
						"titleRequired": 100
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "PonyCaptured",
					"name": "Poneys capturés",
					"props": {
						"title": "Voleurs de poney",
						"titleRequired": 5
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "AnimalsCaptured",
					"name": "Animaux capturés",
					"props": {
						"title": "Braconniers",
						"titleRequired": 15
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "ItemsThrown",
					"name": "Objets jetés",
					"props": {
						"title": "Gâcheurs",
						"titleRequired": 200
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "AnimalsKilled",
					"name": "Animaux tués",
					"props": {
						"title": "Fléaux des Bêtes",
						"titleRequired": 200
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "KilledByPoison",
					"name": "Ennemis tués par du poison",
					"props": {
						"title": "Empoisonneurs",
						"titleRequired": 30
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "CrimeTitles",
					"name": "Titres de Crime obtenus",
					"props": {
						"title": "Parrains du Crime",
						"titleRequired": 10
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "CompanionsRecruited",
					"name": "Compagnons recrutés",
					"props": {
						"title": "Indénombrables",
						"titleRequired": 10,
						"confessionElement": "ConfessionNewCompanion",
						"confessionPriority": 2,
						"confessionNeedTarget": true
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "OpportunityAttacksDone",
					"name": "Attaques d'opportunité effectuées",
					"props": {
						"title": "Opportunistes",
						"titleRequired": 50
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "ArmorRepaired",
					"name": "Points d'armure réparés",
					"props": {
						"title": "Rafistoleurs chevronnés",
						"titleRequired": 2500
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "ArmorRepaired2",
					"name": "Points d'armure réparés",
					"props": {
						"title": "Rafistoleurs chevronnés II",
						"titleRequired": 5000
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "ArmorRepaired3",
					"name": "Points d'armure réparés",
					"props": {
						"title": "Rafistoleurs chevronnés III",
						"titleRequired": 10000
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "RatsKilled",
					"name": "Rats tués",
					"props": {
						"title": "Exterminateurs de vermine",
						"titleRequired": 1000
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "GritSpent",
					"name": "Points de Bravoure dépensés",
					"props": {
						"title": "Braves parmi les braves",
						"titleRequired": 100
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "KilledByBleeding",
					"name": "Ennemis tués par saignement",
					"props": {
						"title": "Sanguinaires",
						"titleRequired": 30
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "CombatMorale",
					"name": "Combats continués après abandon ennemi",
					"props": {
						"title": "Impitoyables",
						"titleRequired": 20
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "UnitsKilled",
					"name": "Unités tuées",
					"props": {
						"title": "Ravageurs",
						"titleRequired": 5000
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "MightTitles",
					"name": "Titres de Puissance obtenus",
					"props": {
						"title": "Guerriers de légendes",
						"titleRequired": 10
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "SoldItems",
					"name": "Objets vendus",
					"props": {
						"title": "Revendeurs acharnés",
						"titleRequired": 1000
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "KrownsWon",
					"name": "Krowns gagnés",
					"props": {
						"title": "Nouveaux-riches",
						"titleRequired": 10000
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "TradeGoodBought",
					"name": "Marchandises achetées",
					"props": {
						"title": "Investisseurs",
						"titleRequired": 100
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "SlowedUnitsKilled",
					"name": "Ennemis ralentis tués",
					"props": {
						"title": "Fins tacticiens",
						"titleRequired": 30
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "TradeTitles",
					"name": "Titre de Commerce obtenus",
					"props": {
						"title": "Mains d'or",
						"titleRequired": 10
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "LearntCategoriesRecipes",
					"name": "Connaissances d'une même catégorie du Compendium apprises",
					"props": {
						"title": "Collectionneurs",
						"titleRequired": 20
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "CompletedRegions",
					"name": "Première région complétée",
					"props": {
						"title": "Héros locaux",
						"titleRequired": 1
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "LearntDifferentCategoriesRecipes",
					"name": "Catégories du Compendium avec au moins 5 connaissances apprises",
					"props": {
						"title": "Savants éclectiques",
						"titleRequired": 3
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "DiscoverCategories",
					"name": "Catégories du Compendium découvertes",
					"props": {
						"title": "Amateurs avides",
						"titleRequired": 5
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "LightSpent",
					"name": "Points de Lumière dépensés",
					"props": {
						"title": "Rois de la torche",
						"titleRequired": 1000
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "LegendaryItemsFound",
					"name": "Objets légendaires obtenus",
					"props": {
						"title": "Collectionneurs de légendes",
						"titleRequired": 20,
						"achievements": [
							{
								"value": 1,
								"id": "legendarywp"
							}
						]
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "OilLearntRecipes",
					"name": "Recettes d'huiles alchimiques apprises",
					"props": {},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "KnowledgeTitles",
					"name": "Titre de Connaissance obtenus",
					"props": {
						"title": "Érudits émérites",
						"titleRequired": 10
					},
					"path": "Outdated",
					"done": true,
					"desc": ""
				},
				{
					"id": "Recrutor",
					"name": "Recruteur",
					"props": {
						"value": 1
					},
					"path": "Outdated",
					"desc": "Recruter votre ::count::ème compagnon pour la première fois",
					"done": true
				},
				{
					"id": "Alchemist03",
					"name": "Alchimiste III",
					"desc": "Fabriquer [VALUE] recettes d'Alchimie de Tier III",
					"props": {
						"value": 5
					},
					"path": "Outdated",
					"pathXP": 3,
					"done": true
				},
				{
					"id": "TeamWork",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "team_work"
							}
						],
						"coopMode": true
					},
					"done": true
				},
				{
					"id": "FriendshipPower",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 10,
								"id": "friendship_power"
							}
						],
						"coopMode": true
					},
					"done": true
				},
				{
					"id": "FirstAid",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 10,
								"id": "first_aid"
							}
						],
						"coopMode": true
					},
					"done": true
				},
				{
					"id": "Entertainment",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 10,
								"id": "entertainment"
							}
						],
						"coopMode": true
					},
					"done": true
				},
				{
					"id": "CodexBuilder",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "codex_builder"
							}
						]
					},
					"done": true
				},
				{
					"id": "CodexMerchant",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "codex_merchant"
							}
						]
					},
					"done": true
				},
				{
					"id": "CodexGeneral",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "codex_general"
							}
						]
					},
					"done": true
				},
				{
					"id": "CodexFighters",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "codex_fighters"
							}
						]
					},
					"done": true
				},
				{
					"id": "CodexArtist",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "codex_artist"
							}
						]
					},
					"done": true
				},
				{
					"id": "CodexExplorer",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "codex_explorer"
							}
						]
					},
					"done": true
				},
				{
					"id": "FastCodexRestoration",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "fast_codex_restoration"
							}
						],
						"value": 6
					},
					"done": true
				},
				{
					"id": "ToolAssignedCompanions",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 10,
								"id": "tool_assigned_companions"
							}
						]
					},
					"done": true
				},
				{
					"id": "UpgradeUniqueTools",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 10,
								"id": "upgrade_unique_tools"
							}
						]
					},
					"done": true
				},
				{
					"id": "CraftUniqueTools",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 20,
								"id": "craft_unique_tools"
							}
						]
					},
					"done": true
				},
				{
					"id": "T2UniqueWeapons",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 9,
								"id": "t2_unique_weapons"
							}
						]
					},
					"done": true
				},
				{
					"id": "T3UniqueWeapons",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 9,
								"id": "t3_unique_weapons"
							}
						]
					},
					"done": true
				},
				{
					"id": "OnlyOiledWeapons",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "only_oiled_weapons"
							}
						]
					},
					"done": true
				},
				{
					"id": "ApprenticeUniqueJobs",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 8,
								"id": "apprentice_unique_jobs"
							}
						]
					},
					"done": true
				},
				{
					"id": "PrepareDeliciousMeals",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 10,
								"id": "prepare_delicious_meals"
							}
						]
					},
					"done": true
				},
				{
					"id": "FullExigenceArena",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "full_exigence_arena"
							}
						]
					},
					"done": true
				},
				{
					"id": "SnowCrawlerCaptured",
					"name": "",
					"desc": "",
					"props": {
						"achievements": [
							{
								"value": 1,
								"id": "capture_snow_crawler"
							}
						]
					},
					"done": true
				},
				{
					"id": "Blacksmith01",
					"name": "Forgeron I",
					"props": {
						"value": 5
					},
					"path": "PathMight",
					"pathXP": 1,
					"desc": "Forger [VALUE] Armes/Armures de Tier I",
					"done": true
				},
				{
					"id": "BountyHunter01",
					"name": "Chasseur de prime I",
					"props": {
						"value": 5
					},
					"path": "PathMight",
					"pathXP": 1,
					"desc": "Remplir [VALUE] contrats (Facile ou Normal)",
					"done": true
				},
				{
					"id": "Famous",
					"name": "Célèbre",
					"desc": "Gagner [VALUE] Influence",
					"props": {
						"value": 100
					},
					"done": true,
					"path": "PathMight",
					"pathXP": 1
				},
				{
					"id": "Magnanime",
					"name": "Magnanime",
					"props": {
						"value": 10
					},
					"path": "PathMight",
					"pathXP": 1,
					"desc": "Laisser [VALUE] ennemis fuir le combat après une perte de moral",
					"done": true
				},
				{
					"id": "Thrower",
					"name": "Lanceur",
					"props": {
						"value": 10
					},
					"path": "PathMight",
					"pathXP": 1,
					"desc": "Lancer [VALUE] armes main gauche (hors bombes)",
					"done": true
				},
				{
					"id": "Blacksmith02",
					"name": "Forgeron II",
					"props": {
						"value": 5
					},
					"path": "PathMight",
					"pathXP": 2,
					"desc": "Forger [VALUE] Armes/Armures de Tier II",
					"done": true
				},
				{
					"id": "Gladiator01",
					"name": "Gladiateur I",
					"props": {
						"value": 1
					},
					"path": "PathMight",
					"pathXP": 2,
					"desc": "Finir une arène ou gagner à la Rouste en mode Normal",
					"done": true
				},
				{
					"id": "Temerity",
					"name": "Témérité",
					"props": {
						"value": 30
					},
					"path": "PathMight",
					"pathXP": 2,
					"desc": "Dépenser [VALUE] Points de Bravoure non temporaire",
					"done": true
				},
				{
					"id": "Specialist",
					"name": "Spécialiste",
					"props": {
						"value": 3
					},
					"path": "PathMight",
					"pathXP": 2,
					"desc": "Effectuer [VALUE] améliorations de compétence de classe",
					"done": true
				},
				{
					"id": "Blacksmith03",
					"name": "Forgeron III",
					"props": {
						"value": 5
					},
					"path": "PathMight",
					"pathXP": 3,
					"desc": "Forger [VALUE] Armes/Armures de Tier III",
					"done": true
				},
				{
					"id": "Preservation",
					"name": "Préservation",
					"props": {
						"value": 10
					},
					"path": "PathMight",
					"pathXP": 3,
					"desc": "Finir [VALUE] combats sans blessures",
					"done": true
				},
				{
					"id": "BountyHunter02",
					"name": "Chasseur de prime II",
					"props": {
						"value": 5
					},
					"path": "PathMight",
					"pathXP": 3,
					"desc": "Remplir [VALUE] contrats (Difficile)",
					"done": true
				},
				{
					"id": "Blacksmith04",
					"name": "Forgeron IV",
					"props": {
						"value": 5
					},
					"path": "PathMight",
					"pathXP": 4,
					"desc": "Forger [VALUE] Armes/Armures de Tier IV",
					"done": true
				},
				{
					"id": "Gladiator02",
					"name": "Gladiateur II",
					"props": {
						"value": 1
					},
					"path": "PathMight",
					"pathXP": 4,
					"desc": "Finir une arène ou gagner à la Rouste en mode Difficile",
					"done": true
				},
				{
					"id": "Boss",
					"name": "Patron",
					"desc": "Payer [VALUE] salaires sans retard",
					"props": {
						"value": 5
					},
					"done": true,
					"path": "PathTrade",
					"pathXP": 1
				},
				{
					"id": "Cooker",
					"name": "Cuisinier",
					"desc": "Apprendre [VALUE] recettes de Cuisine",
					"props": {
						"value": 5
					},
					"path": "PathTrade",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "GoodPayer",
					"name": "Bon payeur",
					"desc": "Se reposer [VALUE] fois sans avoir de solde à verser",
					"props": {
						"value": 10
					},
					"path": "PathTrade",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "Tinkerer",
					"name": "Bricoleur",
					"desc": "Fabriquer [VALUE] objets avec l'Atelier",
					"props": {
						"value": 50
					},
					"path": "PathTrade",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "TraceContract",
					"name": "Contrat de commerce",
					"desc": "Réussir [VALUE] contrats de commerce",
					"props": {
						"value": 5
					},
					"path": "PathTrade",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "Goodtrades",
					"name": "Bonnes Affaires",
					"desc": "Acheter [VALUE] objets bénéficiant d'une réduction",
					"props": {
						"value": 100
					},
					"path": "PathTrade",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "Gourmet",
					"name": "Gourmet",
					"desc": "Consommer au moins 1 festin lors de [VALUE] repas",
					"props": {
						"value": 5
					},
					"path": "PathTrade",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "ProlificCrafter",
					"name": "Artisan prolifique",
					"desc": "Revendre pour [VALUE] krowns d'objets fabriqués",
					"props": {
						"value": 1000
					},
					"path": "PathTrade",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "Producer",
					"name": "Producteur",
					"desc": "Produire [VALUE] objets à l'aide de Matériels de camp",
					"props": {
						"value": 20
					},
					"path": "PathTrade",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "VersatileCrafter",
					"name": "Artisan polyvalent",
					"desc": "Gagner [VALUE] niveaux de Métiers",
					"props": {
						"value": 10
					},
					"path": "PathTrade",
					"pathXP": 3,
					"done": true
				},
				{
					"id": "Crafter",
					"name": "Artisan novateur",
					"desc": "Fabriquer ou Améliorer [VALUE] Matériels de camp pour la première fois",
					"props": {
						"value": 5
					},
					"path": "PathTrade",
					"pathXP": 3,
					"done": true
				},
				{
					"id": "Trader",
					"name": "Commerçant",
					"desc": "Construire un Comptoir",
					"props": {
						"value": 1
					},
					"path": "PathTrade",
					"pathXP": 3,
					"done": true
				},
				{
					"id": "LegendaryCrafter",
					"name": "Artisan Légendaire",
					"desc": "Passer Compagnon ou Maître dans un Métier pour la première fois",
					"props": {
						"value": 1
					},
					"path": "PathTrade",
					"pathXP": 4,
					"done": true
				},
				{
					"id": "ProfessionalTrader",
					"name": "Marchands professionnels",
					"desc": "Vendre [VALUE] marchandises à +50% de profit",
					"props": {
						"value": 10
					},
					"path": "PathTrade",
					"pathXP": 4,
					"done": true
				},
				{
					"id": "DeadOrAlive",
					"name": "Mort ou Vif",
					"desc": "Cumuler [VALUE] Soupçon",
					"props": {
						"value": 250
					},
					"path": "PathCrime",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "Shameless",
					"name": "Sans Vergogne",
					"desc": "Remporter [VALUE] combats en embuscade contre des humains",
					"props": {
						"value": 5
					},
					"path": "PathCrime",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "Pickpocket",
					"name": "Voleur à la tire",
					"desc": "Voler pour [VALUE] krowns d'objets",
					"props": {
						"value": 1000
					},
					"path": "PathCrime",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "FairyFingers",
					"name": "Doigts de fée",
					"desc": "Forcer [VALUE] serrures",
					"props": {
						"value": 5
					},
					"path": "PathCrime",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "HeadHunter",
					"name": "Chasseur de Tête",
					"desc": "Envoyer [VALUE] personnes en prison",
					"props": {
						"value": 5
					},
					"path": "PathCrime",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "NorFaithNorLaw01",
					"name": "Sans Foi ni Loi I",
					"desc": "Remporter [VALUE] combats contre la Garde avec le Soupçon inférieur à 400",
					"props": {
						"value": 5
					},
					"path": "PathCrime",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "Highwaymen01",
					"name": "Bandits de Grands Chemins I",
					"desc": "Remporter [VALUE] Combats contre des Marchands",
					"props": {
						"value": 5
					},
					"path": "PathCrime",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "MasterAssassin01",
					"name": "Maître Assassin I",
					"desc": "Terminer [VALUE] contrats d'Assassinat (Facile ou Normal)",
					"props": {
						"value": 5
					},
					"path": "PathCrime",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "Conjurer",
					"name": "Escamoteur",
					"desc": "Blanchir [VALUE] piles d'objets",
					"props": {
						"value": 10
					},
					"path": "PathCrime",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "DeadOrAlive02",
					"name": "Mort ou Vif II",
					"desc": "Passer [VALUE] jours avec un niveau de Recherche de 3 ou plus",
					"props": {
						"value": 7
					},
					"path": "PathCrime",
					"pathXP": 3,
					"done": true
				},
				{
					"id": "MasterAssassin02",
					"name": "Maître Assassin II",
					"desc": "Terminer [VALUE] contrats d'Assassinat (Difficile)",
					"props": {
						"value": 5
					},
					"path": "PathCrime",
					"pathXP": 3,
					"done": true
				},
				{
					"id": "Hocks",
					"name": "Coupe-jarrets",
					"desc": "Achever [VALUE] ennemis avec une attaque dans le dos",
					"props": {
						"value": 25
					},
					"path": "PathCrime",
					"pathXP": 3,
					"done": true
				},
				{
					"id": "NorFaithNorLaw02",
					"name": "Sans Foi ni Loi II",
					"desc": "Remporter un combat contre la Garde avec le Soupçon supérieur à 400",
					"props": {
						"value": 1
					},
					"path": "PathCrime",
					"pathXP": 4,
					"done": true
				},
				{
					"id": "Highwaymen02",
					"name": "Bandits de Grands Chemins II",
					"desc": "Rattraper [VALUE] Marchands de riche caravane en combat",
					"props": {
						"value": 10
					},
					"path": "PathCrime",
					"pathXP": 4,
					"done": true
				},
				{
					"id": "Alchemist01",
					"name": "Alchimiste I",
					"desc": "Fabriquer [VALUE] recettes d'Alchimie de Tier I",
					"props": {
						"value": 5
					},
					"path": "PathMystery",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "Gatherer",
					"name": "Ramasseur",
					"desc": "Ramasser [VALUE] ressources",
					"props": {
						"value": 50
					},
					"path": "PathMystery",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "Explorator",
					"name": "Explorateur",
					"desc": "Découvrir [VALUE] lieux",
					"props": {
						"value": 5
					},
					"path": "PathMystery",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "GineaPig",
					"name": "Cobaye",
					"desc": "Utiliser [VALUE] huiles",
					"props": {
						"value": 3
					},
					"path": "PathMystery",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "Blaster",
					"name": "Dynamiteur",
					"desc": "Lancer [VALUE] bombes",
					"props": {
						"value": 10
					},
					"path": "PathMystery",
					"pathXP": 1,
					"done": true
				},
				{
					"id": "Alchemist02",
					"name": "Alchimiste II",
					"desc": "Fabriquer [VALUE] recettes d'Alchimie de Tier II",
					"props": {
						"value": 5
					},
					"path": "PathMystery",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "Poacher",
					"name": "Braconnier",
					"desc": "Capturer [VALUE] animaux",
					"props": {
						"value": 10
					},
					"path": "PathMystery",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "Encyclopedist",
					"name": "Encyclopédiste",
					"desc": "Dépenser [VALUE] points de Connaissance",
					"props": {
						"value": 5
					},
					"path": "PathMystery",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "TrackerFriend",
					"name": "Traqueur",
					"desc": "Dépenser [VALUE] crocs",
					"props": {
						"value": 1000
					},
					"path": "PathMystery",
					"pathXP": 2,
					"done": true
				},
				{
					"id": "Unearth",
					"name": "Dénicheur",
					"desc": "Trouver un secret",
					"props": {
						"value": 1
					},
					"done": true,
					"path": "PathMystery",
					"pathXP": 3
				},
				{
					"id": "GhostlyFantom",
					"name": "Traqueur Fantomatique",
					"desc": "Battre la meute fantôme et Tuer le Cauchemar",
					"props": {
						"value": 1
					},
					"path": "PathMystery",
					"pathXP": 3,
					"done": true
				},
				{
					"id": "Exterminator",
					"name": "Dératiseur",
					"desc": "Détruire [VALUE] nid de rats",
					"props": {
						"value": 1
					},
					"path": "PathMystery",
					"pathXP": 3,
					"done": true
				},
				{
					"id": "Archeologist",
					"name": "Archéologue",
					"desc": "Étudier [VALUE] Antiquités ou Codex",
					"props": {
						"value": 5
					},
					"path": "PathMystery",
					"pathXP": 4,
					"done": true
				},
				{
					"id": "Influencer",
					"name": "Influenceur",
					"desc": "Récolter [VALUE] points de scénario de région",
					"props": {
						"value": 100
					},
					"path": "PathMystery",
					"pathXP": 4,
					"done": true
				},
				{
					"id": "Injuries",
					"name": "Blessures obtenues",
					"props": {
						"title": "le balafré",
						"titleRequired": 10,
						"titleWoman": "la balafrée",
						"confessionElement": "ConfessionHasBeenHurt",
						"trait": "Enduring",
						"confessionPriority": 2
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "DrinkingDays",
					"name": "Jours consécutifs de consommation d'alcool",
					"props": {
						"title": "le coude agile",
						"titleRequired": 10,
						"titleWoman": "le coude agile",
						"notAnimal": true
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "WolvesKilled",
					"name": "Loups tués en un combat",
					"props": {
						"title": "le tanneur de loups",
						"titleRequired": 10,
						"titleWoman": "la tanneuse de loups",
						"resetOnBeginFight": true
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "BoarsKilled",
					"name": "Sangliers tués en un combat",
					"props": {
						"title": "le fléau des porcs",
						"titleRequired": 10,
						"titleWoman": "le fléau des porcs",
						"resetOnBeginFight": true
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "GritPointsSpent",
					"name": "Points de Bravoure dépensés en un combat",
					"props": {
						"title": "le frimeur",
						"titleRequired": 10,
						"titleWoman": "la frimeuse",
						"resetOnBeginFight": true
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "UnitDying",
					"name": "Statuts Mourant obtenus",
					"props": {
						"title": "le survivant",
						"titleRequired": 10,
						"titleWoman": "la survivante"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "WagesPayed",
					"name": "Krowns payés en salaire",
					"props": {
						"title": "l'avare",
						"titleRequired": 500,
						"titleWoman": "l'avare"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "CraftsDone",
					"name": "Objets créés",
					"props": {
						"title": "l'habile",
						"titleRequired": 100,
						"titleWoman": "l'habile"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "BackstabDone",
					"name": "Ennemis tués dans le dos",
					"props": {
						"title": "le fourbe",
						"titleRequired": 30,
						"titleWoman": "la fourbe"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "GrowthsKilled",
					"name": "Excroissances pestiférées détruites",
					"props": {
						"title": "le nettoyeur",
						"titleRequired": 10,
						"titleWoman": "la nettoyeuse"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "EnemiesEngaged",
					"name": "Ennemis engagés",
					"props": {
						"title": "le mur",
						"titleRequired": 30,
						"titleWoman": "le mur"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "AlliesHit",
					"name": "Alliés touchés avec un projectile",
					"props": {
						"title": "le bigleux",
						"titleWoman": "la bigleuse",
						"titleRequired": 5,
						"trait": "Squinting"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "NightsNearAnimal",
					"name": "Nuits passées à coté d'un animal",
					"props": {
						"title": "l'ami des bêtes",
						"titleWoman": "l'amie des bêtes",
						"titleRequired": 15
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "BadDietDays",
					"name": "Jours consécutifs d'exigence alimentaire non satisfaite",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "NoDrinkingDays",
					"name": "Jours consécutifs sans consommation d'alcool",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "MadnessCounter",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "DopeCounter",
					"name": "",
					"desc": "",
					"props": {
						"trait": "Addict"
					},
					"path": "UnitPath",
					"done": true
				},
				{
					"id": "WeeklyDamagesDone",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "WeeklyKilledUnits",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "WeeklyJobXP",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "OneHandedHits",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "TwoHandedHits",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "ConvincedDoNotLeave",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "SatiatedRests",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "RestFed",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "EscapeTries",
					"name": "",
					"props": {
						"custom": {
							"escapeBonus": 20
						}
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "RestSinceLastEscape",
					"name": "",
					"props": {
						"custom": {
							"escapeBonus": 5
						}
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "UsedBarberKit_Day",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"desc": "",
					"done": true
				},
				{
					"id": "PrisonerTrust",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "GhostPackRunaway",
					"name": "",
					"props": {
						"confessionElement": "ConfessionGhostPackRunaway",
						"confessionPriority": 2
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "BecomeAlcoholic",
					"name": "",
					"props": {
						"confessionElement": "ConfessionDrunk",
						"confessionPriority": 1
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "IsPlagued",
					"name": "",
					"props": {
						"confessionElement": "ConfessionPestiferous",
						"confessionPriority": 2
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "ForsakenVillageSelected",
					"name": "",
					"props": {
						"confessionElement": "ConfessionForsakenVillage",
						"confessionPriority": 1
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "ForsakenVillageNotSelected",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "KilledMoreThanAThirdUnits",
					"name": "",
					"props": {
						"confessionElement": "ConfessionThirtyPercentKill",
						"confessionPriority": 2
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "FriendlyFire",
					"name": "",
					"props": {
						"confessionElement": "ConfessionFriendlyFire",
						"confessionNeedTarget": true,
						"confessionPriority": 1
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "LevelUp",
					"name": "",
					"props": {
						"confessionElement": "ConfessionLevelUp",
						"confessionPriority": 2
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "JobLevelUp",
					"name": "",
					"props": {
						"confessionElement": "ConfessionJobLevelUp",
						"confessionPriority": 2
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "RelationGainWithFriend",
					"name": "",
					"props": {
						"confessionElement": "ConfessionInLove",
						"confessionNeedTarget": true,
						"confessionPriority": 2
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "RelationLostWithEnemy",
					"name": "",
					"props": {
						"confessionElement": "ConfessionHate",
						"confessionNeedTarget": true,
						"confessionPriority": 2
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "HasKilledHuman",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "LeadersKilled",
					"name": "",
					"props": {
						"trait": "Glorious"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "AttackTwoHanded",
					"name": "",
					"props": {
						"trait": "Colossus"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "AttacksOneHanded",
					"name": "",
					"props": {
						"trait": "Vivid"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "ShieldHit",
					"name": "",
					"props": {
						"trait": "ShieldLover"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "NoiseActionGood",
					"name": "",
					"props": {
						"trait": "Silent"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "NoiseActionBad",
					"name": "",
					"props": {
						"trait": "Noisy"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "ArrowFromAlly",
					"name": "",
					"props": {
						"trait": "EyesBack"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "AfterRestIfCaptain",
					"name": "",
					"props": {
						"trait": "LeaderSoul"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "LowFood",
					"name": "",
					"props": {
						"trait": "Ascetic"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "DotTaken",
					"name": "",
					"props": {
						"trait": "Resilient"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "CritHitTaken",
					"name": "",
					"props": {
						"trait": "Instinctive"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "RelationGained",
					"name": "",
					"props": {
						"trait": "Sociable"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "RelationLost",
					"name": "",
					"props": {
						"trait": "Grumpy"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "KilledWithOpportunity",
					"name": "",
					"props": {
						"trait": "Opportunist"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "Won50MoreNumber",
					"name": "",
					"props": {
						"trait": "Brave"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "Succeed80Precision",
					"name": "",
					"props": {
						"trait": "EagleEyed"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "PrisonnerCaptured",
					"name": "",
					"props": {
						"trait": "Tyrannical"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "BleedingGained",
					"name": "",
					"props": {
						"trait": "Haemophiliac"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "NewRuinRoom",
					"name": "",
					"props": {
						"trait": "Superstitious"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "RawFoodEaten",
					"name": "",
					"props": {
						"trait": "Delicate"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "UnrepairedGear",
					"name": "",
					"props": {
						"trait": "Maniac"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "RestNotRanked",
					"name": "",
					"props": {
						"trait": "Megalomaniac"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "RestPrisonnerCamp",
					"name": "",
					"props": {
						"trait": "Humanist"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "AfterSting",
					"name": "",
					"props": {
						"trait": "Allergic"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "PrisonnerTriedToEscape",
					"name": "",
					"props": {
						"trait": "HeavySleep"
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "DepressedDays",
					"name": "",
					"props": {},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "StolenItem",
					"name": "",
					"props": {
						"confessionElement": "ConfessionThief",
						"confessionPriority": 1
					},
					"path": "UnitPath",
					"done": true,
					"desc": ""
				},
				{
					"id": "ImaginativeTinker",
					"name": "",
					"props": {
						"resetOnRest": true
					},
					"path": "UnitPath",
					"desc": "",
					"done": true
				},
				{
					"id": "Camaraderie",
					"name": "",
					"props": {
						"resetOnBeginFight": true
					},
					"path": "UnitPath",
					"desc": "",
					"done": true
				},
				{
					"id": "CorruptedUnit",
					"name": "",
					"desc": "",
					"props": {
						"resetOnBeginFight": true
					},
					"done": true,
					"path": "UnitPath"
				},
				{
					"id": "BaseSong",
					"name": "",
					"props": {
						"songTitle": "D'aventure en aventure",
						"loot": "BaseSong"
					},
					"desc": "",
					"done": true
				},
				{
					"id": "JeanBon",
					"name": "Avoir un sanglier nommé : \"::name::\", et lui faire tuer [VALUE] unités en un seul combat.",
					"props": {
						"titleRequired": 5,
						"songTitle": "La geste de Jean-Bon le sanglier",
						"loot": "JeanBon"
					},
					"desc": "",
					"done": true
				},
				{
					"id": "NakedPeople",
					"name": "Remporter un combat contre [VALUE] unités ou plus avec une équipe sans aucun équipement.",
					"props": {
						"titleRequired": 8,
						"songTitle": "La balade des gens-tout-nus",
						"loot": "NakedPeople"
					},
					"desc": "",
					"done": true
				},
				{
					"id": "Nek",
					"name": "Remporter un combat avec une seule unité non-mourante.",
					"props": {
						"songTitle": "L'épopée du petit chanceux",
						"loot": "Nek",
						"titleRequired": 0
					},
					"desc": "",
					"done": true
				},
				{
					"id": "RelationRestNextToFriend",
					"name": "",
					"props": {
						"relationship": [
							{
								"currentRelation": 4,
								"value": 1,
								"proba": 0.05
							},
							{
								"currentRelation": 3,
								"value": 1,
								"proba": 0.1
							},
							{
								"currentRelation": 2,
								"value": -1,
								"proba": 0.0001
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "RelationRestAtCampfire",
					"name": "",
					"props": {
						"relationship": [
							{
								"currentRelation": 4,
								"value": 1,
								"proba": 0.05
							},
							{
								"currentRelation": 3,
								"value": 1,
								"proba": 0.1
							},
							{
								"currentRelation": 2,
								"value": -1,
								"proba": 0.5
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "RelationRestAtDiceGame",
					"name": "",
					"props": {
						"relationship": [
							{
								"currentRelation": 4,
								"value": 1,
								"proba": 0.05
							},
							{
								"currentRelation": 3,
								"value": 1,
								"proba": 0.1
							},
							{
								"currentRelation": 2,
								"value": -1,
								"proba": 1
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "RelationBattleHelp",
					"name": "",
					"props": {
						"relationship": [
							{
								"currentRelation": 4,
								"value": 1,
								"proba": 0.05
							},
							{
								"currentRelation": 3,
								"value": 1,
								"proba": 0.05
							},
							{
								"currentRelation": 2,
								"value": 1,
								"proba": 0.05
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "RelationBattleEndTurnNextToCompanion",
					"name": "",
					"props": {
						"relationship": [
							{
								"currentRelation": 4,
								"value": 1,
								"proba": 0.05
							},
							{
								"currentRelation": 3,
								"value": 1,
								"proba": 0.05
							},
							{
								"currentRelation": 1,
								"value": -1,
								"proba": 0.0001
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "RelationBattleShotPrecisionCompanion",
					"name": "",
					"props": {
						"relationship": [
							{
								"currentRelation": 3,
								"value": -1,
								"proba": 1
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "RelationBattleShotAoECompanion",
					"name": "",
					"props": {
						"relationship": [
							{
								"currentRelation": 3,
								"value": -1,
								"proba": 1
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "RelationBattleUseFriendlySkill",
					"name": "",
					"props": {
						"relationship": [
							{
								"currentRelation": 3,
								"value": 1,
								"proba": 0.2
							}
						]
					},
					"desc": "",
					"done": true
				},
				{
					"id": "RelationWhipCompanion",
					"name": "",
					"props": {
						"relationship": [
							{
								"currentRelation": 3,
								"value": -1,
								"proba": 1
							}
						]
					},
					"desc": "",
					"done": true
				}
			],
			"props": {},
			"separators": [
				{
					"title": "Titles",
					"id": "UnitRenamed"
				},
				{
					"title": "Counters",
					"id": "StolenItems"
				},
				{
					"title": "Paths",
					"id": "Blacksmith01"
				},
				{
					"level": 1,
					"id": "Boss"
				},
				{
					"level": 2,
					"id": "DeadOrAlive"
				},
				{
					"level": 3,
					"id": "Alchemist01"
				},
				{
					"title": "UnitTitles",
					"id": "Injuries"
				},
				{
					"title": "Songs",
					"id": "BaseSong"
				},
				{
					"title": "RelationShip",
					"id": "RelationRestNextToFriend"
				}
			]
		},
		{
			"name": "counter@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "unit",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "title",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "titleWoman",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "3",
					"name": "titleRequired",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "resetOnBeginFight",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "achievements",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "songTitle",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "6:loot",
					"name": "loot",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "confessionPriority",
					"opt": true
				},
				{
					"typeStr": "6:element",
					"name": "confessionElement",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:trait",
					"name": "trait",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "16",
					"name": "custom",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "relationship",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "confessionThreshold",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "confessionNeedTarget",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "notAnimal",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "resetOnRest",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "value",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:bonus",
					"name": "unlockedWith",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "coopMode",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "counter@props@achievements",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "value",
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "id"
				}
			]
		},
		{
			"name": "counter@props@relationship",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "5:Hate,Dislike,Tolerate,Neutral,Appreciate,Like,Love",
					"name": "currentRelation"
				},
				{
					"typeStr": "4",
					"name": "proba",
					"display": 1
				},
				{
					"typeStr": "3",
					"name": "value",
					"kind": null
				}
			]
		},
		{
			"name": "bonus@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:attribute",
					"name": "attribute",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "rewardAP",
					"opt": true
				},
				{
					"typeStr": "6:skill",
					"name": "skill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "fixedValue",
					"opt": true
				},
				{
					"typeStr": "10:NotFirstRound,NotChampionTarget,MultipleUnits,MultipleFoes",
					"name": "arenaProps",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "bonuses",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:item",
					"name": "unlockRecipe",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "items",
					"opt": true
				},
				{
					"typeStr": "6:unitPattern",
					"name": "pattern",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isMalus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:bonus",
					"name": "refBonus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "additionalText",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "2",
					"name": "isRestProduction",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isPercent",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "global",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "unitCondition",
					"opt": true
				},
				{
					"typeStr": "6:bonus",
					"name": "similarAs",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "globalCondition",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "hiddenInGlobalBonuses",
					"opt": true
				},
				{
					"typeStr": "16",
					"name": "custom",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "bonus@props@bonuses",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:bonus",
					"name": "bonus",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "value",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "hidden",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "bonus@props@items",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "count",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "stolen",
					"opt": true
				}
			]
		},
		{
			"name": "bonus@props@unitCondition",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "2",
					"name": "isAnimal",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isPlayer",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "skills",
					"opt": true,
					"documentation": "Un seul skill est suffisant pour valider la condition"
				}
			]
		},
		{
			"name": "bonus@props@unitCondition@skills",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:skill",
					"name": "skill",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "bonus@props@globalCondition",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "2",
					"name": "notWanted",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "wanted",
					"opt": true
				}
			]
		},
		{
			"name": "constant",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"display": null
				},
				{
					"typeStr": "4",
					"name": "value",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "valueDifficulty",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "values",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "11",
					"name": "color",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "info",
					"opt": true
				}
			],
			"lines": [
				{
					"id": "Feature_Version",
					"value": 0,
					"info": "-1 = Disabled\n0 = Not Release (trunk only)\n1 = Live\n2 = Beta",
					"values": []
				},
				{
					"id": "HideInCheatMenu",
					"value": 1
				},
				{
					"id": "Harag_Update",
					"value": 1
				},
				{
					"id": "Gosenberg2_Update",
					"value": 1
				},
				{
					"id": "Alazar1_Update",
					"value": 1
				},
				{
					"id": "Feature_Disabled",
					"value": -1
				},
				{
					"id": "Path_Update",
					"value": 0
				},
				{
					"id": "Difficulty_Update",
					"value": 1
				},
				{
					"id": "PlayerBaseSpeed",
					"value": 6,
					"info": "move walk speed on worldmap"
				},
				{
					"id": "PlayerRunSpeed",
					"value": 11
				},
				{
					"id": "PlayerStealthSpeedFactor",
					"value": 0.85,
					"valueDifficulty": []
				},
				{
					"id": "PlayerTiredSpeedFactor",
					"value": 0.7
				},
				{
					"id": "PlayerRotationSpeed",
					"value": 10
				},
				{
					"id": "PlayerPathfindCoef",
					"value": 2.3,
					"info": "Player pathfind can move if pathCost < distance * value"
				},
				{
					"id": "PlayerPathfindDiff",
					"value": 35,
					"info": "Player pathfind can move if  pathCost - distance < value"
				},
				{
					"id": "RoadRange",
					"value": 2
				},
				{
					"id": "RoamingSpeed",
					"value": 3.5
				},
				{
					"id": "RoamingAggroSpeed",
					"value": 9
				},
				{
					"id": "RoamingMaxAggroTime",
					"value": 15
				},
				{
					"id": "RoamingResetDistance",
					"value": 50
				},
				{
					"id": "RoamingFightAgainstTimeHours",
					"value": 4
				},
				{
					"id": "RecalcPathDistance",
					"value": 1,
					"values": []
				},
				{
					"id": "WorldMapRightClickDistance",
					"value": 3
				},
				{
					"id": "PlayerForestVisibility",
					"value": 30,
					"values": []
				},
				{
					"id": "RoamingAmbushCloseDetection",
					"value": 3.5
				},
				{
					"id": "RoamingAmbushEnterForest",
					"value": 50,
					"info": "When player enters in forest, can't ambush nearby roamings",
					"values": []
				},
				{
					"id": "PlayerAmbushRadius",
					"value": 20
				},
				{
					"id": "PlayerAmbushRunDurationFactor",
					"value": 1.5
				},
				{
					"id": "LoseBattleAggroProtectHours",
					"value": 2
				},
				{
					"id": "PlayerCityBaseSpeed",
					"value": 4.5
				},
				{
					"id": "PlayerCityRunSpeed",
					"value": 9
				},
				{
					"id": "ForestOutlinePlayer",
					"color": 8821224
				},
				{
					"id": "ForestBodyPlayer",
					"color": 3031160
				},
				{
					"id": "ForestOutlineEnemy",
					"color": 14631992
				},
				{
					"id": "ForestBodyEnemy",
					"color": 7876142,
					"values": []
				},
				{
					"id": "SettingColor",
					"color": 10363557
				},
				{
					"id": "SettingOutlineColor",
					"color": 5382486
				},
				{
					"id": "CollideRockAmount",
					"value": 0.4
				},
				{
					"id": "CollideRockSmoothSteps",
					"value": 3
				},
				{
					"id": "CollideSnowAmount",
					"value": 0.2
				},
				{
					"id": "PitonPlaceMaxPlayerRadius",
					"value": 25
				},
				{
					"id": "PitonPlaceMinLength",
					"value": 5
				},
				{
					"id": "PitonPlaceMaxLength",
					"value": 50
				},
				{
					"id": "PitonPlaceMinHeight",
					"value": 5
				},
				{
					"id": "PitonGoToEndMaxDistance",
					"value": 10
				},
				{
					"id": "PitonPlaceRope",
					"color": 12296830,
					"value": 0.15
				},
				{
					"id": "RoamingUnitScale",
					"value": 1.8
				},
				{
					"id": "HordeSpeed",
					"value": 1.5
				},
				{
					"id": "ForestSpeedCoeff",
					"value": 0.8
				},
				{
					"id": "ElasticForceConstant",
					"value": 0.1,
					"info": "Constante d'élasticité du ressort entre l'Œil et le \"lapin\"."
				},
				{
					"id": "ElasticForceSpeed",
					"info": "Vitesse constante du \"lapin\"",
					"value": 12
				},
				{
					"id": "Damping",
					"value": 0.98,
					"info": "coef frottement",
					"values": []
				},
				{
					"id": "MaxArmorLostWithThunderPercentage",
					"value": 40,
					"info": "Dégâts max que peut se prendre une unité touchée par la foudre (valeur incluse)"
				},
				{
					"id": "MinArmorLostWithThunderPercentage",
					"value": 10
				},
				{
					"id": "MaxHappyLostWithThunder",
					"value": 5,
					"info": "Bonheur max perdu par la troupe touchée par la foudre (valeur incluse)"
				},
				{
					"id": "MinHappyLostWithThunder",
					"value": 1
				},
				{
					"id": "TimeVisibleEyeAlazar",
					"value": 300
				},
				{
					"id": "TimeInvisibleEyeAlazar",
					"value": 200
				},
				{
					"id": "MinTimeBetweenBolt",
					"value": 4,
					"info": "En secondes"
				},
				{
					"id": "MaxTimeBetweenBolt",
					"value": 12,
					"info": "En secondes"
				},
				{
					"id": "TimeBetweenSecretBolt",
					"value": 5,
					"info": "En secondes"
				},
				{
					"id": "TimeForSmartBolt",
					"value": 7,
					"info": "En secondes"
				},
				{
					"id": "EyeTightnessRadius",
					"value": 40
				},
				{
					"id": "EyeTightnessTransition",
					"value": 2
				},
				{
					"id": "EyeTightnessZoom",
					"value": 0.4
				},
				{
					"id": "CoopMovementMinRadius",
					"value": 25
				},
				{
					"id": "CoopMovementMaxRadius",
					"value": 40
				},
				{
					"id": "CoopMovementRegroupTimer",
					"value": 1.5
				},
				{
					"id": "CoopDistanceEnterPlace",
					"value": 20
				},
				{
					"id": "CoopDistanceCamp",
					"value": 20
				},
				{
					"id": "PlayerColor1",
					"color": 8765923
				},
				{
					"id": "PlayerColor2",
					"color": 13873758
				},
				{
					"id": "PlayerColor3",
					"color": 11518067
				},
				{
					"id": "PlayerColor4",
					"color": 11905758
				},
				{
					"id": "MaxJobLevel",
					"value": 5
				},
				{
					"id": "JobXpLevels",
					"values": [
						{
							"value": 20
						},
						{
							"value": 80
						},
						{
							"value": 320
						},
						{
							"value": 1280
						}
					]
				},
				{
					"id": "GoldXpComponent",
					"value": 0.01
				},
				{
					"id": "CommonXpComponent",
					"value": 0.35
				},
				{
					"id": "UncommonXpComponent",
					"value": 0.75
				},
				{
					"id": "RareXpComponent",
					"value": 1.5
				},
				{
					"id": "LegendaryXpComponent",
					"value": 3
				},
				{
					"id": "DefaultXpComponent",
					"value": 1
				},
				{
					"id": "CookingXpReducteur",
					"value": 10,
					"info": "(lvl + 5 + CookingXpReducteur) / (nbCompagnon + CookingXpReducteur)"
				},
				{
					"id": "StealXpRatioWithCraft",
					"value": 0.2
				},
				{
					"id": "LaunderingXpRatioWithCraft",
					"value": 0.1
				},
				{
					"id": "FactorBlacksmithLevel1",
					"value": 3
				},
				{
					"id": "FactorJobLevel",
					"value": 0.5
				},
				{
					"id": "FactorJobLevelAlchimist",
					"value": 0.5
				},
				{
					"id": "FactorJobLevelCook",
					"value": 1
				},
				{
					"id": "FactorComponentTinkerer",
					"value": 1.2
				},
				{
					"id": "ActivitySuccessBonusXP",
					"value": 1.3
				},
				{
					"id": "ActivityBonusXPFirstItem",
					"value": 20
				},
				{
					"id": "ActivityBonusOnMaxLevelJob",
					"value": 100
				},
				{
					"id": "ActivityBonusOnMaxLevelPlayer",
					"value": 100
				},
				{
					"id": "ActivityBonusCraft",
					"value": 20
				},
				{
					"id": "ActivityDurationXP",
					"value": 1
				},
				{
					"id": "RuinsCameraDist",
					"value": 25
				},
				{
					"id": "RuinsCameraHeightTarget",
					"value": 1
				},
				{
					"id": "RuinsHallwayLightCost",
					"value": 3
				},
				{
					"id": "RuinsHallwayLightAlreadyExploredCost",
					"value": 1
				},
				{
					"id": "RuinsWalkTimeHour",
					"value": 1
				},
				{
					"id": "RuinsRestAttackDanger",
					"value": 0.8,
					"color": 0
				},
				{
					"id": "RuinsArrowUnexplored",
					"value": 1,
					"color": 16731969
				},
				{
					"id": "RuinsArrowExplored",
					"value": 1,
					"color": 16777215
				},
				{
					"id": "RuinsArrowFrom",
					"value": 0.3,
					"color": 16777215,
					"values": []
				},
				{
					"id": "ForsakenVillageMinWillpower",
					"value": 80
				},
				{
					"id": "ForsakenVillageMaxNoise",
					"value": 100
				},
				{
					"id": "ForsakenVillageDecreasePerHour",
					"value": 1
				},
				{
					"id": "ForsakenVillageExploreBuildingBase",
					"value": 5
				},
				{
					"id": "ForsakenVillageExploreBuilding",
					"value": 0.8
				},
				{
					"id": "ForsakenDangerIncAfterBattle",
					"value": 0.3
				},
				{
					"id": "ForsakenUnitBaseNoise",
					"value": 3
				},
				{
					"id": "ForsakenAnimalBaseNoise",
					"value": 10
				},
				{
					"id": "ForsakenNoisyTroopCondition",
					"value": 45
				},
				{
					"id": "ForsakenNoisyTroopNoise",
					"value": 10
				},
				{
					"id": "ForsakenSilentTroopCondition",
					"value": 35
				},
				{
					"id": "ForsakenSilentTroopNoise",
					"value": -10
				},
				{
					"id": "ForsakenBattleSearchInitial",
					"value": 10
				},
				{
					"id": "ForsakenBattleSearchIncrement",
					"value": 0,
					"valueDifficulty": [
						{
							"difficulty": 0,
							"value": 25
						},
						{
							"difficulty": 1,
							"value": 20
						},
						{
							"difficulty": 2,
							"value": 15
						}
					]
				},
				{
					"id": "ForsakenLockpickFailNoise",
					"value": 15
				},
				{
					"id": "GatherPrecisionSpeed",
					"value": 2
				},
				{
					"id": "GatherPerHit",
					"value": 0.05
				},
				{
					"id": "GatherPrecisionPerHit",
					"value": 0.2
				},
				{
					"id": "GatherRefillSlow",
					"value": 0.15
				},
				{
					"id": "GatherRefillNormal",
					"value": 0.3
				},
				{
					"id": "GatherRefillFast",
					"value": 1
				},
				{
					"id": "FactorScaleInteractive",
					"value": 2
				},
				{
					"id": "WorldMapGatherTipDistance",
					"value": 8
				},
				{
					"id": "GatherActivityHitCount",
					"value": 5,
					"info": "Mining/woodcutting"
				},
				{
					"id": "MiningVisualScale",
					"value": 120
				},
				{
					"id": "MiningSpeedCircleMin",
					"value": 1
				},
				{
					"id": "MiningSpeedCircleMax",
					"value": 1.4
				},
				{
					"id": "MiningRangeTorusMin",
					"value": 0.2
				},
				{
					"id": "MiningRangeTorusMax",
					"value": 0.6
				},
				{
					"id": "MiningTorusStartColor",
					"color": 16777215
				},
				{
					"id": "MiningTorusEndColor",
					"color": 9079434
				},
				{
					"id": "FishingRadiusCatchMin",
					"value": 0.4,
					"info": "radius min to reach (while fish escaping)"
				},
				{
					"id": "FishingRadiusCatchMax",
					"value": 0.6,
					"info": "radius max on start (while fish escaping)"
				},
				{
					"id": "FishingMoveDurationMin",
					"value": 0.5,
					"info": "duration min of 1 segment (fish escape)"
				},
				{
					"id": "FishingMoveDurationMax",
					"value": 2.5,
					"info": "duration max of 1 segment (fish escape)"
				},
				{
					"id": "FishingFishSpeed",
					"value": 0.7,
					"info": "fish escape speed"
				},
				{
					"id": "FishingDurationControl",
					"value": 6,
					"info": "duration to keep fish inside circle"
				},
				{
					"id": "FishhookMaxUse",
					"value": 2,
					"info": "may be less in some fail conditions"
				},
				{
					"id": "FishingComponentProba",
					"values": [
						{
							"value": 30
						},
						{
							"value": 60
						},
						{
							"value": 100
						}
					],
					"info": "Fisher lvl 3, 4, 5"
				},
				{
					"id": "FishingSpeedBonusFishhook",
					"values": [
						{
							"value": 0
						},
						{
							"value": 0.5
						},
						{
							"value": 1
						}
					],
					"info": "Default, solid, expert fishhook"
				},
				{
					"id": "FishingXpValues",
					"values": [
						{
							"value": 0.5
						},
						{
							"value": 0.25
						}
					],
					"info": "xp = TraitXpActivity * (values[0] + values[1] * (lvl - 1))"
				},
				{
					"id": "PuzzleXpScholar",
					"value": 40
				},
				{
					"id": "MastermindXpScholar",
					"value": 20
				},
				{
					"id": "RestXpScholar",
					"value": 1
				},
				{
					"id": "SmallAntiquityXpScholar",
					"value": 20
				},
				{
					"id": "BigAntiquityXpScholar",
					"value": 30
				},
				{
					"id": "AntiquityXpScholar",
					"value": 40
				},
				{
					"id": "SingXpBard",
					"value": 5
				},
				{
					"id": "ArcheryAimRadiusSpeed",
					"value": 2.5,
					"info": "speed rotation around mouse (X component)",
					"valueDifficulty": []
				},
				{
					"id": "ArcheryAimRadiusMin",
					"value": 6,
					"info": "radius min circle"
				},
				{
					"id": "ArcheryAimRadiusMax",
					"value": 35,
					"info": "radius max circle"
				},
				{
					"id": "ArcheryOffsetSpeed",
					"value": 1.3
				},
				{
					"id": "LockpickMaxAngle",
					"value": 300,
					"info": "total angle lockpickable (centered on bottom of lock)"
				},
				{
					"id": "LockpickCurveMinTopCliffHeight",
					"value": 0.2,
					"info": "used in harder setup : ]0;1["
				},
				{
					"id": "LockpickCurveMaxTopCliffHeight",
					"value": 0.4,
					"info": "used in easier setup : ]0;1["
				},
				{
					"id": "LockpickCurveDrobBelow",
					"value": 0.2,
					"info": "[0;1["
				},
				{
					"id": "LockpickCurveMinSteepFactor",
					"value": 0.1,
					"info": "used in harder setup : y = Factor * x"
				},
				{
					"id": "LockpickCurveMaxSteepFactor",
					"value": 2,
					"info": "used in easier setup : y = Factor * x"
				},
				{
					"id": "LockpickMinDurationWear",
					"value": 0.4,
					"info": "min duration of lockpick when forcing (s)"
				},
				{
					"id": "LockpickMaxDurationWear",
					"value": 2,
					"info": "max duration of lockpick when forcing (s)"
				},
				{
					"id": "LockpickWearImportanceGroupLevel",
					"value": 0,
					"info": ""
				},
				{
					"id": "LockpickWearImportanceThiefTrait",
					"value": 1
				},
				{
					"id": "LockpickWearImportanceDexterityLevel",
					"value": 0.4
				},
				{
					"id": "LockpickWearImportanceLockLevel",
					"value": 0.6
				},
				{
					"id": "LockpickMinRangeRatio",
					"value": 0.025,
					"info": "min ratio of the range pickable ]0;1["
				},
				{
					"id": "LockpickMaxRangeRatio",
					"value": 0.2,
					"info": "max ratio of the range pickable  ]0;1["
				},
				{
					"id": "LockpickRangeImportanceGroupLevel",
					"value": 0.8
				},
				{
					"id": "LockpickRangeImportanceThiefTrait",
					"value": 1
				},
				{
					"id": "LockpickRangeImportanceDextirityLevel",
					"value": 0.2
				},
				{
					"id": "LockpickRangeImportanceLockLevel",
					"value": 1
				},
				{
					"id": "LockpickMinimumRelativeDifficulty",
					"value": -2
				},
				{
					"id": "LockpickMaximumRelativeDifficulty",
					"value": 2
				},
				{
					"id": "LockpickDifficultyFactorIncrease",
					"value": 0.2
				},
				{
					"id": "AuthorizedOverDifficulty",
					"value": 1
				},
				{
					"id": "LockpickBaseXp",
					"value": 10
				},
				{
					"id": "LockpickBonusXp",
					"value": 0.2,
					"info": "% bonus exp par level de lockpick"
				},
				{
					"id": "CaravanHoursInTownMin",
					"value": 3
				},
				{
					"id": "CaravanHoursInTownMax",
					"value": 5
				},
				{
					"id": "CaravanLimit",
					"value": 10,
					"info": "Limit caravans in the world at the same time"
				},
				{
					"id": "PatrolLimit",
					"value": 5
				},
				{
					"id": "AmbushRoamingLimit",
					"value": 5
				},
				{
					"id": "AmbushRoamingPlayerInvulnerability",
					"value": 10,
					"info": "After battle, ambushroaming can't aggro play"
				},
				{
					"id": "AggroRangeDiffPowerScale",
					"value": 1,
					"info": "Scales the aggro range when army powers are different"
				},
				{
					"id": "GhostPackSpawn_MinDays",
					"value": 7
				},
				{
					"id": "GhostPackSpawn_MinDistanceFrom_Player",
					"value": 50
				},
				{
					"id": "GhostPackSpawn_MaxDistanceFrom_Player",
					"value": 150
				},
				{
					"id": "GhostPackSpawn_MinDistanceFrom_Places",
					"value": 40
				},
				{
					"id": "GhostPackSpawn_MinDistanceFrom_Cities",
					"value": 150
				},
				{
					"id": "GhostPackMove_MaxDistanceFrom_FogCenter",
					"value": 25
				},
				{
					"id": "GuardRenfort_FirstRound",
					"values": [
						{
							"value": 0
						},
						{
							"value": 0.3
						},
						{
							"value": 0.5
						},
						{
							"value": 0.5
						},
						{
							"value": 1
						}
					]
				},
				{
					"id": "GuardRenfort_SecondRound",
					"values": [
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 0.5
						},
						{
							"value": 1
						}
					]
				},
				{
					"id": "ForgeHeatSpeedIncreaseMin",
					"value": 1.2,
					"info": "min speed to reach perfect heat"
				},
				{
					"id": "ForgeHeatSpeedIncreaseMax",
					"value": 3,
					"info": "max speed to reach perfect heat"
				},
				{
					"id": "ForgeHeatSpeedIncreaseMargin",
					"info": "speed increase +/- margin * 0.5",
					"value": 0.4
				},
				{
					"id": "ForgeHeatSpeedDecrease",
					"value": 3,
					"info": "> 2"
				},
				{
					"id": "ForgeDurationPerfectHeatMin",
					"value": 0.25,
					"info": ""
				},
				{
					"id": "ForgeDurationPerfectHeatMax",
					"value": 0.25
				},
				{
					"id": "ForgeOverlapTimerMin",
					"value": 0.5,
					"info": "min duration after the start of the previous step"
				},
				{
					"id": "ForgeOverlapTimerMax",
					"value": 1.4,
					"info": "max duration after the start of the previous step"
				},
				{
					"id": "ForgeOverlapTimerMargin",
					"value": 0.2,
					"info": "overlap timer +/- margin * 0.5"
				},
				{
					"id": "ForgeWeightTierA",
					"value": 0.35,
					"info": "add % on perfect hit to get a * quality"
				},
				{
					"id": "ForgeWeightTierB",
					"value": 0.2,
					"info": "add % on good hit to get a * quality"
				},
				{
					"id": "ForgeWeightTierC",
					"value": 0,
					"info": "add % on bad hit to get a * quality"
				},
				{
					"id": "ForgeReducePercentPerFail",
					"value": 45,
					"info": ""
				},
				{
					"id": "ForgetPercentageQuality3",
					"value": 5
				},
				{
					"id": "NinePuzzle_Start_MinShuffleMoves",
					"value": 12,
					"info": "Minimum moves to shuffle the board"
				},
				{
					"id": "NinePuzzle_Start_MaxWellPlaceTiles",
					"value": 4,
					"info": "Maximum well placed tiles when starting game"
				},
				{
					"id": "NinePuzzle_TileMoveDuration",
					"value": 1,
					"info": "time for a tile to move to a new position"
				},
				{
					"id": "NinePuzzle_SolveCost_Gold",
					"value": 80
				},
				{
					"id": "NinePuzzle_SolveCost_Influence"
				},
				{
					"id": "CylinderPuzzle_FaceAmount",
					"value": 5,
					"info": "Number of faces by cylinder"
				},
				{
					"id": "CylinderPuzzle_RotateDuration",
					"value": 1,
					"info": "time for a wheel to move to the next position"
				},
				{
					"id": "CampViewDistance",
					"value": 35
				},
				{
					"id": "CampCameraAngleXStart",
					"value": -45
				},
				{
					"id": "CampCameraAngleZStart",
					"value": 135
				},
				{
					"id": "CampCameraRotationSpeed",
					"value": 0.7
				},
				{
					"id": "PlaceViewMinAngle",
					"value": -80
				},
				{
					"id": "PlaceViewMaxAngle",
					"value": -10
				},
				{
					"id": "ObjInspectCameraDistance",
					"value": 20
				},
				{
					"id": "ObjInspectCameraAngle",
					"value": 2
				},
				{
					"id": "RestHours",
					"value": 8
				},
				{
					"id": "RestSpeed",
					"value": 2
				},
				{
					"id": "TravelSpeed",
					"value": 10
				},
				{
					"id": "TravelRestByDay",
					"value": 0.8
				},
				{
					"id": "RoamingSleepDangerRadius",
					"value": 85
				},
				{
					"id": "RoamingSleepDangerNear",
					"value": 40
				},
				{
					"id": "SleepDangerBonusIfWanted",
					"value": 10
				},
				{
					"id": "UnlockCaptainSleeps",
					"value": 7
				},
				{
					"id": "UnlockLieutenantRestWithCaptain",
					"value": 3
				},
				{
					"id": "UnlockLieutenantLevels",
					"value": 20
				},
				{
					"id": "UnlockLieutenant2Levels",
					"value": 40
				},
				{
					"id": "UnlockLieutenantRestWithLieutenant",
					"value": 2
				},
				{
					"id": "UnlockBannerLevels",
					"value": 20
				},
				{
					"id": "NameCaptainCost",
					"value": 50
				},
				{
					"id": "NameLieutenantCost",
					"value": 100
				},
				{
					"id": "LeaverSeniorityFactor",
					"value": 0.2,
					"info": "leave score = leave counters - ancienneté * factor"
				},
				{
					"id": "BecomeAlcoholicChance",
					"value": 0.05
				},
				{
					"id": "AlcoholConsecutiveDays",
					"value": 5,
					"info": "consecutive days with alcohol to become alcoholic"
				},
				{
					"id": "NoAlcoholConsecutiveDays",
					"value": 10,
					"info": "consecutive days without alcohol to alcohol withdrawal"
				},
				{
					"id": "EscapeMalusAllyNextToPrisoner",
					"value": -20,
					"info": ""
				},
				{
					"id": "EscapeRadiusAllyNextToPrisoner",
					"value": 2
				},
				{
					"id": "EscapeMalusInjury",
					"value": -20,
					"info": "Malus for Success probability to escape when injured"
				},
				{
					"id": "EscapeAllyProabilityInjury",
					"value": 50,
					"info": "Probability to get an injury when a prisoner escaped (ally adjacent)"
				},
				{
					"id": "Escape_SpawnRadiusMin",
					"value": 75
				},
				{
					"id": "Escape_SpawnRadiusMax",
					"value": 250
				},
				{
					"id": "MinPrisonerTrust",
					"value": -50
				},
				{
					"id": "MaxPrisonerTrust",
					"value": 50
				},
				{
					"id": "MinPrisonerTrustToRecruit",
					"value": 40
				},
				{
					"id": "MoneyLaunderingBase",
					"value": 30,
					"info": "% chance de blanchir un objet volé dans le coffre"
				},
				{
					"id": "MoneyLaunderingBonus",
					"info": "% bonus de blanchiment par objet volé dans le coffre (stack)",
					"value": 10
				},
				{
					"id": "RelationNeutralIndex",
					"value": 3
				},
				{
					"id": "RelationXpValues",
					"values": [
						{
							"value": 15
						},
						{
							"value": 10
						},
						{
							"value": 5
						},
						{
							"value": 5
						},
						{
							"value": 10
						},
						{
							"value": 15
						},
						{
							"value": 20
						}
					]
				},
				{
					"id": "RelationLevelBestFriend",
					"value": 3
				},
				{
					"id": "RelationLevelEnemy",
					"value": -3
				},
				{
					"id": "DismantlePowQuantity",
					"values": [
						{
							"value": 0.7
						},
						{
							"value": 0.8
						},
						{
							"value": 0.9
						},
						{
							"value": 1
						}
					],
					"info": "Dismantle quantity :\nRandom quantity = random(100)^DismantlePowQuantity (DismantlePowQuantity depends on item quality)\nBest of Y draws (Y = item level * DismantleDrawPerLevel)"
				},
				{
					"id": "DismantleDrawPerLevel",
					"info": "",
					"value": 0.5
				},
				{
					"id": "TrainingDummy_BaseXpMin",
					"value": 8
				},
				{
					"id": "TrainingDummy_BaseXpMax",
					"value": 12
				},
				{
					"id": "TrainingDummy_BonusPercentT2",
					"value": 20
				},
				{
					"id": "TrainingDummy_BonusPercentT3",
					"value": 40
				},
				{
					"id": "TrainingDummy_XpIncreaseByLevel",
					"value": 1.5
				},
				{
					"id": "WatchStool_BaseBonus",
					"value": 0.1,
					"info": "rest attack chance reduction (by assigned unit)"
				},
				{
					"id": "WatchStool_PrisonerMalus",
					"value": 10,
					"info": "prisoner escape chance reduction (by assigned unit)"
				},
				{
					"id": "Lectern_RestCount_SmallAntiquity",
					"value": 3
				},
				{
					"id": "Lectern_RestCount_BigAntiquity",
					"value": 5
				},
				{
					"id": "Lectern_RestCount_Antiquity",
					"value": 7
				},
				{
					"id": "Stake_RestCount_Corpse",
					"value": 3,
					"info": "nombre de repos avant pourrissement"
				},
				{
					"id": "Stake_Smelly_Odour",
					"value": 2,
					"info": "happiness malus"
				},
				{
					"id": "Resolution_CostBase",
					"value": 100
				},
				{
					"id": "Resolution_CostPerUse",
					"value": 100
				},
				{
					"id": "GlobalSalaryDifficulty",
					"valueDifficulty": [
						{
							"value": 0.8,
							"difficulty": 0
						},
						{
							"value": 1,
							"difficulty": 1
						},
						{
							"value": 1.2,
							"difficulty": 2
						}
					]
				},
				{
					"id": "GlobalTiredDifficulty",
					"valueDifficulty": [
						{
							"value": 0.7,
							"difficulty": 0
						},
						{
							"value": 0.9,
							"difficulty": 1
						},
						{
							"value": 1.1,
							"difficulty": 2
						}
					]
				},
				{
					"id": "DailySalaryMin",
					"value": 14
				},
				{
					"id": "DailySalaryMax",
					"value": 19
				},
				{
					"id": "SalaryCoefPerLevel",
					"value": 4
				},
				{
					"id": "SalaryAddingCaptain",
					"value": 3
				},
				{
					"id": "SalaryAddingLieutenant",
					"value": 2
				},
				{
					"id": "SalarySleeps",
					"valueDifficulty": [
						{
							"difficulty": 0,
							"value": 4
						},
						{
							"difficulty": 1,
							"value": 3
						},
						{
							"difficulty": 2,
							"value": 3
						}
					]
				},
				{
					"id": "SalarySleepNotifTiredness",
					"value": 0.2
				},
				{
					"id": "MoraleRandomization",
					"value": 5,
					"info": "+/- max morale bonus at unit generation"
				},
				{
					"id": "ConstitutionTransportBonus",
					"value": 0.3
				},
				{
					"id": "ConstitutionToHealth",
					"value": 2,
					"values": [
						{
							"value": 4
						}
					],
					"valueDifficulty": []
				},
				{
					"id": "MaxLevelLock",
					"value": 12
				},
				{
					"id": "MaxLevelGroups",
					"value": 14
				},
				{
					"id": "ExtraAttributePoint_InfluenceCost",
					"info": "Cout du \"Plan de carrière\"",
					"values": [
						{
							"value": 10
						},
						{
							"value": 30
						}
					]
				},
				{
					"id": "LevelXpValues",
					"values": [
						{
							"value": 0
						},
						{
							"value": 200
						},
						{
							"value": 260
						},
						{
							"value": 580
						},
						{
							"value": 980
						},
						{
							"value": 1660
						},
						{
							"value": 2600
						},
						{
							"value": 3500
						},
						{
							"value": 4200
						},
						{
							"value": 4600
						},
						{
							"value": 5000
						},
						{
							"value": 5500
						}
					]
				},
				{
					"id": "XpWinBasePerEnemy",
					"value": 18,
					"info": "xpwin = base * power ^ (enemyPower / armyPower - 1)"
				},
				{
					"id": "XpWinBasePerEnemyKilled",
					"value": 36
				},
				{
					"id": "XpWinPowerRatio",
					"value": 2,
					"info": "xpwin = base * power ^ (enemyPower / armyPower - 1)"
				},
				{
					"id": "XpWinDifficultyFactor",
					"value": 0.2,
					"info": "xpwin *= (1 + D * difficulty)"
				},
				{
					"id": "XpWinUnitNotInBattle",
					"value": 0.8
				},
				{
					"id": "UpValueLevelRef",
					"value": 12
				},
				{
					"id": "TraitXPBase",
					"value": 20,
					"info": "points d'xp pour passer du niveau trait 0->1 "
				},
				{
					"id": "TraitXPIncrease",
					"value": 4,
					"info": "xp needed = base * increase ^ level"
				},
				{
					"id": "TraitXPActivity",
					"value": 10
				},
				{
					"id": "RoamingSeenTimeFreeze",
					"value": 720
				},
				{
					"id": "PowerEvolutionPerDay",
					"value": 0.5
				},
				{
					"id": "PowerEvolutionPerFight",
					"value": 0.3
				},
				{
					"id": "RoamingSeenFightEquiv",
					"value": 12
				},
				{
					"id": "PowerBasePerUnit",
					"value": 20
				},
				{
					"id": "PowerLevelUpFactor",
					"value": 1.3,
					"info": "prise en compte du level dans la puissance"
				},
				{
					"id": "PowerDifficultyFactor",
					"value": 1.3,
					"values": [
						{
							"value": 1
						},
						{
							"value": 1.2
						},
						{
							"value": 1.3
						},
						{
							"value": 1.75
						},
						{
							"value": 1.9
						},
						{
							"value": 2
						}
					]
				},
				{
					"id": "EnemyEarlyStatMalus",
					"valueDifficulty": [
						{
							"value": 25,
							"difficulty": 0
						},
						{
							"value": 10,
							"difficulty": 1
						},
						{
							"value": 0,
							"difficulty": 2
						}
					]
				},
				{
					"id": "EnemyStatBonusLevel",
					"value": 3
				},
				{
					"id": "EnemyStatBonusLevels",
					"values": [
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 15
						},
						{
							"value": 15
						},
						{
							"value": 30
						},
						{
							"value": 30
						},
						{
							"value": 40
						},
						{
							"value": 40
						},
						{
							"value": 40
						},
						{
							"value": 40
						},
						{
							"value": 40
						},
						{
							"value": 40
						},
						{
							"value": 40
						}
					]
				},
				{
					"id": "EnemyStatBonusLevelsEasy",
					"values": [
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 10
						},
						{
							"value": 10
						},
						{
							"value": 20
						},
						{
							"value": 20
						},
						{
							"value": 30
						},
						{
							"value": 30
						},
						{
							"value": 30
						},
						{
							"value": 30
						},
						{
							"value": 30
						},
						{
							"value": 30
						},
						{
							"value": 30
						}
					]
				},
				{
					"id": "EnemyStatBonusLevelsHard",
					"values": [
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 20
						},
						{
							"value": 20
						},
						{
							"value": 40
						},
						{
							"value": 40
						},
						{
							"value": 50
						},
						{
							"value": 50
						},
						{
							"value": 50
						},
						{
							"value": 50
						},
						{
							"value": 50
						},
						{
							"value": 50
						},
						{
							"value": 50
						}
					]
				},
				{
					"id": "EnemyStatsBonusAnimalScale",
					"value": 0.5
				},
				{
					"id": "GlobalFightDifficulty",
					"valueDifficulty": [
						{
							"value": 0.5,
							"difficulty": 0
						},
						{
							"value": 0.8,
							"difficulty": 1
						},
						{
							"value": 1.1,
							"difficulty": 2
						}
					],
					"value": 0.8
				},
				{
					"id": "PowerFactor_Skill",
					"value": 0.02,
					"info": ""
				},
				{
					"id": "PowerFactor_PassiveSkill",
					"value": 0.03
				},
				{
					"id": "PowerFactor_UtilitarySkill",
					"value": 0
				},
				{
					"id": "PowerFactor_SkillUpgrade",
					"value": 0.01
				},
				{
					"id": "PowerFactor_GroupPassive",
					"value": 0.01
				},
				{
					"id": "PowerFactor_LeaderSkillPerUnit",
					"value": 0.02
				},
				{
					"id": "PowerFactor_WeaponOil",
					"value": 0
				},
				{
					"id": "PowerFactor_BeltAccessory",
					"value": 0
				},
				{
					"id": "PowerFactor_UnitRarity",
					"values": [
						{
							"value": 0
						},
						{
							"value": 0.15
						},
						{
							"value": 0.3
						}
					],
					"info": "Power coefficient by rarity: common/unco/rare"
				},
				{
					"id": "PowerFactor_ArmyLevel",
					"info": "multiplied by player level",
					"valueDifficulty": [
						{
							"value": 0,
							"difficulty": 0
						},
						{
							"value": 0,
							"difficulty": 1
						},
						{
							"value": 0,
							"difficulty": 2
						}
					]
				},
				{
					"id": "PowerFactor_ArmySize_MaxValue",
					"value": 0
				},
				{
					"id": "PowerFactor_ArmySize_MinUnits",
					"value": 0
				},
				{
					"id": "PowerFactor_ArmySize_Exp",
					"valueDifficulty": [
						{
							"value": 0,
							"difficulty": 0
						},
						{
							"value": 0,
							"difficulty": 1
						},
						{
							"value": 0,
							"difficulty": 2
						}
					]
				},
				{
					"id": "PowerFactor_ArmySize_Factor",
					"valueDifficulty": [
						{
							"value": 0,
							"difficulty": 0
						},
						{
							"value": 0,
							"difficulty": 1
						},
						{
							"value": 0,
							"difficulty": 2
						}
					]
				},
				{
					"id": "PowerFactor_MovementRef",
					"value": 10
				},
				{
					"id": "PowerFactor_ForDex",
					"value": 3
				},
				{
					"id": "PowerFactor_Level",
					"values": [
						{
							"value": -0.25
						},
						{
							"value": -0.1
						},
						{
							"value": 0
						}
					],
					"info": "Ajuste le power en fonction du level de reference (don't remove 0 to last one)"
				},
				{
					"id": "MaxEnemiesFactor",
					"value": 1.3
				},
				{
					"id": "EnemiesRenfortFactor",
					"value": 1.5
				},
				{
					"id": "RenfortsBattleFactor",
					"value": 0.5
				},
				{
					"id": "RegionMinPower",
					"valueDifficulty": [
						{
							"difficulty": 0,
							"value": 0
						},
						{
							"difficulty": 1,
							"value": 1.1
						},
						{
							"difficulty": 2,
							"value": 1.3
						}
					]
				},
				{
					"id": "ChampionDotFactor",
					"value": 0.25
				},
				{
					"id": "ChampionPercentHealthReduction",
					"value": 0.5
				},
				{
					"id": "ChampionFixedDifficulty_Loop",
					"values": [
						{
							"value": 0
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 2
						},
						{
							"value": 3
						},
						{
							"value": 4
						}
					]
				},
				{
					"id": "GroupPassiveMinLevel1",
					"value": 5,
					"info": "Min group level to get groupType passive skill"
				},
				{
					"id": "GroupPassiveMinLevel2",
					"value": 7,
					"info": "Min group level to get groupType passive skill"
				},
				{
					"id": "EnemyItemRequireLevel",
					"value": 4
				},
				{
					"id": "RandomTrait1Positive1Negative",
					"value": 0.4
				},
				{
					"id": "RandomTrait2Positive",
					"value": 0.25
				},
				{
					"id": "RandomTrait1Positive",
					"value": 0.25
				},
				{
					"id": "FixedDifficultyPowers",
					"values": [
						{
							"value": 240
						},
						{
							"value": 460
						},
						{
							"value": 950
						},
						{
							"value": 1050
						},
						{
							"value": 1750
						},
						{
							"value": 2750
						},
						{
							"value": 1200
						},
						{
							"value": 1950
						},
						{
							"value": 2970
						},
						{
							"value": 2750
						},
						{
							"value": 3900
						},
						{
							"value": 6400
						},
						{
							"value": 4800
						},
						{
							"value": 8200
						},
						{
							"value": 12900
						},
						{
							"value": 10500
						},
						{
							"value": 14800
						},
						{
							"value": 20200
						}
					]
				},
				{
					"id": "FixedDifficultyPowersEasy",
					"values": [
						{
							"value": 160
						},
						{
							"value": 370
						},
						{
							"value": 780
						},
						{
							"value": 730
						},
						{
							"value": 1350
						},
						{
							"value": 2050
						},
						{
							"value": 730
						},
						{
							"value": 1350
						},
						{
							"value": 2050
						},
						{
							"value": 2270
						},
						{
							"value": 3200
						},
						{
							"value": 4800
						},
						{
							"value": 4000
						},
						{
							"value": 6700
						},
						{
							"value": 9890
						},
						{
							"value": 9050
						},
						{
							"value": 12700
						},
						{
							"value": 15900
						}
					]
				},
				{
					"id": "FixedDifficultyPowersHard",
					"values": [
						{
							"value": 300
						},
						{
							"value": 550
						},
						{
							"value": 1000
						},
						{
							"value": 1350
						},
						{
							"value": 1930
						},
						{
							"value": 2850
						},
						{
							"value": 1350
						},
						{
							"value": 1930
						},
						{
							"value": 3350
						},
						{
							"value": 3600
						},
						{
							"value": 4900
						},
						{
							"value": 6800
						},
						{
							"value": 6800
						},
						{
							"value": 9050
						},
						{
							"value": 11800
						},
						{
							"value": 11800
						},
						{
							"value": 16600
						},
						{
							"value": 26500
						}
					]
				},
				{
					"id": "FixedDifficultyMinCounts",
					"values": [
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						}
					]
				},
				{
					"id": "FixedDifficultyMinCountsEasy",
					"values": [
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						}
					]
				},
				{
					"id": "FixedDifficultyMinCountsHard",
					"values": [
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						},
						{
							"value": 1
						}
					]
				},
				{
					"id": "FixedDifficultyReferenceLevels",
					"values": [
						{
							"value": 1
						},
						{
							"value": 2
						},
						{
							"value": 3
						},
						{
							"value": 4
						},
						{
							"value": 5
						},
						{
							"value": 6
						},
						{
							"value": 4
						},
						{
							"value": 5
						},
						{
							"value": 6
						},
						{
							"value": 6
						},
						{
							"value": 7
						},
						{
							"value": 8
						},
						{
							"value": 8
						},
						{
							"value": 9
						},
						{
							"value": 10
						},
						{
							"value": 10
						},
						{
							"value": 11
						},
						{
							"value": 12
						}
					]
				},
				{
					"id": "FixedDifficultyReferenceLevelsEasy",
					"values": [
						{
							"value": 1
						},
						{
							"value": 2
						},
						{
							"value": 3
						},
						{
							"value": 4
						},
						{
							"value": 5
						},
						{
							"value": 6
						},
						{
							"value": 4
						},
						{
							"value": 5
						},
						{
							"value": 6
						},
						{
							"value": 6
						},
						{
							"value": 7
						},
						{
							"value": 8
						},
						{
							"value": 8
						},
						{
							"value": 9
						},
						{
							"value": 10
						},
						{
							"value": 10
						},
						{
							"value": 11
						},
						{
							"value": 12
						}
					]
				},
				{
					"id": "FixedDifficultyReferenceLevelsHard",
					"values": [
						{
							"value": 1
						},
						{
							"value": 2
						},
						{
							"value": 3
						},
						{
							"value": 4
						},
						{
							"value": 5
						},
						{
							"value": 7
						},
						{
							"value": 4
						},
						{
							"value": 5
						},
						{
							"value": 7
						},
						{
							"value": 7
						},
						{
							"value": 8
						},
						{
							"value": 9
						},
						{
							"value": 9
						},
						{
							"value": 10
						},
						{
							"value": 11
						},
						{
							"value": 11
						},
						{
							"value": 12
						},
						{
							"value": 14
						}
					]
				},
				{
					"id": "HeightFactorCurveTrajectory",
					"value": 0.15,
					"info": "height = distance * factor (a bit more complex actually)"
				},
				{
					"id": "SpeedArrowAttack",
					"value": 60,
					"info": "kind of m/s"
				},
				{
					"id": "SpeedProjectileAttack",
					"value": 20
				},
				{
					"id": "SpeedRotationProjectile",
					"value": 6
				},
				{
					"id": "BloodTrailMainDist",
					"value": 0.2
				},
				{
					"id": "BloodTrailCrossDist",
					"value": 0.4
				},
				{
					"id": "BloodTrailScaleMin",
					"value": 0.4
				},
				{
					"id": "BloodTrailScaleMax",
					"value": 0.7
				},
				{
					"id": "InjurySmallHpPercent",
					"value": 50,
					"info": "si vie < X% on prends une blessure small"
				},
				{
					"id": "InjuryFleePercentGet",
					"value": 50
				},
				{
					"id": "InfluenceWinPerFight",
					"value": 7
				},
				{
					"id": "SkilledUnit_Ratio",
					"info": "group generation : tente d'ajouter le status Skilled à une unité toutes les X unités (tirage)\nLigne = level",
					"values": [
						{
							"value": -1
						},
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 0
						},
						{
							"value": 5
						},
						{
							"value": 5
						},
						{
							"value": 5
						},
						{
							"value": 4
						},
						{
							"value": 4
						},
						{
							"value": 3
						},
						{
							"value": 3
						},
						{
							"value": 2
						}
					]
				},
				{
					"id": "SkilledUnit_Chance",
					"value": 0.25,
					"info": "si echec au 1er tirage ->100% sur tirage suivant"
				},
				{
					"id": "InfluenceWinPerDifficulty",
					"value": 4
				},
				{
					"id": "InfluenceWinPerKilledUnit",
					"value": 1
				},
				{
					"id": "InfluenceLostOnUnhappy",
					"value": 5
				},
				{
					"id": "UnhappySalary",
					"value": 6
				},
				{
					"id": "SalaryReallyLateDays",
					"value": 3,
					"info": "Notification \"happy_bonus.salaries_late2\" à la place de \"happy_bonus.salaries_late\""
				},
				{
					"id": "UnhappyStarve",
					"value": 6
				},
				{
					"id": "StarvationMemoryRests",
					"value": 6
				},
				{
					"id": "UnhappyRetreat",
					"value": 2
				},
				{
					"id": "HappyMin",
					"values": [
						{
							"value": -5
						},
						{
							"value": -7
						},
						{
							"value": -10
						}
					],
					"info": "depends of campfire tier"
				},
				{
					"id": "HappyBonus",
					"value": 7
				},
				{
					"id": "HappyMax",
					"value": 15
				},
				{
					"id": "HappyBadDietFactor",
					"value": 0.3
				},
				{
					"id": "HappyLeaverGain",
					"value": 1
				},
				{
					"id": "HappyToInfluence",
					"values": [
						{
							"value": 5
						},
						{
							"value": 5
						},
						{
							"value": 6
						}
					],
					"info": "depends of campfire tier"
				},
				{
					"id": "TirednessAmountHours",
					"value": 24
				},
				{
					"id": "TirednessKillingDelayHours",
					"value": 5
				},
				{
					"id": "TirednessMax",
					"value": 1.2
				},
				{
					"id": "TirednessSteps",
					"value": 30
				},
				{
					"id": "TirednessNoMovingFactor",
					"value": 0.4
				},
				{
					"id": "TirednessRunFactor",
					"value": 1,
					"info": "l'augmentation de vitesse est déjà prise en compte"
				},
				{
					"id": "FightTirenessBase",
					"value": 0.1
				},
				{
					"id": "FightTirenessPerRound",
					"value": 0.06
				},
				{
					"id": "RunStaminaHours",
					"value": 1
				},
				{
					"id": "RunStaminaRecovery",
					"value": 1.2
				},
				{
					"id": "RunStaminaLowRecovery",
					"value": 1.5
				},
				{
					"id": "StealthDelayBefore",
					"value": 0.25
				},
				{
					"id": "PlayerMinWealth_Init",
					"value": 750,
					"info": "Wealth minimum à avoir pour incrémenter la jauge de richesse"
				},
				{
					"id": "PlayerMinWealth_IncPerLevel",
					"value": 10,
					"info": ""
				},
				{
					"id": "PlayerMinWealth_IncPerUnit",
					"value": 50
				},
				{
					"id": "WealthMax",
					"info": "Taille de la jauge de richesse",
					"values": [
						{
							"value": 25000
						},
						{
							"value": 20000
						},
						{
							"value": 30000
						},
						{
							"value": 40000
						},
						{
							"value": 50000
						}
					]
				},
				{
					"id": "WealthPower",
					"value": 1.1,
					"info": "wealth^pow lors de l'ajout à la jauge de richesse"
				},
				{
					"id": "Wealth_DiscoverPlaceFactor",
					"value": 0.1
				},
				{
					"id": "Wealth_DiscoverPlaceDecr",
					"value": 200
				},
				{
					"id": "Brigands_PowerMax",
					"value": 3
				},
				{
					"id": "Brigands_Spawn_MinDays",
					"value": 6
				},
				{
					"id": "Brigands_Aggro_RestWealthMin",
					"value": 500,
					"info": "Wealth "
				},
				{
					"id": "Brigands_Aggro_RestWealthMax",
					"value": 1000
				},
				{
					"id": "Brigands_Aggro_RestIncrMin",
					"value": 0.1
				},
				{
					"id": "Brigands_Aggro_RestIncrMax",
					"value": 0.3
				},
				{
					"id": "Brigands_Aggro_DiscoverPlaceFactor",
					"info": "aggro = aggro - (aggro * AggroFactor) - AggroDecr",
					"value": 0.1
				},
				{
					"id": "Brigands_Aggro_DiscoverPlaceDecr",
					"value": 200,
					"info": ""
				},
				{
					"id": "Brigands_Steal_RatioInventory",
					"value": 0.1,
					"info": "Quantity of brigands inventory stolen per thief"
				},
				{
					"id": "NotifyFirstAnnounce",
					"value": 0.7
				},
				{
					"id": "NotifySecondAnnounce",
					"value": 0.9
				},
				{
					"id": "DayDuration",
					"value": 180
				},
				{
					"id": "PlayerStartUnits",
					"value": 4
				},
				{
					"id": "StealPriceToLevelFactor",
					"value": 0.2
				},
				{
					"id": "StealPriceToLevelPow",
					"value": 0.5
				},
				{
					"id": "StealItemSellPriceFactor",
					"value": 0.5
				},
				{
					"id": "StealLevelToWanted",
					"value": 30
				},
				{
					"id": "StealItemsFine",
					"value": 20
				},
				{
					"id": "StealItemsCaughtFine",
					"value": 80
				},
				{
					"id": "StealSellItemsFine",
					"value": 50
				},
				{
					"id": "StealSellWantedFactorIfStolenThere",
					"value": 3
				},
				{
					"id": "StealItemWantedRangeRandom",
					"value": 0.6
				},
				{
					"id": "StealItemTaxFactor",
					"value": 1
				},
				{
					"id": "StealItemLootCaravanStealFactor",
					"value": 0.5
				},
				{
					"id": "TaxToInfluenceFactor",
					"value": 0.4
				},
				{
					"id": "SuspicionApprenticeThiefReduction",
					"value": 20
				},
				{
					"id": "GuardAggroRadiusWithStolenItems",
					"value": 8
				},
				{
					"id": "GuardWantedAggroRadiusMin",
					"value": 20
				},
				{
					"id": "GuardWantedAggroRadiusMax",
					"value": 50
				},
				{
					"id": "GuardWantedAggroSpeed",
					"value": 14
				},
				{
					"id": "GuardMaxWanted",
					"value": 100
				},
				{
					"id": "WantedRecupPerDay",
					"value": 20
				},
				{
					"id": "WantedRecupSlowIfWanted",
					"value": 0.6
				},
				{
					"id": "WantedActiveStart",
					"value": 100
				},
				{
					"id": "WantedActiveStop",
					"value": 50
				},
				{
					"id": "WantedMaxLevel",
					"value": 5
				},
				{
					"id": "WantedMaxValue",
					"value": 600
				},
				{
					"id": "RecruitRegenDays",
					"value": 1,
					"info": "au bout de combien de jours un slot de recruit respawn"
				},
				{
					"id": "RecruitCostBase",
					"value": 20
				},
				{
					"id": "RecruitCostIncrease",
					"value": 10
				},
				{
					"id": "RecruitCostFactor",
					"value": 1.2
				},
				{
					"id": "RecruitCostFactorPrisonerInTroop",
					"value": 0.5,
					"info": "% influence cost when recruit prisoner (already in troop)"
				},
				{
					"id": "RecruitCostInfluenceToGold",
					"value": 2
				},
				{
					"id": "RecruitCostPrisonFactor",
					"value": 1.2
				},
				{
					"id": "RecruitLevelGenFactor",
					"value": 0.9
				},
				{
					"id": "RecruitPoneyPriceBase",
					"value": 180
				},
				{
					"id": "RecruitPoneyPriceIncrease",
					"value": 90
				},
				{
					"id": "BonusApOnDialogRest",
					"value": 3
				},
				{
					"id": "PrisonerOutlawBasePrice",
					"value": 50
				},
				{
					"id": "PrisonerOutlawLevelScalePrice",
					"value": 5
				},
				{
					"id": "PrisonerBasePrice",
					"value": 100
				},
				{
					"id": "DayBeforeExecutionByInquisition",
					"value": 3
				},
				{
					"id": "MaxHeretic",
					"value": 2400,
					"info": ""
				},
				{
					"id": "PrisonerLevelScalePrice",
					"value": 10
				},
				{
					"id": "PrisonerJobScalePrice",
					"value": 100
				},
				{
					"id": "PrisonerTrustToolProd",
					"value": 5
				},
				{
					"id": "PrisonerTrustWellFed",
					"value": 1
				},
				{
					"id": "PrisonerTrustAdjacentAlly",
					"value": 1
				},
				{
					"id": "PrisonerTrustAdjacentAnimal",
					"value": -1
				},
				{
					"id": "PrisonerTrustBeardPerDay",
					"value": 1
				},
				{
					"id": "PrisonerTrustBeardPerDayMax",
					"value": 5
				},
				{
					"id": "PrisonerTrustHeal",
					"value": 5
				},
				{
					"id": "PrisonerTrustToothPaste",
					"value": 5
				},
				{
					"id": "PrisonerTrustNotRest",
					"value": -20
				},
				{
					"id": "PrisonerTrustPillory",
					"value": -50
				},
				{
					"id": "PrisonerTrustWhip",
					"value": -100
				},
				{
					"id": "PrisonerTrustSuicideProbability",
					"value": 1
				},
				{
					"id": "PrisonerTrustSuicideHappyMalus",
					"value": -3
				},
				{
					"id": "PrisonerTrustBeltAccPrisonerTrust",
					"value": 5
				},
				{
					"id": "PrisonerEscapeJailCounter",
					"value": 5,
					"info": "Each X prisoner reliver, 1 prisoner will hunts player"
				},
				{
					"id": "PrisonerBaseSkillLevel1",
					"value": 5
				},
				{
					"id": "PrisonerBaseSkillLevel2",
					"value": 7
				},
				{
					"id": "ItemQualityBonus1",
					"value": 1.1
				},
				{
					"id": "ItemQualityBonus2",
					"value": 1.2
				},
				{
					"id": "ItemQualityBonus3",
					"value": 1.3
				},
				{
					"id": "ItemQualityPrice1",
					"value": 1.1
				},
				{
					"id": "ItemQualityPrice2",
					"value": 1.2
				},
				{
					"id": "ItemQualityPrice3",
					"value": 1.3
				},
				{
					"id": "ItemLevelPriceBaseLevel",
					"value": 3
				},
				{
					"id": "ItemLevelPriceLowCoef",
					"value": 0.15
				},
				{
					"id": "ItemLevelPriceHighCoef",
					"value": 0.8
				},
				{
					"id": "ItemLevelPriceHighMul",
					"value": 0.8
				},
				{
					"id": "ItemQualityProba1",
					"value": 0.2
				},
				{
					"id": "ItemQualityProba2",
					"value": 0.05
				},
				{
					"id": "LootEquipDropProba",
					"value": 0.08
				},
				{
					"id": "LootEquipDropProba_Trait",
					"value": 0.005
				},
				{
					"id": "LootEquipDropProbaProgression",
					"value": 0.03
				},
				{
					"id": "LootFactor",
					"value": 0.9
				},
				{
					"id": "ItemRarityBonusU",
					"value": 1.1
				},
				{
					"id": "ItemRarityBonusR",
					"value": 1.3
				},
				{
					"id": "ItemRarityBonusL",
					"value": 1.5
				},
				{
					"id": "ItemTypeLootRarityU",
					"value": 20
				},
				{
					"id": "ItemTypeLootRarityR",
					"value": 5
				},
				{
					"id": "ItemPriceFactorExpensive",
					"value": 1.5
				},
				{
					"id": "ItemPriceFactorDiscount",
					"value": 0.8
				},
				{
					"id": "ItemPriceDefaultSellFactor",
					"value": 0.5,
					"info": "si non defini par le type de l'objet (ItemType.props.sellPriceFactor)"
				},
				{
					"id": "ItemPriceMaximumSellFactor",
					"value": 0.9,
					"info": "prix maximum de revente par rapport au prix local"
				},
				{
					"id": "ItemSoldExpirationDays",
					"value": 7
				},
				{
					"id": "MerchantRefillPerDaySlow",
					"value": 0.3
				},
				{
					"id": "MerchantRefillPerDayNormal",
					"value": 1
				},
				{
					"id": "MerchantRefillPerDayFast",
					"value": 3
				},
				{
					"id": "MerchantFullRefillDays",
					"value": 15
				},
				{
					"id": "TradeGoodPriceOverDistance",
					"value": 1000,
					"info": "distance max de majoration"
				},
				{
					"id": "TradeGoodPricePowerDistance",
					"value": 0.6
				},
				{
					"id": "TradeGoodRepatriatePriceFactor",
					"value": 1.2
				},
				{
					"id": "TradeGoodPathSellThreshold",
					"value": 1.5,
					"info": "seuil de revente pour valider défi"
				},
				{
					"id": "ItemSkillRequireLevel",
					"value": 4
				},
				{
					"id": "PathXpBase",
					"value": 5
				},
				{
					"id": "PathXpNext",
					"value": 5
				},
				{
					"id": "PathMaxLevel",
					"value": 9
				},
				{
					"id": "BaseDiscoveryNeeded",
					"value": 100,
					"info": "knowledge = BaseDiscoveryNeeded + level * DiscoveryNeededPerLevel"
				},
				{
					"id": "DiscoveryNeededPerLevel",
					"value": 10
				},
				{
					"id": "GainOnCityDiscover",
					"value": 40
				},
				{
					"id": "GainOnPlaceDiscover",
					"value": 25
				},
				{
					"id": "GainOnFirstCraft",
					"value": 40
				},
				{
					"id": "GainOnLecternRest",
					"value": 25
				},
				{
					"id": "MissionExploredAreaProbability",
					"value": 0.1
				},
				{
					"id": "MissionPlaceDistanceMin",
					"value": 60
				},
				{
					"id": "MissionSlotPerBoard",
					"value": 5
				},
				{
					"id": "MissionAcceptedPerBoard",
					"value": 3
				},
				{
					"id": "MissionGenerationDayMin",
					"value": 0.5
				},
				{
					"id": "MissionGenerationDayMax",
					"value": 2
				},
				{
					"id": "MissionGoldMinDifficulty",
					"valueDifficulty": [
						{
							"difficulty": 0,
							"value": 200
						},
						{
							"difficulty": 1,
							"value": 175
						},
						{
							"difficulty": 2,
							"value": 150
						}
					],
					"info": ""
				},
				{
					"id": "MissionGoldMaxDifficulty",
					"valueDifficulty": [
						{
							"difficulty": 0,
							"value": 250
						},
						{
							"difficulty": 1,
							"value": 225
						},
						{
							"difficulty": 2,
							"value": 200
						}
					],
					"info": ""
				},
				{
					"id": "MissionGoldCoefUnit",
					"valueDifficulty": [
						{
							"difficulty": 0,
							"value": 0.8
						},
						{
							"difficulty": 1,
							"value": 0.8
						},
						{
							"difficulty": 2,
							"value": 0.8
						}
					],
					"info": "(unitCount ^ MissionGoldCoefUnit) * MissionGoldCoefUnit/100"
				},
				{
					"id": "MissionGoldIncrPerExtraUnit",
					"valueDifficulty": [
						{
							"difficulty": 0,
							"value": 7
						},
						{
							"difficulty": 1,
							"value": 7
						},
						{
							"difficulty": 2,
							"value": 7
						}
					]
				},
				{
					"id": "MissionNegociationMaxTries",
					"value": 3
				},
				{
					"id": "MissionNegociationProbabilityInitialCursor",
					"value": 60
				},
				{
					"id": "MissionNegociationProbabilityMax",
					"value": 100
				},
				{
					"id": "MissionNegociationProbabilityDecrement",
					"value": -10,
					"info": "Probability decrement per try"
				},
				{
					"id": "MissionNegociationInfluenceChancePow",
					"value": 1.2,
					"info": "pow(%chance * K)"
				},
				{
					"id": "MissionNegociationInfluenceGainDivisor",
					"value": 30,
					"info": "diff price / K"
				},
				{
					"id": "MissionNegociationGoldBonus",
					"value": 0.2
				},
				{
					"id": "MissionNegociationGoldMalus",
					"value": -0.1,
					"info": ""
				},
				{
					"id": "MissionNegociationStep",
					"value": 5,
					"info": "Negociation slider step"
				},
				{
					"id": "ArmorPerRepair",
					"value": 10,
					"info": "how much armor on repair material works"
				},
				{
					"id": "InfluenceGoldSell",
					"value": 30,
					"info": "how much gold to sell to get renown"
				},
				{
					"id": "InfluenceGoldBuy",
					"value": 100,
					"info": "same for buy"
				},
				{
					"id": "InfluenceMerchantDelayHours",
					"value": 4
				},
				{
					"id": "RepairArmorPriceFactor",
					"value": 0.8
				},
				{
					"id": "RestPriceFactor",
					"value": 0.8
				},
				{
					"id": "RestFoodPrice",
					"value": 3
				},
				{
					"id": "HealInjuryPrice",
					"value": 20
				},
				{
					"id": "RepatriateItemCost",
					"value": 50
				},
				{
					"id": "RepatriateUnitCost",
					"value": 50
				},
				{
					"id": "CellSize",
					"value": 0.5,
					"info": "taille des cellules de la grille de pathfinding et socle (en m)"
				},
				{
					"id": "SocleSize",
					"value": 3,
					"info": "default socle size"
				},
				{
					"id": "MaxSocleSize",
					"value": 5,
					"info": "max socle size (used for generation)"
				},
				{
					"id": "UnitHitRadiusDefault",
					"value": 0.25,
					"info": "Default hit radius for each unit (in meter)"
				},
				{
					"id": "AttributeCriticalScalePower",
					"value": 0.6,
					"info": "critBonus = ATTR ^ power"
				},
				{
					"id": "CriticalHitBonusBase",
					"value": 5,
					"info": "critHit = (WILL- base) * mult"
				},
				{
					"id": "CriticalHitBonusMult",
					"info": "critHit = (WILL - base) * mult",
					"value": 0.2
				},
				{
					"id": "CriticalHitPercentBackstabBonus",
					"value": 10
				},
				{
					"id": "MeterPerMovement",
					"value": 1,
					"info": "move = (MOVE - base) * mult"
				},
				{
					"id": "DefaultPrecisionAngle",
					"value": 30,
					"info": "default angle of precision mode"
				},
				{
					"id": "PrecisionMainTargetWeight",
					"value": 5,
					"info": "Precision mode main target weight (other targets weight is 1). Say with 9 other targets then you get hit percent of 100*PrecisionMainTargetWeight/(9+PrecisionMainTargetWeight) on main target."
				},
				{
					"id": "PrecisionDistanceFactor",
					"value": 1
				},
				{
					"id": "PrecisionAngleFactor",
					"value": 1
				},
				{
					"id": "BackstabIgnoreGuard",
					"value": 50
				},
				{
					"id": "MoraleLostOnDie",
					"value": 10
				},
				{
					"id": "MoraleLostIncreaseOnEachDeath",
					"value": 2
				},
				{
					"id": "MoraleForEnemyFlee",
					"value": 85
				},
				{
					"id": "MoraleForGalvanized",
					"value": 70
				},
				{
					"id": "MoraleForMotivated",
					"value": 60
				},
				{
					"id": "WillpowerForNotDying",
					"value": 15,
					"info": "Willpower required to trigger \"Resolve\" (protect the first dying) + MaxWillPower"
				},
				{
					"id": "KnockOutChanceMin",
					"value": 50,
					"info": "chances de capture"
				},
				{
					"id": "KnockOutChanceMax",
					"value": 100
				},
				{
					"id": "KnockOutChanceMinHealthPercent",
					"value": 50
				},
				{
					"id": "KnockOutChanceMaxHealthPercent",
					"value": 10
				},
				{
					"id": "ActionPointBaseMax",
					"value": 5
				},
				{
					"id": "ActionPointGainPerSleep",
					"value": 2
				},
				{
					"id": "HoursSpentPerRound",
					"value": 2
				},
				{
					"id": "GuardMaxValue",
					"value": 80
				},
				{
					"id": "BattleFogRadius",
					"value": 2,
					"info": "(in meters)"
				},
				{
					"id": "FightPopupDelay",
					"value": 1
				},
				{
					"id": "AoEDistancePreventDoubleHit",
					"value": 0.75
				},
				{
					"id": "RenfortSpawn_Foe_DistMin",
					"value": 10,
					"info": "distance from player units centroid"
				},
				{
					"id": "RenfortSpawn_Foe_DistMax",
					"value": 20,
					"info": "distance from player units centroid"
				},
				{
					"id": "RenfortSpawn_Ally_DistMin",
					"value": 8,
					"info": "distance from player units centroid"
				},
				{
					"id": "RenfortSpawn_Ally_DistMax",
					"value": 15,
					"info": "distance from player units centroid"
				},
				{
					"id": "RockSlideCaveProbability",
					"value": 50
				},
				{
					"id": "CorruptMissingHealthFactor",
					"value": 0.5
				},
				{
					"id": "CorruptUnitUncoFactor",
					"value": 0.5
				},
				{
					"id": "CorruptUnitRareFactor",
					"value": 0.25
				},
				{
					"id": "CorruptUnitSkilledFactor",
					"value": 0.25
				},
				{
					"id": "CorruptMoralPositiveFactor",
					"value": 0.1
				},
				{
					"id": "CorruptBonusPerTryFactor",
					"value": 0.1
				},
				{
					"id": "RoundUltimateUnlocked",
					"value": 1,
					"info": ""
				},
				{
					"id": "AIDmgScoreFactor",
					"value": 10,
					"info": "todo: faire grimper avec le level-up"
				},
				{
					"id": "AIFriendlyHitScoreFactor",
					"value": -3,
					"info": "must be negative, it's how bad it is to hit friendly units"
				},
				{
					"id": "AIPrecisionSkillHitPercentLimit",
					"value": 80,
					"info": ""
				},
				{
					"id": "AdditionnalAttacksOnRetreat",
					"value": 25,
					"info": "Pourcentage d'attaques d'opportunités supplémentaires instanciées lors d'une retraite"
				},
				{
					"id": "AIMinimalEnemyPrecision",
					"value": 0.2
				},
				{
					"id": "AISkillExecutionNbBestScores",
					"value": 5,
					"info": "No leader units don't take best score each time, take among the X best scores"
				},
				{
					"id": "AIScore_Now",
					"value": 50
				},
				{
					"id": "AIScore_Disengage",
					"value": -10000000,
					"info": "malus"
				},
				{
					"id": "AIScore_LastAction",
					"value": -100,
					"info": "malus"
				},
				{
					"id": "AIScore_WillNotEngage",
					"value": 500
				},
				{
					"id": "AIScore_Damage",
					"value": 50
				},
				{
					"id": "AIScore_DeadlyBlow",
					"value": 10,
					"info": "Skill acton would kill target unit and give bonus"
				},
				{
					"id": "AIScore_PrecisionSkillPenality",
					"value": -50,
					"info": "* hit Percent allies"
				},
				{
					"id": "AIScore_BackstabGuard",
					"value": 25,
					"info": "Can backstab a enemy with Guard"
				},
				{
					"id": "AIScore_FinishDeadlyUnit",
					"value": 1000,
					"info": "If target has Status Dying + isMelee"
				},
				{
					"id": "AIScore_NoPriorityUnit",
					"value": -10000
				},
				{
					"id": "AIScore_HasTargets",
					"value": 25
				},
				{
					"id": "AIScore_PlayerUnit",
					"value": 25,
					"info": "Not focus neutral unit"
				},
				{
					"id": "AIScore_AllyFriendlyFire",
					"value": -10000,
					"info": "Ally don't touch player units"
				},
				{
					"id": "AIScore_SkillSpecific",
					"value": 100
				},
				{
					"id": "AIScore_Sport_Goal",
					"value": 1000,
					"info": "Marquer un but"
				},
				{
					"id": "AIScore_Sport_BallCarrier",
					"value": 750,
					"info": "Porteur de ballon"
				},
				{
					"id": "AIScore_Sport_GetBall",
					"info": "Récuperation du ballon",
					"value": 500
				},
				{
					"id": "AIScore_Sport_InterceptCarrier",
					"value": 250,
					"info": "Interception du porteur"
				},
				{
					"id": "AIScore_Sport_PassBall",
					"value": 200,
					"info": "Transmettre le ballon"
				},
				{
					"id": "AIScore_Sport_KickBall",
					"value": 200,
					"info": "Faire une chandelle"
				},
				{
					"id": "AIScore_Sport_ProtectCarrier",
					"value": 100,
					"info": "Protection du porteur"
				},
				{
					"id": "AIScore_Sport_GetCloserToBall",
					"value": 100,
					"info": "Se rapprocher du ballon"
				},
				{
					"id": "AIScore_Sport_Placement",
					"value": 50,
					"info": "Se placer pour receptionner/intercepter le ballon"
				},
				{
					"id": "AIScore_Sport_GetCloserToGoal",
					"value": 50,
					"info": "Se rapprocher de l'embut adverse"
				},
				{
					"id": "AIScore_Sport_HasTarget",
					"value": 10,
					"info": "A score equivalent, privilégier cibles avec allié (pass/kick)"
				},
				{
					"id": "CameraScrollAccel",
					"value": 30
				},
				{
					"id": "CameraMinDistance",
					"value": 30
				},
				{
					"id": "CameraMaxDistance",
					"value": 40
				},
				{
					"id": "CameraCityZoom",
					"value": 0.5
				},
				{
					"id": "CameraZoomSpeed",
					"value": 0.15
				},
				{
					"id": "CameraAngleXStart",
					"value": -40
				},
				{
					"id": "CameraAngleXMin",
					"value": -50
				},
				{
					"id": "CameraAngleXMax",
					"value": -30
				},
				{
					"id": "BattleUnitMoveSpeed",
					"value": 4.5,
					"info": "visual/graphical speed which units walk at during battle"
				},
				{
					"id": "BattleUnitPushbackSpeed",
					"value": 9
				},
				{
					"id": "BattleUnitRunSpeed",
					"value": 5.625,
					"info": "afraid , run charge anims"
				},
				{
					"id": "BattleUnitRotationSpeed",
					"value": 5,
					"info": "visual/graphical rotation speed during battle"
				},
				{
					"id": "UnitHudAlpha",
					"value": 0.75,
					"info": ""
				},
				{
					"id": "ZoneRotationStep",
					"value": 5.625
				},
				{
					"id": "DoubleClickTime",
					"value": 0.2
				},
				{
					"id": "TimelineCount",
					"value": 8,
					"info": "number of units in the timeline"
				},
				{
					"id": "Spawn2dLifeSpan",
					"value": 2.5
				},
				{
					"id": "Spawn2dSpeed",
					"value": 0.5,
					"info": "controls speed at which spawn2ds go up"
				},
				{
					"id": "RangeAttackCameraDistance",
					"value": 5,
					"info": "distance which requires a camera setting for range attack"
				},
				{
					"id": "RangeAttackCameraSlideSpeed",
					"value": 4,
					"info": "camera move speed in case it's setting "
				},
				{
					"id": "GreySocleAlpha",
					"value": 0.55
				},
				{
					"id": "BattleCameraRotationSpeed",
					"value": 1.2
				},
				{
					"id": "BattleCameraBorder",
					"value": 2
				},
				{
					"id": "BattleMapSize",
					"value": 80
				},
				{
					"id": "BattleOutlineEnemy",
					"color": 14894650
				},
				{
					"id": "BattleOutlineAlly",
					"color": 7201712
				},
				{
					"id": "BattleOutlineNeutral",
					"color": 15178483
				},
				{
					"id": "BattleOutlineCurrentUnit",
					"color": 16120831
				},
				{
					"id": "BattleColorMoveRangeEnemy",
					"color": 14522777
				},
				{
					"id": "BattleColorMoveRangeAlly",
					"color": 11394457
				},
				{
					"id": "BattleColorMoveRangeNeutral",
					"color": 15178483
				},
				{
					"id": "BattleOutlinePlayer1",
					"color": 8765923
				},
				{
					"id": "BattleColorMoveRangePlayer1",
					"color": 11391442
				},
				{
					"id": "BattleOutlinePlayer2",
					"color": 13873758
				},
				{
					"id": "BattleColorMoveRangePlayer2",
					"color": 13873758
				},
				{
					"id": "BattleOutlinePlayer3",
					"color": 11518067
				},
				{
					"id": "BattleColorMoveRangePlayer3",
					"color": 11518067
				},
				{
					"id": "BattleOutlinePlayer4",
					"color": 11905758
				},
				{
					"id": "BattleColorMoveRangePlayer4",
					"color": 11905758
				},
				{
					"id": "BattleAlphaShape",
					"value": 0.2
				},
				{
					"id": "BattleMudShape",
					"value": 0.2,
					"color": 12477744
				},
				{
					"id": "BattleMudShapeTransition",
					"value": 0.5
				},
				{
					"id": "NpcTalkSpeed",
					"value": 70,
					"values": []
				},
				{
					"id": "NpcTalkSmoothDuration",
					"value": 0.8
				},
				{
					"id": "NpcTalkSmoothEasing",
					"value": 1.7
				},
				{
					"id": "LipSyncMinVolume",
					"value": 0.001
				},
				{
					"id": "LipSyncFadeInSpeed",
					"value": 30
				},
				{
					"id": "LipSyncFadeOutSpeed",
					"value": 5
				},
				{
					"id": "ElementOverColor",
					"color": 8355711
				},
				{
					"id": "ElementHighlightColor",
					"color": 3947583
				},
				{
					"id": "ElementImportantColor",
					"color": 3698209
				},
				{
					"id": "RoamingAggroColor",
					"color": 10037288
				},
				{
					"id": "BorderMission",
					"color": 14760502,
					"value": 0.6
				},
				{
					"id": "InnerMission",
					"color": 14568777,
					"value": 0.15
				},
				{
					"id": "BorderHostage",
					"value": 0.6,
					"color": 14801974
				},
				{
					"id": "InnerHostage",
					"value": 0.15,
					"color": 14786614
				},
				{
					"id": "BorderSettingMission",
					"value": 0.6,
					"color": 11286241
				},
				{
					"id": "InnerSettingMission",
					"value": 0.15,
					"color": 11094494
				},
				{
					"id": "RadiusPlaceMission",
					"value": 50
				},
				{
					"id": "WaterBorder",
					"color": 2760199,
					"value": 1
				},
				{
					"id": "RoadsBlurRadius",
					"value": 5
				},
				{
					"id": "MinimapSwampInterval",
					"value": 20
				},
				{
					"id": "MinimapWalls",
					"value": 5,
					"color": 1377792
				},
				{
					"id": "MinimapWallsBlur",
					"value": 2
				},
				{
					"id": "FowSize",
					"value": 2048
				},
				{
					"id": "FowScale",
					"value": 7
				},
				{
					"id": "FowPlayerRadius",
					"value": 8
				},
				{
					"id": "FowBlurRadius",
					"value": 2.5
				},
				{
					"id": "FowBorder",
					"value": 4
				},
				{
					"id": "FowFactorIncreaseRadius",
					"info": "used for extra vision when terrain is going downward",
					"value": 1.5
				},
				{
					"id": "FowDownhillErosionFactor",
					"value": 0.35,
					"info": "factor * height gained when going downhill"
				},
				{
					"id": "FowUphillErosionFactor",
					"value": 1.5,
					"info": "factor * height lost when going uphill"
				},
				{
					"id": "FowForestReduceFactor",
					"value": 20
				},
				{
					"id": "FowColor",
					"color": 0
				},
				{
					"id": "FowTransitionSpeed",
					"value": 0.03,
					"info": "speed at which the FoW gets dissipated."
				},
				{
					"id": "FowPlaceRadius",
					"value": 3.5,
					"info": "radius when you discover a place"
				},
				{
					"id": "WorldLodBias",
					"value": -1
				},
				{
					"id": "ShadowFadeEndLow",
					"value": 200
				},
				{
					"id": "ShadowFadeEndMedium",
					"value": 250
				},
				{
					"id": "ShadowFadeStartRatio",
					"value": 0.8
				},
				{
					"id": "ShadowFadePower",
					"value": 1
				},
				{
					"id": "RatNestMin",
					"value": 6
				},
				{
					"id": "RatNestMax",
					"value": 8
				},
				{
					"id": "RatDistanceMinFromSpawn",
					"value": 15
				},
				{
					"id": "RatNestSpacingMin",
					"value": 15
				},
				{
					"id": "RatNestSpacingMax",
					"value": 20
				},
				{
					"id": "RatSpawnerDistMin",
					"value": 4
				},
				{
					"id": "RatSpawnerDistMax",
					"value": 8
				},
				{
					"id": "Rat_BattlePoisonHighColor",
					"color": 3562821
				},
				{
					"id": "Rat_BattlePoisonLowColor",
					"color": 7868462
				},
				{
					"id": "ReachPointDistanceMin",
					"value": 30
				},
				{
					"id": "ReachPointDistanceMax",
					"value": 40
				},
				{
					"id": "VoxPopuliCount",
					"value": 2
				},
				{
					"id": "Arena_GetGritValue",
					"value": 2
				},
				{
					"id": "Arena_NbLeader_Combat_1",
					"value": 1
				},
				{
					"id": "Arena_NbLeader_Combat_2",
					"value": 2
				},
				{
					"id": "Arena_NbLeader_Combat_3",
					"value": 4
				},
				{
					"id": "Arena_NbTurnsRefheshObjective",
					"value": 1
				},
				{
					"id": "GhostPack_RadiusFogFromUnitSpawn",
					"value": 16
				},
				{
					"id": "GhostPack_NbUnits_Renfort",
					"valueDifficulty": [
						{
							"value": 0.2,
							"difficulty": 0
						},
						{
							"value": 0.2,
							"difficulty": 1
						},
						{
							"value": 0.3,
							"difficulty": 2
						}
					]
				},
				{
					"id": "GhostPack_Round_Renfort",
					"value": 1
				},
				{
					"id": "GhostPack_NbUnits_Nightmare",
					"value": 0.25,
					"valueDifficulty": [
						{
							"value": 0.25,
							"difficulty": 0
						},
						{
							"value": 0.25,
							"difficulty": 1
						},
						{
							"value": 0.25,
							"difficulty": 2
						}
					]
				},
				{
					"id": "GhostPack_Round_Nightmare",
					"value": 1
				},
				{
					"id": "GhostPack_BattleFogHighColor",
					"color": 9102079
				},
				{
					"id": "GhostPack_BattleFogLowColor",
					"color": 10730690
				},
				{
					"id": "GhostPack_BattleFogEmissive",
					"value": 0.6
				},
				{
					"id": "GhostPack_BattleFogAmount",
					"value": 2.9
				},
				{
					"id": "GhostPack_BattleFogDiscoveredAmountMarshland",
					"value": 0.6
				},
				{
					"id": "Sport_TotalRound",
					"value": 8
				},
				{
					"id": "Sport_MaxActionPoint",
					"value": 0,
					"info": "(disabled)"
				},
				{
					"id": "Sport_TeamMembers",
					"value": 6
				},
				{
					"id": "Sport_TeamMembersAI",
					"value": 6
				},
				{
					"id": "Sport_Run_RangeOffset",
					"value": 1,
					"info": "offset based on strength/dexterity "
				},
				{
					"id": "Sport_Pass_Range",
					"value": 8
				},
				{
					"id": "Sport_Pass_RangeOffset",
					"value": 1,
					"info": "offset based on strength/dexterity "
				},
				{
					"id": "Sport_Pass_DispersionOffset",
					"value": 10,
					"info": "offset based on strength/dexterity "
				},
				{
					"id": "Sport_Pass_BallSpeed",
					"value": 15
				},
				{
					"id": "Sport_Kick_Range",
					"value": 12
				},
				{
					"id": "Sport_Kick_RangeOffset",
					"value": 2,
					"info": "offset based on strength/dexterity "
				},
				{
					"id": "Sport_Kick_Dispersion",
					"value": 2.5,
					"info": "base ray dispersion"
				},
				{
					"id": "Sport_Kick_DispersionOffset",
					"value": 1,
					"info": "offset based on strength/dexterity "
				},
				{
					"id": "Sport_Kick_DispersionByDistance",
					"value": 0.1,
					"info": "dispersion ray increase by distance"
				},
				{
					"id": "Sport_Kick_BallSpeed",
					"value": 20
				},
				{
					"id": "Sport_FendOff_Chance",
					"value": 65
				},
				{
					"id": "Sport_FendOff_ChanceOffset",
					"value": 15
				},
				{
					"id": "Sport_Dodge_Chance",
					"value": 65
				},
				{
					"id": "Sport_Dodge_ChanceOffset",
					"value": 15
				},
				{
					"id": "Sport_KnockDown_Chance",
					"info": "",
					"value": 65
				},
				{
					"id": "Sport_KnockDown_ChanceOffset",
					"value": 10
				},
				{
					"id": "Escape_ReachZone_Color",
					"color": 10037288,
					"valueDifficulty": []
				},
				{
					"id": "Celestium_Search_Total",
					"valueDifficulty": [
						{
							"difficulty": 0,
							"value": 60
						},
						{
							"difficulty": 1,
							"value": 100
						},
						{
							"difficulty": 2,
							"value": 120
						}
					]
				},
				{
					"id": "Celestium_Search_PerUse",
					"value": 9.1
				},
				{
					"id": "Celestium_Search_Renfort",
					"valueDifficulty": [
						{
							"value": 0.05,
							"difficulty": 0
						},
						{
							"value": 0.15,
							"difficulty": 1
						},
						{
							"value": 0.3,
							"difficulty": 2
						}
					],
					"info": "% player unit"
				},
				{
					"id": "Celestium_Destroy_Heal",
					"valueDifficulty": [
						{
							"difficulty": 0,
							"value": 0.05
						},
						{
							"difficulty": 1,
							"value": 0.06
						},
						{
							"difficulty": 2,
							"value": 0.075
						}
					],
					"info": ""
				},
				{
					"id": "Confession_PartialGroupSelection_Min",
					"value": 0.1,
					"info": "Selection random d'une partie du groupe : minimum"
				},
				{
					"id": "Confession_PartialGroupSelection_Max",
					"value": 0.3,
					"info": "Selection random d'une partie du groupe : maximum"
				},
				{
					"id": "Confession_DialogLockCount",
					"value": 20,
					"info": "Nombre de confessions générées avant de pouvoir refaire un tirage pour un dialogue de confession déjà tiré "
				},
				{
					"id": "RangeVoiceID",
					"value": 4,
					"info": "Sound Gameobject VoiceID entre 1 et value"
				},
				{
					"id": "RangeVoiceModifierID",
					"value": 8,
					"info": "Sound Gameobject VoiceModifierID entre 1 et value"
				},
				{
					"id": "ListenerDistanceWorld",
					"value": 140,
					"info": "150 on est dans le sol en ville"
				},
				{
					"id": "ListenerDistanceDiorama",
					"value": 1,
					"valueDifficulty": []
				},
				{
					"id": "ListenerDistanceFight",
					"value": 25
				},
				{
					"id": "MusicMinSpacing",
					"value": 180,
					"valueDifficulty": []
				},
				{
					"id": "MusicMaxSpacing",
					"value": 240
				},
				{
					"id": "MusicMinSpacingBattle",
					"value": 90
				},
				{
					"id": "MusicMaxSpacingBattle",
					"value": 150
				},
				{
					"id": "LightningMaxRadius",
					"value": 80
				},
				{
					"id": "LightningMinRadius",
					"value": 50
				},
				{
					"id": "SecondsBetweenLightning",
					"value": 15
				},
				{
					"id": "FireDurationUnderRain",
					"value": 1
				},
				{
					"id": "MarshlandTransition",
					"value": 25
				},
				{
					"id": "SnowFootprintsDuration",
					"value": 15
				},
				{
					"id": "GrassFootprintsDuration",
					"value": 1
				},
				{
					"id": "CrowsRate",
					"value": 0.2
				},
				{
					"id": "CrowsCooldown",
					"value": 30
				},
				{
					"id": "CrowsMaxDistance",
					"value": 2
				},
				{
					"id": "Human_SSSIntensity",
					"value": 0.1,
					"valueDifficulty": []
				},
				{
					"id": "MipStart",
					"value": 0
				},
				{
					"id": "MipEnd",
					"value": 1000,
					"color": 0
				},
				{
					"id": "MipPower",
					"value": 0.7
				},
				{
					"id": "CloudAltitude",
					"value": 70
				},
				{
					"id": "CloudFadeStart",
					"value": 120
				},
				{
					"id": "CloudFadeEnd",
					"value": 105
				},
				{
					"id": "CustomizeUnitOutlineColor",
					"color": 3883589,
					"values": []
				},
				{
					"id": "CustomizeUnitOutlineSize",
					"value": 1,
					"values": []
				},
				{
					"id": "GeeseCooldownMin",
					"value": 30
				},
				{
					"id": "GeeseCooldownMax",
					"value": 60
				},
				{
					"id": "GeeseTargetRadiusAroundPlayer",
					"value": 80
				},
				{
					"id": "GeeseSpawnDistance",
					"value": 150
				},
				{
					"id": "BattleMovementTextureBlur",
					"value": 5
				},
				{
					"id": "BlizzardBattleMovementTextureBlur",
					"value": 15
				},
				{
					"id": "BattleMovementSocleSize",
					"value": 0.4
				}
			],
			"props": {},
			"separators": [
				{
					"title": "Features",
					"id": "Feature_Version"
				},
				{
					"title": "Controls WorldMap",
					"id": "PlayerBaseSpeed"
				},
				{
					"title": "Eye Alazar",
					"id": "ElasticForceConstant"
				},
				{
					"title": "Coop",
					"id": "CoopMovementMinRadius"
				},
				{
					"title": "Job",
					"id": "MaxJobLevel"
				},
				{
					"title": "Activity",
					"id": "ActivitySuccessBonusXP"
				},
				{
					"title": "ForsakenVillage",
					"id": "ForsakenVillageMinWillpower"
				},
				{
					"title": "Gather",
					"id": "GatherPrecisionSpeed"
				},
				{
					"title": "Mining",
					"id": "MiningVisualScale"
				},
				{
					"title": "Fishing",
					"id": "FishingRadiusCatchMin"
				},
				{
					"title": "Scholar",
					"id": "PuzzleXpScholar"
				},
				{
					"title": "Bard",
					"id": "SingXpBard"
				},
				{
					"title": "Archery",
					"id": "ArcheryAimRadiusSpeed"
				},
				{
					"title": "Lockpick",
					"id": "LockpickMaxAngle"
				},
				{
					"title": "Systemics",
					"id": "CaravanHoursInTownMin"
				},
				{
					"title": "Forge",
					"id": "ForgeHeatSpeedIncreaseMin"
				},
				{
					"title": "NinePuzzle",
					"id": "NinePuzzle_Start_MinShuffleMoves"
				},
				{
					"title": "CylinderPuzzle",
					"id": "CylinderPuzzle_FaceAmount"
				},
				{
					"title": "Camp Display",
					"id": "CampViewDistance"
				},
				{
					"title": "Place Display",
					"id": "PlaceViewMinAngle"
				},
				{
					"title": "Camp Gameplay",
					"id": "RestHours"
				},
				{
					"title": "Relationship",
					"id": "RelationNeutralIndex"
				},
				{
					"title": "Camp Tools",
					"id": "DismantlePowQuantity"
				},
				{
					"title": "Sim",
					"id": "GlobalSalaryDifficulty"
				},
				{
					"title": "Unit attributes",
					"id": "MoraleRandomization"
				},
				{
					"title": "Xp",
					"id": "LevelXpValues"
				},
				{
					"title": "Trait",
					"id": "TraitXPBase"
				},
				{
					"title": "Roaming",
					"id": "RoamingSeenTimeFreeze"
				},
				{
					"title": "Power calcul",
					"id": "PowerBasePerUnit"
				},
				{
					"title": "Ennemies",
					"id": "ChampionDotFactor"
				},
				{
					"title": "FixedDifficulty",
					"id": "FixedDifficultyPowers"
				},
				{
					"title": "Battle",
					"id": "HeightFactorCurveTrajectory"
				},
				{
					"title": "End of fight",
					"id": "InjurySmallHpPercent"
				},
				{
					"title": "Happiness",
					"id": "UnhappySalary"
				},
				{
					"title": "Gameplay WorldMap",
					"id": "TirednessAmountHours"
				},
				{
					"title": "Wealth",
					"id": "PlayerMinWealth_Init"
				},
				{
					"title": "Gameplay Gestion",
					"id": "NotifyFirstAnnounce"
				},
				{
					"title": "Prisoner",
					"id": "PrisonerOutlawBasePrice"
				},
				{
					"title": "ItemValue",
					"id": "ItemQualityBonus1"
				},
				{
					"title": "Knowledge",
					"id": "PathXpBase"
				},
				{
					"title": "Bounties",
					"id": "MissionExploredAreaProbability"
				},
				{
					"title": "Prices",
					"id": "ArmorPerRepair"
				},
				{
					"title": "Gameplay Battle",
					"id": "CellSize"
				},
				{
					"title": "Battle AI",
					"id": "AIDmgScoreFactor"
				},
				{
					"title": "Controls Battle",
					"id": "CameraScrollAccel"
				},
				{
					"title": "Battle Display",
					"id": "TimelineCount"
				},
				{
					"title": "NPC",
					"id": "NpcTalkSpeed"
				},
				{
					"title": "Map",
					"id": "ElementOverColor"
				},
				{
					"title": "World Display",
					"id": "FowSize"
				},
				{
					"title": "Battle Mode: RatInvasion",
					"id": "RatNestMin"
				},
				{
					"title": "Battle Mode: Reach",
					"id": "ReachPointDistanceMin"
				},
				{
					"title": "Battle Mode: Arena",
					"id": "VoxPopuliCount"
				},
				{
					"title": "Battle Mode: GhostPack",
					"id": "GhostPack_RadiusFogFromUnitSpawn"
				},
				{
					"title": "Battle Mode: Sport",
					"id": "Sport_TotalRound"
				},
				{
					"title": "Battle Mode: Escape",
					"id": "Escape_ReachZone_Color"
				},
				{
					"title": "Battle Mode: Celestium",
					"id": "Celestium_Search_Total"
				},
				{
					"title": "Confession",
					"id": "Confession_PartialGroupSelection_Min"
				},
				{
					"title": "Sound",
					"id": "RangeVoiceID"
				},
				{
					"title": "Meteo",
					"id": "LightningMaxRadius"
				},
				{
					"title": "Visual",
					"id": "CrowsRate"
				}
			]
		},
		{
			"name": "constant@valueDifficulty",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "5:Easy,Normal,Hard",
					"name": "difficulty"
				},
				{
					"typeStr": "4",
					"name": "value",
					"kind": null
				}
			]
		},
		{
			"name": "constant@values",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "4",
					"name": "value",
					"kind": null
				}
			]
		},
		{
			"name": "levelProps",
			"columns": [
				{
					"typeStr": "5:None,Obstacle,Props,Player,Door,ClearWorldAssets,Region,Road,Forest,BattleData,AmbientSound,Bridge,CameraBound,Navmesh,NamedPosition,Trap,Selector,Spawner,BountyBoard,HeightMap,RuinPath,RuinRoom,CullingGroup,Hidden,Vegetation,Mud,Wall,OptionalProps,GameplayObject",
					"name": "kind"
				},
				{
					"typeStr": "17",
					"name": "props",
					"opt": true,
					"kind": null
				}
			],
			"separators": [],
			"props": {
				"dataFiles": "prefabs/*.nothing"
			}
		},
		{
			"name": "levelProps@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "patrol",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "linkedPlaces",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "caravan",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "closeDensity",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "farDensity",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "maxOcc",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "closeSpawns",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "angleZ",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:skill",
					"name": "skill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "height",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "angleXMax",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "informations",
					"opt": true
				},
				{
					"typeStr": "5:North,West,South,East",
					"name": "orientation",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "roamings",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:icon",
					"name": "action",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "noHallway",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "spawnChance",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "gridSize",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "dynamicObject",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "hiddenMinimap",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "registerInTree",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "fixedRotation",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "noDynamicShadows",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "levelProps@props@linkedPlaces",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:place",
					"name": "kind",
					"kind": null
				}
			]
		},
		{
			"name": "levelProps@props@informations",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "title",
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "description",
					"kind": "localizable"
				},
				{
					"typeStr": "6:place",
					"name": "place",
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "cost",
					"kind": null
				}
			]
		},
		{
			"name": "levelProps@props@roamings",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "id"
				},
				{
					"typeStr": "3",
					"name": "max",
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "variants",
					"kind": null
				}
			]
		},
		{
			"name": "levelProps@props@roamings@variants",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:group",
					"name": "ref",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "enabledByDefault",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "levelProps@props@informations@cost",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "qty",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "mission",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"kind": null,
					"scope": null
				},
				{
					"typeStr": "14",
					"name": "icon",
					"kind": null
				},
				{
					"typeStr": "14",
					"name": "mapIcon",
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "title",
					"kind": "localizable"
				},
				{
					"typeStr": "8",
					"name": "description",
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "mapDescription",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "3",
					"name": "amount",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "maxAmount",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "goldBonus"
				},
				{
					"typeStr": "3",
					"name": "maxOcc",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "weight",
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "minDist",
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "maxDist",
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "props",
					"kind": null
				}
			],
			"lines": [
				{
					"id": "Bounty",
					"title": "Vaincre",
					"description": [
						{
							"t": "<b>::roaming::</b> est à l'origine de nombreux vols de bétail dans les environs. Les fermiers excédés ont décidé de se cotiser pour mettre fin à leurs agissements."
						},
						{
							"t": "L'augmentation récente des attaques de caravanes est attribuée à <b>::roaming::</b>. Une prime est offerte à ceux qui s'occuperont d'eux."
						},
						{
							"t": "Les agissements de <b>::roaming::</b> doivent être arrêtés au plus vite. La Garde semble incapable de s'en charger seule."
						},
						{
							"t": "<b>::roaming::</b> a dû déranger la mauvaise personne et maintenant, quelqu'un est prêt à payer pour s'en débarrasser."
						},
						{
							"t": "La Fraternité souhaite l'élimination de <b>::roaming::</b>. Ces brigands ont rançonné le marchand de trop."
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 4
					},
					"weight": 2,
					"amount": 1,
					"maxAmount": 1,
					"maxOcc": 2,
					"minDist": 100,
					"maxDist": 400,
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					},
					"goldBonus": 0,
					"props": {}
				},
				{
					"id": "BountyHarag",
					"title": "Vaincre",
					"description": [
						{
							"t": "<b>::roaming::</b> est un ancien groupe de Traqueurs parjurés. Ils doivent être abattus."
						},
						{
							"t": "Ayant tourné le dos aux préceptes des Traqueurs, ce groupe est devenu un danger pour Harag."
						}
					],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 0,
					"maxOcc": 2,
					"weight": 2,
					"minDist": 100,
					"maxDist": 400,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 4
					},
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					},
					"props": {
						"region": "Harag_1",
						"parentMission": "Bounty"
					}
				},
				{
					"id": "BountyGosenberg",
					"title": "Vaincre",
					"description": [
						{
							"t": "<b>::roaming::</b> est un groupe d'Inquisiteurs s'étant détournés des principes de l'Œil. Ils doivent mourir."
						},
						{
							"t": "Ce groupe de fanatiques traque et brûle des innocents avérés : il constitue un danger pour la région entière."
						}
					],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 0,
					"maxOcc": 2,
					"weight": 2,
					"minDist": 100,
					"maxDist": 400,
					"props": {
						"region": "Gosenberg_2",
						"parentMission": "Bounty"
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 4
					},
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					}
				},
				{
					"id": "BountyAlazar",
					"title": "Vaincre",
					"description": [
						{
							"t": "<b>::roaming::</b> représente ce que la Fraternité punit sévèrement : les traîtres."
						},
						{
							"t": "Il n'existe rien de pire que d'anciens membres de la Fraternité qui ont rompu leur serment. Traquez-les et tuez-les."
						}
					],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 0,
					"maxOcc": 2,
					"weight": 2,
					"minDist": 100,
					"maxDist": 400,
					"props": {
						"region": "Alazar_1",
						"parentMission": "Bounty"
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 8,
						"y": 4
					},
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					}
				},
				{
					"id": "Assassinate",
					"title": "Assassiner",
					"description": [
						{
							"t": "Le zèle de <b>::roaming::</b> est mauvais pour les affaires de Contrebandiers qui réclament sa disparition rapide et définitive. "
						},
						{
							"t": "Du fond de sa prison, la cheffe des Brigands réclament la mort ceux qui l’ont arrêtée : <b>::roaming::</b>."
						},
						{
							"t": "<b>::roaming::</b> garde un peu trop bien les routes, elles sont pourtant essentielles aux activités des Brigands. Il est temps que cela cesse. "
						},
						{
							"t": "Les déserteurs désirent que leurs anciens camarades de <b>::roaming::</b> les oublient. De manière radicale.  "
						}
					],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 0,
					"maxOcc": 2,
					"weight": 2,
					"minDist": 100,
					"maxDist": 300,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 11
					},
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					},
					"props": {
						"parentMission": "Bounty"
					}
				},
				{
					"id": "Hideout",
					"title": "Piller",
					"description": [
						{
							"t": "<b>::place::</b> est bien gardé mais on vous paiera cher pour le détruire."
						},
						{
							"t": "La Garde est persuadée que des truands se terrent à <b>::place::</b>. Ils offrent une belle récompense à ceux qui détruiront cet endroit."
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 11,
						"y": 4
					},
					"weight": 1,
					"amount": 1,
					"maxAmount": 1,
					"maxOcc": 1,
					"minDist": -1,
					"maxDist": -1,
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 4
					},
					"goldBonus": 0,
					"props": {}
				},
				{
					"id": "Brigands",
					"title": "Eliminer",
					"description": [],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 0,
					"maxOcc": 1,
					"weight": 1,
					"minDist": 0,
					"maxDist": 0,
					"props": {},
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 4
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 4
					}
				},
				{
					"id": "AttackCaravan",
					"title": "Attaquer",
					"description": [
						{
							"t": "Le cargaison de <b>::roaming::</b> est suspecte et la Fraternité demande son arrestation."
						},
						{
							"t": "<b>::roaming::</b> se sont échappés du poste frontière : retrouvez-les et arrêtez-les."
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 16,
						"y": 4
					},
					"weight": 0,
					"amount": 1,
					"maxAmount": 1,
					"maxOcc": 1,
					"minDist": 100,
					"maxDist": 400,
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					},
					"goldBonus": 0,
					"props": {}
				},
				{
					"id": "DefendCaravan",
					"title": "Défendre",
					"description": [
						{
							"t": "Rejoignez et protégez <b>::roaming::</b> jusqu'à leur destination. Ils sont prêts à payer pour arriver sains et saufs."
						},
						{
							"t": "<b>::roaming::</b> cherche des mercenaires capables de les escorter durant leur périple."
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 4
					},
					"weight": 0,
					"amount": 1,
					"maxAmount": 1,
					"maxOcc": 1,
					"minDist": 100,
					"maxDist": 400,
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					},
					"goldBonus": 0,
					"props": {}
				},
				{
					"id": "Champion",
					"title": "Combattre",
					"description": [
						{
							"t": "Trouvez et tuez $ChampionName. Cet individu est dangereux, sa simple existence est une menace pour la population."
						},
						{
							"t": "Trouvez et tuez $ChampionName. Cet individu est redoutable et s'est déjà attaqué à bon nombre d'innoncents."
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 9,
						"y": 4
					},
					"weight": 1,
					"amount": 1,
					"maxAmount": 1,
					"maxOcc": 1,
					"minDist": -1,
					"maxDist": -1,
					"mapDescription": "",
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 6,
						"y": 3
					},
					"goldBonus": 50,
					"props": {}
				},
				{
					"id": "SellCommodity",
					"title": "Commercer",
					"description": [
						{
							"t": "Approvisionnez <b>::place::</b> avec <b>::item::</b> x::amount:: et vous serez largement récompensés."
						},
						{
							"t": "<b>::place::</b> recherche avidement x::amount:: de <b>::item::</b> et en offre le prix fort."
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 4
					},
					"weight": 1,
					"amount": 2,
					"maxAmount": 5,
					"maxOcc": 1,
					"minDist": 200,
					"maxDist": 1500,
					"mapDescription": "Vendre ::amount:: <b>::item::</b> à <b>::place::</b>",
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 7,
						"y": 1
					},
					"goldBonus": 0,
					"props": {
						"setting": 20,
						"nbDone": 3
					}
				},
				{
					"id": "DeliverMessage",
					"title": "Informer",
					"description": [
						{
							"t": "Apportez ce message à l'informateur à <b>::place::</b>."
						}
					],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 0,
					"maxOcc": 1,
					"weight": 1,
					"minDist": -1,
					"maxDist": 100000,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 13
					},
					"mapIcon": {
						"file": "ui/Icons_Resources.png",
						"size": 96,
						"x": 1,
						"y": 11
					},
					"mapDescription": "Apporter le message à <b>::place::</b>",
					"props": {
						"setting": 20,
						"nbDone": 3
					}
				},
				{
					"id": "KillDefender",
					"title": "Libérer",
					"description": [
						{
							"t": "Les <b>::groupType::</b> ont envahi <b>::place::</b> et s'en servent comme repaire. Le commanditaire vous permet de récupérer ce que vous trouverez là-bas."
						},
						{
							"t": "<b>::place::</b> est devenu un lieu dangereux depuis que <b>::groupType::</b> s'en sont emparés : il est grand temps des déloger."
						}
					],
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 10,
						"y": 4
					},
					"weight": 1,
					"amount": 1,
					"maxAmount": 1,
					"maxOcc": 1,
					"minDist": -1,
					"maxDist": -1,
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 1,
						"y": 5
					},
					"goldBonus": 0,
					"props": {}
				},
				{
					"id": "DesignedMission",
					"title": "Aide demandée",
					"description": [
						{
							"t": ""
						}
					],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 0,
					"maxOcc": 1,
					"weight": 1,
					"minDist": -1,
					"maxDist": -1,
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 11
					},
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					},
					"mapDescription": "",
					"props": {
						"noPrioritizeUnexplored": true
					}
				},
				{
					"id": "RatInvasion",
					"title": "Purifier",
					"description": [
						{
							"t": "Une <b>invasion de rats</b> vient détruire nos terres. La nuit, des cris stridents proviennent de masses grouillantes."
						}
					],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 0,
					"maxOcc": 1,
					"weight": 1,
					"minDist": -1,
					"maxDist": -1,
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 4,
						"y": 3
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 17,
						"y": 4
					},
					"props": {}
				},
				{
					"id": "Ruin",
					"title": "Localiser",
					"description": [
						{
							"t": "Des rumeurs évoquent qu'un <b>Tombeau des Anciens</b> inexploré se trouverait dans la région."
						}
					],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 0,
					"maxOcc": 1,
					"weight": 1,
					"minDist": -1,
					"maxDist": -1,
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 9,
						"y": 4
					},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 18,
						"y": 4
					},
					"props": {
						"mapRadius": 200
					}
				},
				{
					"id": "Harvest",
					"title": "Récolter",
					"description": [
						{
							"t": "Des brigands ont dérobé des biens appartenant aux citoyens. En fuyant, ils ont laissé tomber leur précieux butin. Récoltez les ::item:: perdus dans la région."
						}
					],
					"amount": 2,
					"maxAmount": 5,
					"goldBonus": 0,
					"maxOcc": 0,
					"weight": 0,
					"minDist": 0,
					"maxDist": 0,
					"props": {},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 15,
						"y": 15
					},
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 7,
						"y": 1
					}
				},
				{
					"id": "TrackDown",
					"title": "Capturer",
					"description": [
						{
							"t": "Des étrangers ont été aperçus en Alazar. Les habitants vous demandent d'en capturer et d'en ramener à la taverne."
						}
					],
					"amount": 0,
					"maxAmount": 0,
					"goldBonus": 0,
					"maxOcc": 0,
					"weight": 0,
					"minDist": 0,
					"maxDist": 0,
					"props": {},
					"icon": {
						"file": "ui/Icons/BattleIcons96PX.png",
						"size": 96,
						"x": 19,
						"y": 19
					},
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 5,
						"y": 4
					}
				},
				{
					"id": "WeeklyBounty",
					"title": "Vaincre",
					"description": [],
					"amount": 1,
					"maxAmount": 1,
					"goldBonus": 100,
					"maxOcc": 1,
					"weight": 1,
					"minDist": 200,
					"maxDist": 600,
					"props": {
						"mapRadius": 100,
						"nbDone": 3
					},
					"mapIcon": {
						"file": "ui/Icons/WM_Icons.png",
						"size": 42,
						"x": 3,
						"y": 1
					}
				}
			],
			"separators": [],
			"props": {}
		},
		{
			"name": "sound",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"kind": null,
					"scope": null
				},
				{
					"typeStr": "6:sound",
					"name": "gameObject",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "wiseEvents",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "params",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "notes",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "todo",
					"opt": true,
					"kind": null
				}
			],
			"lines": [
				{
					"id": "Global",
					"params": [
						{
							"name": "env_plain",
							"desc": "",
							"wiseRTPC": "ENV_Plain_Pm"
						},
						{
							"name": "env_forest",
							"desc": "",
							"wiseRTPC": "ENV_Forest_Pm"
						},
						{
							"name": "env_town",
							"desc": "",
							"wiseRTPC": "ENV_Town_Pm"
						},
						{
							"name": "env_city",
							"desc": "",
							"wiseRTPC": "ENV_City_Pm"
						},
						{
							"name": "env_forsakenvillage",
							"desc": "",
							"wiseRTPC": "ENV_Forsaken_Pm"
						},
						{
							"name": "env_ruins",
							"desc": "",
							"wiseRTPC": "ENV_Ruins_Pm"
						},
						{
							"name": "env_arena",
							"desc": "",
							"wiseRTPC": "ENV_Arena_Pm"
						},
						{
							"name": "env_rats",
							"desc": "",
							"wiseRTPC": "ENV_Rats_Pm"
						},
						{
							"name": "env_cave",
							"desc": "",
							"wiseRTPC": "ENV_Cave_Pm"
						},
						{
							"name": "env_city_rich_gosenberg",
							"desc": "",
							"wiseRTPC": "ENV_City_Rich_Pm"
						},
						{
							"name": "env_city_poor_gosenberg",
							"desc": "",
							"wiseRTPC": "ENV_City_Poor_Pm"
						},
						{
							"name": "env_celestium",
							"desc": "",
							"wiseRTPC": "ENV_Celestium_Pm"
						},
						{
							"name": "env_fields",
							"desc": "",
							"wiseRTPC": "ENV_Fields_Pm"
						},
						{
							"name": "terrain_herb",
							"desc": "",
							"wiseRTPC": "Terrain_Grass_Pm"
						},
						{
							"name": "terrain_snow",
							"desc": "",
							"wiseRTPC": "Terrain_Snow_Pm"
						},
						{
							"name": "terrain_marshlands",
							"desc": "",
							"wiseRTPC": "Terrain_Marshland_Pm"
						},
						{
							"name": "biome_default",
							"desc": "",
							"wiseRTPC": "BIOME_Default_Pm"
						},
						{
							"name": "biome_gosenberg",
							"desc": "",
							"wiseRTPC": "BIOME_Gosenberg_Pm"
						},
						{
							"name": "biome_harag",
							"desc": "",
							"wiseRTPC": "BIOME_Harag_Pm"
						},
						{
							"name": "biome_alazar",
							"desc": "",
							"wiseRTPC": "BIOME_Alazar_Pm"
						},
						{
							"name": "item",
							"desc": "id de l'objet utilisé (cf item.id)",
							"wiseSwitchGroup": "WT_Items"
						},
						{
							"name": "mode",
							"desc": "mode actuel (worldmap | campmode | battle | placeview)",
							"wiseRTPC": "",
							"wiseSwitchGroup": "WT_Game_Mode"
						},
						{
							"name": "groupType",
							"desc": "type du groupe affronté (battle), cf groupType.id)",
							"wiseSwitchGroup": "WT_UnitGroup"
						},
						{
							"name": "placeKind",
							"desc": "id  du lieu quand on entre (cf icon, category Place ou sounds PlaceXXX)",
							"wiseSwitchGroup": "WT_PlacesKind"
						},
						{
							"name": "placeId",
							"desc": "id du lieu quand on rentre (en paramètre des EnterMode / LeaveMode)"
						},
						{
							"name": "interior",
							"desc": "0-1",
							"wiseRTPC": "Interior_Pm"
						},
						{
							"name": "musicVolume",
							"desc": "0-2",
							"wiseRTPC": "MUSIC_VOLUME_OPTION"
						},
						{
							"name": "ambientVolume",
							"desc": "0-2",
							"wiseRTPC": "SFX_AMB_VOLUME_OPTION"
						},
						{
							"name": "globalVolume",
							"desc": "0-2",
							"wiseRTPC": "MASTER_VOLUME_OPTION"
						},
						{
							"name": "soundVolume",
							"desc": "0-2",
							"wiseRTPC": "SFX_VOLUME_OPTION"
						},
						{
							"name": "uiVolume",
							"desc": "0-2",
							"wiseRTPC": "UI_VOLUME_OPTION"
						},
						{
							"name": "voiceVolume",
							"desc": "0-2",
							"wiseRTPC": "VOICE_VOLUME_OPTION"
						},
						{
							"name": "timeOfDay",
							"desc": "hours (0-12)",
							"wiseRTPC": "Time_Of_Day"
						},
						{
							"name": "battleEnemyCount",
							"desc": "nombre d'ennemis restant en combat",
							"wiseRTPC": "Enemies_Count"
						},
						{
							"name": "battlePlayerMen",
							"desc": "nombre d'hommes en combat (player)",
							"wiseRTPC": "Warband_Unit_M"
						},
						{
							"name": "battlePlayerWomen",
							"desc": "nombre de femmes en combat (player)",
							"wiseRTPC": "Warband_Unit_F"
						},
						{
							"name": "meteo_rain",
							"desc": "0-1",
							"wiseRTPC": "Rain_Enviro"
						},
						{
							"name": "meteo_snow",
							"desc": "0-1",
							"wiseRTPC": "Snow_Enviro"
						},
						{
							"name": "meteo_storm",
							"desc": "0-1 à combiner avec rain & snow pour tempêtes de neiges et tempêtes de pluie",
							"wiseRTPC": "Weather_Intensity"
						},
						{
							"name": "placeNpcCount",
							"desc": "nombre de npcs dans le lieu (placeview mode only)",
							"wiseRTPC": "WM_Place_Npcs_Count"
						},
						{
							"name": "placeSheepCount",
							"desc": "nombre de sheep dans le lieu (placeview mode only)",
							"wiseRTPC": "WM_Place_Sheep_Count"
						},
						{
							"name": "placeHorseCount",
							"desc": "nombre de pony dans le lieu (placeview mode only)",
							"wiseRTPC": "WM_Place_Horses_Count"
						},
						{
							"name": "damageAmount",
							"desc": "0-100",
							"wiseRTPC": "Damage_Amount_Impacts"
						},
						{
							"name": "paused",
							"desc": "Playing | Pause",
							"wiseSwitchGroup": "Game_Status"
						},
						{
							"name": "tightness",
							"desc": "0-1 son oppressant lors d'un moment menaçant et de tension.",
							"wiseRTPC": "Alazar_Eye_Distance"
						}
					],
					"notes": "Pour le mode il faudrait utiliser des states (C'est comme le switch sauf que ça fonctionne en global uniquement)"
				},
				{
					"id": "Entity",
					"params": [
						{
							"name": "mode",
							"desc": "same as Global.mode"
						}
					]
				},
				{
					"id": "BattleUnit",
					"params": [
						{
							"name": "unitKind",
							"desc": "type de l'unité (cf unitClass.id)",
							"wiseSwitchGroup": "WT_UnitType"
						},
						{
							"name": "sex",
							"desc": "man | woman | animal",
							"wiseSwitchGroup": "WT_Gender"
						},
						{
							"name": "voiceId",
							"desc": "",
							"wiseSwitchGroup": "",
							"wiseRTPC": "WT_Voice_ID_Selector"
						},
						{
							"name": "modifierVoiceId",
							"desc": "",
							"wiseSwitchGroup": "",
							"wiseRTPC": "WT_Voice_Modifier_Selector"
						},
						{
							"name": "weaponType",
							"desc": "type de weapon (NoWeapon ou cf itemType.id)",
							"wiseSwitchGroup": "WT_Weapon_Type"
						},
						{
							"name": "skill",
							"desc": "id du skill en cours (cf skill.id)",
							"wiseSwitchGroup": "WT_Skills"
						},
						{
							"name": "weaponHit",
							"desc": "type de weapon (cf itemType.id)",
							"wiseSwitchGroup": "WT_Weapon_Type"
						},
						{
							"name": "armorType",
							"desc": "type d'armure portée (NoArmor|Cloth|Leather|Chain|Plate)",
							"wiseSwitchGroup": "WT_Armor_Type",
							"wiseRTPC": ""
						},
						{
							"name": "model",
							"desc": "model utilisé (worldmap uniquement, certains followers)"
						},
						{
							"name": "groundType",
							"desc": "type de sol (dirt|mud)",
							"wiseSwitchGroup": "WT_Ground_Type"
						},
						{
							"name": "isCritical",
							"desc": "le hit est un critique [0/1]",
							"wiseRTPC": "Critical_Impacts",
							"wiseSwitchGroup": ""
						},
						{
							"name": "isPowered",
							"desc": "le hit est un skill AP [0/1]",
							"wiseRTPC": "Battle_Skill_AP_Powered"
						},
						{
							"name": "castOrigin",
							"desc": "id du skill d'origine (pour les attraques d'opportunité)"
						}
					],
					"gameObject": "Entity",
					"notes": ""
				},
				{
					"id": "Element",
					"params": [
						{
							"name": "chestKind",
							"desc": "si coffre - type de coffre (Default,Chest,Barrel,Pot,Crate,Haystack,Bag,Woodpile,Body)",
							"wiseSwitchGroup": "WT_Element"
						},
						{
							"name": "unitKind",
							"desc": "si npc - type de l'unité (cf unitClass.id)",
							"wiseSwitchGroup": "WT_UnitType"
						},
						{
							"name": "weaponType",
							"desc": "type de weapon (cf ItemType.id)",
							"wiseSwitchGroup": "WT_Weapon_Type"
						},
						{
							"name": "armorType",
							"desc": "type d'armor (voir BattleUnit)",
							"wiseSwitchGroup": "WT_Armor_Type"
						},
						{
							"name": "sex",
							"desc": "si npc - man | woman | animal",
							"wiseSwitchGroup": "WT_Gender"
						},
						{
							"name": "voiceId",
							"desc": "",
							"wiseRTPC": "WT_Voice_ID_Selector"
						},
						{
							"name": "modifierVoiceId",
							"desc": "",
							"wiseSwitchGroup": "",
							"wiseRTPC": "WT_Voice_Modifier_Selector"
						}
					],
					"gameObject": "Entity"
				},
				{
					"id": "Place",
					"params": [
						{
							"name": "placeKind",
							"desc": "type de lieu (voir Global.placeKind)",
							"wiseSwitchGroup": "WT_PlacesKind"
						},
						{
							"name": "interior",
							"desc": "0 = exterior / 1 = interior"
						}
					],
					"gameObject": "Entity"
				},
				{
					"id": "UI",
					"params": [
						{
							"name": "window",
							"desc": "id de la fenêtre",
							"wiseSwitchGroup": "WT_UI_Window"
						},
						{
							"name": "groupType",
							"desc": "type de groupe que l'on affronte (cf GroupType.id)",
							"wiseSwitchGroup": "WT_UnitGroup"
						},
						{
							"name": "gatherType",
							"desc": "item id ou id de loot (loot.id)",
							"wiseSwitchGroup": "WT_Items_Type"
						},
						{
							"name": "iconType",
							"desc": "icon id"
						},
						{
							"name": "songActivityFade",
							"desc": "[0-1], 0 = on entend que la musique A / 1 = on entend que la musique B",
							"wiseSwitchGroup": "",
							"wiseRTPC": "Activity_Music"
						},
						{
							"name": "applauseAmount",
							"desc": "[0-1], 0 = que des huées / 1 = que des applaudissements",
							"wiseRTPC": "Activity_Music_Public"
						}
					]
				},
				{
					"id": "Item",
					"params": [
						{
							"name": "itemKind",
							"desc": "id de l'objet utilisé (cf item.id)",
							"wiseSwitchGroup": "WT_Items"
						},
						{
							"name": "itemType",
							"desc": "type de l'objet utilisé (cf itemType.id)",
							"wiseSwitchGroup": "WT_Items_Type"
						}
					]
				},
				{
					"id": "Roaming",
					"params": [
						{
							"name": "groupType",
							"desc": "type de groupe (groupType.id) OU \"Player\"",
							"wiseSwitchGroup": "WT_UnitGroup"
						},
						{
							"name": "units",
							"desc": "",
							"wiseRTPC": "WM_Units"
						},
						{
							"name": "men",
							"desc": "",
							"wiseRTPC": "Warband_Unit_M"
						},
						{
							"name": "women",
							"desc": "",
							"wiseRTPC": "Warband_Unit_F"
						},
						{
							"name": "horses",
							"desc": "",
							"wiseSwitchGroup": "",
							"wiseRTPC": "WM_Unit_Horse"
						},
						{
							"name": "chariots",
							"desc": "",
							"wiseRTPC": "WM_Unit_Carriage"
						},
						{
							"name": "terrain_herb",
							"desc": "",
							"wiseRTPC": "Terrain_Grass_Pm"
						},
						{
							"name": "terrain_snow",
							"desc": "",
							"wiseRTPC": "Terrain_Snow_Pm"
						},
						{
							"name": "terrain_forest",
							"desc": "",
							"wiseRTPC": "Terrain_Forest_Pm"
						},
						{
							"name": "running",
							"desc": "0/1 (during MovingStart...MovingStop)",
							"wiseRTPC": "WM_Warband_Run"
						}
					],
					"gameObject": "Entity"
				},
				{
					"id": "EnterPause",
					"wiseEvents": "Play_WT_State_PauseSounds"
				},
				{
					"id": "LeavePause",
					"wiseEvents": "Play_WT_State_ResumeSounds"
				},
				{
					"id": "StartGame",
					"notes": "Au moment de démarrer sa nouvelle partie",
					"wiseEvents": "Play_WT_Ui_CharacterSelection_Start_Game"
				},
				{
					"id": "HoverUnit",
					"wiseEvents": "Play_WT_Ui_CharacterSelection_Hover_Unit",
					"notes": "Hover les units pendant la création de la troupe"
				},
				{
					"id": "TitleScreen_SelectUnit",
					"notes": "Clic sur les units pendant la création de la troupe",
					"wiseEvents": "Play_WT_Menu_SelectorClick_01"
				},
				{
					"id": "TitleScreen_UnselectUnit",
					"notes": "Fermer l'édition d'une unité pendant la création de la troupe",
					"wiseEvents": "Play_WT_Ui_CharacterSelection_Whoosh"
				},
				{
					"id": "EnterMode_XXX"
				},
				{
					"id": "LeaveMode_XXX"
				},
				{
					"id": "WindowOpen_XXX"
				},
				{
					"id": "WindowClose_XXX"
				},
				{
					"id": "StartActivity_XXX",
					"wiseEvents": ""
				},
				{
					"id": "StopActivity_XXX",
					"wiseEvents": ""
				},
				{
					"id": "StartActivity_LockPick",
					"wiseEvents": "Play_WT_Activity_LockPick_Enter",
					"params": []
				},
				{
					"id": "StopActivity_LockPick",
					"wiseEvents": "Play_WT_Activity_LockPick_Exit"
				},
				{
					"id": "Start_Sing",
					"gameObject": "UI",
					"wiseEvents": "Play_WT_Activity_Sing"
				},
				{
					"id": "Stop_Sing",
					"gameObject": "UI",
					"wiseEvents": "Stop_WT_Activity_Sing"
				},
				{
					"id": "StartApplause",
					"gameObject": "UI",
					"wiseEvents": "Play_WT_Activity_Sing_Public"
				},
				{
					"id": "StopApplause",
					"gameObject": "UI",
					"wiseEvents": "Stop_WT_Activity_Sing_Public"
				},
				{
					"id": "WindowOpen_CampFire",
					"wiseEvents": "Play_WT_Interface_Campfire_Start",
					"notes": ""
				},
				{
					"id": "WindowClose_CampFire",
					"wiseEvents": "Play_WT_Interface_Campfire_End",
					"notes": ""
				},
				{
					"id": "WindowOpen_Inventory",
					"wiseEvents": "Play_WT_State_Inventory_Enter",
					"notes": "Ne fonctionne pas"
				},
				{
					"id": "WindowClose_Inventory",
					"wiseEvents": "Play_WT_State_Inventory_Exit",
					"notes": "Ne fonctionne pas"
				},
				{
					"id": "WindowOpen_MiniMap",
					"wiseEvents": "Play_WT_State_Map_Enter"
				},
				{
					"id": "WindowClose_MiniMap",
					"wiseEvents": "Play_WT_State_Map_Exit"
				},
				{
					"id": "WindowOpen_Paths",
					"wiseEvents": "Play_WT_Interface_WindowPath_Open"
				},
				{
					"id": "WindowClose_Paths",
					"wiseEvents": "Play_WT_Interface_WindowPath_Close"
				},
				{
					"id": "WindowOpen_Pause",
					"wiseEvents": "Play_WT_State_Pause_Enter"
				},
				{
					"id": "WindowClose_Pause",
					"wiseEvents": "Play_WT_State_Pause_Exit"
				},
				{
					"id": "DestroyObject",
					"wiseEvents": "Stop_All_OnGameObject",
					"notes": "Stop tous les sons du gameobject avec un fade out de 0.2s"
				},
				{
					"id": "StopVoice",
					"notes": "Joué lorsqu'on joue une nouvelle voix, ou lorsque le dialogue se ferme",
					"wiseEvents": "Stop_All_OnGameObject"
				},
				{
					"id": "EnterMode_World",
					"wiseEvents": "Play_AMB_General_Full",
					"notes": ""
				},
				{
					"id": "LeaveMode_World",
					"wiseEvents": "Stop_AMB_General_Full",
					"notes": ""
				},
				{
					"id": "EnterMode_City",
					"wiseEvents": "Play_WorldMap_Village",
					"notes": "",
					"params": []
				},
				{
					"id": "LeaveMode_City",
					"wiseEvents": "Stop_WorldMap_Village",
					"notes": ""
				},
				{
					"id": "EnterMode_Title",
					"wiseEvents": "Play_WT_State_MainTitle_Enter"
				},
				{
					"id": "LeaveMode_Title",
					"wiseEvents": "Play_WT_State_MainTitle_Exit"
				},
				{
					"id": "EnterDialog",
					"wiseEvents": "Enter_Dialog_State"
				},
				{
					"id": "LeaveDialog",
					"wiseEvents": "Exit_Dialog_State"
				},
				{
					"id": "EnterMode_Ruins",
					"wiseEvents": "Play_WT_AMB_Ruins"
				},
				{
					"id": "LeaveMode_Ruins",
					"wiseEvents": "Stop_WT_AMB_Ruins"
				},
				{
					"id": "EnterMode_Mine",
					"wiseEvents": "Play_AMB_Mine",
					"notes": ""
				},
				{
					"id": "LeaveMode_Mine",
					"wiseEvents": "Stop_AMB_Mine",
					"notes": ""
				},
				{
					"id": "EnterMode_battle",
					"wiseEvents": "Play_WT_Battle_Enter"
				},
				{
					"id": "LeaveMode_battle",
					"wiseEvents": "Play_WT_Battle_Exit"
				},
				{
					"id": "EnterMode_CityTavern",
					"wiseEvents": "Play_AMB_Tavern"
				},
				{
					"id": "LeaveMode_CityTavern",
					"wiseEvents": "Stop_AMB_Tavern"
				},
				{
					"id": "EnterMode_FV1Tavern",
					"wiseEvents": "Play_AMB_TavernDamned_Village_Lethyre_T4"
				},
				{
					"id": "LeaveMode_FV1Tavern",
					"wiseEvents": "Stop_AMB_TavernDamned_Village_Lethyre_T4"
				},
				{
					"id": "EnterMode_Farm",
					"wiseEvents": "Play_AMB_Farm_Empty"
				},
				{
					"id": "LeaveMode_Farm",
					"wiseEvents": "Stop_AMB_Farm_Empty"
				},
				{
					"id": "EnterMode_Monastery",
					"wiseEvents": "Play_AMB_Monastery"
				},
				{
					"id": "LeaveMode_Monastery",
					"wiseEvents": "Stop_AMB_Monastery"
				},
				{
					"id": "EnterMode_CityWorship",
					"wiseEvents": "Play_AMB_Church",
					"notes": ""
				},
				{
					"id": "LeaveMode_CityWorship",
					"wiseEvents": "Stop_AMB_Church",
					"notes": ""
				},
				{
					"id": "EnterMode_Castle",
					"wiseEvents": "Play_AMB_Castle"
				},
				{
					"id": "LeaveMode_Castle",
					"wiseEvents": "Stop_AMB_Castle"
				},
				{
					"id": "EnterMode_Stable",
					"wiseEvents": "Play_AMB_Stable"
				},
				{
					"id": "LeaveMode_Stable",
					"wiseEvents": "Stop_AMB_Stable"
				},
				{
					"id": "EnterMode_Prison",
					"wiseEvents": "Play_AMB_Prison"
				},
				{
					"id": "LeaveMode_Prison",
					"wiseEvents": "Stop_AMB_Prison"
				},
				{
					"id": "EnterMode_LumberjackCamp",
					"wiseEvents": "Play_AMB_Lumberjack_Camp"
				},
				{
					"id": "LeaveMode_LumberjackCamp",
					"wiseEvents": "Stop_AMB_Lumberjack_Camp",
					"params": []
				},
				{
					"id": "EnterMode_Mill",
					"wiseEvents": "Play_AMB_Mill"
				},
				{
					"id": "LeaveMode_Mill",
					"wiseEvents": "Stop_AMB_Mill"
				},
				{
					"id": "EnterMode_Sawmill",
					"wiseEvents": "Play_AMB_Sawmill"
				},
				{
					"id": "LeaveMode_Sawmill",
					"wiseEvents": "Stop_AMB_Sawmill"
				},
				{
					"id": "EnterMode_SawmillCave",
					"wiseEvents": "Play_AMB_Sawmill_Cave"
				},
				{
					"id": "LeaveMode_SawmillCave",
					"wiseEvents": "Stop_AMB_Sawmill_Cave"
				},
				{
					"id": "EnterMode_Fishery",
					"wiseEvents": "Play_AMB_FishCabin"
				},
				{
					"id": "LeaveMode_Fishery",
					"wiseEvents": "Stop_AMB_FishCabin"
				},
				{
					"id": "EnterMode_CityApothecary",
					"wiseEvents": "Play_AMB_Apothecary"
				},
				{
					"id": "LeaveMode_CityApothecary",
					"wiseEvents": "Stop_AMB_Apothecary"
				},
				{
					"id": "EnterMode_FV1Apothecary",
					"wiseEvents": "Play_AMB_ApothecaryDamned_Village_Lethyre_T4"
				},
				{
					"id": "LeaveMode_FV1Apothecary",
					"wiseEvents": "Stop_AMB_ApothecaryDamned_Village_Lethyre_T4"
				},
				{
					"id": "EnterMode_CityForge",
					"wiseEvents": "Play_AMB_Forge"
				},
				{
					"id": "LeaveMode_CityForge",
					"wiseEvents": "Stop_AMB_Forge"
				},
				{
					"id": "EnterMode_FV1Forge",
					"wiseEvents": "Play_AMB_ForgeDamned_Village_Lethyre_T4"
				},
				{
					"id": "LeaveMode_FV1Forge",
					"wiseEvents": "Stop_AMB_ForgeDamned_Village_Lethyre_T4"
				},
				{
					"id": "EnterMode_FV2Apothecary",
					"wiseEvents": "Play_AMB_ApothecaryDamned_Village_Lethyre_T4"
				},
				{
					"id": "LeaveMode_FV2Apothecary",
					"wiseEvents": "Stop_AMB_ApothecaryDamned_Village_Lethyre_T4"
				},
				{
					"id": "EnterMode_FV2Forge",
					"wiseEvents": "Play_AMB_ForgeDamned_Village_Lethyre_T4"
				},
				{
					"id": "LeaveMode_FV2Forge",
					"wiseEvents": "Stop_AMB_ForgeDamned_Village_Lethyre_T4"
				},
				{
					"id": "EnterMode_FV2Hall",
					"wiseEvents": "Play_AMB_T1HallDamned_Village_Lethyre_T4"
				},
				{
					"id": "LeaveMode_FV2Hall",
					"wiseEvents": "Stop_AMB_T1HallDamned_Village_Lethyre_T4"
				},
				{
					"id": "EnterMode_FV2Tavern",
					"wiseEvents": "Play_AMB_TavernDamned_Village_Lethyre_T4"
				},
				{
					"id": "LeaveMode_FV2Tavern",
					"wiseEvents": "Stop_AMB_TavernDamned_Village_Lethyre_T4"
				},
				{
					"id": "EnterMode_FV3Church",
					"wiseEvents": "Play_A1HauntedCastle"
				},
				{
					"id": "LeaveMode_FV3Church",
					"wiseEvents": "Stop_A1HauntedCastle"
				},
				{
					"id": "EnterMode_FV3Tavern",
					"wiseEvents": "Play_FV3_HauntedForge"
				},
				{
					"id": "LeaveMode_FV3Tavern",
					"wiseEvents": "Stop_FV3_HauntedForge"
				},
				{
					"id": "EnterMode_FV3Forge",
					"wiseEvents": "Play_FV3_HauntedForge"
				},
				{
					"id": "LeaveMode_FV3Forge",
					"wiseEvents": "Stop_FV3_HauntedForge"
				},
				{
					"id": "EnterMode_FV3Apothecary",
					"wiseEvents": "Play_FV3_HauntedApothecary"
				},
				{
					"id": "LeaveMode_FV3Apothecary",
					"wiseEvents": "Stop_FV3_HauntedApothecary"
				},
				{
					"id": "EnterMode_PlaceForgeGood",
					"wiseEvents": "Play_AMB_Forge"
				},
				{
					"id": "LeaveMode_PlaceForgeGood",
					"wiseEvents": "Stop_AMB_Forge"
				},
				{
					"id": "EnterMode_CityChiefHall",
					"wiseEvents": "Play_AMB_T1Hall"
				},
				{
					"id": "LeaveMode_CityChiefHall",
					"wiseEvents": "Stop_AMB_T1Hall"
				},
				{
					"id": "EnterMode_FV1Hall",
					"wiseEvents": "Play_AMB_T1HallDamned_Village_Lethyre_T4"
				},
				{
					"id": "LeaveMode_FV1Hall",
					"wiseEvents": "Stop_AMB_T1HallDamned_Village_Lethyre_T4"
				},
				{
					"id": "EnterMode_Arena",
					"wiseEvents": "Play_AMB_Arena"
				},
				{
					"id": "LeaveMode_Arena",
					"wiseEvents": "Stop_AMB_Arena"
				},
				{
					"id": "EnterMode_G1Sewers",
					"wiseEvents": "Play_AMB_Sewers"
				},
				{
					"id": "LeaveMode_G1Sewers",
					"wiseEvents": "Stop_AMB_Sewers"
				},
				{
					"id": "EnterMode_G2University",
					"wiseEvents": "Play_WT_Amb_Diorama_UniversiteDeGosenberg_Amb"
				},
				{
					"id": "LeaveMode_G2University",
					"wiseEvents": "Stop_WT_Amb_Diorama_UniversiteDeGosenberg_Amb"
				},
				{
					"id": "EnterMode_G2Cathedral",
					"wiseEvents": "Play_AMB_Cathedral"
				},
				{
					"id": "LeaveMode_G2Cathedral",
					"wiseEvents": "Stop_AMB_Cathedral"
				},
				{
					"id": "EnterMode_G2Brothel",
					"wiseEvents": "Play_AMB_Brothel"
				},
				{
					"id": "LeaveMode_G2Brothel",
					"wiseEvents": "Stop_AMB_Brothel"
				},
				{
					"id": "EnterMode_G2RookBoad",
					"wiseEvents": "Play_AMB_RookBoat"
				},
				{
					"id": "LeaveMode_G2RookBoad",
					"wiseEvents": "Stop_AMB_RookBoat"
				},
				{
					"id": "EnterMode_G2TradePalace",
					"wiseEvents": "Play_Amb_Palais_Du_Negoce"
				},
				{
					"id": "LeaveMode_G2TradePalace",
					"wiseEvents": "Stop_Amb_Palais_Du_Negoce"
				},
				{
					"id": "EnterMode_G2TrialPalace",
					"wiseEvents": "Play_Amb_Palais_Du_Negoce"
				},
				{
					"id": "LeaveMode_G2TrialPalace",
					"wiseEvents": "Stop_Amb_Palais_Du_Negoce"
				},
				{
					"id": "EnterMode_G2TheaterPlace"
				},
				{
					"id": "LeaveMode_G2TheaterPlace",
					"wiseEvents": ""
				},
				{
					"id": "EnterMode_G2Tavern",
					"wiseEvents": "Play_AMB_Taverne_De_La_Fortune_Faite"
				},
				{
					"id": "LeaveMode_G2Tavern",
					"wiseEvents": "Stop_AMB_Taverne_De_La_Fortune_Faite"
				},
				{
					"id": "EnterMode_A1Stables",
					"wiseEvents": "Play_AMB_Farm_Empty",
					"params": []
				},
				{
					"id": "LeaveMode_A1Stables",
					"wiseEvents": "Stop_AMB_Farm_Empty"
				},
				{
					"id": "EnterMode_CityComptoir",
					"wiseEvents": "Play_AMB_CityComptoir"
				},
				{
					"id": "LeaveMode_CityComptoir",
					"wiseEvents": "Stop_AMB_CityComptoir"
				},
				{
					"id": "EnterMode_PlaceTradingPost",
					"wiseEvents": "Play_AMB_CityComptoir"
				},
				{
					"id": "LeaveMode_PlaceTradingPost",
					"wiseEvents": "Stop_AMB_CityComptoir"
				},
				{
					"id": "EnterMode_FV3ChurchCave",
					"wiseEvents": "Play_AMB_Church_Cave"
				},
				{
					"id": "LeaveMode_FV3ChurchCave",
					"wiseEvents": "Stop_AMB_Church_Cave"
				},
				{
					"id": "EnterMode_PaviiCave",
					"wiseEvents": "Play_AMB_PaviiFarm_Cave"
				},
				{
					"id": "LeaveMode_PaviiCave",
					"wiseEvents": "Stop_AMB_PaviiFarm_Cave"
				},
				{
					"id": "EnterMode_G1ApothecaryCaveTrap",
					"wiseEvents": "Play_AMB_Apothecary_Cave"
				},
				{
					"id": "LeaveMode_G1ApothecaryCaveTrap",
					"wiseEvents": "Stop_AMB_Apothecary_Cave"
				},
				{
					"id": "EnterMode_G1BrunhildeCastel",
					"wiseEvents": "Play_AMB_Castle"
				},
				{
					"id": "LeaveMode_G1BrunhildeCastel",
					"wiseEvents": "Stop_AMB_Castle"
				},
				{
					"id": "EnterMode_G1CoreneCastel",
					"wiseEvents": "Play_AMB_Abode"
				},
				{
					"id": "LeaveMode_G1CoreneCastel",
					"wiseEvents": "Stop_AMB_Abode"
				},
				{
					"id": "EnterMode_G2AmbassyCave",
					"wiseEvents": "Play_AMB_Ambassy_CaveMine"
				},
				{
					"id": "LeaveMode_G2AmbassyCave",
					"wiseEvents": "Stop_AMB_Ambassy_CaveMine"
				},
				{
					"id": "EnterMode_G2Ambassy",
					"wiseEvents": "Play_AMB_Ambassy"
				},
				{
					"id": "LeaveMode_G2Ambassy",
					"wiseEvents": "Stop_AMB_Ambassy"
				},
				{
					"id": "EnterMode_H1SmugglerLairCave",
					"wiseEvents": "Play_AMB_EmptyFarm_Cave"
				},
				{
					"id": "LeaveMode_H1SmugglerLairCave",
					"wiseEvents": "Stop_AMB_EmptyFarm_Cave"
				},
				{
					"id": "EnterMode_H1OldAbodeCave",
					"wiseEvents": "Play_AMB_OldAbode_Cave"
				},
				{
					"id": "LeaveMode_H1OldAbodeCave",
					"wiseEvents": "Stop_AMB_OldAbode_Cave"
				},
				{
					"id": "EnterMode_TrainingCamp",
					"wiseEvents": "Play_AMB_Training_Camp"
				},
				{
					"id": "LeaveMode_TrainingCamp",
					"wiseEvents": "Stop_AMB_Training_Camp"
				},
				{
					"id": "EnterMode_G2HoevendorpAbode",
					"wiseEvents": "Play_AMB_Abode"
				},
				{
					"id": "LeaveMode_G2HoevendorpAbode",
					"wiseEvents": "Stop_AMB_Abode"
				},
				{
					"id": "EnterMode_G2Apothecary",
					"wiseEvents": "Play_AMB_Apothecary"
				},
				{
					"id": "LeaveMode_G2Apothecary",
					"wiseEvents": "Stop_AMB_Apothecary"
				},
				{
					"id": "EnterMode_G2Hall",
					"wiseEvents": "Play_AMB_T1Hall"
				},
				{
					"id": "LeaveMode_G2Hall",
					"wiseEvents": "Stop_AMB_T1Hall"
				},
				{
					"id": "EnterMode_G2MarketplaceFish"
				},
				{
					"id": "LeaveMode_G2MarketplaceFish"
				},
				{
					"id": "EnterMode_G2Forge",
					"wiseEvents": "Play_AMB_Forge"
				},
				{
					"id": "LeaveMode_G2Forge",
					"wiseEvents": "Stop_AMB_Forge"
				},
				{
					"id": "EnterMode_A1Celestium_CaveSide",
					"wiseEvents": "Play_AMB_Celestium"
				},
				{
					"id": "LeaveMode_A1Celestium_CaveSide",
					"wiseEvents": "Stop_AMB_Celestium"
				},
				{
					"id": "EnterMode_T5Church",
					"wiseEvents": "Play_AMB_T5_Church"
				},
				{
					"id": "LeaveMode_T5Church",
					"wiseEvents": "Stop_AMB_T5_Church"
				},
				{
					"id": "EnterMode_A1Laboratory",
					"wiseEvents": "Play_Amb_A1Laboratory_Cave"
				},
				{
					"id": "LeaveMode_A1Laboratory",
					"wiseEvents": "Stop_Amb_A1Laboratory_Cave"
				},
				{
					"id": "EnterMode_A1University",
					"wiseEvents": "Play_Amb_A1University"
				},
				{
					"id": "LeaveMode_A1University",
					"wiseEvents": "Stop_Amb_A1University\n",
					"notes": ""
				},
				{
					"id": "EnterMode_A1Hostel",
					"wiseEvents": "Play_AMB_Tavern"
				},
				{
					"id": "LeaveMode_A1Hostel",
					"wiseEvents": "Stop_AMB_Tavern"
				},
				{
					"id": "EnterMode_A1HauntedCastleForge",
					"wiseEvents": "Play_A1HauntedForge"
				},
				{
					"id": "LeaveMode_A1HauntedCastleForge",
					"wiseEvents": "Stop_A1HauntedForge"
				},
				{
					"id": "EnterMode_A1HauntedCastle",
					"wiseEvents": "Play_A1HauntedCastle"
				},
				{
					"id": "LeaveMode_A1HauntedCastle",
					"wiseEvents": "Stop_A1HauntedCastle"
				},
				{
					"id": "EnterMode_A1HauntedCastleUp",
					"wiseEvents": "Play_A1HauntedA1HauntedCastleUp"
				},
				{
					"id": "LeaveMode_A1HauntedCastleUp",
					"wiseEvents": "Stop_A1HauntedA1HauntedCastleUp"
				},
				{
					"id": "EnterMode_A1TrappersCabin",
					"wiseEvents": "Play_AMB_TrapperCabin"
				},
				{
					"id": "LeaveMode_A1TrappersCabin",
					"wiseEvents": "Stop_AMB_TrapperCabin"
				},
				{
					"id": "EnterMode_A1Forge",
					"wiseEvents": "Play_AMB_A1Forge"
				},
				{
					"id": "LeaveMode_A1Forge",
					"wiseEvents": "Stop_AMB_A1Forge"
				},
				{
					"id": "EnterMode_A1Castle",
					"wiseEvents": "Play_AMB_A1Castle"
				},
				{
					"id": "LeaveMode_A1Castle",
					"wiseEvents": "Stop_AMB_A1Castle"
				},
				{
					"id": "PlaceWineyard"
				},
				{
					"id": "PlaceStable",
					"wiseEvents": "Play_WT_PlaceId_Stable"
				},
				{
					"id": "PlaceForgeGood",
					"wiseEvents": "Play_WT_PlaceId_Forge_Good"
				},
				{
					"id": "PlaceForgeBad",
					"wiseEvents": "Play_WT_PlaceId_Forge_Bad"
				},
				{
					"id": "PlaceForgePerfect",
					"wiseEvents": "Play_WT_PlaceId_Forge_Perfect"
				},
				{
					"id": "PlaceForgeEmpty",
					"notes": "Vide exprès pour les villages forsaken"
				},
				{
					"id": "PlaceFarmAnimals",
					"wiseEvents": "Play_Farm_Animals_3D"
				},
				{
					"id": "PlaceFarmSheep",
					"wiseEvents": "Play_Farm_Sheep_3D"
				},
				{
					"id": "PlaceFishCabinLake",
					"wiseEvents": "Play_FishCabin_Lake_3D"
				},
				{
					"id": "PlaceCathedral",
					"wiseEvents": "Play_Cathedral_3D"
				},
				{
					"id": "PlaceAmbassadeAlazar",
					"wiseEvents": "Play_Ambassade_Alazar_3D"
				},
				{
					"id": "PlaceForteresseDeLaFraternite",
					"wiseEvents": "Play_Forteresse_DeLaFraternite_3D"
				},
				{
					"id": "PlacePlaceDesArts",
					"wiseEvents": "Play_Place_des_Arts_3D"
				},
				{
					"id": "PlacePalaisDuNegoce",
					"wiseEvents": "Play_Palais_Du_Negoce_3D"
				},
				{
					"id": "PlaceUniversiteDeGosenberg",
					"wiseEvents": "Play_Universite_De_Gosenberg_3D"
				},
				{
					"id": "PlaceTaverneDeLaFortune",
					"wiseEvents": "Play_Taverne_DeLaFortune_3D"
				},
				{
					"id": "PlaceForsakenVillage",
					"wiseEvents": "Play_WT_Amb_Harag_Forsaken_Haunted_Village_Florish"
				},
				{
					"id": "PlaceBrothel",
					"wiseEvents": "Play_AMB_Brothel_3D"
				},
				{
					"id": "PlaceFarmPig",
					"wiseEvents": "Play_Farm_Pig_3D"
				},
				{
					"id": "Place_AngryWalla",
					"wiseEvents": "Play_WT_Amb_AmbassadeAlazar_AngryWalla"
				},
				{
					"id": "PlaceDestroyedStables"
				},
				{
					"id": "PlaceVillage"
				},
				{
					"id": "PlaceCelestium",
					"wiseEvents": "Play_WT_AMB_Celestium"
				},
				{
					"id": "RoamingStartAggro",
					"wiseEvents": "Play_WT_Aggro",
					"gameObject": "Roaming",
					"notes": "Besoin Musical"
				},
				{
					"id": "StartGather",
					"wiseEvents": "Play_WT_Interface_Ressource_Gather",
					"gameObject": "Item"
				},
				{
					"id": "DiscoverPlace",
					"wiseEvents": "Play_WT_Interface_DiscoverPlace_Map",
					"gameObject": "Place",
					"notes": "Besoin Musical"
				},
				{
					"id": "DiscoverHideout",
					"wiseEvents": "Play_WT_Interface_DiscoverPlace_Map",
					"notes": "Besoin Musical"
				},
				{
					"id": "OpenFightMenu",
					"wiseEvents": "Play_WT_UI_OpenFight",
					"gameObject": "Roaming",
					"notes": "Besoin Musical"
				},
				{
					"id": "OpenFightCamp",
					"wiseEvents": "Play_WT_UI_OpenFight"
				},
				{
					"id": "OpenFightDebrief",
					"wiseEvents": "Play_WT_UI_OpenDebrief_Win",
					"notes": "Besoin Musical"
				},
				{
					"id": "OpenFightDebriefLost",
					"notes": "Besoin Musical - après retreat",
					"wiseEvents": "Play_WT_UI_OpenDebrief_Loose"
				},
				{
					"id": "GhostPackSpawn",
					"gameObject": "Roaming",
					"notes": "Nuage fog sur map",
					"wiseEvents": "Play_WT_GhostPack_Lp"
				},
				{
					"id": "MovingStart",
					"gameObject": "Roaming",
					"wiseEvents": "Play_WT_Unit_WM_Move",
					"notes": ""
				},
				{
					"id": "MovingStop",
					"gameObject": "Roaming",
					"wiseEvents": "Stop_WT_Unit_WM_Move",
					"notes": ""
				},
				{
					"id": "PlayerMovingStart",
					"wiseEvents": "Play_WT_Warband_WM_Move",
					"gameObject": "Roaming"
				},
				{
					"id": "PlayerMovingStop",
					"wiseEvents": "Stop_WT_Warband_WM_Move",
					"gameObject": "Roaming"
				},
				{
					"id": "FightingStart",
					"gameObject": "Roaming",
					"wiseEvents": "Play_WT_AMB_Battle_WM"
				},
				{
					"id": "FightingStop",
					"gameObject": "Roaming",
					"wiseEvents": "Stop_WT_AMB_Battle_WM"
				},
				{
					"id": "StartCampfire",
					"wiseEvents": "Play_WT_State_Camp_Enter",
					"notes": ""
				},
				{
					"id": "QuitCampfire",
					"wiseEvents": "Play_WT_State_Camp_Exit",
					"notes": ""
				},
				{
					"id": "StartCampRest",
					"wiseEvents": "Play_WT_UI_Start_Camp_Rest",
					"notes": "Besoin Musical"
				},
				{
					"id": "EndCampRest",
					"wiseEvents": "Play_WT_UI_End_Camp_Rest",
					"notes": "Besoin Musical"
				},
				{
					"id": "PlaceTool",
					"wiseEvents": "Play_WT_UI_Camp_PlaceTool",
					"gameObject": "Item"
				},
				{
					"id": "PaidSalaries",
					"wiseEvents": "Play_WT_Interface_Give_Gold"
				},
				{
					"id": "NotifyXXX",
					"notes": "liste des notifications (cf icon - categorie Notify)"
				},
				{
					"id": "NotifyNeutral",
					"wiseEvents": "Play_WT_Interface_Notification_Neutral"
				},
				{
					"id": "NotifyGood",
					"wiseEvents": "Play_WT_Interface_Notification_Positive"
				},
				{
					"id": "NotifyBad",
					"wiseEvents": "Play_WT_Interface_Notification_Negative"
				},
				{
					"id": "NotifySettingProgress",
					"notes": "le scenario de la region a progressé",
					"wiseEvents": "Play_WT_UI_SettingProgress"
				},
				{
					"id": "NotifyDiscoverJob",
					"notes": "on découvre un nouveau métier",
					"wiseEvents": "Play_WT_UI_DiscoverJob"
				},
				{
					"id": "NotifyRecruit",
					"notes": "on recrute un compagnon",
					"wiseEvents": "Play_WT_UI_Recruit"
				},
				{
					"id": "NotifyAccompany",
					"notes": "un npc nous accompagne",
					"wiseEvents": "Play_WT_UI_Accompany"
				},
				{
					"id": "NotifyGainDialog",
					"notes": "on a un gain d'objets suite à un dialogue",
					"wiseEvents": "Play_WT_UI_GainDialog"
				},
				{
					"id": "NotifyChooseRank",
					"notes": "on nomme un capitaine / lieutenant",
					"wiseEvents": "Play_WT_UI_ChooseRank"
				},
				{
					"id": "NotifyDlgRead",
					"notes": "on lit un livre (/item WorkManual)",
					"wiseEvents": "Play_WT_UI_DlgRead"
				},
				{
					"id": "MissionReward",
					"wiseEvents": "Play_WT_Interface_Gain_Gold"
				},
				{
					"id": "WindowOpen",
					"wiseEvents": "Play_WT_Interface_Open",
					"gameObject": "UI"
				},
				{
					"id": "WindowClose",
					"wiseEvents": "Play_WT_Interface_Close",
					"gameObject": "UI"
				},
				{
					"id": "WindowPageTurn",
					"wiseEvents": "Play_WT_Interface_Book_PageTurn",
					"gameObject": "UI",
					"notes": ""
				},
				{
					"id": "ButtonClick",
					"wiseEvents": "Play_WT_Interface_Button_Click"
				},
				{
					"id": "SelectorClick",
					"notes": "Sur différents élements d'UI (non buttons)",
					"wiseEvents": "Play_WT_Menu_SelectorClick_01"
				},
				{
					"id": "TitleOverMenu",
					"wiseEvents": "Play_WT_Menu_SelectorClick_01",
					"notes": ""
				},
				{
					"id": "CreationGameMoveCard",
					"wiseEvents": "Play_WT_UI_Card_Up"
				},
				{
					"id": "CreationGameClick",
					"wiseEvents": "Play_WT_Interface_Button_Click",
					"notes": "Quand on valide une étape (création de partie)"
				},
				{
					"id": "StartGameClick",
					"wiseEvents": "Play_WT_Interface_Button_Click",
					"notes": "Quand on valide la troupe (création de partie)"
				},
				{
					"id": "RepairEquipement",
					"wiseEvents": "Play_WT_Interface_Repair_Equipement"
				},
				{
					"id": "HealWound",
					"wiseEvents": "Play_WT_Interface_Heal_Wound"
				},
				{
					"id": "GrimoireLearn",
					"wiseEvents": "Play_WT_Interface_GrimoireLearn"
				},
				{
					"id": "WantedIncrease",
					"wiseEvents": "Play_WT_Interface_WantedIncrease"
				},
				{
					"id": "NotifyWantedStop",
					"wiseEvents": "Play_WT_Interface_Wanted_Reset"
				},
				{
					"id": "NotifyWantedStart",
					"wiseEvents": "Play_WT_Interface_Wanted_Start"
				},
				{
					"id": "NotifyBellGosenberg2",
					"notes": "Les cloches de la ville retentissent brièvement.",
					"wiseEvents": "Play_WT_UI_GosenbergCity_Alarm_Notif"
				},
				{
					"id": "MissionAccepted",
					"wiseEvents": "Play_WT_Interface_Mission_Accepted"
				},
				{
					"id": "AttributeUpgrade",
					"notes": "unit info jingle",
					"wiseEvents": "Play_WT_UI_AttributeUpgrade"
				},
				{
					"id": "SkillLearn",
					"notes": "unit info jingle",
					"wiseEvents": "Play_WT_UI_SkillLearn"
				},
				{
					"id": "UpgradeClass",
					"notes": "unit info jingle (at level 3)",
					"wiseEvents": "Play_WT_UI_UpgradeClass"
				},
				{
					"id": "SkillUpgrade",
					"notes": "unit info jingle (/item SkillMastery)",
					"wiseEvents": "Play_WT_UI_SkillUpgrade"
				},
				{
					"id": "ChooseJob",
					"notes": "unit info jingle",
					"wiseEvents": "Play_WT_UI_ChooseJob"
				},
				{
					"id": "DropItem",
					"gameObject": "Item",
					"notes": "quand on jette un objet",
					"wiseEvents": "Play_WT_Interface_Ressource_Drop_ItemKind"
				},
				{
					"id": "GameOver",
					"notes": "",
					"wiseEvents": "Play_WT_GameOver"
				},
				{
					"id": "GameOver_IronMan",
					"notes": "Paramètres à choisir à la création de partie \"Save Mode\"\ngameover = sauvegarde supprimée",
					"wiseEvents": "Play_WT_GameOver_IronMan"
				},
				{
					"id": "Customize",
					"wiseEvents": "Play_WT_UI_Barber_Menu",
					"notes": "quand on clique sur le barberKit"
				},
				{
					"id": "ConfirmCustomize",
					"notes": "quand on valide les modifs du barberKit",
					"wiseEvents": "Play_WT_UI_Barber_Confirmed"
				},
				{
					"id": "Specialization",
					"wiseEvents": "Play_WT_UI_Respecialisation_Menu",
					"notes": "quand on clique sur le choix de dialogue de respé"
				},
				{
					"id": "ConfirmSpecialization",
					"notes": "quand on valide la respé sur une unité",
					"wiseEvents": "Play_WT_UI_Respecialisation"
				},
				{
					"id": "UpgradeLegendaryWeapon",
					"wiseEvents": "WT_Upgrade_Legendary_Weapon",
					"notes": "dans le camp des compagnons, upgrade une arme légendaire",
					"todo": true
				},
				{
					"id": "ConfirmUpgradeLegendaryWeapon",
					"wiseEvents": "Play_WT_Confirm_Upgrade_Legendary_Weapon",
					"notes": "dans le camp des compagnons, confirmation d'upgrade d'une arme légendaire",
					"todo": true
				},
				{
					"id": "PathDefiCompleted",
					"notes": "dans le menu des voies lorsqu'on complète un défi",
					"todo": true,
					"wiseEvents": "Play_WT_UI_PathDefiCompleted"
				},
				{
					"id": "PathLevelUp",
					"notes": "dans le menu des voies lorsqu'on augmente d'un niveau",
					"todo": true,
					"wiseEvents": "Play_WT_UI_PathLevelUp"
				},
				{
					"id": "PathXPProgress_Start",
					"notes": "dans le menu des voies lorsque la barre d'xp monte",
					"todo": true
				},
				{
					"id": "PathXPProgress_Stop",
					"notes": "",
					"todo": true
				},
				{
					"id": "PathXPProgress_Maxed",
					"notes": "dans le menu des voies lorsque la barre d'xp atteint son maximum",
					"todo": true,
					"wiseEvents": "Play_WT_UI_PathXPProgress_Maxed"
				},
				{
					"id": "ChatReceiveMessage",
					"notes": "quand un nouveau message est reçu",
					"wiseEvents": "Play_WT_UI_ChatReceived_Message"
				},
				{
					"id": "Ping",
					"wiseEvents": "Play_WT_Hover_Skill",
					"notes": "TODO (ping multiplayer)"
				},
				{
					"id": "StartDialog",
					"wiseEvents": "Play_dialog_start",
					"gameObject": "Element"
				},
				{
					"id": "ShopBuy",
					"wiseEvents": "Play_WT_Interface_Give_Gold",
					"gameObject": "Element"
				},
				{
					"id": "ShopSell",
					"wiseEvents": "Play_WT_Interface_Gain_Gold",
					"gameObject": "Element"
				},
				{
					"id": "OpenElement",
					"gameObject": "Element",
					"wiseEvents": "Play_WT_Elements_Open_Element"
				},
				{
					"id": "UnlockElement",
					"wiseEvents": "Play_WT_Elements_Unlock_Element",
					"gameObject": "Element"
				},
				{
					"id": "TryOpenLockedElement",
					"wiseEvents": "Play_WT_Elements_Element_Locked",
					"gameObject": "Element"
				},
				{
					"id": "ChooseUnitGainItem",
					"wiseEvents": "Play_WT_Interface_Gain_Gold",
					"params": []
				},
				{
					"id": "GainGold",
					"wiseEvents": "Play_WT_Interface_Gain_Gold"
				},
				{
					"id": "GainItem",
					"gameObject": "Item",
					"notes": "vente",
					"wiseEvents": "Play_WT_Interface_Item_Gain"
				},
				{
					"id": "CostGold",
					"wiseEvents": "Play_WT_Interface_Give_Gold"
				},
				{
					"id": "CostItem",
					"gameObject": "Item",
					"notes": "achat",
					"wiseEvents": "Play_WT_Interface_Item_Cost"
				},
				{
					"id": "ItemInteraction",
					"wiseEvents": "Play_WT_Interface_Item_Gain",
					"gameObject": "Item"
				},
				{
					"id": "OpenDoor",
					"wiseEvents": "Play_WT_OpenDoor_Generic_01",
					"notes": "les entrées sorties spécifiques se font dans les enter leave events des placesid"
				},
				{
					"id": "ElementOver",
					"gameObject": "Element",
					"notes": "mettre la souris en over sur un element de diorama",
					"wiseEvents": "Play_WT_Elements_Hover_Element"
				},
				{
					"id": "Retreat",
					"gameObject": "BattleUnit",
					"notes": "Drapeau blanc - attention à superposition avec fight debrief",
					"wiseEvents": "Play_WT_UI_Retreat"
				},
				{
					"id": "MoraleWin",
					"wiseEvents": "",
					"notes": "Quand la victoire au moral est garantie"
				},
				{
					"id": "HitArmorBreak",
					"wiseEvents": "Play_WT_Weapon_Impact_ArmorBreak",
					"gameObject": "BattleUnit"
				},
				{
					"id": "HitArmor",
					"wiseEvents": "Play_WT_Weapon_Impact_Armor",
					"gameObject": "BattleUnit"
				},
				{
					"id": "HitHealth",
					"wiseEvents": "Play_WT_Weapon_Impact_Flesh",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Dying",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Voicekit_Agony",
					"notes": ""
				},
				{
					"id": "ProjectileShot",
					"wiseEvents": "",
					"gameObject": "BattleUnit",
					"notes": "Play_WT_Bow_Shot"
				},
				{
					"id": "PrepareProjectileShot",
					"wiseEvents": "Play_WT_Bow_PreShot",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Death",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Voicekit_Death"
				},
				{
					"id": "Step",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Footstep_Battle"
				},
				{
					"id": "Motivation",
					"gameObject": "BattleUnit",
					"notes": "Petite galvanisation à 60% de morale (débloqué au niveau 7 du path Might)",
					"todo": true
				},
				{
					"id": "Galvanization",
					"wiseEvents": "Play_WT_Battle_Galvanisation",
					"gameObject": "BattleUnit",
					"notes": ""
				},
				{
					"id": "Enter_Finisher",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Battle_Finisher_Enter"
				},
				{
					"id": "Leave_Finisher",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Battle_Finisher_Exit"
				},
				{
					"id": "Pushback",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Status_Pushback"
				},
				{
					"id": "AddStatus_Poison",
					"wiseEvents": "Play_WT_Status_Poison",
					"gameObject": "BattleUnit",
					"notes": "Son particulier pour l'ajout du status poison"
				},
				{
					"id": "AddStatus_Bleeding",
					"notes": "Son particulier pour l'ajout du status saignement",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Status_Bleeding"
				},
				{
					"id": "AddStatus_Burning",
					"notes": "Son particulier pour l'ajout du status burning",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Status_Burning"
				},
				{
					"id": "AddStatus_Bonus",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Status_Bonus",
					"notes": "Quand n'importe quel bonus est gagné"
				},
				{
					"id": "AddStatus_Malus",
					"gameObject": "BattleUnit",
					"notes": "Quand n'importe quel malus est gagné (sauf poison, bleeding et burning)",
					"wiseEvents": "Play_WT_Status_Malus"
				},
				{
					"id": "Passive_Proc",
					"gameObject": "BattleUnit",
					"notes": "Quand n'importe quelle compétence passive se déclenche (commun à tous les passifs). Par ex, quand je m'engage, je gagne 1AP => son pour signaler le proc du passif"
				},
				{
					"id": "ProcStatus_Poison",
					"gameObject": "BattleUnit",
					"notes": "Quand le poison inflige des dégâts",
					"wiseEvents": "Play_WT_ProcStatus_Poison"
				},
				{
					"id": "ProcStatus_Bleeding",
					"gameObject": "BattleUnit",
					"notes": "Quand le saignement inflige des dégâts",
					"wiseEvents": "Play_WT_ProcStatus_Bleeding"
				},
				{
					"id": "ProcStatus_Burning",
					"notes": "Quand la brûlure inflige des dégâts",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_ProcStatus_Burning"
				},
				{
					"id": "Capture",
					"gameObject": "BattleUnit",
					"notes": "Quand on capture un adversaire, animal ou être humain (bruit de massette qui assomme)",
					"wiseEvents": "Play_WT_Battle_Capture"
				},
				{
					"id": "BattleHeal",
					"gameObject": "BattleUnit",
					"notes": "Quand une unité regagne de la Santé",
					"wiseEvents": "Play_WT_Battle_Heal"
				},
				{
					"id": "BattleGainApBonus",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_UI_Ap_PointBonus"
				},
				{
					"id": "BattleGainsMoral",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Battle_GainsMoral"
				},
				{
					"id": "Oil_Proc",
					"gameObject": "BattleUnit",
					"notes": "Quand une huile s'active (chance de s'activer après une attaque)",
					"wiseEvents": "Play_WT_Battle_Oil_Pro"
				},
				{
					"id": "Scared_Flee",
					"gameObject": "BattleUnit",
					"notes": "Quand une unité s'enfuit de peur (5 stack du Status Terror)",
					"wiseEvents": "Play_WT_Status_Flee",
					"todo": true
				},
				{
					"id": "Opportunity_Attack",
					"gameObject": "BattleUnit",
					"notes": "Quand une attaque d'opportunité est déclenchée (skill ID : OpportunityAttack est parfois appelé dans les skills, il doit avoir un son particulier)",
					"wiseEvents": "Play_WT_Battle_Opportunity_Attack"
				},
				{
					"id": "End_Turn",
					"gameObject": "BattleUnit",
					"notes": "Son quand on termine le tour",
					"wiseEvents": "Play_WT_End_Turn"
				},
				{
					"id": "Begin_Turn_AI",
					"gameObject": "BattleUnit",
					"notes": "Son quand le tour d'une unité ennemie commence",
					"wiseEvents": ""
				},
				{
					"id": "Engage",
					"gameObject": "BattleUnit",
					"notes": "Son quand on engage une unité",
					"wiseEvents": "Play_WT_Engage"
				},
				{
					"id": "Disengage",
					"gameObject": "BattleUnit",
					"notes": "Son quand on se désengage (skill ID : Disengage)",
					"wiseEvents": "Play_WT_Disengage"
				},
				{
					"id": "Move_Clic",
					"gameObject": "BattleUnit",
					"notes": "Son quand on valide un déplacement",
					"wiseEvents": "Play_WT_Battle_MoveClick"
				},
				{
					"id": "Hover_Skill",
					"gameObject": "BattleUnit",
					"notes": "Son quand on hover un skill",
					"wiseEvents": "Play_WT_Hover_Skill"
				},
				{
					"id": "Hover_Unit",
					"gameObject": "BattleUnit",
					"notes": "Petit son discret quand on hover une unit (via le modèle ou son portrait)",
					"wiseEvents": "Play_WT_Hover_Unit"
				},
				{
					"id": "Select_Unit",
					"gameObject": "BattleUnit",
					"notes": "Son quand on sélectionne une unit",
					"wiseEvents": "Play_WT_Select_Unit"
				},
				{
					"id": "Drag_Unit_Start",
					"gameObject": "BattleUnit",
					"notes": "Son quand on drag une unit durant la phase de déploiement",
					"wiseEvents": "Play_WT_Select_Unit",
					"params": []
				},
				{
					"id": "Drag_Unit_NewSlot",
					"gameObject": "BattleUnit",
					"notes": "Son quand on change une unit de place pendant le déploiement",
					"wiseEvents": "Play_WT_UI_Battle_SelectPlace"
				},
				{
					"id": "Drag_Unit_Cancel",
					"gameObject": "BattleUnit",
					"notes": "Son quand on annule le changement de place d'une unité durant le déploiement",
					"wiseEvents": "Play_WT_UI_Deselect_Unit"
				},
				{
					"id": "Select_Skill",
					"gameObject": "BattleUnit",
					"notes": "Son quand on sélectionne un skill",
					"wiseEvents": "Play_WT_Select_Skill"
				},
				{
					"id": "Deselect_Skill",
					"gameObject": "BattleUnit",
					"notes": "Son quand on désélectionne un skill",
					"wiseEvents": "Play_WT_Deselect_Skill"
				},
				{
					"id": "Hover_Morale",
					"gameObject": "BattleUnit",
					"notes": "Son quand on hover la jauge de moral",
					"wiseEvents": "Play_WT_Hover_Morale"
				},
				{
					"id": "End_Round",
					"gameObject": "BattleUnit",
					"notes": "Son quand un Round se termine (et qu'un autre débute) - un Round = quand toutes les unités ont joué leur tour",
					"wiseEvents": "Play_WT_End_Round"
				},
				{
					"id": "Mosquito_Cloud_Burn",
					"gameObject": "Entity",
					"notes": "Quand un nuage de moustiques se fait brûler",
					"wiseEvents": "Play_WT_ProcStatus_Burning"
				},
				{
					"id": "Trap_Destroyed",
					"gameObject": "BattleUnit",
					"notes": "Quand un piège est déclenché"
				},
				{
					"id": "Arena_Exigence_Done",
					"notes": "Son quand une exigence du public est satisfaite : acclamations, ferveur",
					"wiseEvents": "Play_WT_Arena_Exigence_Done"
				},
				{
					"id": "Arena_Exigence_Failed",
					"notes": "Quand une exigence est loupée, public insatisfait : siffle, hurle",
					"wiseEvents": "Play_WT_Arena_Exigence_Failed"
				},
				{
					"id": "Arena_Fighter_Killed",
					"notes": "Quand un combattant subit un coup fatal, public satisfait : acclamations, ferveur",
					"wiseEvents": "Play_WT_Arena_Fighter_Killed"
				},
				{
					"id": "Arena_Loser_Walk_Enter",
					"notes": "",
					"wiseEvents": "Play_WT_Arena_Exigence_Done"
				},
				{
					"id": "Arena_Loser_Walk_Leave",
					"notes": "Quand le combattant battu sort de l'arène, il le fait sous les sifflets",
					"wiseEvents": "Play_WT_Arena_Loser_Walk_Leave"
				},
				{
					"id": "Arena_New_Round",
					"notes": "Applaudissements pour encourager les combattants (proc de manière random)",
					"wiseEvents": "Play_WT_Arena_New_Round"
				},
				{
					"id": "Arena_Victory",
					"notes": "Son de victoire, ambiance après avoir gagné tous les matchs de l'arène : imaginer les unités du joueur debout au centre de l'arène, acclamées par le public",
					"todo": true,
					"wiseEvents": "Play_WT_Arena_Victory"
				},
				{
					"id": "Ruin_Wood_Broken",
					"notes": "Une barricade en bois est enfoncée à l'épaule",
					"wiseEvents": "Play_WT_Scenar_BarricadeBreak"
				},
				{
					"id": "Ruin_Rope",
					"notes": "Une corde en bois est lancée du haut d'une falaise",
					"wiseEvents": "Play_WT_Scenar_Rope"
				},
				{
					"id": "Ruin_Bucket_Fall",
					"notes": "Un seau en fer tombe dans un puits et ricoche contre les parois en pierre : boucan",
					"wiseEvents": "Play_WT_Scenar_BucketFall"
				},
				{
					"id": "Ruin_Walk_Hallway",
					"notes": "Deplacement cam 1st person entre les salles",
					"wiseEvents": "Play_WT_AMB_Ruins_Walk"
				},
				{
					"id": "Ruin_FireUp",
					"notes": "De vieilles tapisseries et des toiles d'araignée prennent feu.",
					"wiseEvents": "Play_WT_Scenar_Burning_Web"
				},
				{
					"id": "Ruin_GoThrough_Tapestry",
					"notes": "Le joueur écarte une tapisserie et entre dans une nouvelle salle.",
					"wiseEvents": "Play_WT_Scenar_Move_Tapestry"
				},
				{
					"id": "Ruin_StoneDoor_Opening",
					"notes": "Une porte en pierre s'ouvre.",
					"wiseEvents": "Play_WT_OpenDoor_Generic_01"
				},
				{
					"id": "Ruin_Drums_On",
					"notes": "Des tambours montent des profondeurs du tombeau, annonçant l'arrivée massive d'ennemis monstrueux.",
					"wiseEvents": "Play_WT_Ruins_Drums_Lp"
				},
				{
					"id": "Ruin_Drums_Off",
					"notes": "Les tambours s'arrêtent (silence)",
					"wiseEvents": "Stop_WT_Ruins_Drums_Lp"
				},
				{
					"id": "Ruin_KrownFall",
					"notes": "Des krowns déposés par le joueur dans une coupe sont aspirées à l'intérieur d'un conduit.",
					"wiseEvents": "Play_WT_Scenar_Ruin_KrownFall"
				},
				{
					"id": "ForsakenVillage_Door_Snap1",
					"notes": "Une porte qui claque violemment.",
					"wiseEvents": "Play_WT_Scenar_ForsakenVillage_Door_Snap1"
				},
				{
					"id": "ForsakenVillage_Door_Snap2",
					"notes": "Une porte qui claque violemment parce que quelqu'un est tombé dessus en essayant de la rattraper",
					"wiseEvents": "Play_WT_Scenar_ForsakenVillage_Door_Snap2"
				},
				{
					"id": "ForsakenVillage_Metal_Objets",
					"notes": "Un sac contenant des objets métalliques qui est secoué.",
					"wiseEvents": "Play_WT_Scenar_ForsakenVillage_Metal_Objets"
				},
				{
					"id": "ForsakenVillage_Plagueridden_Screaming",
					"notes": "Cri bref d'un pestiféré (réutiliser le cri des plageridden dans le jeu).",
					"wiseEvents": "Play_WT_Scenar_ForsakenVillage_Plagued_Idle"
				},
				{
					"id": "ForsakenVillage_Shelf_Fall",
					"notes": "Une étagère (meuble) pourrie tombe par terre, entrainant des poteries et des restes d'objets dans sa chute.",
					"wiseEvents": "Play_WT_Scenar_ShelfFall"
				},
				{
					"id": "ForsakenVillage_Wolf_Growl",
					"notes": "Un loup grogne à l'arrivée du joueur.",
					"wiseEvents": "Play_WT_Scenar_Wolf_Growl"
				},
				{
					"id": "ForsakenVillage_Wolf_Howl",
					"notes": "Hurlement de loup.",
					"wiseEvents": "Play_WT_Scenar_Wolf_Escape"
				},
				{
					"id": "ForsakenVillage_Companions_Fall",
					"notes": "Au moins deux personnages tombent et s'écrasent sur un tas de planches pourries.",
					"wiseEvents": "Play_Wt_Scenar_ForsakenVillage_Companions_Fall"
				},
				{
					"id": "ForsakenVillage_Plagueridden_Horde",
					"notes": "Hurlements de rage d'un groupe de pestiférés. (group fight dans un forsaken village)",
					"wiseEvents": "Play_WT_Scenar_Plagueridden_Horde"
				},
				{
					"id": "Sport_Ball_HitGround",
					"gameObject": "BattleUnit",
					"notes": "Lorsque le ballon tombe au sol.\nisPowered -> 1er rebond après une chandelle",
					"wiseEvents": "Play_WT_Player_Rouste_Ball_Drop"
				},
				{
					"id": "Sport_Goal",
					"notes": "Lorsqu'un but est marqué",
					"wiseEvents": "Play_WT_Rouste_Goal"
				},
				{
					"id": "Sport_Game_Start",
					"notes": "Début de partie",
					"wiseEvents": "Play_WT_Rouste_Game_Start"
				},
				{
					"id": "Sport_Game_Middle",
					"notes": "Mi-temps",
					"wiseEvents": "Play_WT_Rouste_Game_Middle"
				},
				{
					"id": "Sport_Game_End",
					"notes": "Fin du match",
					"wiseEvents": "Play_WT_Rouste_Game_End"
				},
				{
					"id": "Sport_NewRound",
					"notes": "Nouveau round (comme pour l'arène?)"
				},
				{
					"id": "Sport_KnockDown",
					"notes": "Une unité est mise au sol",
					"wiseEvents": "Play_WT_Rouste_KnockDown"
				},
				{
					"id": "Sport_KickBall",
					"notes": "Une unité tire une chandelle",
					"wiseEvents": "Play_WT_Rouste_KickBall"
				},
				{
					"id": "Sport_PassIntercepted",
					"notes": "Une passe est interceptée par l'adversaire",
					"wiseEvents": "Play_WT_Rouste_PassIntercepted"
				},
				{
					"id": "Skill_XXX",
					"gameObject": "BattleUnit",
					"notes": ""
				},
				{
					"id": "SkillHit_XXX",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_Move",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Move",
					"notes": "Base-Skill"
				},
				{
					"id": "Skill_KnockOut",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Knockout",
					"notes": "Base-Skill"
				},
				{
					"id": "Skill_Recover",
					"wiseEvents": "Play_WT_Skill_Recover",
					"gameObject": "BattleUnit",
					"notes": "Base-Skill"
				},
				{
					"id": "Skill_Fly",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Fly",
					"notes": "Base-Skill"
				},
				{
					"id": "Skill_LieutenantSkill",
					"wiseEvents": "Play_WT_Skill_LieutenantSkill",
					"gameObject": "BattleUnit",
					"notes": "Base-Skill"
				},
				{
					"id": "Skill_DefensivePosture",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_DefensivePosture",
					"notes": "Base-Skill"
				},
				{
					"id": "Skill_CaptainSkill",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_CaptainSkill",
					"notes": "Base-Skill"
				},
				{
					"id": "Skill_Dash",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Dash",
					"notes": "Utilitaries-Skill"
				},
				{
					"id": "Skill_Aim",
					"wiseEvents": "Play_WT_Skill_Aim",
					"gameObject": "BattleUnit",
					"notes": "Utilitaries-Skill"
				},
				{
					"id": "Skill_Taunt",
					"wiseEvents": "Play_WT_Skill_Taunt",
					"gameObject": "BattleUnit",
					"notes": "Utilitaries-Skill"
				},
				{
					"id": "Skill_Wrath",
					"wiseEvents": "Play_WT_Skill_Wrath",
					"gameObject": "BattleUnit",
					"notes": "Utilitaries-Skill"
				},
				{
					"id": "Skill_Encouragement",
					"gameObject": "BattleUnit",
					"notes": "Sword-Skill",
					"wiseEvents": "Play_WT_Skill_Encouragement"
				},
				{
					"id": "Skill_DestabilisingStrike",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_DestabilisingStrike",
					"notes": "Sword-Skill",
					"params": []
				},
				{
					"id": "Skill_Slashes",
					"gameObject": "BattleUnit",
					"notes": "Sword-Skill"
				},
				{
					"id": "Skill_Estocade",
					"gameObject": "BattleUnit",
					"notes": "Sword-Skill"
				},
				{
					"id": "Skill_Protection",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_DefensivePosture",
					"notes": "Sword-Skill"
				},
				{
					"id": "SkillHit_EternalGloryStrike",
					"gameObject": "BattleUnit",
					"notes": "Sword-Skill",
					"wiseEvents": "Play_WT_Skill_EternalGloryStrike"
				},
				{
					"id": "Skill_Barrage",
					"gameObject": "BattleUnit",
					"notes": "Bow-Skill",
					"wiseEvents": "Play_WT_Skill_Barrage"
				},
				{
					"id": "SkillHit_Barrage",
					"gameObject": "BattleUnit",
					"wiseEvents": "",
					"notes": "Bow-Skill"
				},
				{
					"id": "Skill_RecoilShot",
					"gameObject": "BattleUnit",
					"notes": "Bow-Skill",
					"wiseEvents": "Play_WT_Skill_Recoil_Shot"
				},
				{
					"id": "Skill_ATTACK",
					"gameObject": "BattleUnit",
					"notes": "Bow-Skill",
					"wiseEvents": "Play_WT_Skill_Attack"
				},
				{
					"id": "Skill_AimedShot",
					"gameObject": "BattleUnit",
					"notes": "Bow-Skill",
					"wiseEvents": "Play_WT_Skill_AimedShot"
				},
				{
					"id": "SkillHit_NarsesShot",
					"wiseEvents": "Play_WT_Skill_Narses_Shot",
					"gameObject": "BattleUnit",
					"notes": "Bow-Skill"
				},
				{
					"id": "Skill_PoisonFlask",
					"gameObject": "BattleUnit",
					"notes": "Dagger-Skill",
					"wiseEvents": "Play_WT_Poison_Whoosh"
				},
				{
					"id": "Skill_Frenzy",
					"gameObject": "BattleUnit",
					"notes": "Dagger-Skill"
				},
				{
					"id": "Skill_SmokeScreen",
					"notes": "Dagger-Skill / dans VFX",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_BetweenTheEyes",
					"notes": "Dagger-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_PoisonedImpact",
					"notes": "Mace-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_WeakeningShock",
					"notes": "Mace-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_RelentlessCharge",
					"notes": "Mace-Skill",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_RelentlessCharge"
				},
				{
					"id": "SkillHit_RelentlessCharge",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_SkillHit_RelentlessCharge",
					"notes": "Mace-Skill"
				},
				{
					"id": "Skill_ThunderousBlow",
					"notes": "Mace-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_ErkeshetWrath",
					"gameObject": "BattleUnit",
					"notes": "Mace-Skill"
				},
				{
					"id": "SkillHit_ErkeshetWrath",
					"gameObject": "BattleUnit",
					"notes": "Mace-Skill",
					"wiseEvents": "Play_WT_Skill_ErkeshetWrath"
				},
				{
					"id": "Skill_SpearThrow",
					"notes": "Polearm-Skill - Dans anims",
					"gameObject": "BattleUnit",
					"wiseEvents": ""
				},
				{
					"id": "SkillHit_SpearThrow",
					"wiseEvents": "Play_WT_Skill_SpearThrow_Impact",
					"gameObject": "BattleUnit",
					"notes": "Polearm-Skill"
				},
				{
					"id": "Skill_SpearsWall",
					"notes": "Polearm-Skill",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Barrage"
				},
				{
					"id": "SkillHit_SpearsWall",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_SpearThrow_Impact",
					"notes": "Polearm-Skill"
				},
				{
					"id": "Skill_RallyingShout",
					"notes": "Polearm-Skill",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_RallyingShout"
				},
				{
					"id": "Skill_MasteredWhirlwind",
					"notes": "Polearm-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "SkillHit_HorounStrike",
					"gameObject": "BattleUnit",
					"notes": "Polearm-Skill",
					"wiseEvents": "Play_WT_Skill_HorounStrike"
				},
				{
					"id": "Skill_SharpWhirlwind",
					"gameObject": "BattleUnit",
					"notes": "Axe-Skill"
				},
				{
					"id": "Skill_Outburst",
					"notes": "Axe-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_Ovation",
					"notes": "Axe-Skill",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Ovation"
				},
				{
					"id": "Skill_PridefulStrike",
					"notes": "Axe-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "SkillHit_ShieldSlam",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_ShieldSlam_Impact",
					"notes": "LeftHand-Skill"
				},
				{
					"id": "SkillHit_TorchStrike",
					"wiseEvents": "Play_WT_Skill_TorchStrike_Impact",
					"gameObject": "BattleUnit",
					"notes": "LeftHand-Skill"
				},
				{
					"id": "Skill_Boarding",
					"gameObject": "BattleUnit",
					"notes": "LeftHand-Skill"
				},
				{
					"id": "Skill_fire",
					"gameObject": "BattleUnit",
					"notes": "LeftHand-Skill"
				},
				{
					"id": "Skill_PoisonedThrowingKnife",
					"gameObject": "BattleUnit",
					"notes": "LeftHand-Skill - Dans anims"
				},
				{
					"id": "Skill_ThrowingKnife",
					"gameObject": "BattleUnit",
					"notes": "LeftHand-Skill - Dans anims"
				},
				{
					"id": "Skill_Blind",
					"gameObject": "BattleUnit",
					"notes": "LeftHand-Skill"
				},
				{
					"id": "Skill_Flashover",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Flashover_Whoosh",
					"notes": "LeftHand-Skill"
				},
				{
					"id": "SkillHit_Flashover",
					"gameObject": "BattleUnit",
					"wiseEvents": "",
					"notes": "LeftHand-Skill - Play_WT_Flashover_Explo"
				},
				{
					"id": "Skill_SmallExplosion",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_SmallExplosion_Whoosh",
					"notes": "LeftHand-Skill"
				},
				{
					"id": "SkillHit_SmallExplosion",
					"gameObject": "BattleUnit",
					"wiseEvents": "",
					"notes": "LeftHand-Skill - Play_WT_SmallExplosion_Explo"
				},
				{
					"id": "SkilHit_InfectedScratch",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Crawler_Attack_Impact",
					"notes": "Fantastic-Skill"
				},
				{
					"id": "Skill_IncendiaryArrow",
					"notes": "Enemy-Deserters-Skill /",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_IncendiaryArrow"
				},
				{
					"id": "Skill_BearTrap",
					"gameObject": "BattleUnit",
					"notes": "Trap",
					"wiseEvents": "Play_WT_Skill_BearTrap"
				},
				{
					"id": "SkillHit_BearTrap",
					"gameObject": "BattleUnit",
					"notes": "Trap",
					"wiseEvents": "Play_WT_Skill_BearTrap_Hit"
				},
				{
					"id": "Skill_DeathLure",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Lvl12_Deathlure",
					"notes": ""
				},
				{
					"id": "Skill_nake",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Lvl12_Condamnation",
					"notes": ""
				},
				{
					"id": "Skill_Exhorted",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Lvl12_Exhortation",
					"notes": ""
				},
				{
					"id": "Skill_LongTermePlan",
					"wiseEvents": "Play_WT_Skill_Lvl12_LongTermPlan",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_TitanicRoar",
					"wiseEvents": "Play_WT_Skill_Lvl12_TitanRoar",
					"gameObject": "BattleUnit",
					"notes": ""
				},
				{
					"id": "SkillHit_SupressFire",
					"wiseEvents": "Play_WT_Skill_Lvl12_SupressFire_Arrowimpact",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_SupressFire",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Lvl12_ArrowTrail"
				},
				{
					"id": "Skill_ConfusingPowder",
					"gameObject": "BattleUnit",
					"wiseEvents": "",
					"notes": "Play_WT_Skill_ConfusingPowder"
				},
				{
					"id": "Skill_BeeBomb",
					"gameObject": "BattleUnit",
					"wiseEvents": "",
					"notes": "Play_WT_Skill_BeeBomb"
				},
				{
					"id": "Skill_CorrosiveBomb",
					"wiseEvents": "",
					"gameObject": "BattleUnit",
					"notes": "Play_WT_Skill_CorrosiveBomb"
				},
				{
					"id": "Skill_ExplosiveGaz",
					"wiseEvents": "",
					"gameObject": "BattleUnit",
					"notes": "Play_WT_Skill_ExplosiveGaz"
				},
				{
					"id": "Skill_CheapShot",
					"wiseEvents": "",
					"gameObject": "BattleUnit",
					"notes": "Play_WT_Skill_FlashBang"
				},
				{
					"id": "Skill_ForcedRecoil",
					"wiseEvents": "",
					"gameObject": "BattleUnit",
					"notes": "Play_WT_Skill_ForcedRecoil"
				},
				{
					"id": "Skill_PushTrap",
					"wiseEvents": "",
					"gameObject": "BattleUnit",
					"notes": "Play_WT_Skill_GrenadeBlast"
				},
				{
					"id": "Skill_OdorousPowder",
					"wiseEvents": "",
					"gameObject": "BattleUnit",
					"notes": "Play_WT_Skill_OdorusPowder"
				},
				{
					"id": "Skill_Transmission",
					"wiseEvents": "",
					"gameObject": "BattleUnit",
					"notes": "Play_WT_Skill_TransmissionBomb"
				},
				{
					"id": "Skill_Spraying",
					"gameObject": "BattleUnit",
					"wiseEvents": "",
					"notes": "Play_WT_Skill_CorrosiveBomb"
				},
				{
					"id": "Skill_RagePowder",
					"gameObject": "BattleUnit",
					"wiseEvents": "",
					"notes": "Play_WT_Skill_ExplosiveGaz"
				},
				{
					"id": "Skill_EyeArrow",
					"gameObject": "BattleUnit",
					"notes": "NPC Bow-Skill",
					"wiseEvents": "Play_WT_SkillEnemy_EyeArrow"
				},
				{
					"id": "Skill_FugitiveBowLegion",
					"wiseEvents": "Play_WT_SkillEnemy_FugitiveBowLegion",
					"notes": "NPC Bow-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_FugitiveTrackersBow",
					"wiseEvents": "Play_WT_SkillEnemy_FugitiveTrackersBow",
					"notes": "NPC Bow-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_ShootOrder",
					"wiseEvents": "Play_WT_SkillEnemy_ShootOrder",
					"notes": "NPC Bow-Skill",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_WildShot",
					"wiseEvents": "Play_WT_SkillEnemy_WildShot",
					"notes": "NPC Bow-Skill",
					"gameObject": "BattleUnit",
					"params": []
				},
				{
					"id": "SkillHit_IncendiaryArrow",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_IncendiaryArrow_Hit",
					"notes": "NPC Bow-Skill"
				},
				{
					"id": "Skill_KillShot",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_SkillEnemy_KillShot",
					"notes": "NPC Bow-Skill"
				},
				{
					"id": "Skill_PiercingArrow",
					"gameObject": "BattleUnit",
					"notes": "Bow-Skill",
					"wiseEvents": "Play_WT_Skill_PiercingArrow"
				},
				{
					"id": "Skill_LastEffort",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_Lasteffort"
				},
				{
					"id": "Skill_ChallengeCry",
					"gameObject": "BattleUnit",
					"wiseEvents": "Play_WT_Skill_ChallengeCry"
				},
				{
					"id": "Skill_WarCry",
					"wiseEvents": "Play_WT_Skill_Warcry",
					"gameObject": "BattleUnit"
				},
				{
					"id": "Skill_CallOfTheSwarm",
					"wiseEvents": "Play_WT_Skill_Rat_CallOfTheSwarm",
					"gameObject": "BattleUnit"
				},
				{
					"id": "SkillHit_MudShot",
					"wiseEvents": "Play_WT_SkillEnemy_MudShot",
					"gameObject": "BattleUnit",
					"notes": "NPC Bow-Skill"
				},
				{
					"id": "BeastCry",
					"notes": "Hurlement de la Bête (cut scene Harag/SecretCamp)",
					"wiseEvents": "Play_WT_TheBeast_Scream_Cutscene"
				},
				{
					"id": "Meow",
					"notes": "Miaulement qui se déclenche la première fois qu'on clique sur un chat (exemple : G2MarketplaceFish)",
					"wiseEvents": "Play_WT_Cat_Dialog"
				},
				{
					"id": "PuzzleMan_Appearance",
					"notes": "Bruit que produit le Solvius the Solveriser en apparaissant (temps d'un fade)",
					"wiseEvents": "Play_WT_Puzzleman_Whoosh_Appears"
				},
				{
					"id": "PuzzleMan_Disappearance",
					"notes": "Bruit que produit le Solvius the Solveriser en disparaissant (temps d'un fade)",
					"wiseEvents": "Play_WT_Puzzleman_Whoosh_Disappears"
				},
				{
					"id": "BranchConstruction",
					"notes": "Les bruits que feraient une dizaine d'artisans occupés à reconstruire un bâtiment.",
					"wiseEvents": "Play_WT_Scenar_Branch_Construction"
				},
				{
					"id": "PigNoise",
					"notes": "Court cri de porc dans un dialogue \"Grouiiiik\".",
					"wiseEvents": "Play_WT_Pig_Dialog"
				},
				{
					"id": "Start_Travelling",
					"notes": "Son continue de bruits de sabots et de roues de chariot pendant que le joueur voyage entre deux villages via les comptoirs.",
					"wiseEvents": "Play_WT_UI_Travelling_Start"
				},
				{
					"id": "Stop_Travelling",
					"notes": "Arrête le Start_Travelling",
					"wiseEvents": "Play_WT_UI_Travelling_Stop"
				},
				{
					"id": "Trial_Cheerful",
					"wiseEvents": "Play_WT_PalaisDuNegoce_Crowd_Cheerful",
					"notes": "People are laughting, applauding, reacting to a joke"
				},
				{
					"id": "Trial_Disappointed",
					"wiseEvents": "Play_WT_PalaisDuNegoce_Crowd_Disappointed"
				},
				{
					"id": "Trial_Surprised",
					"wiseEvents": "Play_WT_PalaisDuNegoce_Crowd_Suprised"
				},
				{
					"id": "Trial_Mumbling",
					"notes": "The crowd of the trial is surprised by something. People shortling start to mumbling with their neighbour. They are troubled, astounded or worried.",
					"wiseEvents": "Play_WT_PalaisDuNegoce_Crowd_Mumbling_Florish"
				},
				{
					"id": "Trial_Mumbling_Loop",
					"notes": "The crowd of the trial is surprised by something. People shortling start to mumbling with their neighbour. They are troubled, astounded or worried. This sound lasts until the player goes to the next dialogue line (Dans l'event de musique)"
				},
				{
					"id": "Trial_Boo",
					"notes": "The crowd is booing the player (or a character). They are angry and disappointed by their behaviour/lies.",
					"wiseEvents": "Play_WT_PalaisDuNegoce_Crowd_Boo"
				},
				{
					"id": "Trial_Applause",
					"notes": "The crowd applauds the player at the end of the trial (if they have won).",
					"wiseEvents": "Play_WT_PalaisDuNegoce_Crowd_Applause"
				},
				{
					"id": "ActivitySuccess",
					"wiseEvents": "Play_WT_ActivitySuccess"
				},
				{
					"id": "LockpickSuccess",
					"wiseEvents": "Play_WT_Activity_LockPick_LockPickSucess"
				},
				{
					"id": "LokcpickSlidingPart",
					"wiseEvents": "Play_WT_Activity_LockPick_SlidingPart"
				},
				{
					"id": "LockpickOvershooting",
					"wiseEvents": "Play_WT_Activity_LockPick_OverShoot",
					"notes": ""
				},
				{
					"id": "LockpickBreak",
					"wiseEvents": "Play_WT_Activity_LockPick_LockPickBreak"
				},
				{
					"id": "LockpickRotating",
					"wiseEvents": "Play_WT_Activity_LockPick_Rotating"
				},
				{
					"id": "LockpickPicking",
					"wiseEvents": "Play_WT_Activity_LockPick_Picking"
				},
				{
					"id": "ForgePerfectHit",
					"wiseEvents": "Play_WT_Activity_Forge_PerfectHit"
				},
				{
					"id": "ForgeGoodHit",
					"wiseEvents": "Play_WT_Activity_Forge_GoodHit"
				},
				{
					"id": "ForgeBadHit",
					"wiseEvents": "Play_WT_Activity_Forge_BadHit"
				},
				{
					"id": "ForgePerfectHeat",
					"wiseEvents": "Play_WT_Activity_Forge_PerfectHeat"
				},
				{
					"id": "ForgeHeatUp",
					"wiseEvents": "Play_WT_Activity_Forge_HeatingUp"
				},
				{
					"id": "ForgeHeatUpShort",
					"wiseEvents": "",
					"notes": "Pas appelé en jeu"
				},
				{
					"id": "ForgeHeatDown",
					"wiseEvents": "Play_WT_Activity_Forge_HeatingDow"
				},
				{
					"id": "MiningHit",
					"wiseEvents": "Play_WT_Activity_Mine_BadHit"
				},
				{
					"id": "MiningHitSuccess",
					"wiseEvents": "Play_WT_Activity_Mine_GoodHit"
				},
				{
					"id": "MiningSmallRockFall",
					"wiseEvents": "Play_WT_Activity_Mine_BigRockFall"
				},
				{
					"id": "MiningBigRockFall",
					"wiseEvents": "Play_WT_Activity_Mine_SmallRockFall"
				},
				{
					"id": "WoodCuttingHit",
					"notes": "fendre une bûche (cf activité)",
					"wiseEvents": "Play_WT_Activity_WoodCuttingHit"
				},
				{
					"id": "WoodCuttingHitSuccess",
					"notes": "fendre une bûche (réussite parfaite)",
					"wiseEvents": "Play_WT_Activity_WoodCuttingHitSucess"
				},
				{
					"id": "FishingFloaterThrow",
					"wiseEvents": "Play_WT_Activity_Fishing_Line"
				},
				{
					"id": "FishingDrop",
					"wiseEvents": "Play_WT_Activity_Fishing_BaitSplash"
				},
				{
					"id": "FishingMove",
					"wiseEvents": "Play_WT_Activity_Fishing_Fish_Movement"
				},
				{
					"id": "FishingCatchSuccess",
					"wiseEvents": "Play_WT_Activity_Fishing_Success"
				},
				{
					"id": "FishingCatchFail",
					"wiseEvents": "Play_WT_Activity_Fishing_Fail"
				},
				{
					"id": "FishingRodCatch",
					"wiseEvents": "Play_WT_Activity_Fishing_RodCatch"
				},
				{
					"id": "ArcheryBowPull",
					"wiseEvents": "Play_WT_Bow_PreShot"
				},
				{
					"id": "ArcheryBowShoot",
					"wiseEvents": "Play_WT_Bow_Shot"
				},
				{
					"id": "ArcheryHit",
					"wiseEvents": "Play_ArcheryArrowHit"
				},
				{
					"id": "ArcheryMiss",
					"wiseEvents": "Play_WT_Bow_Shot_Miss"
				},
				{
					"id": "NinePuzzleTileMove",
					"wiseEvents": "Play_WT_Activity_Puzzle_MovePiece"
				},
				{
					"id": "NinePuzzleSuccess",
					"notes": "mécanisme vérouillé ",
					"wiseEvents": "Play_WT_Activity_Puzzle_Success"
				},
				{
					"id": "CylinderPuzzleWheelRotate",
					"wiseEvents": "Play_WT_CylinderPuzzleWheelRotate"
				},
				{
					"id": "CylinderPuzzleWheelStuck",
					"notes": "roue qui bloque sur mauvaise combinaison",
					"wiseEvents": "Play_WT_CylinderPuzzleWheelStuck"
				},
				{
					"id": "CylinderPuzzleButtonPressed",
					"wiseEvents": "Play_WT_CylinderPuzzleButtonPressed"
				},
				{
					"id": "CylinderPuzzleTrapped",
					"notes": "mécanisme piégé",
					"wiseEvents": "Play_WT_CylinderPuzzleTrapped"
				},
				{
					"id": "CylinderPuzzleSuccess",
					"notes": "mécanisme dévérouillé",
					"wiseEvents": "Play_WT_CylinderPuzzleSuccess"
				},
				{
					"id": "BoardPuzzleTileMove",
					"notes": "déplacement de la plaque",
					"wiseEvents": "Play_WT_Activity_BoardPuzzleTileMove"
				},
				{
					"id": "BoardPuzzleTileMoveCancel",
					"notes": "plaque qui remonte ",
					"wiseEvents": "Play_BoardPuzzleTileMoveCancel"
				},
				{
					"id": "BoardPuzzleTileTrapped",
					"notes": "mauvaise plaque enclenchée",
					"wiseEvents": "Play_BoardPuzzleTileTrapped"
				},
				{
					"id": "BoardPuzzleTileSuccess",
					"notes": "mécanisme déverouillé",
					"wiseEvents": ""
				},
				{
					"id": "StealStop",
					"gameObject": "Element",
					"wiseEvents": "Play_WT_Interface_StealStop"
				},
				{
					"id": "StealStart",
					"gameObject": "Element",
					"wiseEvents": "Play_WT_Interface_StealStart"
				},
				{
					"id": "WallBreak",
					"notes": "Bruit d'explosion lorsque le joueur fait exploser une faille dans le mur d'A1SecretCave.",
					"wiseEvents": "Play_WT_Evoland_break_rock"
				},
				{
					"id": "Evoland",
					"notes": "Son d'Evoland lorsque le joueur fait exploser une faille dans le mur d'A1SecretCave. Event dans l'explosion",
					"wiseEvents": ""
				},
				{
					"id": "AmbientPlaceWorld",
					"gameObject": "Place",
					"wiseEvents": "Play_WT_PlacesKind",
					"notes": ""
				},
				{
					"id": "LoadingStart",
					"wiseEvents": "Play_Loading_Start"
				},
				{
					"id": "LoadingStop",
					"wiseEvents": "Play_Loading_Stop"
				},
				{
					"id": "MoodStart",
					"wiseEvents": "Play_WT_MUSIC"
				},
				{
					"id": "MoodBattle",
					"wiseEvents": "Play_WT_Music_MoodBattle",
					"params": []
				},
				{
					"id": "MoodBattleBoss",
					"wiseEvents": "Play_WT_Music_MoodBattle_Boss"
				},
				{
					"id": "MoodBattleRats",
					"wiseEvents": "Play_WT_Music_MoodBattle_Rats"
				},
				{
					"id": "MoodBattleRuins",
					"wiseEvents": "Play_WT_Music_MoodBattle_Ruins"
				},
				{
					"id": "MoodBattleArena",
					"wiseEvents": "Play_WT_Music_MoodBattle_Arena"
				},
				{
					"id": "MoodBattleWin",
					"wiseEvents": "Play_WT_Music_MoodBattle_Win"
				},
				{
					"id": "MoodBattleLosing",
					"wiseEvents": "Play_WT_Music_MoodBattle_Losing"
				},
				{
					"id": "MoodWorld",
					"wiseEvents": "Play_WT_Music_MoodWorld"
				},
				{
					"id": "MoodAlazar",
					"wiseEvents": "Play_WT_Music_MoodWorld_Alazar"
				},
				{
					"id": "MoodCity",
					"wiseEvents": "Play_WT_Music_MoodBattle_City"
				},
				{
					"id": "MoodSilent",
					"wiseEvents": "Play_WT_Music_Silent"
				},
				{
					"id": "MoodTrial",
					"wiseEvents": "Play_WT_Music_Tribunal"
				},
				{
					"id": "MoodTitle",
					"wiseEvents": "Play_WT_Music_Title"
				},
				{
					"id": "Thunder",
					"wiseEvents": "Play_WT_Thunder_Strike"
				},
				{
					"id": "Places_A1HauntedCastle_Sound1",
					"notes": "Un bruit de meuble qui tombe ou un hurlement (impossible de savoir si c'est celui d'un crocopork pour d'un humain.",
					"wiseEvents": "Play_WT_Scenar_HauntedCastle"
				},
				{
					"id": "Places_A1Ruins_RockGrowl",
					"notes": "Quelque part dans les ruines, une masse de pierre est en train de bouger.",
					"wiseEvents": "Play_WT_Scenar_Places_A1Ruins_RockGrowl"
				},
				{
					"id": "Places_A1InquisitionCamp_Fire",
					"notes": "Bruit intense de feu",
					"wiseEvents": "Play_WT_Scenar_Immolation_Fire"
				},
				{
					"id": "Places_A1InquisitionCamp_Scream",
					"notes": "Cris pendant un fade d'une personne brûlée",
					"gameObject": "Element",
					"wiseEvents": "Play_WT_Scenar_Immolation_Scream"
				},
				{
					"id": "Places_G1Ruins_Water1",
					"notes": "Bruit d'un gros volume d'eau qui se déverse tout autour du joueur.",
					"wiseEvents": "Play_WT_Scenar_Places_G1Ruins_Water_On"
				},
				{
					"id": "Places_G1Ruins_Water2",
					"notes": "Bruit d'un gros volume d'eau évacué tout autour du joueur (siphon d'évier ?).",
					"wiseEvents": "Play_WT_Scenar_Places_G1Ruins_Water_Off"
				},
				{
					"id": "Places_G2Ruins_Dart",
					"notes": "Un piège se déclenche : un dard est projeté sur le joueur.",
					"wiseEvents": "Play_WT_Scenar_Places_G2Ruins_Dart"
				},
				{
					"id": "Places_G2Ruins_Screams",
					"notes": "Dans une pièce adjacente à celle où se trouve le joueur, un bandit s'est pris une flèche en plein oeil, le tuant sur le coup, sous les yeux de son complice.",
					"wiseEvents": "Play_WT_G2Ruins_Scream"
				},
				{
					"id": "Places_G2Ruins_Screams2",
					"notes": "Dans une pièce adjacente à celle où se trouve le joueur, deux hommes viennent de mourir transpercés par un piège. ",
					"wiseEvents": "Play_WT_G2Ruins_Screams"
				},
				{
					"id": "Place_G1LenaideAbbey_Slaughter",
					"notes": "Pendant un fade, le joueur et ses alliés massacrent des innocents sans défense.",
					"wiseEvents": "Play_G1LenaideAbbey_Slaughter"
				}
			],
			"props": {},
			"separators": [
				{
					"title": "GameObject",
					"id": "Global"
				},
				{
					"title": "Misc",
					"id": "EnterPause"
				},
				{
					"title": "Modes",
					"id": "EnterMode_XXX"
				},
				{
					"title": "PlaceTypes",
					"id": "PlaceWineyard"
				},
				{
					"title": "WorldMap",
					"id": "RoamingStartAggro"
				},
				{
					"title": "Camp",
					"id": "StartCampfire"
				},
				{
					"title": "UI",
					"id": "NotifyXXX"
				},
				{
					"title": "Elements",
					"id": "StartDialog"
				},
				{
					"title": "Fight",
					"id": "Retreat"
				},
				{
					"title": "Arena",
					"id": "Arena_Exigence_Done"
				},
				{
					"title": "Ruins",
					"id": "Ruin_Wood_Broken"
				},
				{
					"title": "ForsakenVillage",
					"id": "ForsakenVillage_Door_Snap1"
				},
				{
					"title": "Sport",
					"id": "Sport_Ball_HitGround"
				},
				{
					"title": "Skills",
					"id": "Skill_XXX"
				},
				{
					"title": "Element",
					"id": "BeastCry"
				},
				{
					"title": "Trial",
					"id": "Trial_Cheerful"
				},
				{
					"title": "Activity",
					"id": "ActivitySuccess"
				},
				{
					"id": "LockpickSuccess"
				},
				{
					"id": "ForgePerfectHit"
				},
				{
					"id": "MiningHit"
				},
				{
					"level": 1,
					"id": "WoodCuttingHit"
				},
				{
					"id": "FishingFloaterThrow"
				},
				{
					"id": "ArcheryBowPull"
				},
				{
					"id": "NinePuzzleTileMove"
				},
				{
					"id": "CylinderPuzzleWheelRotate"
				},
				{
					"level": 1,
					"id": "BoardPuzzleTileMove"
				},
				{
					"id": "StealStop"
				},
				{
					"level": 1,
					"id": "WallBreak"
				},
				{
					"title": "Ambient",
					"id": "AmbientPlaceWorld"
				},
				{
					"level": 1,
					"id": "LoadingStart"
				},
				{
					"id": "MoodStart"
				},
				{
					"title": "Meteo",
					"id": "Thunder"
				},
				{
					"title": "Places",
					"id": "Places_A1HauntedCastle_Sound1"
				}
			]
		},
		{
			"name": "seasonEvent",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"kind": null,
					"scope": null
				},
				{
					"typeStr": "1",
					"name": "name",
					"kind": "localizable"
				},
				{
					"typeStr": "1",
					"name": "startDate",
					"documentation": "This is the day this event starts. Format is YYYY-MM-DD where Y is for year, M for month and D for day. Example for 1st of April 2021 : 2021-04-01. It will start at the usual refresh hour."
				},
				{
					"typeStr": "1",
					"name": "endDate",
					"opt": true,
					"documentation": "This is the day this event starts. Format is YYYY-MM-DD where Y is for year, M for month and D for day. Example for 1st of April 2021 : 2021-04-01. It will start at the usual refresh hour."
				},
				{
					"typeStr": "17",
					"name": "props",
					"kind": null
				}
			],
			"lines": [
				{
					"id": "WeeklyBounties",
					"name": "",
					"startDate": "2022-06-01",
					"endDate": "",
					"props": {
						"amount": 16
					}
				}
			],
			"separators": [],
			"props": {}
		},
		{
			"name": "seasonEvent@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "amount",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "input",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"kind": null,
					"scope": null
				},
				{
					"typeStr": "5:NoRebind,All,Worldmap,Battle",
					"name": "category"
				},
				{
					"typeStr": "1",
					"name": "name",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "8",
					"name": "bindings"
				},
				{
					"typeStr": "2",
					"name": "required",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "dontCheckModifier",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:input",
					"name": "noConflictWith",
					"opt": true
				}
			],
			"lines": [
				{
					"id": "Interaction",
					"bindings": [
						{
							"key": 0
						}
					],
					"name": "Interagir",
					"group": 0,
					"category": 0,
					"required": true
				},
				{
					"id": "CameraRotation",
					"bindings": [
						{
							"key": 2
						}
					],
					"group": 0,
					"name": "Rotation de la caméra",
					"category": 0,
					"required": true
				},
				{
					"id": "Settings",
					"bindings": [
						{
							"key": 47
						}
					],
					"name": "Options",
					"group": 0,
					"category": 0,
					"required": true
				},
				{
					"id": "Sprint",
					"bindings": [
						{
							"key": 44
						}
					],
					"name": "Course",
					"group": 1,
					"category": 2,
					"required": true
				},
				{
					"id": "Outlines",
					"bindings": [
						{
							"key": 46
						}
					],
					"name": "Surbrillance des éléments interactifs",
					"group": 1,
					"category": 2,
					"required": true
				},
				{
					"id": "Camp",
					"bindings": [
						{
							"key": 7
						}
					],
					"name": "Campement",
					"group": 1,
					"category": 2,
					"required": true
				},
				{
					"id": "Path",
					"bindings": [
						{
							"key": 27
						}
					],
					"name": "Voies",
					"group": 1,
					"category": 2,
					"required": true
				},
				{
					"id": "Inventory",
					"bindings": [
						{
							"key": 13
						}
					],
					"name": "Inventaire",
					"group": 1,
					"category": 2,
					"required": true
				},
				{
					"id": "Minimap",
					"bindings": [
						{
							"key": 17
						}
					],
					"name": "Carte du monde",
					"group": 1,
					"category": 2,
					"required": true
				},
				{
					"id": "Grimoire",
					"bindings": [
						{
							"key": 11
						}
					],
					"name": "Compendium",
					"group": 1,
					"category": 2,
					"required": true
				},
				{
					"id": "Pause",
					"category": 2,
					"bindings": [
						{
							"key": 48
						}
					],
					"required": true,
					"group": 1,
					"name": "Pause"
				},
				{
					"id": "Camera_Up",
					"bindings": [
						{
							"key": 27,
							"langOverride": {
								"fr": 30
							}
						}
					],
					"name": "Camera Up",
					"group": 2,
					"category": 3,
					"required": true
				},
				{
					"id": "Camera_Left",
					"bindings": [
						{
							"key": 5,
							"langOverride": {
								"fr": 21
							}
						}
					],
					"name": "Camera Left",
					"group": 2,
					"category": 3,
					"required": true
				},
				{
					"id": "Camera_Down",
					"bindings": [
						{
							"key": 23
						}
					],
					"name": "Camera Down",
					"group": 2,
					"category": 3,
					"required": true
				},
				{
					"id": "Camera_Right",
					"bindings": [
						{
							"key": 8
						}
					],
					"name": "Camera Right",
					"group": 2,
					"category": 3,
					"required": true
				},
				{
					"id": "EndTurn",
					"bindings": [
						{
							"key": 48
						}
					],
					"name": "Fin du tour",
					"group": 2,
					"category": 3,
					"required": true
				},
				{
					"id": "Move",
					"bindings": [
						{
							"key": 32
						}
					],
					"group": 2,
					"category": 3,
					"name": "Déplacement",
					"noConflictWith": "Disengage",
					"required": false
				},
				{
					"id": "Disengage",
					"bindings": [],
					"name": "Se désengager",
					"group": 2,
					"category": 3,
					"noConflictWith": "Move",
					"required": false
				},
				{
					"id": "Attack",
					"bindings": [
						{
							"key": 33
						}
					],
					"name": "Attaque de base",
					"group": 2,
					"category": 3,
					"required": false
				},
				{
					"id": "Skill3",
					"bindings": [
						{
							"key": 34
						}
					],
					"name": "Compétence ::index::",
					"group": 2,
					"category": 3,
					"required": false
				},
				{
					"id": "Skill4",
					"bindings": [
						{
							"key": 35
						}
					],
					"group": 2,
					"category": 3,
					"required": false
				},
				{
					"id": "Skill5",
					"bindings": [
						{
							"key": 36
						}
					],
					"group": 2,
					"category": 3,
					"required": false
				},
				{
					"id": "Skill6",
					"bindings": [
						{
							"key": 37
						}
					],
					"group": 2,
					"category": 3,
					"required": false
				},
				{
					"id": "Skill7",
					"bindings": [
						{
							"key": 38
						}
					],
					"group": 2,
					"category": 3,
					"required": false
				},
				{
					"id": "Skill8",
					"bindings": [
						{
							"key": 39
						}
					],
					"group": 2,
					"category": 3,
					"required": false
				},
				{
					"id": "Skill9",
					"bindings": [
						{
							"key": 40
						}
					],
					"group": 2,
					"category": 3,
					"required": false
				},
				{
					"id": "Skill10",
					"category": 3,
					"bindings": [
						{
							"key": 31
						}
					],
					"required": false,
					"group": 2
				},
				{
					"id": "CampRotation",
					"bindings": [
						{
							"key": 22
						}
					],
					"name": "Rotation des éléments de camp",
					"group": 3,
					"category": 2,
					"required": true,
					"dontCheckModifier": true
				},
				{
					"id": "Ping",
					"category": 2,
					"bindings": [
						{
							"key": 1
						}
					],
					"required": true,
					"group": 4,
					"name": "Ping"
				},
				{
					"id": "Chat",
					"category": 2,
					"bindings": [
						{
							"key": 24
						}
					],
					"required": false,
					"group": 4,
					"name": "Chat"
				}
			],
			"separators": [
				{
					"title": "Worldmap",
					"id": "Sprint"
				},
				{
					"title": "Battle",
					"id": "Camera_Up"
				},
				{
					"title": "Camp",
					"id": "CampRotation"
				},
				{
					"title": "Coop",
					"id": "Ping"
				}
			],
			"props": {
				"hasGroup": true
			}
		},
		{
			"name": "credits",
			"columns": [
				{
					"typeStr": "0",
					"name": "id",
					"kind": null,
					"scope": null
				},
				{
					"typeStr": "1",
					"name": "title",
					"kind": "localizable",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "subtitle",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "8",
					"name": "lines"
				},
				{
					"typeStr": "8",
					"name": "linesTrad"
				},
				{
					"typeStr": "13",
					"name": "image",
					"opt": true,
					"kind": null
				}
			],
			"lines": [
				{
					"title": "DEVELOPED BY",
					"lines": [],
					"linesTrad": [],
					"id": "DeveloppedBy"
				},
				{
					"lines": [
						{
							"text": "SHIRO GAMES"
						}
					],
					"linesTrad": [],
					"id": "Shirogames"
				},
				{
					"lines": [],
					"linesTrad": [],
					"id": "Space2"
				},
				{
					"lines": [
						{
							"text": "Nicolas Cannasse"
						},
						{
							"text": "Sébastien Vidal"
						}
					],
					"subtitle": "STUDIO HEADS",
					"linesTrad": [],
					"id": "Studioheads"
				},
				{
					"lines": [
						{
							"text": "Quentin Lapeyre"
						}
					],
					"subtitle": "GAME DIRECTOR",
					"linesTrad": [],
					"id": "Gamedirector"
				},
				{
					"lines": [
						{
							"text": "Nicolas Cannasse"
						}
					],
					"linesTrad": [],
					"subtitle": "CREATIVE DIRECTOR",
					"id": "Creativedirector"
				},
				{
					"lines": [
						{
							"text": "Quentin Lapeyre"
						},
						{
							"text": "Tom Spira"
						},
						{
							"text": "Florian Elie"
						}
					],
					"subtitle": "PRODUCER",
					"linesTrad": [],
					"id": "Producer"
				},
				{
					"lines": [
						{
							"text": "Nicolas Cannasse"
						}
					],
					"subtitle": "TECHNICAL DIRECTOR",
					"linesTrad": [],
					"id": "Technicaldirector"
				},
				{
					"lines": [
						{
							"text": "Tom Spira"
						}
					],
					"subtitle": "LEAD PROGRAMMER",
					"linesTrad": [],
					"id": "Leadprogrammer"
				},
				{
					"lines": [
						{
							"text": "Nicolas Cannasse"
						},
						{
							"text": "Tom Spira"
						},
						{
							"text": "Bernard Stouls"
						},
						{
							"text": "Olivier Bègue"
						},
						{
							"text": "Elisée Maurer"
						},
						{
							"text": "Matthias Dubray"
						},
						{
							"text": "Frédéric Brachfogel\r\n"
						},
						{
							"text": "Jean-Théophane de Mulatier"
						},
						{
							"text": "Martin Chapuis"
						}
					],
					"subtitle": "GAMEPLAY & UI PROGRAMMERS",
					"linesTrad": [],
					"id": "Gameplayprogrammer"
				},
				{
					"lines": [
						{
							"text": "Clément Landrin"
						},
						{
							"text": "Nicolas Leroy"
						}
					],
					"subtitle": "ENGINE / RENDER",
					"linesTrad": [],
					"id": "Enginerender"
				},
				{
					"lines": [
						{
							"text": "Nicolas Cannasse"
						},
						{
							"text": "Tom Rethaller"
						},
						{
							"text": "Maurice Doison"
						},
						{
							"text": "Olivier Bègue"
						},
						{
							"text": "Leonardo Jeanteur"
						},
						{
							"text": "Clément Landrin"
						},
						{
							"text": "Tom Spira"
						},
						{
							"text": "Clément Espeute"
						}
					],
					"subtitle": "TOOL PROGRAMMERS",
					"linesTrad": [],
					"id": "Toolprogrammer"
				},
				{
					"lines": [
						{
							"text": "Quentin Lapeyre"
						}
					],
					"subtitle": "LEAD GAME DESIGNER",
					"linesTrad": [],
					"id": "Leadgamedesigner"
				},
				{
					"lines": [
						{
							"text": "Nicolas Cannasse"
						},
						{
							"text": "Philippe Renouil"
						},
						{
							"text": "Antoine Lima de Carvalho"
						},
						{
							"text": "Margaux Berard"
						}
					],
					"subtitle": "GAME DESIGNERS",
					"linesTrad": [],
					"id": "Gamedesigner"
				},
				{
					"lines": [
						{
							"text": "Mathilde Regnier"
						},
						{
							"text": "Antoine Marques"
						}
					],
					"subtitle": "NARRATIVE DESIGNERS",
					"linesTrad": [],
					"id": "Narrativedesigner"
				},
				{
					"lines": [
						{
							"text": "Pierre-Etienne Travers"
						}
					],
					"subtitle": "ART DIRECTOR",
					"linesTrad": [],
					"id": "Artdirector"
				},
				{
					"lines": [
						{
							"text": "Pierre-Etienne Travers"
						},
						{
							"text": "Inès Bérerd"
						},
						{
							"text": "Cécile 'Zellk' Jaubert"
						},
						{
							"text": "Matthieu Sarazin"
						}
					],
					"subtitle": "2D & CONCEPT ARTISTS",
					"linesTrad": [],
					"id": "Conceptartist"
				},
				{
					"id": "illustrator",
					"lines": [
						{
							"text": "Mark Tarrisse"
						}
					],
					"linesTrad": [],
					"subtitle": "ILLUSTRATOR",
					"title": ""
				},
				{
					"lines": [
						{
							"text": "Pierre-Etienne Travers"
						},
						{
							"text": "Julien Mailly"
						},
						{
							"text": "Maéva Delaunay"
						}
					],
					"subtitle": "UI ARTISTS",
					"linesTrad": [],
					"id": "Uiartist"
				},
				{
					"lines": [
						{
							"text": "Cécile 'Zellk' Jaubert"
						},
						{
							"text": "Lison Richoux"
						},
						{
							"text": "Loreena \"Kitsu\" Faucher"
						},
						{
							"text": "Quentin Gendre"
						}
					],
					"subtitle": "VFX ARTISTS",
					"linesTrad": [],
					"id": "Vfxartist"
				},
				{
					"lines": [
						{
							"text": "Florian Elie"
						}
					],
					"subtitle": "LEAD ENVIRONMENT ARTIST",
					"linesTrad": [],
					"id": "Leadenvironmentartist"
				},
				{
					"lines": [
						{
							"text": "Nicolas Beele"
						},
						{
							"text": "Lauréline Chambon"
						}
					],
					"subtitle": "ENVIRONMENT ARTISTS",
					"linesTrad": [],
					"id": "Environmentartist"
				},
				{
					"lines": [
						{
							"text": "Lili Csonka"
						},
						{
							"text": "Yanis Lhote"
						},
						{
							"text": "Thomas Lalande"
						},
						{
							"text": "Charles-Antoine Lerein"
						}
					],
					"subtitle": "CHARACTER ARTISTS",
					"linesTrad": [],
					"id": "Characterartist"
				},
				{
					"lines": [
						{
							"text": "Joceline Natasha Hyaning"
						},
						{
							"text": "Nicolas Ahun"
						}
					],
					"subtitle": "ANIMATORS",
					"linesTrad": [],
					"id": "Animator"
				},
				{
					"lines": [
						{
							"text": "Romain Deschamps"
						},
						{
							"text": "Tymothée Martin"
						},
						{
							"text": "Etienne Jeambrun"
						},
						{
							"text": "Madeline Panak"
						}
					],
					"subtitle": "QUALITY ASSURANCE",
					"linesTrad": [],
					"id": "Qualityassurance"
				},
				{
					"lines": [
						{
							"text": "Fanny Laraignou"
						},
						{
							"text": "Nora Sabeg"
						}
					],
					"subtitle": "HUMAN RESOURCES",
					"linesTrad": [],
					"id": "Humanresource"
				},
				{
					"lines": [
						{
							"text": "Stéphane Bonazza"
						},
						{
							"text": "Adrien 'Brioche' Briatta"
						},
						{
							"text": "Paul-Louis Hardouin"
						},
						{
							"text": "James Croucher"
						},
						{
							"text": "Dylan Robinson"
						},
						{
							"text": "Arnaud Richard"
						}
					],
					"subtitle": "PUBLISHING & MARKETING",
					"linesTrad": [],
					"id": "Publishingmarketing"
				},
				{
					"lines": [
						{
							"text": "Julien Mailly"
						}
					],
					"subtitle": "MARKETING ARTIST",
					"linesTrad": [],
					"id": "Marketingartist"
				},
				{
					"lines": [
						{
							"text": "Julien Mailly"
						},
						{
							"text": "Léo Laffargue"
						},
						{
							"text": "Philémon Belhomme"
						}
					],
					"subtitle": "TRAILERS TEAM",
					"linesTrad": [],
					"id": "Trailersteam"
				},
				{
					"id": "CommunityDirector",
					"lines": [
						{
							"text": "James Croucher"
						}
					],
					"linesTrad": []
				},
				{
					"lines": [
						{
							"text": "James Croucher"
						},
						{
							"text": "Dylan Robinson"
						},
						{
							"text": "Steven Charbonnier"
						}
					],
					"subtitle": "COMMUNITY MANAGERS",
					"linesTrad": [],
					"id": "Communitymanager"
				},
				{
					"title": "EXTERNAL SERVICES",
					"lines": [],
					"linesTrad": [],
					"id": "Externalservice"
				},
				{
					"title": "SOUND DESIGN",
					"lines": [],
					"linesTrad": [],
					"id": "Sounddesign"
				},
				{
					"lines": [
						{
							"text": "G4F PROD"
						}
					],
					"subtitle": "SOUND DESIGN AND MIX",
					"linesTrad": [],
					"id": "Sounddesignmix"
				},
				{
					"lines": [
						{
							"text": "Charles-Cédric Hubert"
						},
						{
							"text": "Simon Nardou\r\n"
						}
					],
					"subtitle": "SOUND DESIGNERS",
					"linesTrad": [],
					"id": "Sounddesigner"
				},
				{
					"lines": [
						{
							"text": "Vincent Percevault"
						},
						{
							"text": "Alexandra Percevault"
						},
						{
							"text": "Cyril Jegou"
						}
					],
					"subtitle": "SOUND MANAGERS",
					"linesTrad": [],
					"id": "Soundmanager"
				},
				{
					"id": "VoiceActors",
					"lines": [
						{
							"text": "Ainsleigh Barber\n"
						},
						{
							"text": "Alia Sohail\n"
						},
						{
							"text": "Amy Forrest\n"
						},
						{
							"text": "Anna Hale\n"
						},
						{
							"text": "Archie Backhouse\n"
						},
						{
							"text": "Ben Elliot\n"
						},
						{
							"text": "Ben Onwukwe\n"
						},
						{
							"text": "Bethan Nash\n"
						},
						{
							"text": "Brede McDermott\n"
						},
						{
							"text": "Brian Bowles\r\n"
						},
						{
							"text": "Callum Hughes\n"
						},
						{
							"text": "Camilla Rockley\n"
						},
						{
							"text": "Chris Bonwell\n"
						},
						{
							"text": "Ciaran Saward\n"
						},
						{
							"text": "Claire Corbett\n"
						},
						{
							"text": "Claire Wyatt\n"
						},
						{
							"text": "Clifford Samuel\n"
						},
						{
							"text": "Colin Mace\n"
						},
						{
							"text": "Corrina Buchan\n"
						},
						{
							"text": "Danielle Nott\n"
						},
						{
							"text": "Dave John\n"
						},
						{
							"text": "David Rintoul\n"
						},
						{
							"text": "Dugald Bruce-Lockhart\r\n"
						},
						{
							"text": "Elliot Beavis\r\n"
						},
						{
							"text": "Elliot Fitzpatrick\r\n"
						},
						{
							"text": "Emma Kaler\r\n"
						},
						{
							"text": "Gabrielle Glaister\r\n"
						},
						{
							"text": "Gail MacKinnon\r\n"
						},
						{
							"text": "Gavin Dunn\r\n"
						},
						{
							"text": "George Weightman\r\n"
						},
						{
							"text": "Gina Murray\r\n"
						},
						{
							"text": "Gordon Griffin\r\n"
						},
						{
							"text": "Hanako Footman\r\n"
						},
						{
							"text": "Harriet Carmichael\r\n"
						},
						{
							"text": "Helen Duff\r\n"
						},
						{
							"text": "Helen Keekey\r\n"
						},
						{
							"text": "Henrietta Garden\r\n"
						},
						{
							"text": "James Alexander\r\n"
						},
						{
							"text": "James Goode\r\n"
						},
						{
							"text": "Jenny Bryce\r\n"
						},
						{
							"text": "John Hasler\r\n"
						},
						{
							"text": "Joshua Manning\r\n"
						},
						{
							"text": "Jot Davies\r\n"
						},
						{
							"text": "Kit Griffiths\r\n"
						},
						{
							"text": "Kristin Atherton\r\n"
						},
						{
							"text": "Laura Kirman\r\n"
						},
						{
							"text": "Lucy Paterson\r\n"
						},
						{
							"text": "Matt Addis\r\n"
						},
						{
							"text": "Matthew Biddulph\r\n"
						},
						{
							"text": "Michael Grinter\r\n"
						},
						{
							"text": "Nathalie Buscombe\r\n"
						},
						{
							"text": "Nicky Diss\r\n"
						},
						{
							"text": "Nigel Pilkington\r\n"
						},
						{
							"text": "Olivia Darnley\r\n"
						},
						{
							"text": "Olivia Dowd\r\n"
						},
						{
							"text": "Oseloka Obi\r\n"
						},
						{
							"text": "Paul Panting\r\n"
						},
						{
							"text": "Paul Thornley\r\n"
						},
						{
							"text": "Penny Rawlins\r\n"
						},
						{
							"text": "Richard Trinder\n"
						},
						{
							"text": "Roisin Rankin\r\n"
						},
						{
							"text": "Sam Newton\r\n"
						},
						{
							"text": "Sarah Ovens\r\n"
						},
						{
							"text": "Stephanie Racine\r\n"
						},
						{
							"text": "Thomas Judd\r\n"
						},
						{
							"text": "Wayne Forrester\n"
						}
					],
					"linesTrad": [],
					"subtitle": "VOICE ACTORS"
				},
				{
					"title": "MUSIC",
					"lines": [],
					"linesTrad": [],
					"id": "Music"
				},
				{
					"lines": [
						{
							"text": "Camille Schoell"
						}
					],
					"subtitle": "MUSIC COMPOSING, RECORDING & MIXING",
					"linesTrad": [],
					"id": "Musiccomposing"
				},
				{
					"title": "LOCALISATION",
					"lines": [],
					"linesTrad": [],
					"id": "Localisation"
				},
				{
					"lines": [
						{
							"text": "Philippe Renouil"
						},
						{
							"text": "Quentin Lapeyre"
						}
					],
					"subtitle": "LOCALISATION PROJECT MANAGEMENT",
					"linesTrad": [],
					"id": "Localisationprojectmanagement"
				},
				{
					"lines": [
						{
							"text": "Loc3 Ltd"
						},
						{
							"text": "Universally Speaking"
						},
						{
							"text": "EC Innovations"
						}
					],
					"subtitle": "LOCALISATION PARTNERS",
					"linesTrad": [],
					"id": "Localisationpartners"
				},
				{
					"lines": [
						{
							"text": "Ophélie Colin"
						},
						{
							"text": "Karine Knox-Humbert"
						},
						{
							"text": "John Marston"
						},
						{
							"text": "Claire Deiller"
						}
					],
					"subtitle": "ENGLISH TRANSLATION",
					"linesTrad": [],
					"id": "Englishtranslation"
				},
				{
					"lines": [
						{
							"text": "Angelica Hell"
						},
						{
							"text": "Anna André"
						},
						{
							"text": "Nick Schaefer"
						}
					],
					"subtitle": "GERMAN TRANSLATION",
					"linesTrad": [],
					"id": "Germantranslation"
				},
				{
					"lines": [
						{
							"text": "Cintia Izquierdo"
						},
						{
							"text": "Ismael Fernández"
						}
					],
					"subtitle": "SPANISH TRANSLATION",
					"linesTrad": [],
					"id": "Spanishtranslation"
				},
				{
					"lines": [
						{
							"text": "Ilya Semyonov"
						},
						{
							"text": "Konstantin Kopin"
						},
						{
							"text": "Fedor Gornov"
						}
					],
					"subtitle": "RUSSIAN TRANSLATION",
					"linesTrad": [],
					"id": "Russiantranslation"
				},
				{
					"lines": [
						{
							"text": "Grzegorz Bonikowski"
						},
						{
							"text": "Łukasz Gładkowski"
						},
						{
							"text": "Michał Iwańczuk"
						}
					],
					"subtitle": "POLISH TRANSLATION",
					"linesTrad": [],
					"id": "Polishtranslation"
				},
				{
					"lines": [
						{
							"text": "Bruno Dias"
						},
						{
							"text": "Caio Tessarolo"
						},
						{
							"text": "Hiago Kanomata"
						},
						{
							"text": "Maryanne Linz"
						}
					],
					"subtitle": "BRAZILIAN TRANSLATION",
					"linesTrad": [],
					"id": "Brazilliantranslation"
				},
				{
					"id": "Chinesetranslation",
					"lines": [
						{
							"text": " Fay Qiu"
						}
					],
					"linesTrad": [],
					"subtitle": "CHINESE TRANSLATION"
				},
				{
					"lines": [
						{
							"text": "Wang Haozheng (@Virgil)"
						}
					],
					"linesTrad": [],
					"subtitle": "CHINESE CONSULTANT",
					"id": "Chineseconsultant"
				},
				{
					"title": "THANKS",
					"lines": [],
					"linesTrad": [],
					"id": "Thanks"
				},
				{
					"lines": [
						{
							"text": "Black Sails"
						},
						{
							"text": "AeroFunk80"
						},
						{
							"text": "BedlamBetty"
						},
						{
							"text": "begginfokillz"
						},
						{
							"text": "Belleadeon"
						},
						{
							"text": "Breadrising"
						},
						{
							"text": "Chioon"
						},
						{
							"text": "Coup"
						},
						{
							"text": "Dorim"
						},
						{
							"text": "ecofriendly"
						},
						{
							"text": "Hawerer"
						},
						{
							"text": "Ilovemnms"
						},
						{
							"text": "Izuna Neko"
						},
						{
							"text": "K.D.A."
						},
						{
							"text": "Kaghal"
						},
						{
							"text": "Kogotoro"
						},
						{
							"text": "Kruppe"
						},
						{
							"text": "Lollipop"
						},
						{
							"text": "Maxim1lian"
						},
						{
							"text": "Maximuuus"
						},
						{
							"text": "Mikey Dredd"
						},
						{
							"text": "Nithral"
						},
						{
							"text": "Pervy GG"
						},
						{
							"text": "PhilV"
						},
						{
							"text": "PT Barnduminium"
						},
						{
							"text": "Romain"
						},
						{
							"text": "Sargoth"
						},
						{
							"text": "shoTgun"
						},
						{
							"text": "Skogr"
						},
						{
							"text": "Stockente"
						},
						{
							"text": "Virgil_SKY"
						},
						{
							"text": "Weihn8smann"
						}
					],
					"subtitle": "BANDIT LAIR",
					"linesTrad": [],
					"id": "Banditlair"
				},
				{
					"lines": [],
					"linesTrad": [],
					"id": "Space3"
				},
				{
					"lines": [],
					"linesTrad": [
						{
							"text": "Wartales was developed with the support of the 'Centre national du cinéma et de l'image animée' (CNC)"
						}
					],
					"id": "Wartaleswasdeveloped"
				},
				{
					"lines": [],
					"image": "ui/elements/logoCNC.png",
					"linesTrad": [],
					"id": "Image1"
				},
				{
					"lines": [],
					"subtitle": "",
					"linesTrad": [
						{
							"text": "©Copyright 2021 Shiro Games. All rights reserved."
						}
					],
					"id": "Copyright"
				}
			],
			"separators": [
				{
					"level": 1,
					"id": "DeveloppedBy"
				}
			],
			"props": {}
		},
		{
			"name": "credits@linesTrad",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "text",
					"opt": true,
					"kind": "localizable"
				}
			]
		},
		{
			"name": "credits@lines",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "text"
				}
			]
		},
		{
			"name": "input@bindings",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "5:Ctrl,Shift,Alt",
					"name": "modifier",
					"opt": true
				},
				{
					"typeStr": "5:MouseLeft,MouseMiddle,MouseRight,Mouse3,Mouse4,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,Num0,Num1,Num2,Num3,Num4,Num5,Num6,Num7,Num8,Num9,Backspace,Tab,Enter,Shift,Ctrl,Alt,Escape,Space,PageUp,PageDown,End,Home,Left,Up,Right,Down,Insert,Delete,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12,F13,F14,F15,F16,NumPad0,NumPad1,NumPad2,NumPad3,NumPad4,NumPad5,NumPad6,NumPad7,NumPad8,NumPad9,NumPadStar,NumPadPlus,NumPadEnter,NumPadMinus,NumPadDot,NumPadSlash",
					"name": "key",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "langOverride",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:Left,Right,Middle,Back,Forward",
					"name": "mouse",
					"opt": true
				}
			]
		},
		{
			"name": "input@bindings@langOverride",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "5:MouseLeft,MouseMiddle,MouseRight,Mouse3,Mouse4,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,Num0,Num1,Num2,Num3,Num4,Num5,Num6,Num7,Num8,Num9,Backspace,Tab,Enter,Shift,Ctrl,Alt,Escape,Space,PageUp,PageDown,End,Home,Left,Up,Right,Down,Insert,Delete,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12,F13,F14,F15,F16,NumPad0,NumPad1,NumPad2,NumPad3,NumPad4,NumPad5,NumPad6,NumPad7,NumPad8,NumPad9,NumPadStar,NumPadPlus,NumPadEnter,NumPadMinus,NumPadDot,NumPadSlash",
					"name": "fr",
					"opt": true
				}
			]
		},
		{
			"name": "sound@params",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "name",
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "desc",
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "wiseSwitchGroup",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "wiseRTPC",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "mission@description",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "t",
					"kind": "localizable"
				}
			]
		},
		{
			"name": "mission@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "setting",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "nbDone",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:region",
					"name": "region",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:mission",
					"name": "replace",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "mapRadius",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:mission",
					"name": "parentMission",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "noPrioritizeUnexplored",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "skill@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "2",
					"name": "cancelOnMove",
					"opt": true
				},
				{
					"typeStr": "6:itemType",
					"name": "defaultWeapon",
					"opt": true
				},
				{
					"typeStr": "5:Strength,Dexterity,BestOfTwo",
					"name": "dmgAttribute",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "forcePerfectPrecision",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "globalEvents",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "needDisengaged",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "requireShield",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "scaledValue",
					"opt": true
				},
				{
					"typeStr": "5:Strength,Dexterity",
					"name": "scaledValueAttribute",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "targetAlly",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "temporaryUsage",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "useWithoutWeapon",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "value",
					"opt": true
				},
				{
					"typeStr": "16",
					"name": "vars",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "tooltipStatus",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "apCost",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "defaultAction",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "isDelayed",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "attributes",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "isInjury",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "specialAnim",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:item",
					"name": "requiresItem",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isAttack",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "reactionSkill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "9:DamageType",
					"name": "damageType",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:skill",
					"name": "provideSkill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:Delay,Reaction",
					"name": "pendingSkill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:item",
					"name": "weapon",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:item",
					"name": "healItem",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:trait",
					"name": "learnTrait",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:icon",
					"name": "cursor",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "healPreview",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "preventEngage",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "extraFx",
					"opt": true,
					"documentation": "Joue un fx supplémentaire à l'execution du skill"
				},
				{
					"typeStr": "2",
					"name": "oncePerFight",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:IgnoreGuard,DamageHealth,NoFinisher,DontStartUnitTurn,NoPreviewTargets,PushbackIgnoreUnits,DistanceBonusApplied,IsTrap,HideInSkillBar",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "itemCost",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "usableWhenDying",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "bonuses",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "castFx",
					"opt": true,
					"documentation": "Fx joué sur un event \"hit\" ou à la fin de l'anim"
				},
				{
					"typeStr": "2",
					"name": "noDamage",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "descPassiveGroup",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "2",
					"name": "usableWhenHasPlayed",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "orientTarget",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "strategyTier",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:constant",
					"name": "feature",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:Legendary,Fire,Torch,Poison",
					"name": "fxSuffix",
					"opt": true
				},
				{
					"typeStr": "13",
					"name": "zoneFx",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "powerScale",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "throwFx",
					"opt": true,
					"documentation": "Fx attaché au projectile"
				},
				{
					"typeStr": "3",
					"name": "aiOrder",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "animFx",
					"opt": true,
					"documentation": "Remplace la recherche automatique de FX correspondant à l'anim jouée"
				},
				{
					"typeStr": "13",
					"name": "throwModel",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "skill@props@tooltipStatus",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:status",
					"name": "st"
				}
			]
		},
		{
			"name": "skill@props@attributes",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:attribute",
					"name": "kind"
				},
				{
					"typeStr": "3",
					"name": "value"
				},
				{
					"typeStr": "2",
					"name": "isPercentage",
					"opt": true
				}
			]
		},
		{
			"name": "skill@props@itemCost",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "3",
					"name": "qty"
				}
			]
		},
		{
			"name": "skill@props@bonuses",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:bonus",
					"name": "bonus"
				},
				{
					"typeStr": "3",
					"name": "value",
					"kind": null
				}
			]
		},
		{
			"name": "item@baseBonus",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "value"
				},
				{
					"typeStr": "3",
					"name": "upValue",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "level",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:attribute",
					"name": "attribute"
				},
				{
					"typeStr": "2",
					"name": "isPercentage",
					"opt": true
				}
			]
		},
		{
			"name": "skill@range",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "4",
					"name": "baseDistance",
					"opt": true
				},
				{
					"typeStr": "5:Enemies,Allies,AlliesWithSelf,Self,All,AllButSelf,None",
					"name": "allowedTargets",
					"opt": true
				},
				{
					"typeStr": "5:Disc,Cone,Square",
					"name": "type",
					"opt": true
				},
				{
					"typeStr": "10:IgnoreUnitsCollide,ClosestUnit,NoPriorizeUnit,TargetInNavmesh,PriorizeWhenNotEngaged",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "angle",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "radius",
					"opt": true
				},
				{
					"typeStr": "13",
					"name": "typeModel",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "status@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "5:BeginRound,EndTurn,Move,MoveWithSkill,Damaged,AttackEnd,SkillPlayed,DailyRest,EndRound,BeginTurn",
					"name": "cancelOn",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "persistent",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "stackable",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "value",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "important",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "hideInFight",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:attribute",
					"name": "attributePercent",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "preventCancel",
					"opt": true
				},
				{
					"typeStr": "9:DamageType",
					"name": "damageType",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:NoDay,NoNight,Rain",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "6:skill",
					"name": "skill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "importantCamp",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "16",
					"name": "custom",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:status",
					"name": "similarStatus",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "hideNotif",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:attribute",
					"name": "attributeValue",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:None,Classic,Plague",
					"name": "injury",
					"opt": true
				},
				{
					"typeStr": "6:element",
					"name": "refElement",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "specialApply",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "cancelCount",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "playFxOnSelect",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "notifyNegative",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:constant",
					"name": "feature",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "impactFx",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "a_noCode",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:skill",
					"name": "descSkill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "maxStacks",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "item@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "foodQuantity",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "hidden",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "requireLevel",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "stealModifier",
					"opt": true,
					"documentation": "% d'augmentation ou de reduction de la quantité de soupçon apporté par cet objet (ex: 1.1 pour +10%)"
				},
				{
					"typeStr": "3",
					"name": "startQuantity",
					"opt": true
				},
				{
					"typeStr": "6:skill",
					"name": "skill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "value",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "model",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "5:Remedy,Light,LearnSkill",
					"name": "special",
					"opt": true
				},
				{
					"typeStr": "6:skill",
					"name": "passiveSkill",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:item",
					"name": "refItem",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "converts",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "13",
					"name": "skinTexture",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "disableLoot",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "questItem",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:element",
					"name": "refElement",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "refItems",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:activity",
					"name": "activity",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:HasColor,HideLevel,SexMan,SexWoman,Consumable,UseOnUnit,OneByDayRefill,Upgradable,KeepOnRemove,PrisonersOnly",
					"name": "flags",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "noConverter",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "healProbability",
					"opt": true,
					"display": 1
				},
				{
					"typeStr": "16",
					"name": "custom",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "trappedQuantity",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:constant",
					"name": "feature",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:itemType",
					"name": "displayType",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "17",
					"name": "sfx",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "notes",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "wealth",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "fixedLevel",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "1",
					"name": "actionTitle",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "bonuses",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "time",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:bonus",
					"name": "refBonus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:bonus",
					"name": "buyRequireBonus",
					"opt": true
				},
				{
					"typeStr": "6:item",
					"name": "copyBaseBonus",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "startQuantityDifficultyBonus",
					"opt": true
				},
				{
					"typeStr": "6:counter",
					"name": "buyRequireCounter",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "skillRequireLevel",
					"opt": true
				},
				{
					"typeStr": "2",
					"name": "enemyRequireLevel",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "4",
					"name": "xpMinerValue",
					"opt": true
				}
			]
		},
		{
			"name": "item@props@converts",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:icon",
					"name": "action"
				},
				{
					"typeStr": "6:item",
					"name": "item"
				},
				{
					"typeStr": "3",
					"name": "count",
					"opt": true
				}
			]
		},
		{
			"name": "item@props@refItems",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:item",
					"name": "item",
					"kind": null
				}
			]
		},
		{
			"name": "item@props@sfx",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:sound",
					"name": "onUse",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "6:sound",
					"name": "onOver",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "item@props@bonuses",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:bonus",
					"name": "bonus",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "value",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "quality",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:Workshop,Tooltip",
					"name": "hidden",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "item@props@startQuantityDifficultyBonus",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "5:Easy,Normal,Hard",
					"name": "difficulty",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "qty",
					"kind": null
				}
			]
		},
		{
			"name": "item@tool",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "width",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "height",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "capacity",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "animation",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "tipZ",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "converterTool",
					"opt": true
				},
				{
					"typeStr": "1",
					"name": "preventRemove",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "2",
					"name": "hideHandEquipment",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "16",
					"name": "assignOffset",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "tier",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "personalBonuses",
					"opt": true
				},
				{
					"typeStr": "17",
					"name": "bonusIfAssign",
					"opt": true,
					"kind": null
				}
			]
		},
		{
			"name": "item@tool@personalBonuses",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "3",
					"name": "value",
					"kind": null
				},
				{
					"typeStr": "6:bonus",
					"name": "bonus",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isPercent",
					"kind": null
				}
			]
		},
		{
			"name": "item@tool@bonusIfAssign",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:bonus",
					"name": "bonus"
				},
				{
					"typeStr": "3",
					"name": "value"
				}
			]
		},
		{
			"name": "skill@levels",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "1",
					"name": "desc",
					"opt": true,
					"kind": "localizable"
				},
				{
					"typeStr": "17",
					"name": "props"
				}
			]
		},
		{
			"name": "skill@levels@props",
			"props": {
				"hide": true,
				"isProps": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "16",
					"name": "vars",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "rangeAngle",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "rangeRadius",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "value",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "minDmg",
					"opt": true
				},
				{
					"typeStr": "3",
					"name": "maxDmg",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "rangeDistance",
					"opt": true
				},
				{
					"typeStr": "8",
					"name": "tooltipStatus",
					"opt": true
				},
				{
					"typeStr": "4",
					"name": "pushbackPreview",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "8",
					"name": "attributes",
					"opt": true,
					"kind": null
				},
				{
					"typeStr": "10:IgnoreGuard,DamageHealth",
					"name": "flags",
					"opt": true
				}
			]
		},
		{
			"name": "skill@levels@props@tooltipStatus",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:status",
					"name": "st"
				}
			]
		},
		{
			"name": "skill@levels@props@attributes",
			"props": {
				"hide": true
			},
			"separators": [],
			"lines": [],
			"columns": [
				{
					"typeStr": "6:attribute",
					"name": "kind",
					"kind": null
				},
				{
					"typeStr": "3",
					"name": "value",
					"kind": null
				},
				{
					"typeStr": "2",
					"name": "isPercentage",
					"opt": true,
					"kind": null
				}
			]
		}
	],
	"customTypes": [
		{
			"name": "DamageType",
			"cases": [
				{
					"name": "Fire",
					"args": []
				},
				{
					"name": "Poison",
					"args": []
				}
			]
		}
	],
	"compress": false
}