{
	"id": "TargetHeal",
	"name": "Distance Heal",
	"desc": "",
	"mode": 0,
	"range": {
		"allowedTargets": 2,
		"baseDistance": 8
	},
	"props": {
		"isHeroic": true,
		"apCost": 0,
        "defaultAction": true,
		"vars": {
			"value1": 50
		},
		"needDisengaged": true,
        "cursor": "CursorHeal",
        "healPreview": 1,
		"useWithoutWeapon": true
	},
	"script": "function onSkill() {\n\tplay();\n\tvar recovery = vars.value1;\n\tfor ( s in skill.unit.getAllStatus() ) {\n\t\tif( s.kind == Status.ReinforcedRecovery ) {\n\t\t\trecovery += ( vars.value1 * s.count / 10 );\n\t\t}\n\t}\n\tskill.target.gainsHealth( ceil( skill.target.stats.health * ( min(skill.unit.stats.willpower, 50)/50 ) * (recovery/100) * randInt(12,20)/16 ) , null);\n\tif( skill.level == 2 ) {\n\t\tvar armorRecovery = ceil ( skill.target.stats.armor * min(skill.unit.stats.willpower, 50)/100 * (recovery/75) * randInt(12,20)/16 );\n\t\tskill.target.armor = min(skill.target.armor + armorRecovery, skill.target.stats.armor);\n\t}\n}",
	"notes": "",
	"levels": [
		{
			"props": {
				"vars": {
					"value1": 75
				}
			}
		}
	],
	"icon": {
		"file": "ui/Icons/BattleIcons96PX.png",
		"size": 96,
		"x": 19,
		"y": 12
	},
	"iconeDone": true,
	"group": 16,
	"done": 2
},
{
	"id": "RangeHeal",
	"name": "Healing Bomb",
	"desc": "",
	"mode": 5,
	"range": {
		"type": 0,
		"radius": 3,
		"allowedTargets": 2,
		"baseDistance": 6
	},
	"props": {
		"isHeroic": true,
		"specialAnim": "ThrowLeftGrenade",
		"apCost": 1,
		"vars": {
			"value1": 25
		},
		"needDisengaged": true,
        "cursor": "CursorHeal",
        "healPreview": 1,
		"useWithoutWeapon": true,
		"castFx": "prefabs/fx/fight/Explosion/PoisonBomb/PoisonBomb.fx",
		"throwModel": "chars/Weapons/LeftHand_IncendiaryFlask.fbx"
	},
	"script": "function onSkill() {\n\tplayAttack();\n\tvar recovery = vars.value1;\n\tfor ( s in skill.unit.getAllStatus() ) {\n\t\tif( s.kind == Status.ReinforcedRecovery ) {\n\t\t\trecovery += ( vars.value1 * s.count / 10 );\n\t\t}\n\t}\n\tvar will = min(skill.unit.stats.willpower, 50);\n\tfor( t in skill.getTargets() ) {\n\t\tif( t.target.side == skill.unit.side ) {\n\t\t\tt.target.gainsHealth( ceil( t.target.stats.health * ( will/50 ) * (recovery/100) * randInt(12,20)/16 ) , null);\n\t\t\tif( skill.level == 2 && randomDice(will) == 3 ) {\n\t\t\t\tt.target.addStatus(Status.Protection, vars.value2, true);\n\t\t\t}\n\t\t\tspawnFx();\n\t\t}\n\t}\n}\n\nfunction randomDice (w) {\n\tvar dice = randInt(w, 100);\n\tif ( dice <= 30 ) return 1;\n\tif ( dice <= 60 ) return 2;\n\tif ( dice <= 80 ) return 3;\n\tif ( dice <= 90 ) return 4;\n\telse return 5;\n}",
	"notes": "",
	"levels": [
		{
			"props": {
				"vars": {
					"value1": 50,
					"value2": 2
				},
				"tooltipStatus": [
					{
						"st": "Protection"
					}
				]
			}
		}
	],
	"icon": {
		"file": "ui/Icons/BattleIcons96PX.png",
		"size": 96,
		"x": 9,
		"y": 13
	},
	"iconeDone": true,
	"group": 16,
	"done": 2
},
{
	"id": "GroupHeal",
	"name": "Group Heal",
	"desc": "",
	"mode": 4,
	"range": {},
	"props": {
		"isHeroic": true,
		"specialAnim": "Taunt",
		"apCost": 2,
		"vars": {
			"value1": 25
		},
		"needDisengaged": true,
        "cursor": "CursorHeal",
        "healPreview": 1,
		"useWithoutWeapon": true,
		"extraFx": "prefabs/fx/fight/BuffCry/BuffCryBlue.fx"
	},
	"script": "function onSkill() {\n\tplay();\n\tvar recovery = vars.value1;\n\tfor ( s in skill.unit.getAllStatus() ) {\n\t\tif( s.kind == Status.ReinforcedRecovery ) {\n\t\t\trecovery += ( vars.value1 * s.count / 10 );\n\t\t}\n\t}\n\t@sync for( u in getAllies(skill.unit) ) {\n\t\tu.gainsHealth(ceil( u.stats.health * min(skill.unit.stats.willpower, 50)/50 * (recovery/100) ), null);\n\t}\n\tspawnFx();\n}",
	"notes": "",
	"levels": [
		{
			"props": {
				"vars": {
					"value1": 50
				}
			}
		}
	],
	"icon": {
		"file": "ui/Icons/BattleIcons96PX.png",
		"size": 96,
		"x": 0,
		"y": 15
	},
	"iconeDone": true,
	"group": 16,
	"done": 2
},